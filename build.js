"bundle";
System.register('OpenGroup/development.grid.js', [], function (_export, _context) {
    "use strict";

    return {
        setters: [],
        execute: function () {
            document.body.dataset.grid = localStorage.getItem('grid') || 'invisible';

            document.addEventListener('keydown', function (event) {
                if (event.ctrlKey && (event.keyCode === 59 || event.keyCode === 186)) {
                    var newValue = document.body.dataset.grid === 'visible' ? 'invisible' : 'visible';
                    document.body.dataset.grid = newValue;
                    localStorage.setItem('grid', newValue);
                }
            });
        }
    };
});
System.registerDynamic("npm:vue-router@2.7.0.json", [], false, function() {
  return {
    "main": "dist/vue-router.common.js",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      },
      "dist/vue-router.esm.js": {
        "format": "esm"
      },
      "src/components/view.js": {
        "format": "esm"
      },
      "src/install.js": {
        "format": "esm"
      },
      "src/util/dom.js": {
        "format": "esm"
      }
    },
    "map": {
      "./src": "./src/index.js"
    }
  };
});

System.registerDynamic('npm:vue-router@2.7.0/dist/vue-router.common.js', ['process'], true, function ($__require, exports, module) {
  /**
    * vue-router v2.7.0
    * (c) 2017 Evan You
    * @license MIT
    */
  'use strict';

  /*  */

  var process = $__require('process');
  var define,
      global = this || self,
      GLOBAL = global;
  function assert(condition, message) {
    if (!condition) {
      throw new Error("[vue-router] " + message);
    }
  }

  function warn(condition, message) {
    if ('production' !== 'production' && !condition) {
      typeof console !== 'undefined' && console.warn("[vue-router] " + message);
    }
  }

  function isError(err) {
    return Object.prototype.toString.call(err).indexOf('Error') > -1;
  }

  var View = {
    name: 'router-view',
    functional: true,
    props: {
      name: {
        type: String,
        default: 'default'
      }
    },
    render: function render(_, ref) {
      var props = ref.props;
      var children = ref.children;
      var parent = ref.parent;
      var data = ref.data;

      data.routerView = true;

      // directly use parent context's createElement() function
      // so that components rendered by router-view can resolve named slots
      var h = parent.$createElement;
      var name = props.name;
      var route = parent.$route;
      var cache = parent._routerViewCache || (parent._routerViewCache = {});

      // determine current view depth, also check to see if the tree
      // has been toggled inactive but kept-alive.
      var depth = 0;
      var inactive = false;
      while (parent && parent._routerRoot !== parent) {
        if (parent.$vnode && parent.$vnode.data.routerView) {
          depth++;
        }
        if (parent._inactive) {
          inactive = true;
        }
        parent = parent.$parent;
      }
      data.routerViewDepth = depth;

      // render previous view if the tree is inactive and kept-alive
      if (inactive) {
        return h(cache[name], data, children);
      }

      var matched = route.matched[depth];
      // render empty node if no matched route
      if (!matched) {
        cache[name] = null;
        return h();
      }

      var component = cache[name] = matched.components[name];

      // attach instance registration hook
      // this will be called in the instance's injected lifecycle hooks
      data.registerRouteInstance = function (vm, val) {
        // val could be undefined for unregistration
        var current = matched.instances[name];
        if (val && current !== vm || !val && current === vm) {
          matched.instances[name] = val;
        }
      }

      // also regiseter instance in prepatch hook
      // in case the same component instance is reused across different routes
      ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {
        matched.instances[name] = vnode.componentInstance;
      };

      // resolve props
      data.props = resolveProps(route, matched.props && matched.props[name]);

      return h(component, data, children);
    }
  };

  function resolveProps(route, config) {
    switch (typeof config) {
      case 'undefined':
        return;
      case 'object':
        return config;
      case 'function':
        return config(route);
      case 'boolean':
        return config ? route.params : undefined;
      default:
        if ('production' !== 'production') {
          warn(false, "props in \"" + route.path + "\" is a " + typeof config + ", " + "expecting an object, function or boolean.");
        }
    }
  }

  /*  */

  var encodeReserveRE = /[!'()*]/g;
  var encodeReserveReplacer = function (c) {
    return '%' + c.charCodeAt(0).toString(16);
  };
  var commaRE = /%2C/g;

  // fixed encodeURIComponent which is more conformant to RFC3986:
  // - escapes [!'()*]
  // - preserve commas
  var encode = function (str) {
    return encodeURIComponent(str).replace(encodeReserveRE, encodeReserveReplacer).replace(commaRE, ',');
  };

  var decode = decodeURIComponent;

  function resolveQuery(query, extraQuery, _parseQuery) {
    if (extraQuery === void 0) extraQuery = {};

    var parse = _parseQuery || parseQuery;
    var parsedQuery;
    try {
      parsedQuery = parse(query || '');
    } catch (e) {
      'production' !== 'production' && warn(false, e.message);
      parsedQuery = {};
    }
    for (var key in extraQuery) {
      var val = extraQuery[key];
      parsedQuery[key] = Array.isArray(val) ? val.slice() : val;
    }
    return parsedQuery;
  }

  function parseQuery(query) {
    var res = {};

    query = query.trim().replace(/^(\?|#|&)/, '');

    if (!query) {
      return res;
    }

    query.split('&').forEach(function (param) {
      var parts = param.replace(/\+/g, ' ').split('=');
      var key = decode(parts.shift());
      var val = parts.length > 0 ? decode(parts.join('=')) : null;

      if (res[key] === undefined) {
        res[key] = val;
      } else if (Array.isArray(res[key])) {
        res[key].push(val);
      } else {
        res[key] = [res[key], val];
      }
    });

    return res;
  }

  function stringifyQuery(obj) {
    var res = obj ? Object.keys(obj).map(function (key) {
      var val = obj[key];

      if (val === undefined) {
        return '';
      }

      if (val === null) {
        return encode(key);
      }

      if (Array.isArray(val)) {
        var result = [];
        val.forEach(function (val2) {
          if (val2 === undefined) {
            return;
          }
          if (val2 === null) {
            result.push(encode(key));
          } else {
            result.push(encode(key) + '=' + encode(val2));
          }
        });
        return result.join('&');
      }

      return encode(key) + '=' + encode(val);
    }).filter(function (x) {
      return x.length > 0;
    }).join('&') : null;
    return res ? "?" + res : '';
  }

  /*  */

  var trailingSlashRE = /\/?$/;

  function createRoute(record, location, redirectedFrom, router) {
    var stringifyQuery$$1 = router && router.options.stringifyQuery;
    var route = {
      name: location.name || record && record.name,
      meta: record && record.meta || {},
      path: location.path || '/',
      hash: location.hash || '',
      query: location.query || {},
      params: location.params || {},
      fullPath: getFullPath(location, stringifyQuery$$1),
      matched: record ? formatMatch(record) : []
    };
    if (redirectedFrom) {
      route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);
    }
    return Object.freeze(route);
  }

  // the starting route that represents the initial state
  var START = createRoute(null, {
    path: '/'
  });

  function formatMatch(record) {
    var res = [];
    while (record) {
      res.unshift(record);
      record = record.parent;
    }
    return res;
  }

  function getFullPath(ref, _stringifyQuery) {
    var path = ref.path;
    var query = ref.query;if (query === void 0) query = {};
    var hash = ref.hash;if (hash === void 0) hash = '';

    var stringify = _stringifyQuery || stringifyQuery;
    return (path || '/') + stringify(query) + hash;
  }

  function isSameRoute(a, b) {
    if (b === START) {
      return a === b;
    } else if (!b) {
      return false;
    } else if (a.path && b.path) {
      return a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') && a.hash === b.hash && isObjectEqual(a.query, b.query);
    } else if (a.name && b.name) {
      return a.name === b.name && a.hash === b.hash && isObjectEqual(a.query, b.query) && isObjectEqual(a.params, b.params);
    } else {
      return false;
    }
  }

  function isObjectEqual(a, b) {
    if (a === void 0) a = {};
    if (b === void 0) b = {};

    var aKeys = Object.keys(a);
    var bKeys = Object.keys(b);
    if (aKeys.length !== bKeys.length) {
      return false;
    }
    return aKeys.every(function (key) {
      var aVal = a[key];
      var bVal = b[key];
      // check nested equality
      if (typeof aVal === 'object' && typeof bVal === 'object') {
        return isObjectEqual(aVal, bVal);
      }
      return String(aVal) === String(bVal);
    });
  }

  function isIncludedRoute(current, target) {
    return current.path.replace(trailingSlashRE, '/').indexOf(target.path.replace(trailingSlashRE, '/')) === 0 && (!target.hash || current.hash === target.hash) && queryIncludes(current.query, target.query);
  }

  function queryIncludes(current, target) {
    for (var key in target) {
      if (!(key in current)) {
        return false;
      }
    }
    return true;
  }

  /*  */

  // work around weird flow bug
  var toTypes = [String, Object];
  var eventTypes = [String, Array];

  var Link = {
    name: 'router-link',
    props: {
      to: {
        type: toTypes,
        required: true
      },
      tag: {
        type: String,
        default: 'a'
      },
      exact: Boolean,
      append: Boolean,
      replace: Boolean,
      activeClass: String,
      exactActiveClass: String,
      event: {
        type: eventTypes,
        default: 'click'
      }
    },
    render: function render(h) {
      var this$1 = this;

      var router = this.$router;
      var current = this.$route;
      var ref = router.resolve(this.to, current, this.append);
      var location = ref.location;
      var route = ref.route;
      var href = ref.href;

      var classes = {};
      var globalActiveClass = router.options.linkActiveClass;
      var globalExactActiveClass = router.options.linkExactActiveClass;
      // Support global empty active class
      var activeClassFallback = globalActiveClass == null ? 'router-link-active' : globalActiveClass;
      var exactActiveClassFallback = globalExactActiveClass == null ? 'router-link-exact-active' : globalExactActiveClass;
      var activeClass = this.activeClass == null ? activeClassFallback : this.activeClass;
      var exactActiveClass = this.exactActiveClass == null ? exactActiveClassFallback : this.exactActiveClass;
      var compareTarget = location.path ? createRoute(null, location, null, router) : route;

      classes[exactActiveClass] = isSameRoute(current, compareTarget);
      classes[activeClass] = this.exact ? classes[exactActiveClass] : isIncludedRoute(current, compareTarget);

      var handler = function (e) {
        if (guardEvent(e)) {
          if (this$1.replace) {
            router.replace(location);
          } else {
            router.push(location);
          }
        }
      };

      var on = { click: guardEvent };
      if (Array.isArray(this.event)) {
        this.event.forEach(function (e) {
          on[e] = handler;
        });
      } else {
        on[this.event] = handler;
      }

      var data = {
        class: classes
      };

      if (this.tag === 'a') {
        data.on = on;
        data.attrs = { href: href };
      } else {
        // find the first <a> child and apply listener and href
        var a = findAnchor(this.$slots.default);
        if (a) {
          // in case the <a> is a static node
          a.isStatic = false;
          var extend = _Vue.util.extend;
          var aData = a.data = extend({}, a.data);
          aData.on = on;
          var aAttrs = a.data.attrs = extend({}, a.data.attrs);
          aAttrs.href = href;
        } else {
          // doesn't have <a> child, apply listener to self
          data.on = on;
        }
      }

      return h(this.tag, data, this.$slots.default);
    }
  };

  function guardEvent(e) {
    // don't redirect with control keys
    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) {
      return;
    }
    // don't redirect when preventDefault called
    if (e.defaultPrevented) {
      return;
    }
    // don't redirect on right click
    if (e.button !== undefined && e.button !== 0) {
      return;
    }
    // don't redirect if `target="_blank"`
    if (e.currentTarget && e.currentTarget.getAttribute) {
      var target = e.currentTarget.getAttribute('target');
      if (/\b_blank\b/i.test(target)) {
        return;
      }
    }
    // this may be a Weex event which doesn't have this method
    if (e.preventDefault) {
      e.preventDefault();
    }
    return true;
  }

  function findAnchor(children) {
    if (children) {
      var child;
      for (var i = 0; i < children.length; i++) {
        child = children[i];
        if (child.tag === 'a') {
          return child;
        }
        if (child.children && (child = findAnchor(child.children))) {
          return child;
        }
      }
    }
  }

  var _Vue;

  function install(Vue) {
    if (install.installed) {
      return;
    }
    install.installed = true;

    _Vue = Vue;

    var isDef = function (v) {
      return v !== undefined;
    };

    var registerInstance = function (vm, callVal) {
      var i = vm.$options._parentVnode;
      if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {
        i(vm, callVal);
      }
    };

    Vue.mixin({
      beforeCreate: function beforeCreate() {
        if (isDef(this.$options.router)) {
          this._routerRoot = this;
          this._router = this.$options.router;
          this._router.init(this);
          Vue.util.defineReactive(this, '_route', this._router.history.current);
        } else {
          this._routerRoot = this.$parent && this.$parent._routerRoot || this;
        }
        registerInstance(this, this);
      },
      destroyed: function destroyed() {
        registerInstance(this);
      }
    });

    Object.defineProperty(Vue.prototype, '$router', {
      get: function get() {
        return this._routerRoot._router;
      }
    });

    Object.defineProperty(Vue.prototype, '$route', {
      get: function get() {
        return this._routerRoot._route;
      }
    });

    Vue.component('router-view', View);
    Vue.component('router-link', Link);

    var strats = Vue.config.optionMergeStrategies;
    // use the same hook merging strategy for route hooks
    strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;
  }

  /*  */

  var inBrowser = typeof window !== 'undefined';

  /*  */

  function resolvePath(relative, base, append) {
    var firstChar = relative.charAt(0);
    if (firstChar === '/') {
      return relative;
    }

    if (firstChar === '?' || firstChar === '#') {
      return base + relative;
    }

    var stack = base.split('/');

    // remove trailing segment if:
    // - not appending
    // - appending to trailing slash (last segment is empty)
    if (!append || !stack[stack.length - 1]) {
      stack.pop();
    }

    // resolve relative path
    var segments = relative.replace(/^\//, '').split('/');
    for (var i = 0; i < segments.length; i++) {
      var segment = segments[i];
      if (segment === '..') {
        stack.pop();
      } else if (segment !== '.') {
        stack.push(segment);
      }
    }

    // ensure leading slash
    if (stack[0] !== '') {
      stack.unshift('');
    }

    return stack.join('/');
  }

  function parsePath(path) {
    var hash = '';
    var query = '';

    var hashIndex = path.indexOf('#');
    if (hashIndex >= 0) {
      hash = path.slice(hashIndex);
      path = path.slice(0, hashIndex);
    }

    var queryIndex = path.indexOf('?');
    if (queryIndex >= 0) {
      query = path.slice(queryIndex + 1);
      path = path.slice(0, queryIndex);
    }

    return {
      path: path,
      query: query,
      hash: hash
    };
  }

  function cleanPath(path) {
    return path.replace(/\/\//g, '/');
  }

  var index$1 = Array.isArray || function (arr) {
    return Object.prototype.toString.call(arr) == '[object Array]';
  };

  /**
   * Expose `pathToRegexp`.
   */
  var index = pathToRegexp;
  var parse_1 = parse;
  var compile_1 = compile;
  var tokensToFunction_1 = tokensToFunction;
  var tokensToRegExp_1 = tokensToRegExp;

  /**
   * The main path matching regexp utility.
   *
   * @type {RegExp}
   */
  var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'].join('|'), 'g');

  /**
   * Parse a string for the raw tokens.
   *
   * @param  {string}  str
   * @param  {Object=} options
   * @return {!Array}
   */
  function parse(str, options) {
    var tokens = [];
    var key = 0;
    var index = 0;
    var path = '';
    var defaultDelimiter = options && options.delimiter || '/';
    var res;

    while ((res = PATH_REGEXP.exec(str)) != null) {
      var m = res[0];
      var escaped = res[1];
      var offset = res.index;
      path += str.slice(index, offset);
      index = offset + m.length;

      // Ignore already escaped sequences.
      if (escaped) {
        path += escaped[1];
        continue;
      }

      var next = str[index];
      var prefix = res[2];
      var name = res[3];
      var capture = res[4];
      var group = res[5];
      var modifier = res[6];
      var asterisk = res[7];

      // Push the current path onto the tokens.
      if (path) {
        tokens.push(path);
        path = '';
      }

      var partial = prefix != null && next != null && next !== prefix;
      var repeat = modifier === '+' || modifier === '*';
      var optional = modifier === '?' || modifier === '*';
      var delimiter = res[2] || defaultDelimiter;
      var pattern = capture || group;

      tokens.push({
        name: name || key++,
        prefix: prefix || '',
        delimiter: delimiter,
        optional: optional,
        repeat: repeat,
        partial: partial,
        asterisk: !!asterisk,
        pattern: pattern ? escapeGroup(pattern) : asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?'
      });
    }

    // Match any characters still remaining.
    if (index < str.length) {
      path += str.substr(index);
    }

    // If the path exists, push it onto the end.
    if (path) {
      tokens.push(path);
    }

    return tokens;
  }

  /**
   * Compile a string to a template function for the path.
   *
   * @param  {string}             str
   * @param  {Object=}            options
   * @return {!function(Object=, Object=)}
   */
  function compile(str, options) {
    return tokensToFunction(parse(str, options));
  }

  /**
   * Prettier encoding of URI path segments.
   *
   * @param  {string}
   * @return {string}
   */
  function encodeURIComponentPretty(str) {
    return encodeURI(str).replace(/[\/?#]/g, function (c) {
      return '%' + c.charCodeAt(0).toString(16).toUpperCase();
    });
  }

  /**
   * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
   *
   * @param  {string}
   * @return {string}
   */
  function encodeAsterisk(str) {
    return encodeURI(str).replace(/[?#]/g, function (c) {
      return '%' + c.charCodeAt(0).toString(16).toUpperCase();
    });
  }

  /**
   * Expose a method for transforming tokens into the path function.
   */
  function tokensToFunction(tokens) {
    // Compile all the tokens into regexps.
    var matches = new Array(tokens.length);

    // Compile all the patterns before compilation.
    for (var i = 0; i < tokens.length; i++) {
      if (typeof tokens[i] === 'object') {
        matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');
      }
    }

    return function (obj, opts) {
      var path = '';
      var data = obj || {};
      var options = opts || {};
      var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;

      for (var i = 0; i < tokens.length; i++) {
        var token = tokens[i];

        if (typeof token === 'string') {
          path += token;

          continue;
        }

        var value = data[token.name];
        var segment;

        if (value == null) {
          if (token.optional) {
            // Prepend partial segment prefixes.
            if (token.partial) {
              path += token.prefix;
            }

            continue;
          } else {
            throw new TypeError('Expected "' + token.name + '" to be defined');
          }
        }

        if (index$1(value)) {
          if (!token.repeat) {
            throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`');
          }

          if (value.length === 0) {
            if (token.optional) {
              continue;
            } else {
              throw new TypeError('Expected "' + token.name + '" to not be empty');
            }
          }

          for (var j = 0; j < value.length; j++) {
            segment = encode(value[j]);

            if (!matches[i].test(segment)) {
              throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`');
            }

            path += (j === 0 ? token.prefix : token.delimiter) + segment;
          }

          continue;
        }

        segment = token.asterisk ? encodeAsterisk(value) : encode(value);

        if (!matches[i].test(segment)) {
          throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"');
        }

        path += token.prefix + segment;
      }

      return path;
    };
  }

  /**
   * Escape a regular expression string.
   *
   * @param  {string} str
   * @return {string}
   */
  function escapeString(str) {
    return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1');
  }

  /**
   * Escape the capturing group by escaping special characters and meaning.
   *
   * @param  {string} group
   * @return {string}
   */
  function escapeGroup(group) {
    return group.replace(/([=!:$\/()])/g, '\\$1');
  }

  /**
   * Attach the keys as a property of the regexp.
   *
   * @param  {!RegExp} re
   * @param  {Array}   keys
   * @return {!RegExp}
   */
  function attachKeys(re, keys) {
    re.keys = keys;
    return re;
  }

  /**
   * Get the flags for a regexp from the options.
   *
   * @param  {Object} options
   * @return {string}
   */
  function flags(options) {
    return options.sensitive ? '' : 'i';
  }

  /**
   * Pull out keys from a regexp.
   *
   * @param  {!RegExp} path
   * @param  {!Array}  keys
   * @return {!RegExp}
   */
  function regexpToRegexp(path, keys) {
    // Use a negative lookahead to match only capturing groups.
    var groups = path.source.match(/\((?!\?)/g);

    if (groups) {
      for (var i = 0; i < groups.length; i++) {
        keys.push({
          name: i,
          prefix: null,
          delimiter: null,
          optional: false,
          repeat: false,
          partial: false,
          asterisk: false,
          pattern: null
        });
      }
    }

    return attachKeys(path, keys);
  }

  /**
   * Transform an array into a regexp.
   *
   * @param  {!Array}  path
   * @param  {Array}   keys
   * @param  {!Object} options
   * @return {!RegExp}
   */
  function arrayToRegexp(path, keys, options) {
    var parts = [];

    for (var i = 0; i < path.length; i++) {
      parts.push(pathToRegexp(path[i], keys, options).source);
    }

    var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));

    return attachKeys(regexp, keys);
  }

  /**
   * Create a path regexp from string input.
   *
   * @param  {string}  path
   * @param  {!Array}  keys
   * @param  {!Object} options
   * @return {!RegExp}
   */
  function stringToRegexp(path, keys, options) {
    return tokensToRegExp(parse(path, options), keys, options);
  }

  /**
   * Expose a function for taking tokens and returning a RegExp.
   *
   * @param  {!Array}          tokens
   * @param  {(Array|Object)=} keys
   * @param  {Object=}         options
   * @return {!RegExp}
   */
  function tokensToRegExp(tokens, keys, options) {
    if (!index$1(keys)) {
      options = /** @type {!Object} */keys || options;
      keys = [];
    }

    options = options || {};

    var strict = options.strict;
    var end = options.end !== false;
    var route = '';

    // Iterate over the tokens and create our regexp string.
    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];

      if (typeof token === 'string') {
        route += escapeString(token);
      } else {
        var prefix = escapeString(token.prefix);
        var capture = '(?:' + token.pattern + ')';

        keys.push(token);

        if (token.repeat) {
          capture += '(?:' + prefix + capture + ')*';
        }

        if (token.optional) {
          if (!token.partial) {
            capture = '(?:' + prefix + '(' + capture + '))?';
          } else {
            capture = prefix + '(' + capture + ')?';
          }
        } else {
          capture = prefix + '(' + capture + ')';
        }

        route += capture;
      }
    }

    var delimiter = escapeString(options.delimiter || '/');
    var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;

    // In non-strict mode we allow a slash at the end of match. If the path to
    // match already ends with a slash, we remove it for consistency. The slash
    // is valid at the end of a path match, not in the middle. This is important
    // in non-ending mode, where "/test/" shouldn't match "/test//route".
    if (!strict) {
      route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';
    }

    if (end) {
      route += '$';
    } else {
      // In non-ending mode, we need the capturing groups to match as much as
      // possible by using a positive lookahead to the end or next path segment.
      route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
    }

    return attachKeys(new RegExp('^' + route, flags(options)), keys);
  }

  /**
   * Normalize the given path string, returning a regular expression.
   *
   * An empty array can be passed in for the keys, which will hold the
   * placeholder key descriptions. For example, using `/user/:id`, `keys` will
   * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
   *
   * @param  {(string|RegExp|Array)} path
   * @param  {(Array|Object)=}       keys
   * @param  {Object=}               options
   * @return {!RegExp}
   */
  function pathToRegexp(path, keys, options) {
    if (!index$1(keys)) {
      options = /** @type {!Object} */keys || options;
      keys = [];
    }

    options = options || {};

    if (path instanceof RegExp) {
      return regexpToRegexp(path, /** @type {!Array} */keys);
    }

    if (index$1(path)) {
      return arrayToRegexp( /** @type {!Array} */path, /** @type {!Array} */keys, options);
    }

    return stringToRegexp( /** @type {string} */path, /** @type {!Array} */keys, options);
  }

  index.parse = parse_1;
  index.compile = compile_1;
  index.tokensToFunction = tokensToFunction_1;
  index.tokensToRegExp = tokensToRegExp_1;

  /*  */

  var regexpCompileCache = Object.create(null);

  function fillParams(path, params, routeMsg) {
    try {
      var filler = regexpCompileCache[path] || (regexpCompileCache[path] = index.compile(path));
      return filler(params || {}, { pretty: true });
    } catch (e) {
      if ('production' !== 'production') {
        warn(false, "missing param for " + routeMsg + ": " + e.message);
      }
      return '';
    }
  }

  /*  */

  function createRouteMap(routes, oldPathList, oldPathMap, oldNameMap) {
    // the path list is used to control path matching priority
    var pathList = oldPathList || [];
    var pathMap = oldPathMap || Object.create(null);
    var nameMap = oldNameMap || Object.create(null);

    routes.forEach(function (route) {
      addRouteRecord(pathList, pathMap, nameMap, route);
    });

    // ensure wildcard routes are always at the end
    for (var i = 0, l = pathList.length; i < l; i++) {
      if (pathList[i] === '*') {
        pathList.push(pathList.splice(i, 1)[0]);
        l--;
        i--;
      }
    }

    return {
      pathList: pathList,
      pathMap: pathMap,
      nameMap: nameMap
    };
  }

  function addRouteRecord(pathList, pathMap, nameMap, route, parent, matchAs) {
    var path = route.path;
    var name = route.name;
    if ('production' !== 'production') {
      assert(path != null, "\"path\" is required in a route configuration.");
      assert(typeof route.component !== 'string', "route config \"component\" for path: " + String(path || name) + " cannot be a " + "string id. Use an actual component instead.");
    }

    var normalizedPath = normalizePath(path, parent);
    var pathToRegexpOptions = route.pathToRegexpOptions || {};

    if (typeof route.caseSensitive === 'boolean') {
      pathToRegexpOptions.sensitive = route.caseSensitive;
    }

    var record = {
      path: normalizedPath,
      regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),
      components: route.components || { default: route.component },
      instances: {},
      name: name,
      parent: parent,
      matchAs: matchAs,
      redirect: route.redirect,
      beforeEnter: route.beforeEnter,
      meta: route.meta || {},
      props: route.props == null ? {} : route.components ? route.props : { default: route.props }
    };

    if (route.children) {
      // Warn if route is named, does not redirect and has a default child route.
      // If users navigate to this route by name, the default child will
      // not be rendered (GH Issue #629)
      if ('production' !== 'production') {
        if (route.name && !route.redirect && route.children.some(function (child) {
          return (/^\/?$/.test(child.path)
          );
        })) {
          warn(false, "Named Route '" + route.name + "' has a default child route. " + "When navigating to this named route (:to=\"{name: '" + route.name + "'\"), " + "the default child route will not be rendered. Remove the name from " + "this route and use the name of the default child route for named " + "links instead.");
        }
      }
      route.children.forEach(function (child) {
        var childMatchAs = matchAs ? cleanPath(matchAs + "/" + child.path) : undefined;
        addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);
      });
    }

    if (route.alias !== undefined) {
      var aliases = Array.isArray(route.alias) ? route.alias : [route.alias];

      aliases.forEach(function (alias) {
        var aliasRoute = {
          path: alias,
          children: route.children
        };
        addRouteRecord(pathList, pathMap, nameMap, aliasRoute, parent, record.path || '/' // matchAs
        );
      });
    }

    if (!pathMap[record.path]) {
      pathList.push(record.path);
      pathMap[record.path] = record;
    }

    if (name) {
      if (!nameMap[name]) {
        nameMap[name] = record;
      } else if ('production' !== 'production' && !matchAs) {
        warn(false, "Duplicate named routes definition: " + "{ name: \"" + name + "\", path: \"" + record.path + "\" }");
      }
    }
  }

  function compileRouteRegex(path, pathToRegexpOptions) {
    var regex = index(path, [], pathToRegexpOptions);
    if ('production' !== 'production') {
      var keys = {};
      regex.keys.forEach(function (key) {
        warn(!keys[key.name], "Duplicate param keys in route with path: \"" + path + "\"");
        keys[key.name] = true;
      });
    }
    return regex;
  }

  function normalizePath(path, parent) {
    path = path.replace(/\/$/, '');
    if (path[0] === '/') {
      return path;
    }
    if (parent == null) {
      return path;
    }
    return cleanPath(parent.path + "/" + path);
  }

  /*  */

  function normalizeLocation(raw, current, append, router) {
    var next = typeof raw === 'string' ? { path: raw } : raw;
    // named target
    if (next.name || next._normalized) {
      return next;
    }

    // relative params
    if (!next.path && next.params && current) {
      next = assign({}, next);
      next._normalized = true;
      var params = assign(assign({}, current.params), next.params);
      if (current.name) {
        next.name = current.name;
        next.params = params;
      } else if (current.matched.length) {
        var rawPath = current.matched[current.matched.length - 1].path;
        next.path = fillParams(rawPath, params, "path " + current.path);
      } else if ('production' !== 'production') {
        warn(false, "relative params navigation requires a current route.");
      }
      return next;
    }

    var parsedPath = parsePath(next.path || '');
    var basePath = current && current.path || '/';
    var path = parsedPath.path ? resolvePath(parsedPath.path, basePath, append || next.append) : basePath;

    var query = resolveQuery(parsedPath.query, next.query, router && router.options.parseQuery);

    var hash = next.hash || parsedPath.hash;
    if (hash && hash.charAt(0) !== '#') {
      hash = "#" + hash;
    }

    return {
      _normalized: true,
      path: path,
      query: query,
      hash: hash
    };
  }

  function assign(a, b) {
    for (var key in b) {
      a[key] = b[key];
    }
    return a;
  }

  /*  */

  function createMatcher(routes, router) {
    var ref = createRouteMap(routes);
    var pathList = ref.pathList;
    var pathMap = ref.pathMap;
    var nameMap = ref.nameMap;

    function addRoutes(routes) {
      createRouteMap(routes, pathList, pathMap, nameMap);
    }

    function match(raw, currentRoute, redirectedFrom) {
      var location = normalizeLocation(raw, currentRoute, false, router);
      var name = location.name;

      if (name) {
        var record = nameMap[name];
        if ('production' !== 'production') {
          warn(record, "Route with name '" + name + "' does not exist");
        }
        if (!record) {
          return _createRoute(null, location);
        }
        var paramNames = record.regex.keys.filter(function (key) {
          return !key.optional;
        }).map(function (key) {
          return key.name;
        });

        if (typeof location.params !== 'object') {
          location.params = {};
        }

        if (currentRoute && typeof currentRoute.params === 'object') {
          for (var key in currentRoute.params) {
            if (!(key in location.params) && paramNames.indexOf(key) > -1) {
              location.params[key] = currentRoute.params[key];
            }
          }
        }

        if (record) {
          location.path = fillParams(record.path, location.params, "named route \"" + name + "\"");
          return _createRoute(record, location, redirectedFrom);
        }
      } else if (location.path) {
        location.params = {};
        for (var i = 0; i < pathList.length; i++) {
          var path = pathList[i];
          var record$1 = pathMap[path];
          if (matchRoute(record$1.regex, location.path, location.params)) {
            return _createRoute(record$1, location, redirectedFrom);
          }
        }
      }
      // no match
      return _createRoute(null, location);
    }

    function redirect(record, location) {
      var originalRedirect = record.redirect;
      var redirect = typeof originalRedirect === 'function' ? originalRedirect(createRoute(record, location, null, router)) : originalRedirect;

      if (typeof redirect === 'string') {
        redirect = { path: redirect };
      }

      if (!redirect || typeof redirect !== 'object') {
        if ('production' !== 'production') {
          warn(false, "invalid redirect option: " + JSON.stringify(redirect));
        }
        return _createRoute(null, location);
      }

      var re = redirect;
      var name = re.name;
      var path = re.path;
      var query = location.query;
      var hash = location.hash;
      var params = location.params;
      query = re.hasOwnProperty('query') ? re.query : query;
      hash = re.hasOwnProperty('hash') ? re.hash : hash;
      params = re.hasOwnProperty('params') ? re.params : params;

      if (name) {
        // resolved named direct
        var targetRecord = nameMap[name];
        if ('production' !== 'production') {
          assert(targetRecord, "redirect failed: named route \"" + name + "\" not found.");
        }
        return match({
          _normalized: true,
          name: name,
          query: query,
          hash: hash,
          params: params
        }, undefined, location);
      } else if (path) {
        // 1. resolve relative redirect
        var rawPath = resolveRecordPath(path, record);
        // 2. resolve params
        var resolvedPath = fillParams(rawPath, params, "redirect route with path \"" + rawPath + "\"");
        // 3. rematch with existing query and hash
        return match({
          _normalized: true,
          path: resolvedPath,
          query: query,
          hash: hash
        }, undefined, location);
      } else {
        if ('production' !== 'production') {
          warn(false, "invalid redirect option: " + JSON.stringify(redirect));
        }
        return _createRoute(null, location);
      }
    }

    function alias(record, location, matchAs) {
      var aliasedPath = fillParams(matchAs, location.params, "aliased route with path \"" + matchAs + "\"");
      var aliasedMatch = match({
        _normalized: true,
        path: aliasedPath
      });
      if (aliasedMatch) {
        var matched = aliasedMatch.matched;
        var aliasedRecord = matched[matched.length - 1];
        location.params = aliasedMatch.params;
        return _createRoute(aliasedRecord, location);
      }
      return _createRoute(null, location);
    }

    function _createRoute(record, location, redirectedFrom) {
      if (record && record.redirect) {
        return redirect(record, redirectedFrom || location);
      }
      if (record && record.matchAs) {
        return alias(record, location, record.matchAs);
      }
      return createRoute(record, location, redirectedFrom, router);
    }

    return {
      match: match,
      addRoutes: addRoutes
    };
  }

  function matchRoute(regex, path, params) {
    var m = path.match(regex);

    if (!m) {
      return false;
    } else if (!params) {
      return true;
    }

    for (var i = 1, len = m.length; i < len; ++i) {
      var key = regex.keys[i - 1];
      var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];
      if (key) {
        params[key.name] = val;
      }
    }

    return true;
  }

  function resolveRecordPath(path, record) {
    return resolvePath(path, record.parent ? record.parent.path : '/', true);
  }

  /*  */

  var positionStore = Object.create(null);

  function setupScroll() {
    window.addEventListener('popstate', function (e) {
      saveScrollPosition();
      if (e.state && e.state.key) {
        setStateKey(e.state.key);
      }
    });
  }

  function handleScroll(router, to, from, isPop) {
    if (!router.app) {
      return;
    }

    var behavior = router.options.scrollBehavior;
    if (!behavior) {
      return;
    }

    if ('production' !== 'production') {
      assert(typeof behavior === 'function', "scrollBehavior must be a function");
    }

    // wait until re-render finishes before scrolling
    router.app.$nextTick(function () {
      var position = getScrollPosition();
      var shouldScroll = behavior(to, from, isPop ? position : null);
      if (!shouldScroll) {
        return;
      }
      var isObject = typeof shouldScroll === 'object';
      if (isObject && typeof shouldScroll.selector === 'string') {
        var el = document.querySelector(shouldScroll.selector);
        if (el) {
          var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};
          offset = normalizeOffset(offset);
          position = getElementPosition(el, offset);
        } else if (isValidPosition(shouldScroll)) {
          position = normalizePosition(shouldScroll);
        }
      } else if (isObject && isValidPosition(shouldScroll)) {
        position = normalizePosition(shouldScroll);
      }

      if (position) {
        window.scrollTo(position.x, position.y);
      }
    });
  }

  function saveScrollPosition() {
    var key = getStateKey();
    if (key) {
      positionStore[key] = {
        x: window.pageXOffset,
        y: window.pageYOffset
      };
    }
  }

  function getScrollPosition() {
    var key = getStateKey();
    if (key) {
      return positionStore[key];
    }
  }

  function getElementPosition(el, offset) {
    var docEl = document.documentElement;
    var docRect = docEl.getBoundingClientRect();
    var elRect = el.getBoundingClientRect();
    return {
      x: elRect.left - docRect.left - offset.x,
      y: elRect.top - docRect.top - offset.y
    };
  }

  function isValidPosition(obj) {
    return isNumber(obj.x) || isNumber(obj.y);
  }

  function normalizePosition(obj) {
    return {
      x: isNumber(obj.x) ? obj.x : window.pageXOffset,
      y: isNumber(obj.y) ? obj.y : window.pageYOffset
    };
  }

  function normalizeOffset(obj) {
    return {
      x: isNumber(obj.x) ? obj.x : 0,
      y: isNumber(obj.y) ? obj.y : 0
    };
  }

  function isNumber(v) {
    return typeof v === 'number';
  }

  /*  */

  var supportsPushState = inBrowser && function () {
    var ua = window.navigator.userAgent;

    if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {
      return false;
    }

    return window.history && 'pushState' in window.history;
  }();

  // use User Timing api (if present) for more accurate key precision
  var Time = inBrowser && window.performance && window.performance.now ? window.performance : Date;

  var _key = genKey();

  function genKey() {
    return Time.now().toFixed(3);
  }

  function getStateKey() {
    return _key;
  }

  function setStateKey(key) {
    _key = key;
  }

  function pushState(url, replace) {
    saveScrollPosition();
    // try...catch the pushState call to get around Safari
    // DOM Exception 18 where it limits to 100 pushState calls
    var history = window.history;
    try {
      if (replace) {
        history.replaceState({ key: _key }, '', url);
      } else {
        _key = genKey();
        history.pushState({ key: _key }, '', url);
      }
    } catch (e) {
      window.location[replace ? 'replace' : 'assign'](url);
    }
  }

  function replaceState(url) {
    pushState(url, true);
  }

  /*  */

  function runQueue(queue, fn, cb) {
    var step = function (index) {
      if (index >= queue.length) {
        cb();
      } else {
        if (queue[index]) {
          fn(queue[index], function () {
            step(index + 1);
          });
        } else {
          step(index + 1);
        }
      }
    };
    step(0);
  }

  /*  */

  function resolveAsyncComponents(matched) {
    return function (to, from, next) {
      var hasAsync = false;
      var pending = 0;
      var error = null;

      flatMapComponents(matched, function (def, _, match, key) {
        // if it's a function and doesn't have cid attached,
        // assume it's an async component resolve function.
        // we are not using Vue's default async resolving mechanism because
        // we want to halt the navigation until the incoming component has been
        // resolved.
        if (typeof def === 'function' && def.cid === undefined) {
          hasAsync = true;
          pending++;

          var resolve = once(function (resolvedDef) {
            if (resolvedDef.__esModule && resolvedDef.default) {
              resolvedDef = resolvedDef.default;
            }
            // save resolved on async factory in case it's used elsewhere
            def.resolved = typeof resolvedDef === 'function' ? resolvedDef : _Vue.extend(resolvedDef);
            match.components[key] = resolvedDef;
            pending--;
            if (pending <= 0) {
              next();
            }
          });

          var reject = once(function (reason) {
            var msg = "Failed to resolve async component " + key + ": " + reason;
            'production' !== 'production' && warn(false, msg);
            if (!error) {
              error = isError(reason) ? reason : new Error(msg);
              next(error);
            }
          });

          var res;
          try {
            res = def(resolve, reject);
          } catch (e) {
            reject(e);
          }
          if (res) {
            if (typeof res.then === 'function') {
              res.then(resolve, reject);
            } else {
              // new syntax in Vue 2.3
              var comp = res.component;
              if (comp && typeof comp.then === 'function') {
                comp.then(resolve, reject);
              }
            }
          }
        }
      });

      if (!hasAsync) {
        next();
      }
    };
  }

  function flatMapComponents(matched, fn) {
    return flatten(matched.map(function (m) {
      return Object.keys(m.components).map(function (key) {
        return fn(m.components[key], m.instances[key], m, key);
      });
    }));
  }

  function flatten(arr) {
    return Array.prototype.concat.apply([], arr);
  }

  // in Webpack 2, require.ensure now also returns a Promise
  // so the resolve/reject functions may get called an extra time
  // if the user uses an arrow function shorthand that happens to
  // return that Promise.
  function once(fn) {
    var called = false;
    return function () {
      var args = [],
          len = arguments.length;
      while (len--) args[len] = arguments[len];

      if (called) {
        return;
      }
      called = true;
      return fn.apply(this, args);
    };
  }

  /*  */

  var History = function History(router, base) {
    this.router = router;
    this.base = normalizeBase(base);
    // start with a route object that stands for "nowhere"
    this.current = START;
    this.pending = null;
    this.ready = false;
    this.readyCbs = [];
    this.readyErrorCbs = [];
    this.errorCbs = [];
  };

  History.prototype.listen = function listen(cb) {
    this.cb = cb;
  };

  History.prototype.onReady = function onReady(cb, errorCb) {
    if (this.ready) {
      cb();
    } else {
      this.readyCbs.push(cb);
      if (errorCb) {
        this.readyErrorCbs.push(errorCb);
      }
    }
  };

  History.prototype.onError = function onError(errorCb) {
    this.errorCbs.push(errorCb);
  };

  History.prototype.transitionTo = function transitionTo(location, onComplete, onAbort) {
    var this$1 = this;

    var route = this.router.match(location, this.current);
    this.confirmTransition(route, function () {
      this$1.updateRoute(route);
      onComplete && onComplete(route);
      this$1.ensureURL();

      // fire ready cbs once
      if (!this$1.ready) {
        this$1.ready = true;
        this$1.readyCbs.forEach(function (cb) {
          cb(route);
        });
      }
    }, function (err) {
      if (onAbort) {
        onAbort(err);
      }
      if (err && !this$1.ready) {
        this$1.ready = true;
        this$1.readyErrorCbs.forEach(function (cb) {
          cb(err);
        });
      }
    });
  };

  History.prototype.confirmTransition = function confirmTransition(route, onComplete, onAbort) {
    var this$1 = this;

    var current = this.current;
    var abort = function (err) {
      if (isError(err)) {
        if (this$1.errorCbs.length) {
          this$1.errorCbs.forEach(function (cb) {
            cb(err);
          });
        } else {
          warn(false, 'uncaught error during route navigation:');
          console.error(err);
        }
      }
      onAbort && onAbort(err);
    };
    if (isSameRoute(route, current) &&
    // in the case the route map has been dynamically appended to
    route.matched.length === current.matched.length) {
      this.ensureURL();
      return abort();
    }

    var ref = resolveQueue(this.current.matched, route.matched);
    var updated = ref.updated;
    var deactivated = ref.deactivated;
    var activated = ref.activated;

    var queue = [].concat(
    // in-component leave guards
    extractLeaveGuards(deactivated),
    // global before hooks
    this.router.beforeHooks,
    // in-component update hooks
    extractUpdateHooks(updated),
    // in-config enter guards
    activated.map(function (m) {
      return m.beforeEnter;
    }),
    // async components
    resolveAsyncComponents(activated));

    this.pending = route;
    var iterator = function (hook, next) {
      if (this$1.pending !== route) {
        return abort();
      }
      try {
        hook(route, current, function (to) {
          if (to === false || isError(to)) {
            // next(false) -> abort navigation, ensure current URL
            this$1.ensureURL(true);
            abort(to);
          } else if (typeof to === 'string' || typeof to === 'object' && (typeof to.path === 'string' || typeof to.name === 'string')) {
            // next('/') or next({ path: '/' }) -> redirect
            abort();
            if (typeof to === 'object' && to.replace) {
              this$1.replace(to);
            } else {
              this$1.push(to);
            }
          } else {
            // confirm transition and pass on the value
            next(to);
          }
        });
      } catch (e) {
        abort(e);
      }
    };

    runQueue(queue, iterator, function () {
      var postEnterCbs = [];
      var isValid = function () {
        return this$1.current === route;
      };
      // wait until async components are resolved before
      // extracting in-component enter guards
      var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);
      var queue = enterGuards.concat(this$1.router.resolveHooks);
      runQueue(queue, iterator, function () {
        if (this$1.pending !== route) {
          return abort();
        }
        this$1.pending = null;
        onComplete(route);
        if (this$1.router.app) {
          this$1.router.app.$nextTick(function () {
            postEnterCbs.forEach(function (cb) {
              cb();
            });
          });
        }
      });
    });
  };

  History.prototype.updateRoute = function updateRoute(route) {
    var prev = this.current;
    this.current = route;
    this.cb && this.cb(route);
    this.router.afterHooks.forEach(function (hook) {
      hook && hook(route, prev);
    });
  };

  function normalizeBase(base) {
    if (!base) {
      if (inBrowser) {
        // respect <base> tag
        var baseEl = document.querySelector('base');
        base = baseEl && baseEl.getAttribute('href') || '/';
        // strip full URL origin
        base = base.replace(/^https?:\/\/[^\/]+/, '');
      } else {
        base = '/';
      }
    }
    // make sure there's the starting slash
    if (base.charAt(0) !== '/') {
      base = '/' + base;
    }
    // remove trailing slash
    return base.replace(/\/$/, '');
  }

  function resolveQueue(current, next) {
    var i;
    var max = Math.max(current.length, next.length);
    for (i = 0; i < max; i++) {
      if (current[i] !== next[i]) {
        break;
      }
    }
    return {
      updated: next.slice(0, i),
      activated: next.slice(i),
      deactivated: current.slice(i)
    };
  }

  function extractGuards(records, name, bind, reverse) {
    var guards = flatMapComponents(records, function (def, instance, match, key) {
      var guard = extractGuard(def, name);
      if (guard) {
        return Array.isArray(guard) ? guard.map(function (guard) {
          return bind(guard, instance, match, key);
        }) : bind(guard, instance, match, key);
      }
    });
    return flatten(reverse ? guards.reverse() : guards);
  }

  function extractGuard(def, key) {
    if (typeof def !== 'function') {
      // extend now so that global mixins are applied.
      def = _Vue.extend(def);
    }
    return def.options[key];
  }

  function extractLeaveGuards(deactivated) {
    return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true);
  }

  function extractUpdateHooks(updated) {
    return extractGuards(updated, 'beforeRouteUpdate', bindGuard);
  }

  function bindGuard(guard, instance) {
    if (instance) {
      return function boundRouteGuard() {
        return guard.apply(instance, arguments);
      };
    }
  }

  function extractEnterGuards(activated, cbs, isValid) {
    return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {
      return bindEnterGuard(guard, match, key, cbs, isValid);
    });
  }

  function bindEnterGuard(guard, match, key, cbs, isValid) {
    return function routeEnterGuard(to, from, next) {
      return guard(to, from, function (cb) {
        next(cb);
        if (typeof cb === 'function') {
          cbs.push(function () {
            // #750
            // if a router-view is wrapped with an out-in transition,
            // the instance may not have been registered at this time.
            // we will need to poll for registration until current route
            // is no longer valid.
            poll(cb, match.instances, key, isValid);
          });
        }
      });
    };
  }

  function poll(cb, // somehow flow cannot infer this is a function
  instances, key, isValid) {
    if (instances[key]) {
      cb(instances[key]);
    } else if (isValid()) {
      setTimeout(function () {
        poll(cb, instances, key, isValid);
      }, 16);
    }
  }

  /*  */

  var HTML5History = function (History$$1) {
    function HTML5History(router, base) {
      var this$1 = this;

      History$$1.call(this, router, base);

      var expectScroll = router.options.scrollBehavior;

      if (expectScroll) {
        setupScroll();
      }

      window.addEventListener('popstate', function (e) {
        var current = this$1.current;
        this$1.transitionTo(getLocation(this$1.base), function (route) {
          if (expectScroll) {
            handleScroll(router, route, current, true);
          }
        });
      });
    }

    if (History$$1) HTML5History.__proto__ = History$$1;
    HTML5History.prototype = Object.create(History$$1 && History$$1.prototype);
    HTML5History.prototype.constructor = HTML5History;

    HTML5History.prototype.go = function go(n) {
      window.history.go(n);
    };

    HTML5History.prototype.push = function push(location, onComplete, onAbort) {
      var this$1 = this;

      var ref = this;
      var fromRoute = ref.current;
      this.transitionTo(location, function (route) {
        pushState(cleanPath(this$1.base + route.fullPath));
        handleScroll(this$1.router, route, fromRoute, false);
        onComplete && onComplete(route);
      }, onAbort);
    };

    HTML5History.prototype.replace = function replace(location, onComplete, onAbort) {
      var this$1 = this;

      var ref = this;
      var fromRoute = ref.current;
      this.transitionTo(location, function (route) {
        replaceState(cleanPath(this$1.base + route.fullPath));
        handleScroll(this$1.router, route, fromRoute, false);
        onComplete && onComplete(route);
      }, onAbort);
    };

    HTML5History.prototype.ensureURL = function ensureURL(push) {
      if (getLocation(this.base) !== this.current.fullPath) {
        var current = cleanPath(this.base + this.current.fullPath);
        push ? pushState(current) : replaceState(current);
      }
    };

    HTML5History.prototype.getCurrentLocation = function getCurrentLocation() {
      return getLocation(this.base);
    };

    return HTML5History;
  }(History);

  function getLocation(base) {
    var path = window.location.pathname;
    if (base && path.indexOf(base) === 0) {
      path = path.slice(base.length);
    }
    return (path || '/') + window.location.search + window.location.hash;
  }

  /*  */

  var HashHistory = function (History$$1) {
    function HashHistory(router, base, fallback) {
      History$$1.call(this, router, base);
      // check history fallback deeplinking
      if (fallback && checkFallback(this.base)) {
        return;
      }
      ensureSlash();
    }

    if (History$$1) HashHistory.__proto__ = History$$1;
    HashHistory.prototype = Object.create(History$$1 && History$$1.prototype);
    HashHistory.prototype.constructor = HashHistory;

    // this is delayed until the app mounts
    // to avoid the hashchange listener being fired too early
    HashHistory.prototype.setupListeners = function setupListeners() {
      var this$1 = this;

      window.addEventListener('hashchange', function () {
        if (!ensureSlash()) {
          return;
        }
        this$1.transitionTo(getHash(), function (route) {
          replaceHash(route.fullPath);
        });
      });
    };

    HashHistory.prototype.push = function push(location, onComplete, onAbort) {
      this.transitionTo(location, function (route) {
        pushHash(route.fullPath);
        onComplete && onComplete(route);
      }, onAbort);
    };

    HashHistory.prototype.replace = function replace(location, onComplete, onAbort) {
      this.transitionTo(location, function (route) {
        replaceHash(route.fullPath);
        onComplete && onComplete(route);
      }, onAbort);
    };

    HashHistory.prototype.go = function go(n) {
      window.history.go(n);
    };

    HashHistory.prototype.ensureURL = function ensureURL(push) {
      var current = this.current.fullPath;
      if (getHash() !== current) {
        push ? pushHash(current) : replaceHash(current);
      }
    };

    HashHistory.prototype.getCurrentLocation = function getCurrentLocation() {
      return getHash();
    };

    return HashHistory;
  }(History);

  function checkFallback(base) {
    var location = getLocation(base);
    if (!/^\/#/.test(location)) {
      window.location.replace(cleanPath(base + '/#' + location));
      return true;
    }
  }

  function ensureSlash() {
    var path = getHash();
    if (path.charAt(0) === '/') {
      return true;
    }
    replaceHash('/' + path);
    return false;
  }

  function getHash() {
    // We can't use window.location.hash here because it's not
    // consistent across browsers - Firefox will pre-decode it!
    var href = window.location.href;
    var index = href.indexOf('#');
    return index === -1 ? '' : href.slice(index + 1);
  }

  function pushHash(path) {
    window.location.hash = path;
  }

  function replaceHash(path) {
    var href = window.location.href;
    var i = href.indexOf('#');
    var base = i >= 0 ? href.slice(0, i) : href;
    window.location.replace(base + "#" + path);
  }

  /*  */

  var AbstractHistory = function (History$$1) {
    function AbstractHistory(router, base) {
      History$$1.call(this, router, base);
      this.stack = [];
      this.index = -1;
    }

    if (History$$1) AbstractHistory.__proto__ = History$$1;
    AbstractHistory.prototype = Object.create(History$$1 && History$$1.prototype);
    AbstractHistory.prototype.constructor = AbstractHistory;

    AbstractHistory.prototype.push = function push(location, onComplete, onAbort) {
      var this$1 = this;

      this.transitionTo(location, function (route) {
        this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);
        this$1.index++;
        onComplete && onComplete(route);
      }, onAbort);
    };

    AbstractHistory.prototype.replace = function replace(location, onComplete, onAbort) {
      var this$1 = this;

      this.transitionTo(location, function (route) {
        this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);
        onComplete && onComplete(route);
      }, onAbort);
    };

    AbstractHistory.prototype.go = function go(n) {
      var this$1 = this;

      var targetIndex = this.index + n;
      if (targetIndex < 0 || targetIndex >= this.stack.length) {
        return;
      }
      var route = this.stack[targetIndex];
      this.confirmTransition(route, function () {
        this$1.index = targetIndex;
        this$1.updateRoute(route);
      });
    };

    AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation() {
      var current = this.stack[this.stack.length - 1];
      return current ? current.fullPath : '/';
    };

    AbstractHistory.prototype.ensureURL = function ensureURL() {
      // noop
    };

    return AbstractHistory;
  }(History);

  /*  */

  var VueRouter = function VueRouter(options) {
    if (options === void 0) options = {};

    this.app = null;
    this.apps = [];
    this.options = options;
    this.beforeHooks = [];
    this.resolveHooks = [];
    this.afterHooks = [];
    this.matcher = createMatcher(options.routes || [], this);

    var mode = options.mode || 'hash';
    this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;
    if (this.fallback) {
      mode = 'hash';
    }
    if (!inBrowser) {
      mode = 'abstract';
    }
    this.mode = mode;

    switch (mode) {
      case 'history':
        this.history = new HTML5History(this, options.base);
        break;
      case 'hash':
        this.history = new HashHistory(this, options.base, this.fallback);
        break;
      case 'abstract':
        this.history = new AbstractHistory(this, options.base);
        break;
      default:
        if ('production' !== 'production') {
          assert(false, "invalid mode: " + mode);
        }
    }
  };

  var prototypeAccessors = { currentRoute: {} };

  VueRouter.prototype.match = function match(raw, current, redirectedFrom) {
    return this.matcher.match(raw, current, redirectedFrom);
  };

  prototypeAccessors.currentRoute.get = function () {
    return this.history && this.history.current;
  };

  VueRouter.prototype.init = function init(app /* Vue component instance */) {
    var this$1 = this;

    'production' !== 'production' && assert(install.installed, "not installed. Make sure to call `Vue.use(VueRouter)` " + "before creating root instance.");

    this.apps.push(app);

    // main app already initialized.
    if (this.app) {
      return;
    }

    this.app = app;

    var history = this.history;

    if (history instanceof HTML5History) {
      history.transitionTo(history.getCurrentLocation());
    } else if (history instanceof HashHistory) {
      var setupHashListener = function () {
        history.setupListeners();
      };
      history.transitionTo(history.getCurrentLocation(), setupHashListener, setupHashListener);
    }

    history.listen(function (route) {
      this$1.apps.forEach(function (app) {
        app._route = route;
      });
    });
  };

  VueRouter.prototype.beforeEach = function beforeEach(fn) {
    return registerHook(this.beforeHooks, fn);
  };

  VueRouter.prototype.beforeResolve = function beforeResolve(fn) {
    return registerHook(this.resolveHooks, fn);
  };

  VueRouter.prototype.afterEach = function afterEach(fn) {
    return registerHook(this.afterHooks, fn);
  };

  VueRouter.prototype.onReady = function onReady(cb, errorCb) {
    this.history.onReady(cb, errorCb);
  };

  VueRouter.prototype.onError = function onError(errorCb) {
    this.history.onError(errorCb);
  };

  VueRouter.prototype.push = function push(location, onComplete, onAbort) {
    this.history.push(location, onComplete, onAbort);
  };

  VueRouter.prototype.replace = function replace(location, onComplete, onAbort) {
    this.history.replace(location, onComplete, onAbort);
  };

  VueRouter.prototype.go = function go(n) {
    this.history.go(n);
  };

  VueRouter.prototype.back = function back() {
    this.go(-1);
  };

  VueRouter.prototype.forward = function forward() {
    this.go(1);
  };

  VueRouter.prototype.getMatchedComponents = function getMatchedComponents(to) {
    var route = to ? to.matched ? to : this.resolve(to).route : this.currentRoute;
    if (!route) {
      return [];
    }
    return [].concat.apply([], route.matched.map(function (m) {
      return Object.keys(m.components).map(function (key) {
        return m.components[key];
      });
    }));
  };

  VueRouter.prototype.resolve = function resolve(to, current, append) {
    var location = normalizeLocation(to, current || this.history.current, append, this);
    var route = this.match(location, current);
    var fullPath = route.redirectedFrom || route.fullPath;
    var base = this.history.base;
    var href = createHref(base, fullPath, this.mode);
    return {
      location: location,
      route: route,
      href: href,
      // for backwards compat
      normalizedTo: location,
      resolved: route
    };
  };

  VueRouter.prototype.addRoutes = function addRoutes(routes) {
    this.matcher.addRoutes(routes);
    if (this.history.current !== START) {
      this.history.transitionTo(this.history.getCurrentLocation());
    }
  };

  Object.defineProperties(VueRouter.prototype, prototypeAccessors);

  function registerHook(list, fn) {
    list.push(fn);
    return function () {
      var i = list.indexOf(fn);
      if (i > -1) {
        list.splice(i, 1);
      }
    };
  }

  function createHref(base, fullPath, mode) {
    var path = mode === 'hash' ? '#' + fullPath : fullPath;
    return base ? cleanPath(base + '/' + path) : path;
  }

  VueRouter.install = install;
  VueRouter.version = '2.7.0';

  if (inBrowser && window.Vue) {
    window.Vue.use(VueRouter);
  }

  module.exports = VueRouter;
  return module.exports;
});
System.registerDynamic("npm:vue-form-generator@2.0.0.json", [], false, function() {
  return {
    "main": "dist/vfg.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      },
      "src/fields/abstractField.js": {
        "format": "esm"
      },
      "src/formGenerator.vue": true,
      "src/utils/*": {
        "format": "esm"
      }
    },
    "map": {
      "./src": "./src/index.js"
    }
  };
});

System.registerDynamic("npm:vue-form-generator@2.0.0/dist/vfg.js", [], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /**
   * vue-form-generator v2.0.0
   * https://github.com/icebob/vue-form-generator
   * Released under the MIT License.
   */

  !function (e, t) {
    "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.VueFormGenerator = t() : e.VueFormGenerator = t();
  }(this, function () {
    return function (e) {
      function t(r) {
        if (n[r]) return n[r].exports;var o = n[r] = { exports: {}, id: r, loaded: !1 };return e[r].call(o.exports, o, o.exports, t), o.loaded = !0, o.exports;
      }var n = {};return t.m = e, t.c = n, t.p = "", t(0);
    }(function (e) {
      for (var t in e) if (Object.prototype.hasOwnProperty.call(e, t)) switch (typeof e[t]) {case "function":
          break;case "object":
          e[t] = function (t) {
            var n = t.slice(1),
                r = e[t[0]];return function (e, t, o) {
              r.apply(this, [e, t, o].concat(n));
            };
          }(e[t]);break;default:
          e[t] = e[e[t]];}return e;
    }([function (e, t, n) {
      "use strict";
      e.exports = { component: n(1), schema: n(46), validators: n(148), abstractField: n(147).default, install: function (t) {
          t.component("VueFormGenerator", e.exports.component);
        } };
    }, function (e, t, n) {
      n(2);var r = n(3)(n(4), n(314), null, null);e.exports = r.exports;
    }, function (e, t) {}, function (e, t) {
      e.exports = function (e, t, n, r) {
        var o,
            i = e = e || {},
            a = typeof e.default;"object" !== a && "function" !== a || (o = e, i = e.default);var s = "function" == typeof i ? i.options : i;if (t && (s.render = t.render, s.staticRenderFns = t.staticRenderFns), n && (s._scopeId = n), r) {
          var u = s.computed || (s.computed = {});Object.keys(r).forEach(function (e) {
            var t = r[e];u[e] = function () {
              return t;
            };
          });
        }return { esModule: o, exports: i, options: s };
      };
    }, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(5),
          i = r(o),
          a = n(12),
          s = r(a),
          u = n(14),
          c = r(u),
          l = n(15),
          f = r(l),
          d = n(17),
          p = r(d),
          h = n(46),
          m = {},
          v = n(143);(0, p.default)(v.keys(), function (e) {
        var t = e.replace(/^\.\//, "").replace(/\.vue/, "");m[t] = v(e);
      });var y = n(228);(0, p.default)(y.keys(), function (e) {
        var t = e.replace(/^\.\//, "").replace(/\.vue/, "");m[t] = y(e);
      }), t.default = { components: m, props: { schema: Object, model: Object, options: { type: Object, default: function () {
              return { validateAfterLoad: !1, validateAfterChanged: !1, validationErrorClass: "error", validationSuccessClass: "" };
            } }, multiple: { type: Boolean, default: !1 }, isNewModel: { type: Boolean, default: !1 }, tag: { type: String, default: "fieldset", validator: function (e) {
              return e.length > 0;
            } } }, data: function () {
          return { errors: [] };
        }, computed: { fields: function () {
            var e = this,
                t = [];return this.schema && this.schema.fields && (0, p.default)(this.schema.fields, function (n) {
              e.multiple && n.multi !== !0 || t.push(n);
            }), t;
          }, groups: function () {
            var e = [];return this.schema && this.schema.groups && (0, p.default)(this.schema.groups, function (t) {
              e.push(t);
            }), e;
          } }, watch: { model: function (e, t) {
            var n = this;t != e && null != e && this.$nextTick(function () {
              n.options.validateAfterLoad === !0 && n.isNewModel !== !0 ? n.validate() : n.clearValidationErrors();
            });
          } }, mounted: function () {
          var e = this;this.$nextTick(function () {
            e.model && (e.options.validateAfterLoad === !0 && e.isNewModel !== !0 ? e.validate() : e.clearValidationErrors());
          });
        }, methods: { getFieldRowClasses: function (e) {
            var t = this.fieldErrors(e).length > 0,
                n = { error: t, disabled: this.fieldDisabled(e), readonly: this.fieldReadonly(e), featured: this.fieldFeatured(e), required: this.fieldRequired(e) },
                r = this.options,
                o = r.validationErrorClass,
                a = r.validationSuccessClass;return o && a && (t ? (n[o] = !0, n.error = !1) : n[a] = !0), (0, s.default)(e.styleClasses) ? (0, p.default)(e.styleClasses, function (e) {
              return n[e] = !0;
            }) : (0, i.default)(e.styleClasses) && (n[e.styleClasses] = !0), n["field-" + e.type] = !0, n;
          }, getFieldType: function (e) {
            return "field-" + e.type;
          }, fieldTypeHasLabel: function (e) {
            var t = "";switch (t = "input" === e.type ? e.inputType : e.type) {case "button":case "submit":case "reset":
                return !1;default:
                return !0;}
          }, fieldDisabled: function (e) {
            return (0, f.default)(e.disabled) ? e.disabled.call(this, this.model, e, this) : !(0, c.default)(e.disabled) && e.disabled;
          }, fieldRequired: function (e) {
            return (0, f.default)(e.required) ? e.required.call(this, this.model, e, this) : !(0, c.default)(e.required) && e.required;
          }, fieldVisible: function (e) {
            return (0, f.default)(e.visible) ? e.visible.call(this, this.model, e, this) : !!(0, c.default)(e.visible) || e.visible;
          }, fieldReadonly: function (e) {
            return (0, f.default)(e.readonly) ? e.readonly.call(this, this.model, e, this) : !(0, c.default)(e.readonly) && e.readonly;
          }, fieldFeatured: function (e) {
            return (0, f.default)(e.featured) ? e.featured.call(this, this.model, e, this) : !(0, c.default)(e.featured) && e.featured;
          }, buttonClickHandler: function (e, t, n) {
            return e.onclick.call(this, this.model, t, n, this);
          }, onFieldValidated: function (e, t, n) {
            var r = this;this.errors = this.errors.filter(function (e) {
              return e.field != n.schema;
            }), !e && t && t.length > 0 && t.forEach(function (e) {
              r.errors.push({ field: n.schema, error: e });
            });var o = 0 == this.errors.length;this.$emit("validated", o, this.errors);
          }, validate: function () {
            var e = this;this.clearValidationErrors(), this.$children.forEach(function (t) {
              if ((0, f.default)(t.validate)) {
                var n = t.validate(!0);n.forEach(function (n) {
                  e.errors.push({ field: t.schema, error: n });
                });
              }
            });var t = 0 == this.errors.length;return this.$emit("validated", t, this.errors), t;
          }, clearValidationErrors: function () {
            this.errors.splice(0), (0, p.default)(this.$children, function (e) {
              e.clearValidationErrors();
            });
          }, modelUpdated: function (e, t) {
            this.$emit("model-updated", e, t);
          }, buttonVisibility: function (e) {
            return e.buttons && e.buttons.length > 0;
          }, fieldErrors: function (e) {
            var t = this.errors.filter(function (t) {
              return t.field == e;
            });return t.map(function (e) {
              return e.error;
            });
          }, getFieldID: function (e) {
            var t = this.options && this.options.fieldIdPrefix ? this.options.fieldIdPrefix : "";return (0, h.slugifyFormID)(e, t);
          } } };
    }, function (e, t, n) {
      function r(e) {
        return "string" == typeof e || !i(e) && a(e) && o(e) == s;
      }var o = n(6),
          i = n(12),
          a = n(13),
          s = "[object String]";e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        return null == e ? void 0 === e ? u : s : c && c in Object(e) ? i(e) : a(e);
      }var o = n(7),
          i = n(10),
          a = n(11),
          s = "[object Null]",
          u = "[object Undefined]",
          c = o ? o.toStringTag : void 0;e.exports = r;
    }, function (e, t, n) {
      var r = n(8),
          o = r.Symbol;e.exports = o;
    }, function (e, t, n) {
      var r = n(9),
          o = "object" == typeof self && self && self.Object === Object && self,
          i = r || o || Function("return this")();e.exports = i;
    }, function (e, t) {
      (function (t) {
        var n = "object" == typeof t && t && t.Object === Object && t;e.exports = n;
      }).call(t, function () {
        return this;
      }());
    }, function (e, t, n) {
      function r(e) {
        var t = a.call(e, u),
            n = e[u];try {
          e[u] = void 0;var r = !0;
        } catch (e) {}var o = s.call(e);return r && (t ? e[u] = n : delete e[u]), o;
      }var o = n(7),
          i = Object.prototype,
          a = i.hasOwnProperty,
          s = i.toString,
          u = o ? o.toStringTag : void 0;e.exports = r;
    }, function (e, t) {
      function n(e) {
        return o.call(e);
      }var r = Object.prototype,
          o = r.toString;e.exports = n;
    }, function (e, t) {
      var n = Array.isArray;e.exports = n;
    }, function (e, t) {
      function n(e) {
        return null != e && "object" == typeof e;
      }e.exports = n;
    }, function (e, t) {
      function n(e) {
        return null == e;
      }e.exports = n;
    }, function (e, t, n) {
      function r(e) {
        if (!i(e)) return !1;var t = o(e);return t == s || t == u || t == a || t == c;
      }var o = n(6),
          i = n(16),
          a = "[object AsyncFunction]",
          s = "[object Function]",
          u = "[object GeneratorFunction]",
          c = "[object Proxy]";e.exports = r;
    }, function (e, t) {
      function n(e) {
        var t = typeof e;return null != e && ("object" == t || "function" == t);
      }e.exports = n;
    }, function (e, t, n) {
      e.exports = n(18);
    }, function (e, t, n) {
      function r(e, t) {
        var n = s(e) ? o : i;return n(e, a(t));
      }var o = n(19),
          i = n(20),
          a = n(44),
          s = n(12);e.exports = r;
    }, function (e, t) {
      function n(e, t) {
        for (var n = -1, r = null == e ? 0 : e.length; ++n < r && t(e[n], n, e) !== !1;);return e;
      }e.exports = n;
    }, function (e, t, n) {
      var r = n(21),
          o = n(43),
          i = o(r);e.exports = i;
    }, function (e, t, n) {
      function r(e, t) {
        return e && o(e, t, i);
      }var o = n(22),
          i = n(24);e.exports = r;
    }, function (e, t, n) {
      var r = n(23),
          o = r();e.exports = o;
    }, function (e, t) {
      function n(e) {
        return function (t, n, r) {
          for (var o = -1, i = Object(t), a = r(t), s = a.length; s--;) {
            var u = a[e ? s : ++o];if (n(i[u], u, i) === !1) break;
          }return t;
        };
      }e.exports = n;
    }, function (e, t, n) {
      function r(e) {
        return a(e) ? o(e) : i(e);
      }var o = n(25),
          i = n(38),
          a = n(42);e.exports = r;
    }, function (e, t, n) {
      function r(e, t) {
        var n = a(e),
            r = !n && i(e),
            l = !n && !r && s(e),
            d = !n && !r && !l && c(e),
            p = n || r || l || d,
            h = p ? o(e.length, String) : [],
            m = h.length;for (var v in e) !t && !f.call(e, v) || p && ("length" == v || l && ("offset" == v || "parent" == v) || d && ("buffer" == v || "byteLength" == v || "byteOffset" == v) || u(v, m)) || h.push(v);return h;
      }var o = n(26),
          i = n(27),
          a = n(12),
          s = n(29),
          u = n(32),
          c = n(33),
          l = Object.prototype,
          f = l.hasOwnProperty;e.exports = r;
    }, function (e, t) {
      function n(e, t) {
        for (var n = -1, r = Array(e); ++n < e;) r[n] = t(n);return r;
      }e.exports = n;
    }, function (e, t, n) {
      var r = n(28),
          o = n(13),
          i = Object.prototype,
          a = i.hasOwnProperty,
          s = i.propertyIsEnumerable,
          u = r(function () {
        return arguments;
      }()) ? r : function (e) {
        return o(e) && a.call(e, "callee") && !s.call(e, "callee");
      };e.exports = u;
    }, function (e, t, n) {
      function r(e) {
        return i(e) && o(e) == a;
      }var o = n(6),
          i = n(13),
          a = "[object Arguments]";e.exports = r;
    }, function (e, t, n) {
      (function (e) {
        var r = n(8),
            o = n(31),
            i = "object" == typeof t && t && !t.nodeType && t,
            a = i && "object" == typeof e && e && !e.nodeType && e,
            s = a && a.exports === i,
            u = s ? r.Buffer : void 0,
            c = u ? u.isBuffer : void 0,
            l = c || o;e.exports = l;
      }).call(t, n(30)(e));
    }, function (e, t) {
      e.exports = function (e) {
        return e.webpackPolyfill || (e.deprecate = function () {}, e.paths = [], e.children = [], e.webpackPolyfill = 1), e;
      };
    }, function (e, t) {
      function n() {
        return !1;
      }e.exports = n;
    }, function (e, t) {
      function n(e, t) {
        return t = null == t ? r : t, !!t && ("number" == typeof e || o.test(e)) && e > -1 && e % 1 == 0 && e < t;
      }var r = 9007199254740991,
          o = /^(?:0|[1-9]\d*)$/;e.exports = n;
    }, function (e, t, n) {
      var r = n(34),
          o = n(36),
          i = n(37),
          a = i && i.isTypedArray,
          s = a ? o(a) : r;e.exports = s;
    }, function (e, t, n) {
      function r(e) {
        return a(e) && i(e.length) && !!T[o(e)];
      }var o = n(6),
          i = n(35),
          a = n(13),
          s = "[object Arguments]",
          u = "[object Array]",
          c = "[object Boolean]",
          l = "[object Date]",
          f = "[object Error]",
          d = "[object Function]",
          p = "[object Map]",
          h = "[object Number]",
          m = "[object Object]",
          v = "[object RegExp]",
          y = "[object Set]",
          b = "[object String]",
          g = "[object WeakMap]",
          x = "[object ArrayBuffer]",
          _ = "[object DataView]",
          w = "[object Float32Array]",
          O = "[object Float64Array]",
          j = "[object Int8Array]",
          M = "[object Int16Array]",
          k = "[object Int32Array]",
          S = "[object Uint8Array]",
          C = "[object Uint8ClampedArray]",
          P = "[object Uint16Array]",
          F = "[object Uint32Array]",
          T = {};T[w] = T[O] = T[j] = T[M] = T[k] = T[S] = T[C] = T[P] = T[F] = !0, T[s] = T[u] = T[x] = T[c] = T[_] = T[l] = T[f] = T[d] = T[p] = T[h] = T[m] = T[v] = T[y] = T[b] = T[g] = !1, e.exports = r;
    }, function (e, t) {
      function n(e) {
        return "number" == typeof e && e > -1 && e % 1 == 0 && e <= r;
      }var r = 9007199254740991;e.exports = n;
    }, function (e, t) {
      function n(e) {
        return function (t) {
          return e(t);
        };
      }e.exports = n;
    }, function (e, t, n) {
      (function (e) {
        var r = n(9),
            o = "object" == typeof t && t && !t.nodeType && t,
            i = o && "object" == typeof e && e && !e.nodeType && e,
            a = i && i.exports === o,
            s = a && r.process,
            u = function () {
          try {
            return s && s.binding && s.binding("util");
          } catch (e) {}
        }();e.exports = u;
      }).call(t, n(30)(e));
    }, function (e, t, n) {
      function r(e) {
        if (!o(e)) return i(e);var t = [];for (var n in Object(e)) s.call(e, n) && "constructor" != n && t.push(n);return t;
      }var o = n(39),
          i = n(40),
          a = Object.prototype,
          s = a.hasOwnProperty;e.exports = r;
    }, function (e, t) {
      function n(e) {
        var t = e && e.constructor,
            n = "function" == typeof t && t.prototype || r;return e === n;
      }var r = Object.prototype;e.exports = n;
    }, function (e, t, n) {
      var r = n(41),
          o = r(Object.keys, Object);e.exports = o;
    }, function (e, t) {
      function n(e, t) {
        return function (n) {
          return e(t(n));
        };
      }e.exports = n;
    }, function (e, t, n) {
      function r(e) {
        return null != e && i(e.length) && !o(e);
      }var o = n(15),
          i = n(35);e.exports = r;
    }, function (e, t, n) {
      function r(e, t) {
        return function (n, r) {
          if (null == n) return n;if (!o(n)) return e(n, r);for (var i = n.length, a = t ? i : -1, s = Object(n); (t ? a-- : ++a < i) && r(s[a], a, s) !== !1;);return n;
        };
      }var o = n(42);e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        return "function" == typeof e ? e : o;
      }var o = n(45);e.exports = r;
    }, function (e, t) {
      function n(e) {
        return e;
      }e.exports = n;
    }, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }var o = n(47),
          i = r(o),
          a = n(15),
          s = r(a),
          u = n(12),
          c = r(u),
          l = n(16),
          f = r(l),
          d = n(17),
          p = r(d),
          h = n(129),
          m = r(h),
          v = n(141),
          y = r(v);e.exports.createDefaultObject = function (e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};return (0, p.default)(e.fields, function (n) {
          void 0 === (0, y.default)(t, n.model) && void 0 !== n.default && ((0, s.default)(n.default) ? (0, m.default)(t, n.model, n.default(n, e, t)) : (0, f.default)(n.default) || (0, c.default)(n.default) ? (0, m.default)(t, n.model, (0, i.default)(n.default)) : (0, m.default)(t, n.model, n.default));
        }), t;
      }, e.exports.getMultipleFields = function (e) {
        var t = [];return (0, p.default)(e.fields, function (e) {
          e.multi === !0 && t.push(e);
        }), t;
      }, e.exports.mergeMultiObjectFields = function (t, n) {
        var r = {},
            o = e.exports.getMultipleFields(t);return (0, p.default)(o, function (e) {
          var t = void 0,
              o = !0,
              i = e.model;(0, p.default)(n, function (e) {
            var n = (0, y.default)(e, i);o ? (t = n, o = !1) : t != n && (t = void 0);
          }), (0, m.default)(r, i, t);
        }), r;
      }, e.exports.slugifyFormID = function (e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";return "undefined" != typeof e.id ? t + e.id : t + (e.inputName || e.label || e.model).toString().trim().toLowerCase().replace(/ |_/g, "-").replace(/-{2,}/g, "-").replace(/^-+|-+$/g, "").replace(/([^a-zA-Z0-9-]+)/g, "");
      };
    }, function (e, t, n) {
      function r(e) {
        return o(e, i | a);
      }var o = n(48),
          i = 1,
          a = 4;e.exports = r;
    }, function (e, t, n) {
      function r(e, t, n, S, C, P) {
        var F,
            I = t & O,
            $ = t & j,
            E = t & M;if (n && (F = C ? n(e, S, C, P) : n(e)), void 0 !== F) return F;if (!_(e)) return e;var N = g(e);if (N) {
          if (F = v(e), !I) return l(e, F);
        } else {
          var Y = m(e),
              R = Y == T || Y == D;if (x(e)) return c(e, I);if (Y == A || Y == k || R && !C) {
            if (F = $ || R ? {} : b(e), !I) return $ ? d(e, u(F, e)) : f(e, s(F, e));
          } else {
            if (!X[Y]) return C ? e : {};F = y(e, Y, r, I);
          }
        }P || (P = new o());var V = P.get(e);if (V) return V;P.set(e, F);var L = E ? $ ? h : p : $ ? keysIn : w,
            H = N ? void 0 : L(e);return i(H || e, function (o, i) {
          H && (i = o, o = e[i]), a(F, i, r(o, t, n, i, e, P));
        }), F;
      }var o = n(49),
          i = n(19),
          a = n(85),
          s = n(88),
          u = n(90),
          c = n(94),
          l = n(95),
          f = n(96),
          d = n(100),
          p = n(104),
          h = n(106),
          m = n(107),
          v = n(112),
          y = n(113),
          b = n(127),
          g = n(12),
          x = n(29),
          _ = n(16),
          w = n(24),
          O = 1,
          j = 2,
          M = 4,
          k = "[object Arguments]",
          S = "[object Array]",
          C = "[object Boolean]",
          P = "[object Date]",
          F = "[object Error]",
          T = "[object Function]",
          D = "[object GeneratorFunction]",
          I = "[object Map]",
          $ = "[object Number]",
          A = "[object Object]",
          E = "[object RegExp]",
          N = "[object Set]",
          Y = "[object String]",
          R = "[object Symbol]",
          V = "[object WeakMap]",
          L = "[object ArrayBuffer]",
          H = "[object DataView]",
          U = "[object Float32Array]",
          z = "[object Float64Array]",
          q = "[object Int8Array]",
          B = "[object Int16Array]",
          Z = "[object Int32Array]",
          G = "[object Uint8Array]",
          W = "[object Uint8ClampedArray]",
          J = "[object Uint16Array]",
          K = "[object Uint32Array]",
          X = {};X[k] = X[S] = X[L] = X[H] = X[C] = X[P] = X[U] = X[z] = X[q] = X[B] = X[Z] = X[I] = X[$] = X[A] = X[E] = X[N] = X[Y] = X[R] = X[G] = X[W] = X[J] = X[K] = !0, X[F] = X[T] = X[V] = !1, e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        var t = this.__data__ = new o(e);this.size = t.size;
      }var o = n(50),
          i = n(58),
          a = n(59),
          s = n(60),
          u = n(61),
          c = n(62);r.prototype.clear = i, r.prototype.delete = a, r.prototype.get = s, r.prototype.has = u, r.prototype.set = c, e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        var t = -1,
            n = null == e ? 0 : e.length;for (this.clear(); ++t < n;) {
          var r = e[t];this.set(r[0], r[1]);
        }
      }var o = n(51),
          i = n(52),
          a = n(55),
          s = n(56),
          u = n(57);r.prototype.clear = o, r.prototype.delete = i, r.prototype.get = a, r.prototype.has = s, r.prototype.set = u, e.exports = r;
    }, function (e, t) {
      function n() {
        this.__data__ = [], this.size = 0;
      }e.exports = n;
    }, function (e, t, n) {
      function r(e) {
        var t = this.__data__,
            n = o(t, e);if (n < 0) return !1;var r = t.length - 1;return n == r ? t.pop() : a.call(t, n, 1), --this.size, !0;
      }var o = n(53),
          i = Array.prototype,
          a = i.splice;e.exports = r;
    }, function (e, t, n) {
      function r(e, t) {
        for (var n = e.length; n--;) if (o(e[n][0], t)) return n;return -1;
      }var o = n(54);e.exports = r;
    }, function (e, t) {
      function n(e, t) {
        return e === t || e !== e && t !== t;
      }e.exports = n;
    }, function (e, t, n) {
      function r(e) {
        var t = this.__data__,
            n = o(t, e);return n < 0 ? void 0 : t[n][1];
      }var o = n(53);e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        return o(this.__data__, e) > -1;
      }var o = n(53);e.exports = r;
    }, function (e, t, n) {
      function r(e, t) {
        var n = this.__data__,
            r = o(n, e);return r < 0 ? (++this.size, n.push([e, t])) : n[r][1] = t, this;
      }var o = n(53);e.exports = r;
    }, function (e, t, n) {
      function r() {
        this.__data__ = new o(), this.size = 0;
      }var o = n(50);e.exports = r;
    }, function (e, t) {
      function n(e) {
        var t = this.__data__,
            n = t.delete(e);return this.size = t.size, n;
      }e.exports = n;
    }, function (e, t) {
      function n(e) {
        return this.__data__.get(e);
      }e.exports = n;
    }, function (e, t) {
      function n(e) {
        return this.__data__.has(e);
      }e.exports = n;
    }, function (e, t, n) {
      function r(e, t) {
        var n = this.__data__;if (n instanceof o) {
          var r = n.__data__;if (!i || r.length < s - 1) return r.push([e, t]), this.size = ++n.size, this;n = this.__data__ = new a(r);
        }return n.set(e, t), this.size = n.size, this;
      }var o = n(50),
          i = n(63),
          a = n(70),
          s = 200;e.exports = r;
    }, function (e, t, n) {
      var r = n(64),
          o = n(8),
          i = r(o, "Map");e.exports = i;
    }, function (e, t, n) {
      function r(e, t) {
        var n = i(e, t);return o(n) ? n : void 0;
      }var o = n(65),
          i = n(69);e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        if (!a(e) || i(e)) return !1;var t = o(e) ? h : c;return t.test(s(e));
      }var o = n(15),
          i = n(66),
          a = n(16),
          s = n(68),
          u = /[\\^$.*+?()[\]{}|]/g,
          c = /^\[object .+?Constructor\]$/,
          l = Function.prototype,
          f = Object.prototype,
          d = l.toString,
          p = f.hasOwnProperty,
          h = RegExp("^" + d.call(p).replace(u, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        return !!i && i in e;
      }var o = n(67),
          i = function () {
        var e = /[^.]+$/.exec(o && o.keys && o.keys.IE_PROTO || "");return e ? "Symbol(src)_1." + e : "";
      }();e.exports = r;
    }, function (e, t, n) {
      var r = n(8),
          o = r["__core-js_shared__"];e.exports = o;
    }, function (e, t) {
      function n(e) {
        if (null != e) {
          try {
            return o.call(e);
          } catch (e) {}try {
            return e + "";
          } catch (e) {}
        }return "";
      }var r = Function.prototype,
          o = r.toString;e.exports = n;
    }, function (e, t) {
      function n(e, t) {
        return null == e ? void 0 : e[t];
      }e.exports = n;
    }, function (e, t, n) {
      function r(e) {
        var t = -1,
            n = null == e ? 0 : e.length;for (this.clear(); ++t < n;) {
          var r = e[t];this.set(r[0], r[1]);
        }
      }var o = n(71),
          i = n(79),
          a = n(82),
          s = n(83),
          u = n(84);r.prototype.clear = o, r.prototype.delete = i, r.prototype.get = a, r.prototype.has = s, r.prototype.set = u, e.exports = r;
    }, function (e, t, n) {
      function r() {
        this.size = 0, this.__data__ = { hash: new o(), map: new (a || i)(), string: new o() };
      }var o = n(72),
          i = n(50),
          a = n(63);e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        var t = -1,
            n = null == e ? 0 : e.length;for (this.clear(); ++t < n;) {
          var r = e[t];this.set(r[0], r[1]);
        }
      }var o = n(73),
          i = n(75),
          a = n(76),
          s = n(77),
          u = n(78);r.prototype.clear = o, r.prototype.delete = i, r.prototype.get = a, r.prototype.has = s, r.prototype.set = u, e.exports = r;
    }, function (e, t, n) {
      function r() {
        this.__data__ = o ? o(null) : {}, this.size = 0;
      }var o = n(74);e.exports = r;
    }, function (e, t, n) {
      var r = n(64),
          o = r(Object, "create");e.exports = o;
    }, function (e, t) {
      function n(e) {
        var t = this.has(e) && delete this.__data__[e];return this.size -= t ? 1 : 0, t;
      }e.exports = n;
    }, function (e, t, n) {
      function r(e) {
        var t = this.__data__;if (o) {
          var n = t[e];return n === i ? void 0 : n;
        }return s.call(t, e) ? t[e] : void 0;
      }var o = n(74),
          i = "__lodash_hash_undefined__",
          a = Object.prototype,
          s = a.hasOwnProperty;e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        var t = this.__data__;return o ? void 0 !== t[e] : a.call(t, e);
      }var o = n(74),
          i = Object.prototype,
          a = i.hasOwnProperty;e.exports = r;
    }, function (e, t, n) {
      function r(e, t) {
        var n = this.__data__;return this.size += this.has(e) ? 0 : 1, n[e] = o && void 0 === t ? i : t, this;
      }var o = n(74),
          i = "__lodash_hash_undefined__";e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        var t = o(this, e).delete(e);return this.size -= t ? 1 : 0, t;
      }var o = n(80);e.exports = r;
    }, function (e, t, n) {
      function r(e, t) {
        var n = e.__data__;return o(t) ? n["string" == typeof t ? "string" : "hash"] : n.map;
      }var o = n(81);e.exports = r;
    }, function (e, t) {
      function n(e) {
        var t = typeof e;return "string" == t || "number" == t || "symbol" == t || "boolean" == t ? "__proto__" !== e : null === e;
      }e.exports = n;
    }, function (e, t, n) {
      function r(e) {
        return o(this, e).get(e);
      }var o = n(80);e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        return o(this, e).has(e);
      }var o = n(80);e.exports = r;
    }, function (e, t, n) {
      function r(e, t) {
        var n = o(this, e),
            r = n.size;return n.set(e, t), this.size += n.size == r ? 0 : 1, this;
      }var o = n(80);e.exports = r;
    }, function (e, t, n) {
      function r(e, t, n) {
        var r = e[t];s.call(e, t) && i(r, n) && (void 0 !== n || t in e) || o(e, t, n);
      }var o = n(86),
          i = n(54),
          a = Object.prototype,
          s = a.hasOwnProperty;e.exports = r;
    }, function (e, t, n) {
      function r(e, t, n) {
        "__proto__" == t && o ? o(e, t, { configurable: !0, enumerable: !0, value: n, writable: !0 }) : e[t] = n;
      }var o = n(87);e.exports = r;
    }, function (e, t, n) {
      var r = n(64),
          o = function () {
        try {
          var e = r(Object, "defineProperty");return e({}, "", {}), e;
        } catch (e) {}
      }();e.exports = o;
    }, function (e, t, n) {
      function r(e, t) {
        return e && o(t, i(t), e);
      }var o = n(89),
          i = n(24);e.exports = r;
    }, function (e, t, n) {
      function r(e, t, n, r) {
        var a = !n;n || (n = {});for (var s = -1, u = t.length; ++s < u;) {
          var c = t[s],
              l = r ? r(n[c], e[c], c, n, e) : void 0;void 0 === l && (l = e[c]), a ? i(n, c, l) : o(n, c, l);
        }return n;
      }var o = n(85),
          i = n(86);e.exports = r;
    }, function (e, t, n) {
      function r(e, t) {
        return e && o(t, i(t), e);
      }var o = n(89),
          i = n(91);e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        return a(e) ? o(e, !0) : i(e);
      }var o = n(25),
          i = n(92),
          a = n(42);e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        if (!o(e)) return a(e);var t = i(e),
            n = [];for (var r in e) ("constructor" != r || !t && u.call(e, r)) && n.push(r);return n;
      }var o = n(16),
          i = n(39),
          a = n(93),
          s = Object.prototype,
          u = s.hasOwnProperty;e.exports = r;
    }, function (e, t) {
      function n(e) {
        var t = [];if (null != e) for (var n in Object(e)) t.push(n);return t;
      }e.exports = n;
    }, function (e, t, n) {
      (function (e) {
        function r(e, t) {
          if (t) return e.slice();var n = e.length,
              r = c ? c(n) : new e.constructor(n);return e.copy(r), r;
        }var o = n(8),
            i = "object" == typeof t && t && !t.nodeType && t,
            a = i && "object" == typeof e && e && !e.nodeType && e,
            s = a && a.exports === i,
            u = s ? o.Buffer : void 0,
            c = u ? u.allocUnsafe : void 0;e.exports = r;
      }).call(t, n(30)(e));
    }, function (e, t) {
      function n(e, t) {
        var n = -1,
            r = e.length;for (t || (t = Array(r)); ++n < r;) t[n] = e[n];return t;
      }e.exports = n;
    }, function (e, t, n) {
      function r(e, t) {
        return o(e, i(e), t);
      }var o = n(89),
          i = n(97);e.exports = r;
    }, function (e, t, n) {
      var r = n(98),
          o = n(99),
          i = Object.prototype,
          a = i.propertyIsEnumerable,
          s = Object.getOwnPropertySymbols,
          u = s ? function (e) {
        return null == e ? [] : (e = Object(e), r(s(e), function (t) {
          return a.call(e, t);
        }));
      } : o;e.exports = u;
    }, function (e, t) {
      function n(e, t) {
        for (var n = -1, r = null == e ? 0 : e.length, o = 0, i = []; ++n < r;) {
          var a = e[n];t(a, n, e) && (i[o++] = a);
        }return i;
      }e.exports = n;
    }, function (e, t) {
      function n() {
        return [];
      }e.exports = n;
    }, function (e, t, n) {
      function r(e, t) {
        return o(e, i(e), t);
      }var o = n(89),
          i = n(101);e.exports = r;
    }, function (e, t, n) {
      var r = n(102),
          o = n(103),
          i = n(97),
          a = n(99),
          s = Object.getOwnPropertySymbols,
          u = s ? function (e) {
        for (var t = []; e;) r(t, i(e)), e = o(e);return t;
      } : a;e.exports = u;
    }, function (e, t) {
      function n(e, t) {
        for (var n = -1, r = t.length, o = e.length; ++n < r;) e[o + n] = t[n];return e;
      }e.exports = n;
    }, function (e, t, n) {
      var r = n(41),
          o = r(Object.getPrototypeOf, Object);e.exports = o;
    }, function (e, t, n) {
      function r(e) {
        return o(e, a, i);
      }var o = n(105),
          i = n(97),
          a = n(24);e.exports = r;
    }, function (e, t, n) {
      function r(e, t, n) {
        var r = t(e);return i(e) ? r : o(r, n(e));
      }var o = n(102),
          i = n(12);e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        return o(e, a, i);
      }var o = n(105),
          i = n(101),
          a = n(91);e.exports = r;
    }, function (e, t, n) {
      var r = n(108),
          o = n(63),
          i = n(109),
          a = n(110),
          s = n(111),
          u = n(6),
          c = n(68),
          l = "[object Map]",
          f = "[object Object]",
          d = "[object Promise]",
          p = "[object Set]",
          h = "[object WeakMap]",
          m = "[object DataView]",
          v = c(r),
          y = c(o),
          b = c(i),
          g = c(a),
          x = c(s),
          _ = u;(r && _(new r(new ArrayBuffer(1))) != m || o && _(new o()) != l || i && _(i.resolve()) != d || a && _(new a()) != p || s && _(new s()) != h) && (_ = function (e) {
        var t = u(e),
            n = t == f ? e.constructor : void 0,
            r = n ? c(n) : "";if (r) switch (r) {case v:
            return m;case y:
            return l;case b:
            return d;case g:
            return p;case x:
            return h;}return t;
      }), e.exports = _;
    }, function (e, t, n) {
      var r = n(64),
          o = n(8),
          i = r(o, "DataView");e.exports = i;
    }, function (e, t, n) {
      var r = n(64),
          o = n(8),
          i = r(o, "Promise");e.exports = i;
    }, function (e, t, n) {
      var r = n(64),
          o = n(8),
          i = r(o, "Set");e.exports = i;
    }, function (e, t, n) {
      var r = n(64),
          o = n(8),
          i = r(o, "WeakMap");e.exports = i;
    }, function (e, t) {
      function n(e) {
        var t = e.length,
            n = e.constructor(t);return t && "string" == typeof e[0] && o.call(e, "index") && (n.index = e.index, n.input = e.input), n;
      }var r = Object.prototype,
          o = r.hasOwnProperty;e.exports = n;
    }, function (e, t, n) {
      function r(e, t, n, r) {
        var F = e.constructor;switch (t) {case g:
            return o(e);case f:case d:
            return new F(+e);case x:
            return i(e, r);case _:case w:case O:case j:case M:case k:case S:case C:case P:
            return l(e, r);case p:
            return a(e, r, n);case h:case y:
            return new F(e);case m:
            return s(e);case v:
            return u(e, r, n);case b:
            return c(e);}
      }var o = n(114),
          i = n(116),
          a = n(117),
          s = n(121),
          u = n(122),
          c = n(125),
          l = n(126),
          f = "[object Boolean]",
          d = "[object Date]",
          p = "[object Map]",
          h = "[object Number]",
          m = "[object RegExp]",
          v = "[object Set]",
          y = "[object String]",
          b = "[object Symbol]",
          g = "[object ArrayBuffer]",
          x = "[object DataView]",
          _ = "[object Float32Array]",
          w = "[object Float64Array]",
          O = "[object Int8Array]",
          j = "[object Int16Array]",
          M = "[object Int32Array]",
          k = "[object Uint8Array]",
          S = "[object Uint8ClampedArray]",
          C = "[object Uint16Array]",
          P = "[object Uint32Array]";e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        var t = new e.constructor(e.byteLength);return new o(t).set(new o(e)), t;
      }var o = n(115);e.exports = r;
    }, function (e, t, n) {
      var r = n(8),
          o = r.Uint8Array;e.exports = o;
    }, function (e, t, n) {
      function r(e, t) {
        var n = t ? o(e.buffer) : e.buffer;return new e.constructor(n, e.byteOffset, e.byteLength);
      }var o = n(114);e.exports = r;
    }, function (e, t, n) {
      function r(e, t, n) {
        var r = t ? n(a(e), s) : a(e);return i(r, o, new e.constructor());
      }var o = n(118),
          i = n(119),
          a = n(120),
          s = 1;e.exports = r;
    }, function (e, t) {
      function n(e, t) {
        return e.set(t[0], t[1]), e;
      }e.exports = n;
    }, function (e, t) {
      function n(e, t, n, r) {
        var o = -1,
            i = null == e ? 0 : e.length;for (r && i && (n = e[++o]); ++o < i;) n = t(n, e[o], o, e);return n;
      }e.exports = n;
    }, function (e, t) {
      function n(e) {
        var t = -1,
            n = Array(e.size);return e.forEach(function (e, r) {
          n[++t] = [r, e];
        }), n;
      }e.exports = n;
    }, function (e, t) {
      function n(e) {
        var t = new e.constructor(e.source, r.exec(e));return t.lastIndex = e.lastIndex, t;
      }var r = /\w*$/;e.exports = n;
    }, function (e, t, n) {
      function r(e, t, n) {
        var r = t ? n(a(e), s) : a(e);return i(r, o, new e.constructor());
      }var o = n(123),
          i = n(119),
          a = n(124),
          s = 1;e.exports = r;
    }, function (e, t) {
      function n(e, t) {
        return e.add(t), e;
      }e.exports = n;
    }, function (e, t) {
      function n(e) {
        var t = -1,
            n = Array(e.size);return e.forEach(function (e) {
          n[++t] = e;
        }), n;
      }e.exports = n;
    }, function (e, t, n) {
      function r(e) {
        return a ? Object(a.call(e)) : {};
      }var o = n(7),
          i = o ? o.prototype : void 0,
          a = i ? i.valueOf : void 0;e.exports = r;
    }, function (e, t, n) {
      function r(e, t) {
        var n = t ? o(e.buffer) : e.buffer;return new e.constructor(n, e.byteOffset, e.length);
      }var o = n(114);e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        return "function" != typeof e.constructor || a(e) ? {} : o(i(e));
      }var o = n(128),
          i = n(103),
          a = n(39);e.exports = r;
    }, function (e, t, n) {
      var r = n(16),
          o = Object.create,
          i = function () {
        function e() {}return function (t) {
          if (!r(t)) return {};if (o) return o(t);e.prototype = t;var n = new e();return e.prototype = void 0, n;
        };
      }();e.exports = i;
    }, function (e, t, n) {
      function r(e, t, n) {
        return null == e ? e : o(e, t, n);
      }var o = n(130);e.exports = r;
    }, function (e, t, n) {
      function r(e, t, n, r) {
        if (!s(e)) return e;t = i(t, e);for (var c = -1, l = t.length, f = l - 1, d = e; null != d && ++c < l;) {
          var p = u(t[c]),
              h = n;if (c != f) {
            var m = d[p];h = r ? r(m, p, d) : void 0, void 0 === h && (h = s(m) ? m : a(t[c + 1]) ? [] : {});
          }o(d, p, h), d = d[p];
        }return e;
      }var o = n(85),
          i = n(131),
          a = n(32),
          s = n(16),
          u = n(140);e.exports = r;
    }, function (e, t, n) {
      function r(e, t) {
        return o(e) ? e : i(e, t) ? [e] : a(s(e));
      }var o = n(12),
          i = n(132),
          a = n(134),
          s = n(137);e.exports = r;
    }, function (e, t, n) {
      function r(e, t) {
        if (o(e)) return !1;var n = typeof e;return !("number" != n && "symbol" != n && "boolean" != n && null != e && !i(e)) || s.test(e) || !a.test(e) || null != t && e in Object(t);
      }var o = n(12),
          i = n(133),
          a = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
          s = /^\w*$/;e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        return "symbol" == typeof e || i(e) && o(e) == a;
      }var o = n(6),
          i = n(13),
          a = "[object Symbol]";e.exports = r;
    }, function (e, t, n) {
      var r = n(135),
          o = /^\./,
          i = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
          a = /\\(\\)?/g,
          s = r(function (e) {
        var t = [];return o.test(e) && t.push(""), e.replace(i, function (e, n, r, o) {
          t.push(r ? o.replace(a, "$1") : n || e);
        }), t;
      });e.exports = s;
    }, function (e, t, n) {
      function r(e) {
        var t = o(e, function (e) {
          return n.size === i && n.clear(), e;
        }),
            n = t.cache;return t;
      }var o = n(136),
          i = 500;e.exports = r;
    }, function (e, t, n) {
      function r(e, t) {
        if ("function" != typeof e || null != t && "function" != typeof t) throw new TypeError(i);var n = function () {
          var r = arguments,
              o = t ? t.apply(this, r) : r[0],
              i = n.cache;if (i.has(o)) return i.get(o);var a = e.apply(this, r);return n.cache = i.set(o, a) || i, a;
        };return n.cache = new (r.Cache || o)(), n;
      }var o = n(70),
          i = "Expected a function";r.Cache = o, e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        return null == e ? "" : o(e);
      }var o = n(138);e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        if ("string" == typeof e) return e;if (a(e)) return i(e, r) + "";if (s(e)) return l ? l.call(e) : "";var t = e + "";return "0" == t && 1 / e == -u ? "-0" : t;
      }var o = n(7),
          i = n(139),
          a = n(12),
          s = n(133),
          u = 1 / 0,
          c = o ? o.prototype : void 0,
          l = c ? c.toString : void 0;e.exports = r;
    }, function (e, t) {
      function n(e, t) {
        for (var n = -1, r = null == e ? 0 : e.length, o = Array(r); ++n < r;) o[n] = t(e[n], n, e);return o;
      }e.exports = n;
    }, function (e, t, n) {
      function r(e) {
        if ("string" == typeof e || o(e)) return e;var t = e + "";return "0" == t && 1 / e == -i ? "-0" : t;
      }var o = n(133),
          i = 1 / 0;e.exports = r;
    }, function (e, t, n) {
      function r(e, t, n) {
        var r = null == e ? void 0 : o(e, t);return void 0 === r ? n : r;
      }var o = n(142);e.exports = r;
    }, function (e, t, n) {
      function r(e, t) {
        t = o(t, e);for (var n = 0, r = t.length; null != e && n < r;) e = e[i(t[n++])];return n && n == r ? e : void 0;
      }var o = n(131),
          i = n(140);e.exports = r;
    }, function (e, t, n) {
      function r(e) {
        return n(o(e));
      }function o(e) {
        return i[e] || function () {
          throw new Error("Cannot find module '" + e + "'.");
        }();
      }var i = { "./fieldCheckbox.vue": 144, "./fieldChecklist.vue": 199, "./fieldInput.vue": 204, "./fieldLabel.vue": 208, "./fieldRadios.vue": 212, "./fieldSelect.vue": 216, "./fieldSubmit.vue": 220, "./fieldTextArea.vue": 224 };r.keys = function () {
        return Object.keys(i);
      }, r.resolve = o, e.exports = r, r.id = 143;
    }, function (e, t, n) {
      n(145);var r = n(3)(n(146), n(198), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(147),
          i = r(o);t.default = { mixins: [i.default] };
    }, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }function o(e) {
        return (0, u.default)(e) ? null != v.default[e] ? v.default[e] : (console.warn("'" + e + "' is not a validator function!"), null) : e;
      }Object.defineProperty(t, "__esModule", { value: !0 });var i = n(12),
          a = r(i),
          s = n(5),
          u = r(s),
          c = n(15),
          l = r(c),
          f = n(17),
          d = r(f),
          p = n(141),
          h = r(p),
          m = n(148),
          v = r(m),
          y = n(46);t.default = { props: ["model", "schema", "formOptions", "disabled"], data: function () {
          return { errors: [] };
        }, computed: { value: { cache: !1, get: function () {
              var e = void 0;return (0, l.default)(this.schema.get) ? e = this.schema.get(this.model) : this.model && this.schema.model && (e = (0, h.default)(this.model, this.schema.model)), (0, l.default)(this.formatValueToField) && (e = this.formatValueToField(e)), e;
            }, set: function (e) {
              var t = this.value;(0, l.default)(this.formatValueToModel) && (e = this.formatValueToModel(e));var n = !1;(0, l.default)(this.schema.set) ? (this.schema.set(this.model, e), n = !0) : this.schema.model && (this.setModelValueByPath(this.schema.model, e), n = !0), n && (this.$emit("model-updated", e, this.schema.model), (0, l.default)(this.schema.onChanged) && this.schema.onChanged.call(this, this.model, e, t, this.schema), this.$parent.options && this.$parent.options.validateAfterChanged === !0 && this.validate());
            } } }, methods: { validate: function (e) {
            var t = this;if (this.clearValidationErrors(), this.schema.validator && this.schema.readonly !== !0 && this.disabled !== !0) {
              var n = [];(0, a.default)(this.schema.validator) ? (0, d.default)(this.schema.validator, function (e) {
                n.push(o(e).bind(t));
              }) : n.push(o(this.schema.validator).bind(this)), (0, d.default)(n, function (e) {
                var n = function (e) {
                  (0, a.default)(e) ? Array.prototype.push.apply(t.errors, e) : (0, u.default)(e) && t.errors.push(e);
                },
                    r = e(t.value, t.schema, t.model);r && (0, l.default)(r.then) ? r.then(function (e) {
                  if (e) {
                    n(e);var r = 0 == t.errors.length;t.$emit("validated", r, t.errors, t);
                  }
                }) : r && n(r);
              });
            }(0, l.default)(this.schema.onValidated) && this.schema.onValidated.call(this, this.model, this.errors, this.schema);var r = 0 == this.errors.length;return e || this.$emit("validated", r, this.errors, this), this.errors;
          }, clearValidationErrors: function () {
            this.errors.splice(0);
          }, setModelValueByPath: function (e, t) {
            var n = e.replace(/\[(\w+)\]/g, ".$1");n = n.replace(/^\./, "");for (var r = this.model, o = n.split("."), i = 0, a = o.length; i < a;) {
              var s = o[i];if (!(i < a - 1)) return void this.$root.$set(r, s, t);void 0 !== r[s] ? r = r[s] : (this.$root.$set(r, s, {}), r = r[s]), ++i;
            }
          }, getFieldID: function (e) {
            var t = this.formOptions && this.formOptions.fieldIdPrefix ? this.formOptions.fieldIdPrefix : "";return (0, y.slugifyFormID)(e, t);
          } } };
    }, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }function o(e, t) {
        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : w;return (0, y.default)(e) || "" === e ? t ? [i(n.fieldIsRequired)] : [] : null;
      }function i(e) {
        if (null != e && arguments.length > 1) for (var t = 1; t < arguments.length; t++) e = e.replace("{" + (t - 1) + "}", arguments[t]);return e;
      }var a = n(149),
          s = r(a),
          u = n(15),
          c = r(u),
          l = n(12),
          f = r(l),
          d = n(5),
          p = r(d),
          h = n(184),
          m = r(h),
          v = n(14),
          y = r(v),
          b = n(185),
          g = r(b),
          x = n(197),
          _ = r(x),
          w = { fieldIsRequired: "This field is required!", invalidFormat: "Invalid format!", numberTooSmall: "The number is too small! Minimum: {0}", numberTooBig: "The number is too big! Maximum: {0}", invalidNumber: "Invalid number", textTooSmall: "The length of text is too small! Current: {0}, Minimum: {1}", textTooBig: "The length of text is too big! Current: {0}, Maximum: {1}", thisNotText: "This is not a text!",
        thisNotArray: "This is not an array!", selectMinItems: "Select minimum {0} items!", selectMaxItems: "Select maximum {0} items!", invalidDate: "Invalid date!", dateIsEarly: "The date is too early! Current: {0}, Minimum: {1}", dateIsLate: "The date is too late! Current: {0}, Maximum: {1}", invalidEmail: "Invalid e-mail address!", invalidURL: "Invalid URL!", invalidCard: "Invalid card format!", invalidCardNumber: "Invalid card number!", invalidTextContainNumber: "Invalid text! Cannot contains numbers or special characters", invalidTextContainSpec: "Invalid text! Cannot contains special characters" };e.exports = { resources: w, required: function (e, t, n) {
          var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : w;return o(e, t.required, r);
        }, number: function (e, t, n) {
          var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : w,
              a = o(e, t.required, r);if (null != a) return a;var s = [];return (0, m.default)(e) ? (!(0, y.default)(t.min) && e < t.min && s.push(i(r.numberTooSmall, t.min)), !(0, y.default)(t.max) && e > t.max && s.push(i(r.numberTooBig, t.max))) : s.push(i(r.invalidNumber)), s;
        }, integer: function (e, t, n) {
          var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : w,
              a = o(e, t.required, r);return null != a ? a : Number(e) !== e || e % 1 !== 0 ? [i(r.invalidNumber)] : void 0;
        }, double: function (e, t, n) {
          var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : w,
              a = o(e, t.required, r);return null != a ? a : !(0, m.default)(e) || isNaN(e) ? [i(r.invalidNumber)] : void 0;
        }, string: function (e, t, n) {
          var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : w,
              a = o(e, t.required, r);if (null != a) return a;var s = [];return (0, p.default)(e) ? (!(0, y.default)(t.min) && e.length < t.min && s.push(i(r.textTooSmall, e.length, t.min)), !(0, y.default)(t.max) && e.length > t.max && s.push(i(r.textTooBig, e.length, t.max))) : s.push(i(r.thisNotText)), s;
        }, array: function (e, t, n) {
          var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : w;if (t.required) {
            if (!(0, f.default)(e)) return [i(r.thisNotArray)];if (0 == e.length) return [i(r.fieldIsRequired)];
          }if (!(0, y.default)(e)) {
            if (!(0, y.default)(t.min) && e.length < t.min) return [i(r.selectMinItems, t.min)];if (!(0, y.default)(t.max) && e.length > t.max) return [i(r.selectMaxItems, t.max)];
          }
        }, date: function (e, t, n) {
          var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : w,
              a = o(e, t.required, r);if (null != a) return a;var s = new Date(e);if (!s) return [i(r.invalidDate)];var u = [];if (!(0, y.default)(t.min)) {
            var c = new Date(t.min);s.valueOf() < c.valueOf() && u.push(i(r.dateIsEarly, _.default.format(s), _.default.format(c)));
          }if (!(0, y.default)(t.max)) {
            var l = new Date(t.max);s.valueOf() > l.valueOf() && u.push(i(r.dateIsLate, _.default.format(s), _.default.format(l)));
          }return u;
        }, regexp: function (e, t, n) {
          var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : w,
              a = o(e, t.required, r);if (null != a) return a;if (!(0, y.default)(t.pattern)) {
            var s = new RegExp(t.pattern);if (!s.test(e)) return [i(r.invalidFormat)];
          }
        }, email: function (e, t, n) {
          var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : w,
              a = o(e, t.required, r);if (null != a) return a;var s = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return s.test(e) ? void 0 : [i(r.invalidEmail)];
        }, url: function (e, t, n) {
          var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : w,
              a = o(e, t.required, r);if (null != a) return a;var s = /https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,4}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)/g;return s.test(e) ? void 0 : [i(r.invalidURL)];
        }, creditCard: function e(t, n, r) {
          var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : w,
              s = o(t, n.required, a);if (null != s) return s;var e = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$/,
              u = t.replace(/[^0-9]+/g, "");if (!e.test(u)) return [i(a.invalidCard)];for (var c = 0, l = void 0, f = void 0, d = void 0, p = u.length - 1; p >= 0; p--) l = u.substring(p, p + 1), f = parseInt(l, 10), d ? (f *= 2, c += f >= 10 ? f % 10 + 1 : f) : c += f, d = !d;return c % 10 === 0 && u ? void 0 : [i(a.invalidCardNumber)];
        }, alpha: function (e, t, n) {
          var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : w,
              a = o(e, t.required, r);if (null != a) return a;var s = /^[a-zA-Z]*$/;return s.test(e) ? void 0 : [i(r.invalidTextContainNumber)];
        }, alphaNumeric: function (e, t, n) {
          var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : w,
              a = o(e, t.required, r);if (null != a) return a;var s = /^[a-zA-Z0-9]*$/;return s.test(e) ? void 0 : [i(r.invalidTextContainSpec)];
        } }, (0, s.default)(e.exports).forEach(function (t) {
        var n = e.exports[t];(0, c.default)(n) && (n.locale = function (e) {
          return function (t, r, o) {
            return n(t, r, o, (0, g.default)(e, w));
          };
        });
      });
    }, function (e, t, n) {
      e.exports = { default: n(150), __esModule: !0 };
    }, function (e, t, n) {
      n(151), e.exports = n(171).Object.keys;
    }, function (e, t, n) {
      var r = n(152),
          o = n(154);n(169)("keys", function () {
        return function (e) {
          return o(r(e));
        };
      });
    }, function (e, t, n) {
      var r = n(153);e.exports = function (e) {
        return Object(r(e));
      };
    }, function (e, t) {
      e.exports = function (e) {
        if (void 0 == e) throw TypeError("Can't call method on  " + e);return e;
      };
    }, function (e, t, n) {
      var r = n(155),
          o = n(168);e.exports = Object.keys || function (e) {
        return r(e, o);
      };
    }, function (e, t, n) {
      var r = n(156),
          o = n(157),
          i = n(160)(!1),
          a = n(164)("IE_PROTO");e.exports = function (e, t) {
        var n,
            s = o(e),
            u = 0,
            c = [];for (n in s) n != a && r(s, n) && c.push(n);for (; t.length > u;) r(s, n = t[u++]) && (~i(c, n) || c.push(n));return c;
      };
    }, function (e, t) {
      var n = {}.hasOwnProperty;e.exports = function (e, t) {
        return n.call(e, t);
      };
    }, function (e, t, n) {
      var r = n(158),
          o = n(153);e.exports = function (e) {
        return r(o(e));
      };
    }, function (e, t, n) {
      var r = n(159);e.exports = Object("z").propertyIsEnumerable(0) ? Object : function (e) {
        return "String" == r(e) ? e.split("") : Object(e);
      };
    }, function (e, t) {
      var n = {}.toString;e.exports = function (e) {
        return n.call(e).slice(8, -1);
      };
    }, function (e, t, n) {
      var r = n(157),
          o = n(161),
          i = n(163);e.exports = function (e) {
        return function (t, n, a) {
          var s,
              u = r(t),
              c = o(u.length),
              l = i(a, c);if (e && n != n) {
            for (; c > l;) if (s = u[l++], s != s) return !0;
          } else for (; c > l; l++) if ((e || l in u) && u[l] === n) return e || l || 0;return !e && -1;
        };
      };
    }, function (e, t, n) {
      var r = n(162),
          o = Math.min;e.exports = function (e) {
        return e > 0 ? o(r(e), 9007199254740991) : 0;
      };
    }, function (e, t) {
      var n = Math.ceil,
          r = Math.floor;e.exports = function (e) {
        return isNaN(e = +e) ? 0 : (e > 0 ? r : n)(e);
      };
    }, function (e, t, n) {
      var r = n(162),
          o = Math.max,
          i = Math.min;e.exports = function (e, t) {
        return e = r(e), e < 0 ? o(e + t, 0) : i(e, t);
      };
    }, function (e, t, n) {
      var r = n(165)("keys"),
          o = n(167);e.exports = function (e) {
        return r[e] || (r[e] = o(e));
      };
    }, function (e, t, n) {
      var r = n(166),
          o = "__core-js_shared__",
          i = r[o] || (r[o] = {});e.exports = function (e) {
        return i[e] || (i[e] = {});
      };
    }, function (e, t) {
      var n = e.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();"number" == typeof __g && (__g = n);
    }, function (e, t) {
      var n = 0,
          r = Math.random();e.exports = function (e) {
        return "Symbol(".concat(void 0 === e ? "" : e, ")_", (++n + r).toString(36));
      };
    }, function (e, t) {
      e.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
    }, function (e, t, n) {
      var r = n(170),
          o = n(171),
          i = n(180);e.exports = function (e, t) {
        var n = (o.Object || {})[e] || Object[e],
            a = {};a[e] = t(n), r(r.S + r.F * i(function () {
          n(1);
        }), "Object", a);
      };
    }, function (e, t, n) {
      var r = n(166),
          o = n(171),
          i = n(172),
          a = n(174),
          s = "prototype",
          u = function (e, t, n) {
        var c,
            l,
            f,
            d = e & u.F,
            p = e & u.G,
            h = e & u.S,
            m = e & u.P,
            v = e & u.B,
            y = e & u.W,
            b = p ? o : o[t] || (o[t] = {}),
            g = b[s],
            x = p ? r : h ? r[t] : (r[t] || {})[s];p && (n = t);for (c in n) l = !d && x && void 0 !== x[c], l && c in b || (f = l ? x[c] : n[c], b[c] = p && "function" != typeof x[c] ? n[c] : v && l ? i(f, r) : y && x[c] == f ? function (e) {
          var t = function (t, n, r) {
            if (this instanceof e) {
              switch (arguments.length) {case 0:
                  return new e();case 1:
                  return new e(t);case 2:
                  return new e(t, n);}return new e(t, n, r);
            }return e.apply(this, arguments);
          };return t[s] = e[s], t;
        }(f) : m && "function" == typeof f ? i(Function.call, f) : f, m && ((b.virtual || (b.virtual = {}))[c] = f, e & u.R && g && !g[c] && a(g, c, f)));
      };u.F = 1, u.G = 2, u.S = 4, u.P = 8, u.B = 16, u.W = 32, u.U = 64, u.R = 128, e.exports = u;
    }, function (e, t) {
      var n = e.exports = { version: "2.4.0" };"number" == typeof __e && (__e = n);
    }, function (e, t, n) {
      var r = n(173);e.exports = function (e, t, n) {
        if (r(e), void 0 === t) return e;switch (n) {case 1:
            return function (n) {
              return e.call(t, n);
            };case 2:
            return function (n, r) {
              return e.call(t, n, r);
            };case 3:
            return function (n, r, o) {
              return e.call(t, n, r, o);
            };}return function () {
          return e.apply(t, arguments);
        };
      };
    }, function (e, t) {
      e.exports = function (e) {
        if ("function" != typeof e) throw TypeError(e + " is not a function!");return e;
      };
    }, function (e, t, n) {
      var r = n(175),
          o = n(183);e.exports = n(179) ? function (e, t, n) {
        return r.f(e, t, o(1, n));
      } : function (e, t, n) {
        return e[t] = n, e;
      };
    }, function (e, t, n) {
      var r = n(176),
          o = n(178),
          i = n(182),
          a = Object.defineProperty;t.f = n(179) ? Object.defineProperty : function (e, t, n) {
        if (r(e), t = i(t, !0), r(n), o) try {
          return a(e, t, n);
        } catch (e) {}if ("get" in n || "set" in n) throw TypeError("Accessors not supported!");return "value" in n && (e[t] = n.value), e;
      };
    }, function (e, t, n) {
      var r = n(177);e.exports = function (e) {
        if (!r(e)) throw TypeError(e + " is not an object!");return e;
      };
    }, function (e, t) {
      e.exports = function (e) {
        return "object" == typeof e ? null !== e : "function" == typeof e;
      };
    }, function (e, t, n) {
      e.exports = !n(179) && !n(180)(function () {
        return 7 != Object.defineProperty(n(181)("div"), "a", { get: function () {
            return 7;
          } }).a;
      });
    }, function (e, t, n) {
      e.exports = !n(180)(function () {
        return 7 != Object.defineProperty({}, "a", { get: function () {
            return 7;
          } }).a;
      });
    }, function (e, t) {
      e.exports = function (e) {
        try {
          return !!e();
        } catch (e) {
          return !0;
        }
      };
    }, function (e, t, n) {
      var r = n(177),
          o = n(166).document,
          i = r(o) && r(o.createElement);e.exports = function (e) {
        return i ? o.createElement(e) : {};
      };
    }, function (e, t, n) {
      var r = n(177);e.exports = function (e, t) {
        if (!r(e)) return e;var n, o;if (t && "function" == typeof (n = e.toString) && !r(o = n.call(e))) return o;if ("function" == typeof (n = e.valueOf) && !r(o = n.call(e))) return o;if (!t && "function" == typeof (n = e.toString) && !r(o = n.call(e))) return o;throw TypeError("Can't convert object to primitive value");
      };
    }, function (e, t) {
      e.exports = function (e, t) {
        return { enumerable: !(1 & e), configurable: !(2 & e), writable: !(4 & e), value: t };
      };
    }, function (e, t, n) {
      function r(e) {
        return "number" == typeof e || i(e) && o(e) == a;
      }var o = n(6),
          i = n(13),
          a = "[object Number]";e.exports = r;
    }, function (e, t, n) {
      var r = n(186),
          o = n(187),
          i = n(189),
          a = n(196),
          s = i(function (e) {
        return e.push(void 0, a), r(o, void 0, e);
      });e.exports = s;
    }, function (e, t) {
      function n(e, t, n) {
        switch (n.length) {case 0:
            return e.call(t);case 1:
            return e.call(t, n[0]);case 2:
            return e.call(t, n[0], n[1]);case 3:
            return e.call(t, n[0], n[1], n[2]);}return e.apply(t, n);
      }e.exports = n;
    }, function (e, t, n) {
      var r = n(89),
          o = n(188),
          i = n(91),
          a = o(function (e, t, n, o) {
        r(t, i(t), e, o);
      });e.exports = a;
    }, function (e, t, n) {
      function r(e) {
        return o(function (t, n) {
          var r = -1,
              o = n.length,
              a = o > 1 ? n[o - 1] : void 0,
              s = o > 2 ? n[2] : void 0;for (a = e.length > 3 && "function" == typeof a ? (o--, a) : void 0, s && i(n[0], n[1], s) && (a = o < 3 ? void 0 : a, o = 1), t = Object(t); ++r < o;) {
            var u = n[r];u && e(t, u, r, a);
          }return t;
        });
      }var o = n(189),
          i = n(195);e.exports = r;
    }, function (e, t, n) {
      function r(e, t) {
        return a(i(e, t, o), e + "");
      }var o = n(45),
          i = n(190),
          a = n(191);e.exports = r;
    }, function (e, t, n) {
      function r(e, t, n) {
        return t = i(void 0 === t ? e.length - 1 : t, 0), function () {
          for (var r = arguments, a = -1, s = i(r.length - t, 0), u = Array(s); ++a < s;) u[a] = r[t + a];a = -1;for (var c = Array(t + 1); ++a < t;) c[a] = r[a];return c[t] = n(u), o(e, this, c);
        };
      }var o = n(186),
          i = Math.max;e.exports = r;
    }, function (e, t, n) {
      var r = n(192),
          o = n(194),
          i = o(r);e.exports = i;
    }, function (e, t, n) {
      var r = n(193),
          o = n(87),
          i = n(45),
          a = o ? function (e, t) {
        return o(e, "toString", { configurable: !0, enumerable: !1, value: r(t), writable: !0 });
      } : i;e.exports = a;
    }, function (e, t) {
      function n(e) {
        return function () {
          return e;
        };
      }e.exports = n;
    }, function (e, t) {
      function n(e) {
        var t = 0,
            n = 0;return function () {
          var a = i(),
              s = o - (a - n);if (n = a, s > 0) {
            if (++t >= r) return arguments[0];
          } else t = 0;return e.apply(void 0, arguments);
        };
      }var r = 800,
          o = 16,
          i = Date.now;e.exports = n;
    }, function (e, t, n) {
      function r(e, t, n) {
        if (!s(n)) return !1;var r = typeof t;return !!("number" == r ? i(n) && a(t, n.length) : "string" == r && t in n) && o(n[t], e);
      }var o = n(54),
          i = n(42),
          a = n(32),
          s = n(16);e.exports = r;
    }, function (e, t, n) {
      function r(e, t, n, r) {
        return void 0 === e || o(e, i[n]) && !a.call(r, n) ? t : e;
      }var o = n(54),
          i = Object.prototype,
          a = i.hasOwnProperty;e.exports = r;
    }, function (e, t, n) {
      var r;!function (o) {
        "use strict";
        function i(e, t) {
          for (var n = [], r = 0, o = e.length; r < o; r++) n.push(e[r].substr(0, t));return n;
        }function a(e) {
          return function (t, n, r) {
            var o = r[e].indexOf(n.charAt(0).toUpperCase() + n.substr(1).toLowerCase());~o && (t.month = o);
          };
        }function s(e, t) {
          for (e = String(e), t = t || 2; e.length < t;) e = "0" + e;return e;
        }var u = {},
            c = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\1?|[aA]|"[^"]*"|'[^']*'/g,
            l = /\d\d?/,
            f = /\d{3}/,
            d = /\d{4}/,
            p = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,
            h = /\[([^]*?)\]/gm,
            m = function () {},
            v = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            y = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            b = i(y, 3),
            g = i(v, 3);u.i18n = { dayNamesShort: g, dayNames: v, monthNamesShort: b, monthNames: y, amPm: ["am", "pm"], DoFn: function (e) {
            return e + ["th", "st", "nd", "rd"][e % 10 > 3 ? 0 : (e - e % 10 !== 10) * e % 10];
          } };var x = { D: function (e) {
            return e.getDate();
          }, DD: function (e) {
            return s(e.getDate());
          }, Do: function (e, t) {
            return t.DoFn(e.getDate());
          }, d: function (e) {
            return e.getDay();
          }, dd: function (e) {
            return s(e.getDay());
          }, ddd: function (e, t) {
            return t.dayNamesShort[e.getDay()];
          }, dddd: function (e, t) {
            return t.dayNames[e.getDay()];
          }, M: function (e) {
            return e.getMonth() + 1;
          }, MM: function (e) {
            return s(e.getMonth() + 1);
          }, MMM: function (e, t) {
            return t.monthNamesShort[e.getMonth()];
          }, MMMM: function (e, t) {
            return t.monthNames[e.getMonth()];
          }, YY: function (e) {
            return String(e.getFullYear()).substr(2);
          }, YYYY: function (e) {
            return e.getFullYear();
          }, h: function (e) {
            return e.getHours() % 12 || 12;
          }, hh: function (e) {
            return s(e.getHours() % 12 || 12);
          }, H: function (e) {
            return e.getHours();
          }, HH: function (e) {
            return s(e.getHours());
          }, m: function (e) {
            return e.getMinutes();
          }, mm: function (e) {
            return s(e.getMinutes());
          }, s: function (e) {
            return e.getSeconds();
          }, ss: function (e) {
            return s(e.getSeconds());
          }, S: function (e) {
            return Math.round(e.getMilliseconds() / 100);
          }, SS: function (e) {
            return s(Math.round(e.getMilliseconds() / 10), 2);
          }, SSS: function (e) {
            return s(e.getMilliseconds(), 3);
          }, a: function (e, t) {
            return e.getHours() < 12 ? t.amPm[0] : t.amPm[1];
          }, A: function (e, t) {
            return e.getHours() < 12 ? t.amPm[0].toUpperCase() : t.amPm[1].toUpperCase();
          }, ZZ: function (e) {
            var t = e.getTimezoneOffset();return (t > 0 ? "-" : "+") + s(100 * Math.floor(Math.abs(t) / 60) + Math.abs(t) % 60, 4);
          } },
            _ = { D: [l, function (e, t) {
            e.day = t;
          }], Do: [new RegExp(l.source + p.source), function (e, t) {
            e.day = parseInt(t, 10);
          }], M: [l, function (e, t) {
            e.month = t - 1;
          }], YY: [l, function (e, t) {
            var n = new Date(),
                r = +("" + n.getFullYear()).substr(0, 2);e.year = "" + (t > 68 ? r - 1 : r) + t;
          }], h: [l, function (e, t) {
            e.hour = t;
          }], m: [l, function (e, t) {
            e.minute = t;
          }], s: [l, function (e, t) {
            e.second = t;
          }], YYYY: [d, function (e, t) {
            e.year = t;
          }], S: [/\d/, function (e, t) {
            e.millisecond = 100 * t;
          }], SS: [/\d{2}/, function (e, t) {
            e.millisecond = 10 * t;
          }], SSS: [f, function (e, t) {
            e.millisecond = t;
          }], d: [l, m], ddd: [p, m], MMM: [p, a("monthNamesShort")], MMMM: [p, a("monthNames")], a: [p, function (e, t, n) {
            var r = t.toLowerCase();r === n.amPm[0] ? e.isPm = !1 : r === n.amPm[1] && (e.isPm = !0);
          }], ZZ: [/[\+\-]\d\d:?\d\d/, function (e, t) {
            var n,
                r = (t + "").match(/([\+\-]|\d\d)/gi);r && (n = +(60 * r[1]) + parseInt(r[2], 10), e.timezoneOffset = "+" === r[0] ? n : -n);
          }] };_.dd = _.d, _.dddd = _.ddd, _.DD = _.D, _.mm = _.m, _.hh = _.H = _.HH = _.h, _.MM = _.M, _.ss = _.s, _.A = _.a, u.masks = { default: "ddd MMM DD YYYY HH:mm:ss", shortDate: "M/D/YY", mediumDate: "MMM D, YYYY", longDate: "MMMM D, YYYY", fullDate: "dddd, MMMM D, YYYY", shortTime: "HH:mm", mediumTime: "HH:mm:ss", longTime: "HH:mm:ss.SSS" }, u.format = function (e, t, n) {
          var r = n || u.i18n;if ("number" == typeof e && (e = new Date(e)), "[object Date]" !== Object.prototype.toString.call(e) || isNaN(e.getTime())) throw new Error("Invalid Date in fecha.format");t = u.masks[t] || t || u.masks.default;var o = [];return t = t.replace(h, function (e, t) {
            return o.push(t), "??";
          }), t = t.replace(c, function (t) {
            return t in x ? x[t](e, r) : t.slice(1, t.length - 1);
          }), t.replace(/\?\?/g, function () {
            return o.shift();
          });
        }, u.parse = function (e, t, n) {
          var r = n || u.i18n;if ("string" != typeof t) throw new Error("Invalid format in fecha.parse");if (t = u.masks[t] || t, e.length > 1e3) return !1;var o = !0,
              i = {};if (t.replace(c, function (t) {
            if (_[t]) {
              var n = _[t],
                  a = e.search(n[0]);~a ? e.replace(n[0], function (t) {
                return n[1](i, t, r), e = e.substr(a + t.length), t;
              }) : o = !1;
            }return _[t] ? "" : t.slice(1, t.length - 1);
          }), !o) return !1;var a = new Date();i.isPm === !0 && null != i.hour && 12 !== +i.hour ? i.hour = +i.hour + 12 : i.isPm === !1 && 12 === +i.hour && (i.hour = 0);var s;return null != i.timezoneOffset ? (i.minute = +(i.minute || 0) - +i.timezoneOffset, s = new Date(Date.UTC(i.year || a.getFullYear(), i.month || 0, i.day || 1, i.hour || 0, i.minute || 0, i.second || 0, i.millisecond || 0))) : s = new Date(i.year || a.getFullYear(), i.month || 0, i.day || 1, i.hour || 0, i.minute || 0, i.second || 0, i.millisecond || 0), s;
        }, "undefined" != typeof e && e.exports ? e.exports = u : (r = function () {
          return u;
        }.call(t, n, t, e), !(void 0 !== r && (e.exports = r)));
      }(this);
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("input", { directives: [{ name: "model", rawName: "v-model", value: e.value, expression: "value" }], attrs: { type: "checkbox", autocomplete: e.schema.autocomplete, disabled: e.disabled, name: e.schema.inputName }, domProps: { checked: Array.isArray(e.value) ? e._i(e.value, null) > -1 : e.value }, on: { click: function (t) {
                var n = e.value,
                    r = t.target,
                    o = !!r.checked;if (Array.isArray(n)) {
                  var i = null,
                      a = e._i(n, i);o ? a < 0 && (e.value = n.concat(i)) : a > -1 && (e.value = n.slice(0, a).concat(n.slice(a + 1)));
                } else e.value = o;
              } } });
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      n(200);var r = n(3)(n(201), n(203), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(202),
          i = r(o),
          a = n(14),
          s = r(a),
          u = n(16),
          c = r(u),
          l = n(147),
          f = r(l);t.default = { mixins: [f.default], data: function () {
          return { comboExpanded: !1 };
        }, computed: { items: function () {
            var e = this.schema.values;return "function" == typeof e ? e.apply(this, [this.model, this.schema]) : e;
          }, selectedCount: function () {
            return this.value ? this.value.length : 0;
          } }, methods: { getItemValue: function (e) {
            if ((0, c.default)(e)) {
              if ("undefined" != typeof this.schema.checklistOptions && "undefined" != typeof this.schema.checklistOptions.value) return e[this.schema.checklistOptions.value];if ("undefined" != typeof e.value) return e.value;throw "value is not defined. If you want to use another key name, add a `value` property under `checklistOptions` in the schema. https://icebob.gitbooks.io/vueformgenerator/content/fields/checklist.html#checklist-field-with-object-values";
            }return e;
          }, getItemName: function (e) {
            if ((0, c.default)(e)) {
              if ("undefined" != typeof this.schema.checklistOptions && "undefined" != typeof this.schema.checklistOptions.name) return e[this.schema.checklistOptions.name];if ("undefined" != typeof e.name) return e.name;throw "name is not defined. If you want to use another key name, add a `name` property under `checklistOptions` in the schema. https://icebob.gitbooks.io/vueformgenerator/content/fields/checklist.html#checklist-field-with-object-values";
            }return e;
          }, isItemChecked: function (e) {
            return this.value && this.value.indexOf(this.getItemValue(e)) != -1;
          }, onChanged: function (e, t) {
            if (!(0, s.default)(this.value) && Array.isArray(this.value) || (this.value = []), e.target.checked) {
              var n = (0, i.default)(this.value);n.push(this.getItemValue(t)), this.value = n;
            } else {
              var r = (0, i.default)(this.value);r.splice(this.value.indexOf(this.getItemValue(t)), 1), this.value = r;
            }
          }, onExpandCombo: function () {
            this.comboExpanded = !this.comboExpanded;
          } } };
    }, function (e, t, n) {
      function r(e) {
        return o(e, i);
      }var o = n(48),
          i = 4;e.exports = r;
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("div", { staticClass: "wrapper" }, [e.schema.listBox ? n("div", { staticClass: "listbox form-control", attrs: { disabled: e.disabled } }, e._l(e.items, function (t) {
            return n("div", { staticClass: "list-row", class: { "is-checked": e.isItemChecked(t) } }, [n("label", [n("input", { attrs: { type: "checkbox", disabled: e.disabled }, domProps: { checked: e.isItemChecked(t) }, on: { change: function (n) {
                  e.onChanged(n, t);
                } } }), e._v(e._s(e.getItemName(t)))])]);
          })) : e._e(), e.schema.listBox ? e._e() : n("div", { staticClass: "combobox form-control", attrs: { disabled: e.disabled } }, [n("div", { staticClass: "mainRow", class: { expanded: e.comboExpanded }, on: { click: e.onExpandCombo } }, [n("div", { staticClass: "info" }, [e._v(e._s(e.selectedCount) + " selected")]), n("div", { staticClass: "arrow" })]), n("div", { staticClass: "dropList" }, e._l(e.items, function (t) {
            return e.comboExpanded ? n("div", { staticClass: "list-row", class: { "is-checked": e.isItemChecked(t) } }, [n("label", [n("input", { attrs: { type: "checkbox", disabled: e.disabled }, domProps: { checked: e.isItemChecked(t) }, on: { change: function (n) {
                  e.onChanged(n, t);
                } } }), e._v(e._s(e.getItemName(t)))])]) : e._e();
          }))])]);
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      n(205);var r = n(3)(n(206), n(207), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(147),
          i = r(o),
          a = n(197),
          s = r(a);t.default = { mixins: [i.default], methods: { onChange: function (e) {
            "file" === this.schema.inputType && (this.value = e.target.files);
          }, formatValueToField: function (e) {
            if (null != e) {
              var t = void 0;switch (this.schema.inputType) {case "date":
                  return t = this.schema.format ? s.default.parse(e, this.schema.format) : new Date(e), s.default.format(t, "YYYY-MM-DD");case "datetime":
                  return t = this.schema.format ? s.default.parse(e, this.schema.format) : new Date(e), s.default.format(t, "YYYY-MM-DD HH:mm:ss");case "datetime-local":
                  return t = this.schema.format ? s.default.parse(e, this.schema.format) : new Date(e), s.default.format(t, "YYYY-MM-DDTHH:mm:ss");}
            }return e;
          }, formatValueToModel: function (e) {
            if (null != e) {
              var t = void 0;switch (this.schema.inputType) {case "date":
                  t = s.default.parse(e, "YYYY-MM-DD"), t !== !1 && (e = this.schema.format ? s.default.format(t, this.schema.format) : t.valueOf());break;case "datetime":
                  t = s.default.parse(e, "YYYY-MM-DD HH:mm:ss"), t !== !1 && (e = this.schema.format ? s.default.format(t, this.schema.format) : t.valueOf());break;case "datetime-local":
                  t = s.default.parse(e, "YYYY-MM-DDTHH:mm:ss"), t !== !1 && (e = this.schema.format ? s.default.format(t, this.schema.format) : t.valueOf());break;case "number":
                  return Number(e);}
            }return e;
          } } };
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("div", { staticClass: "wrapper" }, [n("input", { staticClass: "form-control", attrs: { id: e.getFieldID(e.schema), type: e.schema.inputType, disabled: e.disabled, accept: e.schema.accept, alt: e.schema.alt, autocomplete: e.schema.autocomplete, dirname: e.schema.dirname, formaction: e.schema.formaction, formenctype: e.schema.formenctype, formmethod: e.schema.formmethod, formnovalidate: e.schema.formnovalidate, formtarget: e.schema.formtarget, height: e.schema.height, list: e.schema.list, max: e.schema.max, maxlength: e.schema.maxlength, min: e.schema.min, multiple: e.schema.multiple, name: e.schema.inputName, pattern: e.schema.pattern, placeholder: e.schema.placeholder, readonly: e.schema.readonly, required: e.schema.required, size: e.schema.size, src: e.schema.src, step: e.schema.step, width: e.schema.width, files: e.schema.files }, domProps: { value: e.value, checked: e.schema.checked }, on: { input: function (t) {
                e.value = t.target.value;
              }, change: e.onChange } }), "color" === e.schema.inputType || "range" === e.schema.inputType ? n("span", { staticClass: "helper" }, [e._v(e._s(e.value))]) : e._e()]);
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      n(209);var r = n(3)(n(210), n(211), null, null);e.exports = r.exports;
    }, 2, 146, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("span", { attrs: { id: e.getFieldID(e.schema) } }, [e._v(e._s(e.value))]);
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      n(213);var r = n(3)(n(214), n(215), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(16),
          i = r(o),
          a = n(147),
          s = r(a);t.default = { mixins: [s.default], computed: { items: function () {
            var e = this.schema.values;return "function" == typeof e ? e.apply(this, [this.model, this.schema]) : e;
          }, id: function () {
            return this.schema.model;
          } }, methods: { getItemValue: function (e) {
            if ((0, i.default)(e)) {
              if ("undefined" != typeof this.schema.radiosOptions && "undefined" != typeof this.schema.radiosOptions.value) return e[this.schema.radiosOptions.value];if ("undefined" != typeof e.value) return e.value;throw "value is not defined. If you want to use another key name, add a `value` property under `radiosOptions` in the schema. https://icebob.gitbooks.io/vueformgenerator/content/fields/radios.html#radios-field-with-object-values";
            }return e;
          }, getItemName: function (e) {
            if ((0, i.default)(e)) {
              if ("undefined" != typeof this.schema.radiosOptions && "undefined" != typeof this.schema.radiosOptions.name) return e[this.schema.radiosOptions.name];if ("undefined" != typeof e.name) return e.name;throw "name is not defined. If you want to use another key name, add a `name` property under `radiosOptions` in the schema. https://icebob.gitbooks.io/vueformgenerator/content/fields/radios.html#radios-field-with-object-values";
            }return e;
          }, onSelection: function (e) {
            this.value = this.getItemValue(e);
          }, isItemChecked: function (e) {
            var t = this.getItemValue(e);return t === this.value;
          } } };
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("div", { staticClass: "radio-list", attrs: { disabled: e.disabled } }, e._l(e.items, function (t) {
            return n("label", { class: { "is-checked": e.isItemChecked(t) } }, [n("input", { attrs: { type: "radio", disabled: e.disabled, name: e.id }, domProps: { value: e.getItemValue(t), checked: e.isItemChecked(t) }, on: { click: function (n) {
                  e.onSelection(t);
                } } }), e._v(e._s(e.getItemName(t)))]);
          }));
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      n(217);var r = n(3)(n(218), n(219), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(16),
          i = r(o),
          a = n(147),
          s = r(a);t.default = { mixins: [s.default], computed: { selectOptions: function () {
            return this.schema.selectOptions || {};
          }, items: function () {
            var e = this.schema.values;return "function" == typeof e ? e.apply(this, [this.model, this.schema]) : e;
          } }, methods: { getItemID: function (e) {
            return (0, i.default)(e) && e.id ? e.id : e;
          }, getItemName: function (e) {
            return (0, i.default)(e) && e.name ? e.name : e;
          } } };
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("select", { directives: [{ name: "model", rawName: "v-model", value: e.value, expression: "value" }], staticClass: "form-control", attrs: { disabled: e.disabled, name: e.schema.inputName, id: e.getFieldID(e.schema) }, on: { change: function (t) {
                e.value = Array.prototype.filter.call(t.target.options, function (e) {
                  return e.selected;
                }).map(function (e) {
                  var t = "_value" in e ? e._value : e.value;return t;
                })[0];
              } } }, [e.selectOptions.hideNoneSelectedText ? e._e() : n("option", { attrs: { disabled: e.schema.required }, domProps: { value: null, selected: void 0 == e.value } }, [e._v(e._s(e.selectOptions.noneSelectedText || "<Nothing selected>"))]), e._l(e.items, function (t) {
            return n("option", { domProps: { value: e.getItemID(t) } }, [e._v(e._s(e.getItemName(t)))]);
          })], 2);
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      n(221);var r = n(3)(n(222), n(223), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(15),
          i = r(o),
          a = n(147),
          s = r(a);t.default = { mixins: [s.default], methods: { click: function () {
            (this.schema.validateBeforeSubmit !== !0 || this.$parent.validate()) && (0, i.default)(this.schema.onSubmit) && this.schema.onSubmit(this.model, this.schema);
          } } };
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("input", { attrs: { type: "submit", name: e.schema.inputName, disabled: e.disabled }, domProps: { value: e.schema.buttonText }, on: { click: e.click } });
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      n(225);var r = n(3)(n(226), n(227), null, null);e.exports = r.exports;
    }, 2, 146, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("textarea", { directives: [{ name: "model", rawName: "v-model", value: e.value, expression: "value" }], staticClass: "form-control", attrs: { id: e.getFieldID(e.schema), disabled: e.disabled, maxlength: e.schema.max, minlength: e.schema.min, placeholder: e.schema.placeholder, readonly: e.schema.readonly, rows: e.schema.rows || 2, name: e.schema.inputName }, domProps: { value: e._s(e.value) }, on: { input: function (t) {
                t.target.composing || (e.value = t.target.value);
              } } });
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      function r(e) {
        return n(o(e));
      }function o(e) {
        return i[e] || function () {
          throw new Error("Cannot find module '" + e + "'.");
        }();
      }var i = { "./fieldCleave.vue": 229, "./fieldDateTimePicker.vue": 233, "./fieldGoogleAddress.vue": 245, "./fieldImage.vue": 249, "./fieldMasked.vue": 253, "./fieldNoUiSlider.vue": 257, "./fieldPikaday.vue": 261, "./fieldRangeSlider.vue": 265, "./fieldSelectEx.vue": 295, "./fieldSpectrum.vue": 299, "./fieldStaticMap.vue": 303, "./fieldSwitch.vue": 307, "./fieldVueMultiSelect.vue": 311 };r.keys = function () {
        return Object.keys(i);
      }, r.resolve = o, e.exports = r, r.id = 228;
    }, function (e, t, n) {
      n(230);var r = n(3)(n(231), n(232), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(185),
          i = r(o),
          a = n(147),
          s = r(a);t.default = { mixins: [s.default], data: function () {
          return { cleave: null };
        }, mounted: function () {
          this.$nextTick(function () {
            window.Cleave ? this.cleave = new window.Cleave(this.$el, (0, i.default)(this.schema.cleaveOptions || {}, { creditCard: !1, phone: !1, phoneRegionCode: "AU", date: !1, datePattern: ["d", "m", "Y"], numeral: !1, numeralThousandsGroupStyle: "thousand", numeralDecimalScale: 2, numeralDecimalMark: ".", blocks: [], delimiter: " ", prefix: null, numericOnly: !1, uppercase: !1, lowercase: !1 })) : console.warn("Cleave is missing. Please download from https://github.com/nosir/cleave.js/ and load the script in the HTML head section!");
          });
        }, beforeDestroy: function () {
          this.cleave && this.cleave.destroy();
        } };
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("input", { directives: [{ name: "model", rawName: "v-model", value: e.value, expression: "value" }], staticClass: "form-control", attrs: { type: "text", autocomplete: e.schema.autocomplete, disabled: e.disabled, placeholder: e.schema.placeholder, readonly: e.schema.readonly, name: e.schema.inputName, id: e.getFieldID(e.schema) }, domProps: { value: e._s(e.value) }, on: { input: function (t) {
                t.target.composing || (e.value = t.target.value);
              } } });
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      n(234);var r = n(3)(n(235), n(244), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(236),
          i = r(o),
          a = n(185),
          s = r(a),
          u = n(147),
          c = r(u),
          l = n(243),
          f = r(l),
          d = "YYYY-MM-DD HH:mm:ss";t.default = { mixins: [c.default], methods: (0, i.default)({ getDateFormat: function () {
            return this.schema.dateTimePickerOptions && this.schema.dateTimePickerOptions.format ? this.schema.dateTimePickerOptions.format : d;
          } }, f.default), mounted: function () {
          this.$nextTick(function () {
            var e = this;if (window.$ && window.$.fn.datetimepicker) {
              var t = this.$el.querySelector(".form-control");$(this.$el).datetimepicker((0, s.default)(this.schema.dateTimePickerOptions || {}, { format: d })).on("dp.change", function () {
                e.value = t.value;
              });
            } else console.warn("Bootstrap datetimepicker library is missing. Please download from https://eonasdan.github.io/bootstrap-datetimepicker/ and load the script and CSS in the HTML head section!");
          });
        }, beforeDestroy: function () {
          window.$ && window.$.fn.datetimepicker && $(this.$el).data("DateTimePicker").destroy();
        } };
    }, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }t.__esModule = !0;var o = n(237),
          i = r(o);t.default = i.default || function (e) {
        for (var t = 1; t < arguments.length; t++) {
          var n = arguments[t];for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
        }return e;
      };
    }, function (e, t, n) {
      e.exports = { default: n(238), __esModule: !0 };
    }, function (e, t, n) {
      n(239), e.exports = n(171).Object.assign;
    }, function (e, t, n) {
      var r = n(170);r(r.S + r.F, "Object", { assign: n(240) });
    }, function (e, t, n) {
      "use strict";
      var r = n(154),
          o = n(241),
          i = n(242),
          a = n(152),
          s = n(158),
          u = Object.assign;e.exports = !u || n(180)(function () {
        var e = {},
            t = {},
            n = Symbol(),
            r = "abcdefghijklmnopqrst";return e[n] = 7, r.split("").forEach(function (e) {
          t[e] = e;
        }), 7 != u({}, e)[n] || Object.keys(u({}, t)).join("") != r;
      }) ? function (e, t) {
        for (var n = a(e), u = arguments.length, c = 1, l = o.f, f = i.f; u > c;) for (var d, p = s(arguments[c++]), h = l ? r(p).concat(l(p)) : r(p), m = h.length, v = 0; m > v;) f.call(p, d = h[v++]) && (n[d] = p[d]);return n;
      } : u;
    }, function (e, t) {
      t.f = Object.getOwnPropertySymbols;
    }, function (e, t) {
      t.f = {}.propertyIsEnumerable;
    }, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(197),
          i = r(o);t.default = { formatValueToField: function (e) {
          if (null != e) {
            var t = this.schema.format ? i.default.parse(e, this.schema.format) : new Date(e);return i.default.format(t, this.getDateFormat());
          }return e;
        }, formatValueToModel: function (e) {
          if (null != e) {
            var t = i.default.parse(e, this.getDateFormat());e = this.schema.format ? i.default.format(t, this.schema.format) : t.valueOf();
          }return e;
        } };
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("div", { staticClass: "input-group date" }, [n("input", { directives: [{ name: "model", rawName: "v-model", value: e.value, expression: "value" }], staticClass: "form-control", attrs: { type: "text", autocomplete: e.schema.autocomplete, disabled: e.disabled, placeholder: e.schema.placeholder, readonly: e.schema.readonly, name: e.schema.inputName, id: e.getFieldID(e.schema) }, domProps: { value: e._s(e.value) }, on: { input: function (t) {
                t.target.composing || (e.value = t.target.value);
              } } }), e._m(0)]);
        }, staticRenderFns: [function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("span", { staticClass: "input-group-addon" }, [n("span", { staticClass: "glyphicon glyphicon-calendar" })]);
        }] };
    }, function (e, t, n) {
      n(246);var r = n(3)(n(247), n(248), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(15),
          i = r(o),
          a = n(147),
          s = r(a);t.default = { mixins: [s.default], data: function () {
          return { autocomplete: "", inputs: { street_number: "long_name", route: "long_name", country: "long_name", administrative_area_level_1: "long_name", administrative_area_level_2: "long_name", locality: "long_name", postal_code: "short_name" } };
        }, mounted: function () {
          this.$nextTick(function () {
            window.google && window.google.maps && window.google.maps.places && window.google.maps.places.Autocomplete ? (this.autocomplete = new google.maps.places.Autocomplete(this.$el, { types: ["geocode"] }), this.autocomplete.addListener("place_changed", this.pipeAddress)) : console.warn("Google Maps API is missing. Please add https://maps.googleapis.com/maps/api/js?key=YOUR_KEY&libraries=places script in the HTML head section!");
          });
        }, methods: { pipeAddress: function () {
            var e = this.autocomplete.getPlace();if (e) {
              this.value = e.formatted_address;var t = {};if (void 0 !== e.address_components) for (var n = 0; n < e.address_components.length; n++) {
                var r = e.address_components[n].types[0];this.inputs[r] && (t[r] = e.address_components[n][this.inputs[r]]);
              }(0, i.default)(this.schema.onPlaceChanged) && this.schema.onPlaceChanged(this.value, t, e, this.model, this.schema);
            }
          }, geolocate: function () {
            var e = this;navigator.geolocation && navigator.geolocation.getCurrentPosition(function (t) {
              var n = { lat: t.coords.latitude, lng: t.coords.longitude },
                  r = new window.google.maps.Circle({ center: n, radius: t.coords.accuracy });e.autocomplete.setBounds(r.getBounds());
            });
          } } };
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("input", { directives: [{ name: "model", rawName: "v-model", value: e.value, expression: "value" }], staticClass: "form-control", attrs: { type: "text", autocomplete: e.schema.autocomplete, disabled: e.disabled, placeholder: e.schema.placeholder, readonly: e.schema.readonly, name: e.schema.inputName, debounce: "500", id: e.getFieldID(e.schema) }, domProps: { value: e._s(e.value) }, on: { focus: function (t) {
                e.geolocate();
              }, input: function (t) {
                t.target.composing || (e.value = t.target.value);
              } } });
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      n(250);var r = n(3)(n(251), n(252), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(147),
          i = r(o);t.default = { mixins: [i.default], computed: { previewStyle: function () {
            return this.schema.preview !== !1 ? { display: "block", "background-image": null != this.value ? "url(" + this.value + ")" : "none" } : { display: "none" };
          }, wrappedValue: { get: function () {
              return this.value && 0 == this.value.indexOf("data") ? "<inline base64 image>" : this.value;
            }, set: function (e) {
              e && 0 == e.indexOf("http") && (this.value = e);
            } } }, watch: { model: function () {
            this.$el.querySelector("input.file").value = "";
          } }, methods: { remove: function () {
            this.value = "";
          }, fileChanged: function (e) {
            var t = this,
                n = new FileReader();n.onload = function (e) {
              t.value = e.target.result;
            }, e.target.files && e.target.files.length > 0 && n.readAsDataURL(e.target.files[0]);
          } } };
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("div", { staticClass: "wrapper" }, [n("input", { directives: [{ name: "show", rawName: "v-show", value: e.schema.hideInput !== !0, expression: "schema.hideInput !== true" }, { name: "model", rawName: "v-model", value: e.wrappedValue, expression: "wrappedValue" }], staticClass: "form-control link", attrs: { type: "text", autocomplete: e.schema.autocomplete, disabled: e.disabled, placeholder: e.schema.placeholder, readonly: e.schema.readonly }, domProps: { value: e._s(e.wrappedValue) }, on: { input: function (t) {
                t.target.composing || (e.wrappedValue = t.target.value);
              } } }), e.schema.browse !== !1 ? n("input", { staticClass: "form-control file", attrs: { type: "file", disabled: e.disabled, name: e.schema.inputName }, on: { change: e.fileChanged } }) : e._e(), n("div", { staticClass: "preview", style: e.previewStyle }, [n("div", { staticClass: "remove", attrs: { title: "Remove image" }, on: { click: e.remove } })])]);
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      n(254);var r = n(3)(n(255), n(256), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(147),
          i = r(o);t.default = { mixins: [i.default], mounted: function () {
          this.$nextTick(function () {
            window.$ && window.$.fn.mask ? $(this.$el).unmask().mask(this.schema.mask, this.schema.maskOptions) : console.warn("JQuery MaskedInput library is missing. Please download from https://github.com/digitalBush/jquery.maskedinput and load the script in the HTML head section!");
          });
        }, beforeDestroy: function () {
          window.$ && window.$.fn.mask && $(this.$el).unmask();
        } };
    }, 232, function (e, t, n) {
      n(258);var r = n(3)(n(259), n(260), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(185),
          i = r(o),
          a = n(12),
          s = r(a),
          u = n(147),
          c = r(u);t.default = { mixins: [c.default], data: function () {
          return { slider: null };
        }, watch: { model: function () {
            window.noUiSlider && this.slider && this.slider.noUiSlider && this.slider.noUiSlider.set(this.value);
          } }, computed: { containPips: function () {
            return this.schema.noUiSliderOptions && "undefined" != typeof this.schema.noUiSliderOptions.pips;
          }, containTooltip: function () {
            return this.schema.noUiSliderOptions && this.schema.noUiSliderOptions.tooltips;
          } }, methods: { onChange: function (e) {
            (0, s.default)(e) ? this.value = [parseFloat(e[0]), parseFloat(e[1])] : this.value = parseFloat(e);
          }, formatValueToField: function (e) {
            null !== this.slider && "undefined" != typeof this.slider.noUiSlider && this.slider.noUiSlider.set(e);
          }, formatValueToModel: function (e) {
            if ("undefined" != typeof this.slider.noUiSlider) return e instanceof Array ? [Number(e[0]), Number(e[1])] : Number(e);
          }, getStartValue: function () {
            return null != this.value ? this.value : "undefined" != typeof this.schema.noUiSliderOptions && this.schema.noUiSliderOptions.double ? [this.schema.min, this.schema.min] : this.schema.min;
          } }, mounted: function () {
          this.$nextTick(function () {
            window.noUiSlider ? (this.slider = this.$el, window.noUiSlider.create(this.slider, (0, i.default)(this.schema.noUiSliderOptions || {}, { start: this.getStartValue(), range: { min: this.schema.min, max: this.schema.max } })), this.slider.noUiSlider.on("change", this.onChange.bind(this))) : console.warn("noUiSlider is missing. Please download from https://github.com/leongersen/noUiSlider and load the script and CSS in the HTML head section!");
          });
        }, beforeDestroy: function () {
          this.slider && this.slider.noUiSlider.off("change");
        } };
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("div", { staticClass: "slider", class: { "contain-pips": e.containPips, "contain-tooltip": e.containTooltip }, attrs: { disabled: e.disabled } });
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      n(262);var r = n(3)(n(263), n(264), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(236),
          i = r(o),
          a = n(185),
          s = r(a),
          u = n(147),
          c = r(u),
          l = n(243),
          f = r(l),
          d = "YYYY-MM-DD";t.default = { mixins: [c.default], data: function () {
          return { picker: null };
        }, methods: (0, i.default)({ getDateFormat: function () {
            return this.schema.pikadayOptions && this.schema.pikadayOptions.format ? this.schema.pikadayOptions.format : d;
          } }, f.default), mounted: function () {
          var e = this;this.$nextTick(function () {
            window.Pikaday ? e.picker = new window.Pikaday((0, s.default)(e.schema.pikadayOptions || {}, { field: e.$el, onSelect: function () {
                e.value = e.picker.toString();
              } })) : console.warn("Pikaday is missing. Please download from https://github.com/dbushell/Pikaday/ and load the script and CSS in the HTML head section!");
          });
        }, beforeDestroy: function () {
          this.picker && this.picker.destroy();
        } };
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("input", { directives: [{ name: "model", rawName: "v-model", value: e.value, expression: "value" }], staticClass: "form-control", attrs: { type: "text", autocomplete: e.schema.autocomplete, disabled: e.disabled, placeholder: e.schema.placeholder, readonly: e.schema.readonly, name: e.schema.inputName }, domProps: { value: e._s(e.value) }, on: { input: function (t) {
                t.target.composing || (e.value = t.target.value);
              } } });
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      n(266);var r = n(3)(n(267), n(294), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(268),
          i = r(o),
          a = n(12),
          s = r(a),
          u = n(185),
          c = r(u),
          l = n(147),
          f = r(l);t.default = { mixins: [f.default], data: function () {
          return { slider: null };
        }, watch: { model: function () {
            if (window.$ && window.$.fn.ionRangeSlider) {
              var e = void 0,
                  t = void 0;if ((0, s.default)(this.value)) {
                var n = (0, i.default)(this.value, 2);e = n[0], t = n[1];
              } else e = this.value;this.slider && this.slider.update({ from: e, to: t });
            }
          } }, mounted: function () {
          this.$nextTick(function () {
            if (window.$ && window.$.fn.ionRangeSlider) {
              var e = void 0,
                  t = void 0;if ((0, s.default)(this.value)) {
                var n = (0, i.default)(this.value, 2);e = n[0], t = n[1];
              } else e = this.value;var r = this;$(this.$el).ionRangeSlider((0, c.default)(this.schema.rangeSliderOptions || {}, { type: "single", grid: !0, hide_min_max: !0, from: e, to: t, onChange: function (e) {
                  "double" == r.slider.options.type ? r.value = [e.from, e.to] : r.value = e.from;
                } })), this.slider = $(this.$el).data("ionRangeSlider");
            } else console.warn("ion.rangeSlider library is missing. Please download from https://github.com/IonDen/ion.rangeSlider and load the script and CSS in the HTML head section!");
          });
        }, beforeDestroy: function () {
          this.slider && this.slider.destroy();
        } };
    }, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }t.__esModule = !0;var o = n(269),
          i = r(o),
          a = n(290),
          s = r(a);t.default = function () {
        function e(e, t) {
          var n = [],
              r = !0,
              o = !1,
              i = void 0;try {
            for (var a, u = (0, s.default)(e); !(r = (a = u.next()).done) && (n.push(a.value), !t || n.length !== t); r = !0);
          } catch (e) {
            o = !0, i = e;
          } finally {
            try {
              !r && u.return && u.return();
            } finally {
              if (o) throw i;
            }
          }return n;
        }return function (t, n) {
          if (Array.isArray(t)) return t;if ((0, i.default)(Object(t))) return e(t, n);throw new TypeError("Invalid attempt to destructure non-iterable instance");
        };
      }();
    }, function (e, t, n) {
      e.exports = { default: n(270), __esModule: !0 };
    }, function (e, t, n) {
      n(271), n(286), e.exports = n(288);
    }, function (e, t, n) {
      n(272);for (var r = n(166), o = n(174), i = n(275), a = n(284)("toStringTag"), s = ["NodeList", "DOMTokenList", "MediaList", "StyleSheetList", "CSSRuleList"], u = 0; u < 5; u++) {
        var c = s[u],
            l = r[c],
            f = l && l.prototype;f && !f[a] && o(f, a, c), i[c] = i.Array;
      }
    }, function (e, t, n) {
      "use strict";
      var r = n(273),
          o = n(274),
          i = n(275),
          a = n(157);e.exports = n(276)(Array, "Array", function (e, t) {
        this._t = a(e), this._i = 0, this._k = t;
      }, function () {
        var e = this._t,
            t = this._k,
            n = this._i++;return !e || n >= e.length ? (this._t = void 0, o(1)) : "keys" == t ? o(0, n) : "values" == t ? o(0, e[n]) : o(0, [n, e[n]]);
      }, "values"), i.Arguments = i.Array, r("keys"), r("values"), r("entries");
    }, function (e, t) {
      e.exports = function () {};
    }, function (e, t) {
      e.exports = function (e, t) {
        return { value: t, done: !!e };
      };
    }, function (e, t) {
      e.exports = {};
    }, function (e, t, n) {
      "use strict";
      var r = n(277),
          o = n(170),
          i = n(278),
          a = n(174),
          s = n(156),
          u = n(275),
          c = n(279),
          l = n(283),
          f = n(285),
          d = n(284)("iterator"),
          p = !([].keys && "next" in [].keys()),
          h = "@@iterator",
          m = "keys",
          v = "values",
          y = function () {
        return this;
      };e.exports = function (e, t, n, b, g, x, _) {
        c(n, t, b);var w,
            O,
            j,
            M = function (e) {
          if (!p && e in P) return P[e];switch (e) {case m:
              return function () {
                return new n(this, e);
              };case v:
              return function () {
                return new n(this, e);
              };}return function () {
            return new n(this, e);
          };
        },
            k = t + " Iterator",
            S = g == v,
            C = !1,
            P = e.prototype,
            F = P[d] || P[h] || g && P[g],
            T = F || M(g),
            D = g ? S ? M("entries") : T : void 0,
            I = "Array" == t ? P.entries || F : F;if (I && (j = f(I.call(new e())), j !== Object.prototype && (l(j, k, !0), r || s(j, d) || a(j, d, y))), S && F && F.name !== v && (C = !0, T = function () {
          return F.call(this);
        }), r && !_ || !p && !C && P[d] || a(P, d, T), u[t] = T, u[k] = y, g) if (w = { values: S ? T : M(v), keys: x ? T : M(m), entries: D }, _) for (O in w) O in P || i(P, O, w[O]);else o(o.P + o.F * (p || C), t, w);return w;
      };
    }, function (e, t) {
      e.exports = !0;
    }, function (e, t, n) {
      e.exports = n(174);
    }, function (e, t, n) {
      "use strict";
      var r = n(280),
          o = n(183),
          i = n(283),
          a = {};n(174)(a, n(284)("iterator"), function () {
        return this;
      }), e.exports = function (e, t, n) {
        e.prototype = r(a, { next: o(1, n) }), i(e, t + " Iterator");
      };
    }, function (e, t, n) {
      var r = n(176),
          o = n(281),
          i = n(168),
          a = n(164)("IE_PROTO"),
          s = function () {},
          u = "prototype",
          c = function () {
        var e,
            t = n(181)("iframe"),
            r = i.length,
            o = "<",
            a = ">";for (t.style.display = "none", n(282).appendChild(t), t.src = "javascript:", e = t.contentWindow.document, e.open(), e.write(o + "script" + a + "document.F=Object" + o + "/script" + a), e.close(), c = e.F; r--;) delete c[u][i[r]];return c();
      };e.exports = Object.create || function (e, t) {
        var n;return null !== e ? (s[u] = r(e), n = new s(), s[u] = null, n[a] = e) : n = c(), void 0 === t ? n : o(n, t);
      };
    }, function (e, t, n) {
      var r = n(175),
          o = n(176),
          i = n(154);e.exports = n(179) ? Object.defineProperties : function (e, t) {
        o(e);for (var n, a = i(t), s = a.length, u = 0; s > u;) r.f(e, n = a[u++], t[n]);return e;
      };
    }, function (e, t, n) {
      e.exports = n(166).document && document.documentElement;
    }, function (e, t, n) {
      var r = n(175).f,
          o = n(156),
          i = n(284)("toStringTag");e.exports = function (e, t, n) {
        e && !o(e = n ? e : e.prototype, i) && r(e, i, { configurable: !0, value: t });
      };
    }, function (e, t, n) {
      var r = n(165)("wks"),
          o = n(167),
          i = n(166).Symbol,
          a = "function" == typeof i,
          s = e.exports = function (e) {
        return r[e] || (r[e] = a && i[e] || (a ? i : o)("Symbol." + e));
      };s.store = r;
    }, function (e, t, n) {
      var r = n(156),
          o = n(152),
          i = n(164)("IE_PROTO"),
          a = Object.prototype;e.exports = Object.getPrototypeOf || function (e) {
        return e = o(e), r(e, i) ? e[i] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? a : null;
      };
    }, function (e, t, n) {
      "use strict";
      var r = n(287)(!0);n(276)(String, "String", function (e) {
        this._t = String(e), this._i = 0;
      }, function () {
        var e,
            t = this._t,
            n = this._i;return n >= t.length ? { value: void 0, done: !0 } : (e = r(t, n), this._i += e.length, { value: e, done: !1 });
      });
    }, function (e, t, n) {
      var r = n(162),
          o = n(153);e.exports = function (e) {
        return function (t, n) {
          var i,
              a,
              s = String(o(t)),
              u = r(n),
              c = s.length;return u < 0 || u >= c ? e ? "" : void 0 : (i = s.charCodeAt(u), i < 55296 || i > 56319 || u + 1 === c || (a = s.charCodeAt(u + 1)) < 56320 || a > 57343 ? e ? s.charAt(u) : i : e ? s.slice(u, u + 2) : (i - 55296 << 10) + (a - 56320) + 65536);
        };
      };
    }, function (e, t, n) {
      var r = n(289),
          o = n(284)("iterator"),
          i = n(275);e.exports = n(171).isIterable = function (e) {
        var t = Object(e);return void 0 !== t[o] || "@@iterator" in t || i.hasOwnProperty(r(t));
      };
    }, function (e, t, n) {
      var r = n(159),
          o = n(284)("toStringTag"),
          i = "Arguments" == r(function () {
        return arguments;
      }()),
          a = function (e, t) {
        try {
          return e[t];
        } catch (e) {}
      };e.exports = function (e) {
        var t, n, s;return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof (n = a(t = Object(e), o)) ? n : i ? r(t) : "Object" == (s = r(t)) && "function" == typeof t.callee ? "Arguments" : s;
      };
    }, function (e, t, n) {
      e.exports = { default: n(291), __esModule: !0 };
    }, function (e, t, n) {
      n(271), n(286), e.exports = n(292);
    }, function (e, t, n) {
      var r = n(176),
          o = n(293);e.exports = n(171).getIterator = function (e) {
        var t = o(e);if ("function" != typeof t) throw TypeError(e + " is not iterable!");return r(t.call(e));
      };
    }, function (e, t, n) {
      var r = n(289),
          o = n(284)("iterator"),
          i = n(275);e.exports = n(171).getIteratorMethod = function (e) {
        if (void 0 != e) return e[o] || e["@@iterator"] || i[r(e)];
      };
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("input", { attrs: { type: "text", autocomplete: e.schema.autocomplete, "data-disable": e.disabled, "data-max": e.schema.max, "data-min": e.schema.min, "data-step": e.schema.step, placeholder: e.schema.placeholder, readonly: e.schema.readonly, name: e.schema.inputName } });
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      n(296);var r = n(3)(n(297), n(298), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(16),
          i = r(o),
          a = n(147),
          s = r(a);t.default = { mixins: [s.default], computed: { items: function () {
            var e = this.schema.values;return "function" == typeof e ? e.apply(this, [this.model, this.schema]) : e;
          } }, methods: { getItemID: function (e) {
            return (0, i.default)(e) && e.id ? e.id : e;
          }, getItemName: function (e) {
            return (0, i.default)(e) && e.name ? e.name : e;
          } }, watch: { model: function () {
            $.fn.selectpicker && $(this.$el).selectpicker("refresh");
          } }, mounted: function () {
          this.$nextTick(function () {
            $.fn.selectpicker ? $(this.$el).selectpicker("destroy").selectpicker(this.schema.selectOptions) : console.warn("Bootstrap-select library is missing. Please download from https://silviomoreto.github.io/bootstrap-select/ and load the script and CSS in the HTML head section!");
          });
        }, beforeDestroy: function () {
          $.fn.selectpicker && $(this.$el).selectpicker("destroy");
        } };
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("select", { directives: [{ name: "model", rawName: "v-model", value: e.value, expression: "value" }], staticClass: "selectpicker", attrs: { disabled: e.disabled, multiple: e.schema.multiSelect, title: e.schema.placeholder, "data-width": "100%", name: e.schema.inputName }, on: { change: function (t) {
                e.value = Array.prototype.filter.call(t.target.options, function (e) {
                  return e.selected;
                }).map(function (e) {
                  var t = "_value" in e ? e._value : e.value;return t;
                })[0];
              } } }, [e.schema.multiSelect !== !0 ? n("option", { attrs: { disabled: e.schema.required }, domProps: { value: null, selected: void 0 == e.value } }) : e._e(), e._l(e.items, function (t) {
            return n("option", { domProps: { value: e.getItemID(t) } }, [e._v(e._s(e.getItemName(t)))]);
          })], 2);
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      n(300);var r = n(3)(n(301), n(302), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(185),
          i = r(o),
          a = n(147),
          s = r(a);t.default = { mixins: [s.default], data: function () {
          return { picker: null };
        }, watch: { model: function () {
            window.$ && window.$.fn.spectrum && this.picker.spectrum("set", this.value);
          }, disabled: function (e) {
            e ? this.picker.spectrum("disable") : this.picker.spectrum("enable");
          } }, mounted: function () {
          this.$nextTick(function () {
            var e = this;window.$ && window.$.fn.spectrum ? (this.picker = $(this.$el).spectrum("destroy").spectrum((0, i.default)(this.schema.colorOptions || {}, { showInput: !0, showAlpha: !0, disabled: this.schema.disabled, allowEmpty: !this.schema.required, preferredFormat: "hex", change: function (t) {
                e.value = t ? t.toString() : null;
              } })), this.picker.spectrum("set", this.value)) : console.warn("Spectrum color library is missing. Please download from http://bgrins.github.io/spectrum/ and load the script and CSS in the HTML head section!");
          });
        }, beforeDestroy: function () {
          this.picker && this.picker.spectrum("destroy");
        } };
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("input", { attrs: { type: "text", autocomplete: e.schema.autocomplete, disabled: e.disabled, placeholder: e.schema.placeholder, readonly: e.schema.readonly, name: e.schema.inputName, id: e.getFieldID(e.schema) } });
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      n(304);var r = n(3)(n(305), n(306), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(290),
          i = r(o),
          a = n(185),
          s = r(a),
          u = n(147),
          c = r(u);t.default = { mixins: [c.default], computed: { mapLink: function () {
            if (this.value) {
              var e = void 0,
                  t = void 0,
                  n = (0, s.default)(this.schema.staticMapOptions || {}, { lat: "lat", lng: "lng", zoom: 8, sizeX: 640, sizeY: 640 });e = this.value[n.lat], t = this.value[n.lng];var r = "http://maps.googleapis.com/maps/api/staticmap?center=" + e + "," + t + "&zoom=" + n.zoom + "&size=" + n.sizeX + "x" + n.sizeY,
                  o = ["scale", "format", "maptype", "language", "region", "markers", "path", "visible", "style", "key", "signature"],
                  a = !0,
                  u = !1,
                  c = void 0;try {
                for (var l, f = (0, i.default)(o); !(a = (l = f.next()).done); a = !0) {
                  var d = l.value;"undefined" != typeof n[d] && (r += "&" + d + "=" + n[d]);
                }
              } catch (e) {
                u = !0, c = e;
              } finally {
                try {
                  !a && f.return && f.return();
                } finally {
                  if (u) throw c;
                }
              }if (e && t) return r;
            }
          } } };
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("img", { attrs: { src: e.mapLink } });
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      n(308);var r = n(3)(n(309), n(310), null, null);e.exports = r.exports;
    }, 2, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(147),
          i = r(o);t.default = { mixins: [i.default], methods: { formatValueToField: function (e) {
            return null != e && this.schema.valueOn ? e == this.schema.valueOn : e;
          }, formatValueToModel: function (e) {
            return null != e && this.schema.valueOn ? e ? this.schema.valueOn : this.schema.valueOff : e;
          } } };
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("label", [n("input", { directives: [{ name: "model", rawName: "v-model", value: e.value, expression: "value" }], attrs: { type: "checkbox", autocomplete: e.schema.autocomplete, disabled: e.disabled, name: e.schema.inputName, id: e.getFieldID(e.schema) }, domProps: { checked: Array.isArray(e.value) ? e._i(e.value, null) > -1 : e.value }, on: { click: function (t) {
                var n = e.value,
                    r = t.target,
                    o = !!r.checked;if (Array.isArray(n)) {
                  var i = null,
                      a = e._i(n, i);o ? a < 0 && (e.value = n.concat(i)) : a > -1 && (e.value = n.slice(0, a).concat(n.slice(a + 1)));
                } else e.value = o;
              } } }), n("span", { staticClass: "label", attrs: { "data-on": e.schema.textOn || "On", "data-off": e.schema.textOff || "Off", for: e.getFieldID(e.schema) } }), n("span", { staticClass: "handle" })]);
        }, staticRenderFns: [] };
    }, function (e, t, n) {
      var r = n(3)(n(312), n(313), null, null);e.exports = r.exports;
    }, function (e, t, n) {
      "use strict";
      function r(e) {
        return e && e.__esModule ? e : { default: e };
      }Object.defineProperty(t, "__esModule", { value: !0 });var o = n(147),
          i = r(o);t.default = { mixins: [i.default], computed: { selectOptions: function () {
            return this.schema.selectOptions || {};
          }, options: function () {
            var e = this.schema.values;return "function" == typeof e ? e.apply(this, [this.model, this.schema]) : e;
          }, customLabel: function () {
            return "undefined" != typeof this.schema.selectOptions && "undefined" != typeof this.schema.selectOptions.customLabel && "function" == typeof this.schema.selectOptions.customLabel ? this.schema.selectOptions.customLabel : void 0;
          } }, methods: { updateSelected: function (e) {
            this.value = e;
          }, addTag: function (e, t) {
            var n = this.selectOptions.onNewTag;"function" == typeof n && n(e, t, this.options, this.value);
          }, onSearchChange: function (e, t) {
            var n = this.selectOptions.onSearch;"function" == typeof n && n(e, t, this.options);
          }, onSelect: function () {}, onRemove: function () {}, onOpen: function () {}, onClose: function () {} }, created: function () {
          this.$root.$options.components.multiselect || console.error("'vue-multiselect' is missing. Please download from https://github.com/monterail/vue-multiselect and register the component globally!");
        } };
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return n("multiselect", { attrs: { id: e.selectOptions.id, options: e.options, value: e.value, multiple: e.selectOptions.multiple, "track-by": e.selectOptions.trackBy || null, label: e.selectOptions.label || null, searchable: e.selectOptions.searchable, "clear-on-select": e.selectOptions.clearOnSelect, "hide-selected": e.selectOptions.hideSelected, placeholder: e.schema.placeholder, "allow-empty": e.selectOptions.allowEmpty, "reset-after": e.selectOptions.resetAfter, "close-on-select": e.selectOptions.closeOnSelect, "custom-label": e.customLabel, taggable: e.selectOptions.taggable, "tag-placeholder": e.selectOptions.tagPlaceholder, max: e.schema.max || null, "options-limit": e.selectOptions.optionsLimit, "group-values": e.selectOptions.groupValues, "group-label": e.selectOptions.groupLabel, "block-keys": e.selectOptions.blockKeys, "internal-search": e.selectOptions.internalSearch, "select-label": e.selectOptions.selectLabel, "selected-label": e.selectOptions.selectedLabel, "deselect-label": e.selectOptions.deselectLabel, "show-labels": e.selectOptions.showLabels, limit: e.selectOptions.limit, "limit-text": e.selectOptions.limitText, loading: e.selectOptions.loading, disabled: e.disabled, "max-height": e.selectOptions.maxHeight, "show-pointer": e.selectOptions.showPointer, "option-height": e.selectOptions.optionHeight }, on: { input: e.updateSelected, select: e.onSelect, remove: e.onRemove, "search-change": e.onSearchChange, tag: e.addTag, open: e.onOpen, close: e.onClose } });
        }, staticRenderFns: [] };
    }, function (e, t) {
      e.exports = { render: function () {
          var e = this,
              t = e.$createElement,
              n = e._self._c || t;return null != e.schema ? n("div", { staticClass: "vue-form-generator" }, [e.schema.fields ? n(e.tag, { tag: "fieldset" }, [e._l(e.fields, function (t) {
            return [e.fieldVisible(t) ? n("div", { staticClass: "form-group", class: e.getFieldRowClasses(t) }, [e.fieldTypeHasLabel(t) ? n("label", { attrs: { for: e.getFieldID(t) } }, [e._v(e._s(t.label)), t.help ? n("span", { staticClass: "help" }, [n("i", { staticClass: "icon" }), n("div", { staticClass: "helpText", domProps: { innerHTML: e._s(t.help) } })]) : e._e()]) : e._e(), n("div", { staticClass: "field-wrap" }, [n(e.getFieldType(t), { tag: "component", attrs: { disabled: e.fieldDisabled(t), model: e.model, schema: t, formOptions: e.options }, on: { "model-updated": e.modelUpdated, validated: e.onFieldValidated } }), e.buttonVisibility(t) ? n("div", { staticClass: "buttons" }, e._l(t.buttons, function (r) {
              return n("button", { class: r.classes, on: { click: function (n) {
                    e.buttonClickHandler(r, t, n);
                  } } }, [e._v(e._s(r.label))]);
            })) : e._e()], 1), t.hint ? n("div", { staticClass: "hint" }, [e._v(e._s(t.hint))]) : e._e(), e.fieldErrors(t).length > 0 ? n("div", { staticClass: "errors help-block" }, e._l(e.fieldErrors(t), function (t, r) {
              return n("span", { attrs: { "track-by": "index" } }, [e._v(e._s(t))]);
            })) : e._e()]) : e._e()];
          })], 2) : e._e(), e._l(e.groups, function (t) {
            return [n("fieldset", [t.legend ? n("legend", [e._v(e._s(t.legend))]) : e._e(), e._l(t.fields, function (t) {
              return [e.fieldVisible(t) ? n("div", { staticClass: "form-group", class: e.getFieldRowClasses(t) }, [e.fieldTypeHasLabel(t) ? n("label", { attrs: { for: e.getFieldID(t) } }, [e._v(e._s(t.label)), t.help ? n("span", { staticClass: "help" }, [n("i", { staticClass: "icon" }), n("div", { staticClass: "helpText", domProps: { innerHTML: e._s(t.help) } })]) : e._e()]) : e._e(), n("div", { staticClass: "field-wrap" }, [n(e.getFieldType(t), { tag: "component", attrs: { disabled: e.fieldDisabled(t), model: e.model, schema: t, formOptions: e.options }, on: { "model-updated": e.modelUpdated, validated: e.onFieldValidated } }), e.buttonVisibility(t) ? n("div", { staticClass: "buttons" }, e._l(t.buttons, function (r) {
                return n("button", { class: r.classes, on: { click: function (n) {
                      e.buttonClickHandler(r, t, n);
                    } } }, [e._v(e._s(r.label))]);
              })) : e._e()], 1), t.hint ? n("div", { staticClass: "hint" }, [e._v(e._s(t.hint))]) : e._e(), e.fieldErrors(t).length > 0 ? n("div", { staticClass: "errors help-block" }, e._l(e.fieldErrors(t), function (t, r) {
                return n("span", { attrs: { "track-by": "index" } }, [e._v(e._s(t))]);
              })) : e._e()]) : e._e()];
            })], 2)];
          })], 2) : e._e();
        }, staticRenderFns: [] };
    }]));
  });
  return module.exports;
});
System.register('OpenGroup/core/managers/GroupManager.js', ['npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/createClass.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js', 'events', 'OpenGroup/core/OpenGroup', 'underscore'], function (_export, _context) {
    "use strict";

    var _classCallCheck, _createClass, _possibleConstructorReturn, _inherits, EventEmitter, OpenGroup, _, GroupManager;

    return {
        setters: [function (_npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs) {
            _classCallCheck = _npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersCreateClassJs) {
            _createClass = _npmSystemjsPluginBabel0017BabelHelpersCreateClassJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs) {
            _possibleConstructorReturn = _npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersInheritsJs) {
            _inherits = _npmSystemjsPluginBabel0017BabelHelpersInheritsJs.default;
        }, function (_events) {
            EventEmitter = _events.default;
        }, function (_OpenGroupCoreOpenGroup) {
            OpenGroup = _OpenGroupCoreOpenGroup.default;
        }, function (_underscore) {
            _ = _underscore.default;
        }],
        execute: function () {
            GroupManager = function (_EventEmitter) {
                _inherits(GroupManager, _EventEmitter);

                function GroupManager(wrapper) {
                    _classCallCheck(this, GroupManager);

                    var _this = _possibleConstructorReturn(this, (GroupManager.__proto__ || Object.getPrototypeOf(GroupManager)).call(this));

                    _this.groups = [];

                    _this.wrapper = wrapper;

                    _this.wrapper.on('ready', function () {
                        _this.parseGroupFromUrl();
                        _this.loadGroupsFromStorage();
                    });
                    return _this;
                }

                _createClass(GroupManager, [{
                    key: 'addGroup',
                    value: function addGroup(groupManifest) {
                        var _this2 = this;

                        if (this.validGroupManifest(groupManifest) && !this.getGroupBySlug(groupManifest.slug)) {
                            var _ret = function () {
                                var newGroup = new OpenGroup(_this2.wrapper, groupManifest);
                                _this2.groups.push(newGroup);

                                newGroup.once('ready', function () {
                                    _this2.emit('newGroup', newGroup);
                                });

                                newGroup.on('save', function (definition) {
                                    _this2.saveGroup(definition);
                                });

                                newGroup.on('message', function (message, connection) {
                                    _this2.emit('message', message, connection, newGroup);

                                    if (message.owner) {
                                        _this2.emit(message.owner + '.message', message, connection, newGroup);
                                    }
                                });

                                newGroup.on('newConnection', function (connection) {
                                    _this2.emit('newConnection', connection, newGroup);
                                });

                                // TODO Each load triggers a save. Not to happy with this.
                                newGroup.save();

                                return {
                                    v: newGroup
                                };
                            }();

                            if (typeof _ret === "object") return _ret.v;
                        }
                    }
                }, {
                    key: 'saveGroup',
                    value: function saveGroup(groupDefinition) {
                        var savedGroups = sessionStorage.getItem('opengroup-groups');
                        savedGroups = savedGroups ? JSON.parse(savedGroups) : {};
                        savedGroups[groupDefinition.uuid] = groupDefinition;
                        sessionStorage.setItem('opengroup-groups', JSON.stringify(savedGroups));
                    }
                }, {
                    key: 'loadGroupsFromStorage',
                    value: function loadGroupsFromStorage() {
                        var _this3 = this;

                        var savedGroups = sessionStorage.getItem('opengroup-groups');
                        savedGroups = savedGroups ? JSON.parse(savedGroups) : {};
                        _(savedGroups).each(function (savedGroup) {
                            _this3.addGroup(savedGroup);
                        });
                    }

                    // TODO make group manifest validation.

                }, {
                    key: 'validGroupManifest',
                    value: function validGroupManifest(groupManifest) {
                        return groupManifest && typeof groupManifest === 'object';
                    }
                }, {
                    key: 'parseGroupFromUrl',
                    value: function parseGroupFromUrl() {
                        var group = this.wrapper.routeManager.getUrlParameter('group');

                        if (group) {
                            try {
                                var groupManifest = JSON.parse(group);
                                this.addGroup(groupManifest);
                            } catch (Exception) {
                                console.log(Exception);
                            }
                        }
                    }
                }, {
                    key: 'getGroups',
                    value: function getGroups() {
                        return this.groups;
                    }
                }, {
                    key: 'getGroupBySlug',
                    value: function getGroupBySlug(slug) {
                        return this.groups.filter(function (group) {
                            return group.slug === slug;
                        })[0] || false;
                    }
                }, {
                    key: 'getCurrentGroup',
                    value: function getCurrentGroup() {
                        var slug = this.wrapper.vueRoot.$route.params.slug;
                        return this.getGroupBySlug(slug);
                    }
                }, {
                    key: 'sendMessage',
                    value: function sendMessage(message) {
                        this.groups.forEach(function (group) {
                            group.sendMessage(message);
                        });
                    }
                }]);

                return GroupManager;
            }(EventEmitter);

            _export('default', GroupManager);
        }
    };
});
System.register('OpenGroup/core/managers/MenuManager.js', ['npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/createClass.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js', 'events', 'underscore'], function (_export, _context) {
    "use strict";

    var _classCallCheck, _createClass, _possibleConstructorReturn, _inherits, EventEmitter, _, MenuManager;

    return {
        setters: [function (_npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs) {
            _classCallCheck = _npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersCreateClassJs) {
            _createClass = _npmSystemjsPluginBabel0017BabelHelpersCreateClassJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs) {
            _possibleConstructorReturn = _npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersInheritsJs) {
            _inherits = _npmSystemjsPluginBabel0017BabelHelpersInheritsJs.default;
        }, function (_events) {
            EventEmitter = _events.default;
        }, function (_underscore) {
            _ = _underscore.default;
        }],
        execute: function () {
            MenuManager = function (_EventEmitter) {
                _inherits(MenuManager, _EventEmitter);

                function MenuManager(wrapper) {
                    _classCallCheck(this, MenuManager);

                    var _this = _possibleConstructorReturn(this, (MenuManager.__proto__ || Object.getPrototypeOf(MenuManager)).call(this));

                    _this.menuItemsFlat = {};
                    _this.menuItemsTree = [];

                    _this.wrapper = wrapper;

                    _this.wrapper.on('preReady', function () {
                        _this.wrapper.groupManager.on('newGroup', function (group) {
                            var groupMenuItems = group.getMenuItems();
                            _this.indexMenuItems(groupMenuItems);
                        });
                    });
                    return _this;
                }

                _createClass(MenuManager, [{
                    key: 'indexMenuItems',
                    value: function indexMenuItems(routes) {
                        var _this2 = this;

                        var sortedRoutes = _(routes).chain().sortBy(function (menuItem) {
                            return menuItem.path.substr(1).split('/').length;
                        }).sortBy('weight').value();

                        sortedRoutes.forEach(function (route) {
                            _this2.menuItemsFlat[route.path] = {
                                route: route.name ? route.name : '',
                                path: route.path,
                                title: route.title,
                                children: []
                            };
                        });

                        sortedRoutes.forEach(function (route) {
                            var menuItemPathSplit = route.path.split('/');
                            var parentPath = menuItemPathSplit;
                            parentPath.pop();
                            parentPath = parentPath.join('/');

                            // Fix for dynamic paths.
                            if (!_this2.menuItemsFlat[parentPath]) {
                                _this2.menuItemsFlat[parentPath] = {
                                    children: []
                                };
                            }

                            if (menuItemPathSplit.length > 1) _this2.menuItemsFlat[parentPath].children.push(_this2.menuItemsFlat[route.path]);else _this2.menuItemsTree.push(_this2.menuItemsFlat[route.path]);
                        });
                    }
                }, {
                    key: 'getMenuItemByPath',
                    value: function getMenuItemByPath(path) {
                        if (this.menuItemsFlat && this.menuItemsFlat[path]) {
                            return this.menuItemsFlat[path];
                        }
                    }
                }, {
                    key: 'getSubMenu',
                    value: function getSubMenu(context) {
                        var submenu = [];

                        context.items.forEach(function (item) {
                            if (item.path === context.$router.currentRoute.path.substr(0, item.path.length)) {
                                submenu = _(item.children).sortBy('weight');
                            }
                        });

                        return submenu;
                    }
                }, {
                    key: 'getFirstMenuItemPath',
                    value: function getFirstMenuItemPath(path) {
                        var subMenu = this.getMenuItemByPath(path);
                        if (subMenu && subMenu.children && subMenu.children[0]) {
                            return subMenu.children[0].path;
                        }
                    }
                }]);

                return MenuManager;
            }(EventEmitter);

            _export('default', MenuManager);
        }
    };
});
System.register('OpenGroup/core/managers/ThemeManager.js', ['npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/createClass.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js', 'events', 'vue/dist/vue.common'], function (_export, _context) {
    "use strict";

    var _classCallCheck, _createClass, _possibleConstructorReturn, _inherits, EventEmitter, Vue, ThemeManager;

    return {
        setters: [function (_npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs) {
            _classCallCheck = _npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersCreateClassJs) {
            _createClass = _npmSystemjsPluginBabel0017BabelHelpersCreateClassJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs) {
            _possibleConstructorReturn = _npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersInheritsJs) {
            _inherits = _npmSystemjsPluginBabel0017BabelHelpersInheritsJs.default;
        }, function (_events) {
            EventEmitter = _events.default;
        }, function (_vueDistVueCommon) {
            Vue = _vueDistVueCommon.default;
        }],
        execute: function () {
            ThemeManager = function (_EventEmitter) {
                _inherits(ThemeManager, _EventEmitter);

                function ThemeManager(wrapper) {
                    _classCallCheck(this, ThemeManager);

                    var _this = _possibleConstructorReturn(this, (ThemeManager.__proto__ || Object.getPrototypeOf(ThemeManager)).call(this));

                    _this.componentNames = ['about', 'group-list', 'group-list-item', 'group-header', 'plugin-settings-form', 'nested-menu', 'sidebar', 'profile-teaser', 'profile', 'group', 'groups', 'add-group', 'group-settings'];
                    _this.components = {};

                    _this.wrapper = wrapper;
                    _this.wrapper.element.innerHTML = '<router-view></router-view>';

                    System.import('https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css!');
                    System.import(_this.wrapper.options.theme + '/css/styles.css!');
                    return _this;
                }

                /**
                 * Lazy load Vue Components.
                 */

                _createClass(ThemeManager, [{
                    key: 'registerComponents',
                    value: function registerComponents() {
                        var _this2 = this;

                        this.componentNames.forEach(function (componentName) {
                            _this2.registerComponent(componentName);
                        });
                    }
                }, {
                    key: 'registerComponent',
                    value: function registerComponent(componentName) {
                        var _this3 = this;

                        var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.wrapper.options.theme;

                        this.components[componentName] = Vue.component(componentName, function () {
                            return System.import(basePath + '/components/' + componentName + '.js').then(function (component) {
                                var componentExecuted = component.default(_this3.wrapper);
                                if (!componentExecuted.template) {
                                    return _this3.getTemplate(componentName, basePath).then(function (template) {
                                        if (template === '') {
                                            throw 'Please fill the template of ' + componentName;
                                        }
                                        componentExecuted.template = template;
                                        return componentExecuted;
                                    });
                                } else {
                                    return componentExecuted;
                                }
                            });
                        });
                    }
                }, {
                    key: 'getTemplate',
                    value: function getTemplate(templateName) {
                        var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.wrapper.options.theme;

                        return System.import(basePath + '/templates/' + templateName + '.html!text');
                    }
                }]);

                return ThemeManager;
            }(EventEmitter);

            _export('default', ThemeManager);
        }
    };
});
System.register("npm:systemjs-plugin-babel@0.0.17/babel-helpers/extends.js", [], function (_export, _context) {
  "use strict";

  return {
    setters: [],
    execute: function () {
      _export("default", Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      });
    }
  };
});
System.register('OpenGroup/core/managers/RouteManager.js', ['npm:systemjs-plugin-babel@0.0.17/babel-helpers/extends.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/createClass.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js', 'events', 'vue/dist/vue.common', 'underscore'], function (_export, _context) {
    "use strict";

    var _extends, _classCallCheck, _createClass, _possibleConstructorReturn, _inherits, EventEmitter, Vue, _, RouteManager;

    return {
        setters: [function (_npmSystemjsPluginBabel0017BabelHelpersExtendsJs) {
            _extends = _npmSystemjsPluginBabel0017BabelHelpersExtendsJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs) {
            _classCallCheck = _npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersCreateClassJs) {
            _createClass = _npmSystemjsPluginBabel0017BabelHelpersCreateClassJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs) {
            _possibleConstructorReturn = _npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersInheritsJs) {
            _inherits = _npmSystemjsPluginBabel0017BabelHelpersInheritsJs.default;
        }, function (_events) {
            EventEmitter = _events.default;
        }, function (_vueDistVueCommon) {
            Vue = _vueDistVueCommon.default;
        }, function (_underscore) {
            _ = _underscore.default;
        }],
        execute: function () {
            RouteManager = function (_EventEmitter) {
                _inherits(RouteManager, _EventEmitter);

                function RouteManager(wrapper) {
                    _classCallCheck(this, RouteManager);

                    var _this = _possibleConstructorReturn(this, (RouteManager.__proto__ || Object.getPrototypeOf(RouteManager)).call(this));

                    _this.wrapper = wrapper;

                    _this.wrapper.on('preReady', function () {
                        _this.wrapper.router.afterEach(function (to, from) {
                            if (to.name === 'groups.group' || to.name === 'groups.group.settings') {
                                var firstMenuItemPath = _this.wrapper.menuManager.getFirstMenuItemPath(to.path);
                                if (firstMenuItemPath) {
                                    _this.wrapper.router.push(firstMenuItemPath);
                                }
                            }

                            document.body.dataset.currentRoute = to.name;
                            document.body.dataset.currentDepth = to.path.split('/').length - 1;
                        });
                    });
                    return _this;
                }

                _createClass(RouteManager, [{
                    key: 'getAppRoutes',
                    value: function getAppRoutes() {
                        var routeManager = this;
                        var wrapper = this.wrapper;

                        return [{
                            path: '/',
                            redirect: '/groups'
                        }, {
                            path: '/groups',
                            name: 'groups',
                            title: 'Groups',
                            component: Vue.options.components['groups'],
                            children: [{
                                path: ':slug',
                                name: 'groups.group',
                                title: 'Group',
                                component: Vue.options.components['group'],
                                beforeEnter: function beforeEnter(to, from, next) {
                                    // Let's see if our group is ready, in other words,
                                    // has loaded all the plugins and their components.
                                    var checkState = function checkState() {
                                        var currentGroup = wrapper.groupManager.getGroupBySlug(to.params.slug);
                                        if (currentGroup && currentGroup.state === 'ready') {
                                            return next();
                                        }

                                        setTimeout(checkState, 100);
                                    };

                                    checkState();
                                },

                                children: [{
                                    path: 'settings',
                                    name: 'groups.group.settings',
                                    weight: -99,
                                    title: 'Plugin',
                                    component: Vue.options.components['group-settings']
                                }, {
                                    path: ':plugin',
                                    name: 'groups.group.plugin',
                                    title: 'Plugin',
                                    component: {
                                        template: '<component :is="componentName"></component>',
                                        data: function data() {
                                            var _this2 = this;

                                            var currentGroup = wrapper.groupManager.getCurrentGroup();
                                            var currentMenuItem = currentGroup.menuItems.filter(function (menuItem) {
                                                return menuItem.subPath === _this2.$route.params.plugin;
                                            })[0];

                                            return {
                                                componentName: currentMenuItem.component
                                            };
                                        }
                                    }
                                }, {
                                    path: 'settings/:plugin',
                                    name: 'groups.group.settings.plugin',
                                    title: 'Plugin',
                                    component: {
                                        template: '\n                                    <div>\n                                        <div v-if="!componentName">\n                                            <h1 class="plugin-title">{{ title }}</h1>\n                                            <vue-form-generator tag="div" :schema="schema" :model="model" :options="formOptions">\n                                            </vue-form-generator>\n                                            \n                                            <div class="form-actions">\n                                                <div class="button primary" @click="save"><i class="fa fa-check" aria-hidden="true"></i> Save settings</div>\n                                            </div>                                        \n                                        </div>\n                                        <div v-if="componentName">\n                                            <component :is="componentName"></component>\n                                        </div>\n                                    </div>',
                                        watch: {
                                            // This is needed else the whole form get's 'cached'.
                                            '$route': function $route() {
                                                var _this3 = this;

                                                var currentGroup = wrapper.groupManager.getCurrentGroup();
                                                var currentMenuItem = currentGroup.menuItems.filter(function (menuItem) {
                                                    return menuItem.subPath === 'settings/' + _this3.$route.params.plugin;
                                                })[0];
                                                this.componentName = currentMenuItem ? currentMenuItem.component : '';

                                                Object.assign(this, routeManager.createSettingsRoute(this));
                                            }
                                        },
                                        data: function data() {
                                            var _this4 = this;

                                            var currentGroup = wrapper.groupManager.getCurrentGroup();
                                            var currentMenuItem = currentGroup.menuItems.filter(function (menuItem) {
                                                return menuItem.subPath === 'settings/' + _this4.$route.params.plugin;
                                            })[0];

                                            return _extends({}, routeManager.createSettingsRoute(this), {
                                                componentName: currentMenuItem ? currentMenuItem.component : ''
                                            });
                                        },
                                        methods: {
                                            save: function save() {
                                                this.plugin.saveSettings();
                                                var currentGroup = wrapper.groupManager.getCurrentGroup();
                                                wrapper.router.push('/groups/' + currentGroup.slug);
                                            }
                                        }
                                    }
                                }]
                            }]
                        }, {
                            path: '/add-group',
                            name: 'add-group',
                            title: 'Add group',
                            component: Vue.options.components['add-group']
                        }, {
                            path: '/about',
                            name: 'about',
                            title: 'About OpenGroup',
                            component: Vue.options.components['about']
                        }, {
                            path: '/profile',
                            name: 'profile',
                            title: 'Your profile',
                            component: Vue.options.components['profile']
                        }];
                    }
                }, {
                    key: 'createSettingsRoute',
                    value: function createSettingsRoute(context) {
                        var currentGroup = this.wrapper.groupManager.getCurrentGroup();

                        if (context.$route.params.plugin && currentGroup.plugins[context.$route.params.plugin]) {
                            var plugin = currentGroup.plugins[context.$route.params.plugin];

                            if (typeof plugin.settingsForm === 'function') {
                                var settingsFormInfo = plugin.settingsForm();

                                return {
                                    plugin: plugin,
                                    title: settingsFormInfo.title,
                                    model: currentGroup.config.plugins[plugin.name],
                                    schema: {
                                        fields: settingsFormInfo.schema
                                    },
                                    formOptions: {
                                        validateAfterLoad: true,
                                        validateAfterChanged: true,
                                        fieldIdPrefix: plugin.name
                                    }
                                };
                            }
                        }

                        // Plugin has no settings form.
                        return {};
                    }
                }, {
                    key: 'getUrlParameter',
                    value: function getUrlParameter(name) {
                        name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
                        var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
                        // example.com/#/?foo=bar
                        var results = regex.exec('?' + location.hash.split('?')[1]);

                        // example.com?foo=bar/#/
                        if (!results) {
                            results = regex.exec('?' + location.search);
                        }

                        return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
                    }
                }]);

                return RouteManager;
            }(EventEmitter);

            _export('default', RouteManager);
        }
    };
});
System.register('OpenGroup/core/managers/ProfileManager.js', ['npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/createClass.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js', 'events'], function (_export, _context) {
    "use strict";

    var _classCallCheck, _createClass, _possibleConstructorReturn, _inherits, EventEmitter, ProfileManager;

    return {
        setters: [function (_npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs) {
            _classCallCheck = _npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersCreateClassJs) {
            _createClass = _npmSystemjsPluginBabel0017BabelHelpersCreateClassJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs) {
            _possibleConstructorReturn = _npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersInheritsJs) {
            _inherits = _npmSystemjsPluginBabel0017BabelHelpersInheritsJs.default;
        }, function (_events) {
            EventEmitter = _events.default;
        }],
        execute: function () {
            ProfileManager = function (_EventEmitter) {
                _inherits(ProfileManager, _EventEmitter);

                function ProfileManager(wrapper) {
                    _classCallCheck(this, ProfileManager);

                    var _this = _possibleConstructorReturn(this, (ProfileManager.__proto__ || Object.getPrototypeOf(ProfileManager)).call(this));

                    _this.profilesOfOthers = {};

                    _this.wrapper = wrapper;

                    _this.wrapper.on('ready', function () {
                        var profile = _this.getProfile();

                        if (!profile.snapshot || !profile.nickname) {
                            _this.wrapper.router.push('/profile');
                        }
                    });

                    _this.wrapper.groupManager.on('og.core.profile.message', function (message, connection, group) {
                        _this.profilesOfOthers[connection.uuid] = message.message.profile;
                    });

                    _this.wrapper.groupManager.on('newConnection', function (connection) {
                        var profile = _this.getProfile();

                        if (profile.nickname && profile.snapshot) {
                            connection.sendMessage({
                                owner: 'og.core.profile',
                                message: {
                                    command: 'update-profile',
                                    profile: profile
                                }
                            });
                        }
                    });
                    return _this;
                }

                _createClass(ProfileManager, [{
                    key: 'getProfile',
                    value: function getProfile() {
                        var uuid = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

                        if (uuid) {
                            if (this.profilesOfOthers[uuid]) {
                                return this.profilesOfOthers[uuid];
                            }
                        } else {
                            var savedProfile = sessionStorage.getItem('opengroup-profile');

                            var profile = {
                                nickname: '',
                                snapshot: ''
                            };

                            if (savedProfile) {
                                profile = JSON.parse(savedProfile);
                            }

                            return profile;
                        }
                    }
                }, {
                    key: 'saveProfile',
                    value: function saveProfile(profile) {
                        sessionStorage.setItem('opengroup-profile', JSON.stringify(profile));
                        this.wrapper.groupManager.sendMessage({
                            owner: 'og.core.profile',
                            message: {
                                command: 'update-profile',
                                profile: profile
                            }
                        });
                        this.emit('savedProfile', profile);
                    }
                }]);

                return ProfileManager;
            }(EventEmitter);

            _export('default', ProfileManager);
        }
    };
});
System.register('OpenGroup/core/managers/StorageManager.js', ['npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js', 'events'], function (_export, _context) {
    "use strict";

    var _classCallCheck, _possibleConstructorReturn, _inherits, EventEmitter, StorageManager;

    return {
        setters: [function (_npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs) {
            _classCallCheck = _npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs) {
            _possibleConstructorReturn = _npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersInheritsJs) {
            _inherits = _npmSystemjsPluginBabel0017BabelHelpersInheritsJs.default;
        }, function (_events) {
            EventEmitter = _events.default;
        }],
        execute: function () {
            StorageManager = function (_EventEmitter) {
                _inherits(StorageManager, _EventEmitter);

                function StorageManager(wrapper) {
                    _classCallCheck(this, StorageManager);

                    var _this = _possibleConstructorReturn(this, (StorageManager.__proto__ || Object.getPrototypeOf(StorageManager)).call(this));

                    _this.wrapper = wrapper;
                    return _this;
                }

                return StorageManager;
            }(EventEmitter);

            _export('default', StorageManager);
        }
    };
});
System.register('OpenGroup/core/Wrapper.js', ['npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/createClass.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js', 'events', 'vue/dist/vue.common', 'vue-router', 'vue-form-generator', 'OpenGroup/core/managers/GroupManager', 'OpenGroup/core/managers/MenuManager', 'OpenGroup/core/managers/ThemeManager', 'OpenGroup/core/managers/RouteManager', 'OpenGroup/core/managers/ProfileManager', 'OpenGroup/core/managers/StorageManager'], function (_export, _context) {
    "use strict";

    var _classCallCheck, _createClass, _possibleConstructorReturn, _inherits, EventEmitter, Vue, VueRouter, VueFormGenerator, GroupManager, MenuManager, ThemeManager, RouteManager, ProfileManager, StorageManager, Wrapper;

    return {
        setters: [function (_npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs) {
            _classCallCheck = _npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersCreateClassJs) {
            _createClass = _npmSystemjsPluginBabel0017BabelHelpersCreateClassJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs) {
            _possibleConstructorReturn = _npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersInheritsJs) {
            _inherits = _npmSystemjsPluginBabel0017BabelHelpersInheritsJs.default;
        }, function (_events) {
            EventEmitter = _events.default;
        }, function (_vueDistVueCommon) {
            Vue = _vueDistVueCommon.default;
        }, function (_vueRouter) {
            VueRouter = _vueRouter.default;
        }, function (_vueFormGenerator) {
            VueFormGenerator = _vueFormGenerator.default;
        }, function (_OpenGroupCoreManagersGroupManager) {
            GroupManager = _OpenGroupCoreManagersGroupManager.default;
        }, function (_OpenGroupCoreManagersMenuManager) {
            MenuManager = _OpenGroupCoreManagersMenuManager.default;
        }, function (_OpenGroupCoreManagersThemeManager) {
            ThemeManager = _OpenGroupCoreManagersThemeManager.default;
        }, function (_OpenGroupCoreManagersRouteManager) {
            RouteManager = _OpenGroupCoreManagersRouteManager.default;
        }, function (_OpenGroupCoreManagersProfileManager) {
            ProfileManager = _OpenGroupCoreManagersProfileManager.default;
        }, function (_OpenGroupCoreManagersStorageManager) {
            StorageManager = _OpenGroupCoreManagersStorageManager.default;
        }],
        execute: function () {
            Wrapper = function (_EventEmitter) {
                _inherits(Wrapper, _EventEmitter);

                /**
                 * @constructor
                 */
                function Wrapper(options) {
                    _classCallCheck(this, Wrapper);

                    var _this = _possibleConstructorReturn(this, (Wrapper.__proto__ || Object.getPrototypeOf(Wrapper)).call(this));

                    _this.routes = [];
                    _this.options = {
                        selector: '#app',
                        theme: 'theme'
                    };
                    _this.state = 'starting';

                    _this.options = Object.assign(_this.options, options);
                    _this.element = document.querySelector(_this.options.selector);

                    _this.themeManager = new ThemeManager(_this);
                    _this.groupManager = new GroupManager(_this);
                    _this.menuManager = new MenuManager(_this);
                    _this.routeManager = new RouteManager(_this);
                    _this.profileManager = new ProfileManager(_this);
                    _this.storageManager = new StorageManager(_this);
                    _this.startVue();
                    return _this;
                }

                _createClass(Wrapper, [{
                    key: 'startVue',
                    value: function startVue() {
                        Vue.use(VueFormGenerator);
                        Vue.use(VueRouter);

                        this.themeManager.registerComponents();
                        this.routes = this.routeManager.getAppRoutes();
                        this.menuManager.indexMenuItems(this.routes);

                        this.router = new VueRouter({
                            routes: this.routes
                        });

                        this.vueRoot = new Vue({
                            router: this.router
                        }).$mount(this.options.selector);

                        this.state = 'preReady';
                        this.emit('preReady');
                        this.state = 'ready';
                        this.emit('ready');
                    }
                }]);

                return Wrapper;
            }(EventEmitter);

            _export('default', Wrapper);
        }
    };
});
System.register('OpenGroup/app.js', ['./development.grid.js', 'OpenGroup/core/Wrapper'], function (_export, _context) {
  "use strict";

  var Wrapper;
  return {
    setters: [function (_developmentGridJs) {}, function (_OpenGroupCoreWrapper) {
      Wrapper = _OpenGroupCoreWrapper.default;
    }],
    execute: function () {
      new Wrapper('#app');
    }
  };
});
System.registerDynamic("github:systemjs/plugin-css@0.1.35.json", [], false, function() {
  return {
    "main": "css"
  };
});

System.registerDynamic('github:systemjs/plugin-css@0.1.35/css.js', [], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  if (typeof window !== 'undefined') {
    var waitSeconds = 100;

    var head = document.getElementsByTagName('head')[0];

    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\/([^ ;]*)/);
    var webkitLoadCheck = function (link, callback) {
      setTimeout(function () {
        for (var i = 0; i < document.styleSheets.length; i++) {
          var sheet = document.styleSheets[i];
          if (sheet.href == link.href) return callback();
        }
        webkitLoadCheck(link, callback);
      }, 10);
    };

    var cssIsReloadable = function cssIsReloadable(links) {
      // Css loaded on the page initially should be skipped by the first
      // systemjs load, and marked for reload
      var reloadable = true;
      forEach(links, function (link) {
        if (!link.hasAttribute('data-systemjs-css')) {
          reloadable = false;
          link.setAttribute('data-systemjs-css', '');
        }
      });
      return reloadable;
    };

    var findExistingCSS = function findExistingCSS(url) {
      // Search for existing link to reload
      var links = head.getElementsByTagName('link');
      return filter(links, function (link) {
        return link.href === url;
      });
    };

    var noop = function () {};

    var loadCSS = function (url, existingLinks) {
      return new Promise(function (resolve, reject) {
        var timeout = setTimeout(function () {
          reject('Unable to load CSS');
        }, waitSeconds * 1000);
        var _callback = function (error) {
          clearTimeout(timeout);
          link.onload = link.onerror = noop;
          setTimeout(function () {
            if (error) reject(error);else resolve('');
          }, 7);
        };
        var link = document.createElement('link');
        link.type = 'text/css';
        link.rel = 'stylesheet';
        link.href = url;
        link.setAttribute('data-systemjs-css', '');
        if (!isWebkit) {
          link.onload = function () {
            _callback();
          };
        } else {
          webkitLoadCheck(link, _callback);
        }
        link.onerror = function (event) {
          _callback(event.error || new Error('Error loading CSS file.'));
        };
        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);else head.appendChild(link);
      })
      // Remove the old link regardless of loading outcome
      .then(function (result) {
        forEach(existingLinks, function (link) {
          link.parentElement.removeChild(link);
        });
        return result;
      }, function (err) {
        forEach(existingLinks, function (link) {
          link.parentElement.removeChild(link);
        });
        throw err;
      });
    };

    exports.fetch = function (load) {
      // dont reload styles loaded in the head
      var links = findExistingCSS(load.address);
      if (!cssIsReloadable(links)) return '';
      return loadCSS(load.address, links);
    };
  } else {
    var builderPromise;
    function getBuilder(loader) {
      if (builderPromise) return builderPromise;

      return builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {
        return new CSSPluginBase(function compile(source, address) {
          return {
            css: source,
            map: null,
            moduleSource: null,
            moduleFormat: null
          };
        });
      });
    }

    exports.cssPlugin = true;
    exports.fetch = function (load, fetch) {
      if (!this.builder) return '';
      return fetch(load);
    };
    exports.translate = function (load, opts) {
      if (!this.builder) return '';
      var loader = this;
      return getBuilder(loader).then(function (builder) {
        return builder.translate.call(loader, load, opts);
      });
    };
    exports.instantiate = function (load, opts) {
      if (!this.builder) return;
      var loader = this;
      return getBuilder(loader).then(function (builder) {
        return builder.instantiate.call(loader, load, opts);
      });
    };
    exports.bundle = function (loads, compileOpts, outputOpts) {
      var loader = this;
      return getBuilder(loader).then(function (builder) {
        return builder.bundle.call(loader, loads, compileOpts, outputOpts);
      });
    };
    exports.listAssets = function (loads, opts) {
      var loader = this;
      return getBuilder(loader).then(function (builder) {
        return builder.listAssets.call(loader, loads, opts);
      });
    };
  }

  // Because IE8?
  function filter(arrayLike, func) {
    var arr = [];
    forEach(arrayLike, function (item) {
      if (func(item)) arr.push(item);
    });
    return arr;
  }

  // Because IE8?
  function forEach(arrayLike, func) {
    for (var i = 0; i < arrayLike.length; i++) {
      func(arrayLike[i]);
    }
  }
  return module.exports;
});
System.registerDynamic('npm:systemjs-plugin-text@0.0.9/text.js', [], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /*
    Text plugin
  */
  exports.translate = function (load) {
    if (this.builder && this.transpiler) {
      load.metadata.format = 'esm';
      return 'exp' + 'ort var __useDefault = true; exp' + 'ort default ' + JSON.stringify(load.source) + ';';
    }

    load.metadata.format = 'amd';
    return 'def' + 'ine(function() {\nreturn ' + JSON.stringify(load.source) + ';\n});';
  };
  return module.exports;
});
(function() {
var define = System.amdDefine;
!function(a) {
  function b(a, b, e) {
    return 4 === arguments.length ? c.apply(this, arguments) : void d(a, {
      declarative: !0,
      deps: b,
      declare: e
    });
  }
  function c(a, b, c, e) {
    d(a, {
      declarative: !1,
      deps: b,
      executingRequire: c,
      execute: e
    });
  }
  function d(a, b) {
    b.name = a, a in o || (o[a] = b), b.normalizedDeps = b.deps;
  }
  function e(a, b) {
    if (b[a.groupIndex] = b[a.groupIndex] || [], -1 == p.call(b[a.groupIndex], a)) {
      b[a.groupIndex].push(a);
      for (var c = 0,
          d = a.normalizedDeps.length; d > c; c++) {
        var f = a.normalizedDeps[c],
            g = o[f];
        if (g && !g.evaluated) {
          var h = a.groupIndex + (g.declarative != a.declarative);
          if (void 0 === g.groupIndex || g.groupIndex < h) {
            if (void 0 !== g.groupIndex && (b[g.groupIndex].splice(p.call(b[g.groupIndex], g), 1), 0 == b[g.groupIndex].length))
              throw new TypeError("Mixed dependency cycle detected");
            g.groupIndex = h;
          }
          e(g, b);
        }
      }
    }
  }
  function f(a) {
    var b = o[a];
    b.groupIndex = 0;
    var c = [];
    e(b, c);
    for (var d = !!b.declarative == c.length % 2,
        f = c.length - 1; f >= 0; f--) {
      for (var g = c[f],
          i = 0; i < g.length; i++) {
        var k = g[i];
        d ? h(k) : j(k);
      }
      d = !d;
    }
  }
  function g(a) {
    return s[a] || (s[a] = {
      name: a,
      dependencies: [],
      exports: {},
      importers: []
    });
  }
  function h(b) {
    if (!b.module) {
      var c = b.module = g(b.name),
          d = b.module.exports,
          e = b.declare.call(a, function(a, b) {
            if (c.locked = !0, "object" == typeof a)
              for (var e in a)
                d[e] = a[e];
            else
              d[a] = b;
            for (var f = 0,
                g = c.importers.length; g > f; f++) {
              var h = c.importers[f];
              if (!h.locked)
                for (var i = 0; i < h.dependencies.length; ++i)
                  h.dependencies[i] === c && h.setters[i](d);
            }
            return c.locked = !1, b;
          }, {id: b.name});
      c.setters = e.setters, c.execute = e.execute;
      for (var f = 0,
          i = b.normalizedDeps.length; i > f; f++) {
        var j,
            k = b.normalizedDeps[f],
            l = o[k],
            m = s[k];
        m ? j = m.exports : l && !l.declarative ? j = l.esModule : l ? (h(l), m = l.module, j = m.exports) : j = n(k), m && m.importers ? (m.importers.push(c), c.dependencies.push(m)) : c.dependencies.push(null), c.setters[f] && c.setters[f](j);
      }
    }
  }
  function i(a) {
    var b,
        c = o[a];
    if (c)
      c.declarative ? m(a, []) : c.evaluated || j(c), b = c.module.exports;
    else if (b = n(a), !b)
      throw new Error("Unable to load dependency " + a + ".");
    return (!c || c.declarative) && b && b.__useDefault ? b.default : b;
  }
  function j(b) {
    if (!b.module) {
      var c = {},
          d = b.module = {
            exports: c,
            id: b.name
          };
      if (!b.executingRequire)
        for (var e = 0,
            f = b.normalizedDeps.length; f > e; e++) {
          var g = b.normalizedDeps[e],
              h = o[g];
          h && j(h);
        }
      b.evaluated = !0;
      var l = b.execute.call(a, function(a) {
        for (var c = 0,
            d = b.deps.length; d > c; c++)
          if (b.deps[c] == a)
            return i(b.normalizedDeps[c]);
        throw new TypeError("Module " + a + " not declared as a dependency.");
      }, c, d);
      void 0 !== typeof l && (d.exports = l), c = d.exports, c && c.__esModule ? b.esModule = c : b.esModule = k(c);
    }
  }
  function k(b) {
    var c = {};
    if (("object" == typeof b || "function" == typeof b) && b !== a)
      if (q)
        for (var d in b)
          "default" !== d && l(c, b, d);
      else {
        var e = b && b.hasOwnProperty;
        for (var d in b)
          "default" === d || e && !b.hasOwnProperty(d) || (c[d] = b[d]);
      }
    return c.default = b, r(c, "__useDefault", {value: !0}), c;
  }
  function l(a, b, c) {
    try {
      var d;
      (d = Object.getOwnPropertyDescriptor(b, c)) && r(a, c, d);
    } catch (d) {
      return a[c] = b[c], !1;
    }
  }
  function m(b, c) {
    var d = o[b];
    if (d && !d.evaluated && d.declarative) {
      c.push(b);
      for (var e = 0,
          f = d.normalizedDeps.length; f > e; e++) {
        var g = d.normalizedDeps[e];
        -1 == p.call(c, g) && (o[g] ? m(g, c) : n(g));
      }
      d.evaluated || (d.evaluated = !0, d.module.execute.call(a));
    }
  }
  function n(a) {
    if (u[a])
      return u[a];
    if ("@node/" == a.substr(0, 6))
      return u[a] = k(t(a.substr(6)));
    var b = o[a];
    if (!b)
      throw "Module " + a + " not present.";
    return f(a), m(a, []), o[a] = void 0, b.declarative && r(b.module.exports, "__esModule", {value: !0}), u[a] = b.declarative ? b.module.exports : b.esModule;
  }
  var o = {},
      p = Array.prototype.indexOf || function(a) {
        for (var b = 0,
            c = this.length; c > b; b++)
          if (this[b] === a)
            return b;
        return -1;
      },
      q = !0;
  try {
    Object.getOwnPropertyDescriptor({a: 0}, "a");
  } catch (a) {
    q = !1;
  }
  var r;
  !function() {
    try {
      Object.defineProperty({}, "a", {}) && (r = Object.defineProperty);
    } catch (a) {
      r = function(a, b, c) {
        try {
          a[b] = c.value || c.get.call(a);
        } catch (a) {}
      };
    }
  }();
  var s = {},
      t = "undefined" != typeof System && System._nodeRequire || "undefined" != typeof require && require.resolve && "undefined" != typeof process && require,
      u = {"@empty": {}};
  return function(a, d, e, f) {
    return function(g) {
      g(function(g) {
        for (var h = {
          _nodeRequire: t,
          register: b,
          registerDynamic: c,
          get: n,
          set: function(a, b) {
            u[a] = b;
          },
          newModule: function(a) {
            return a;
          }
        },
            i = 0; i < d.length; i++)
          (function(a, b) {
            b && b.__esModule ? u[a] = b : u[a] = k(b);
          })(d[i], arguments[i]);
        f(h);
        var j = n(a[0]);
        if (a.length > 1)
          for (var i = 1; i < a.length; i++)
            n(a[i]);
        return e ? j.default : j;
      });
    };
  };
}("undefined" != typeof self ? self : global)(["1"], [], !1, function(a) {
  var b = this.require,
      c = this.exports,
      d = this.module;
  !function(b) {
    function c(a, b) {
      a = a.replace(h, "");
      var c = a.match(k),
          d = (c[1].split(",")[b] || "require").replace(l, ""),
          e = m[d] || (m[d] = new RegExp(i + d + j, "g"));
      e.lastIndex = 0;
      for (var f,
          g = []; f = e.exec(a); )
        g.push(f[2] || f[3]);
      return g;
    }
    function d(a, b, c, e) {
      if ("object" == typeof a && !(a instanceof Array))
        return d.apply(null, Array.prototype.splice.call(arguments, 1, arguments.length - 1));
      if ("string" == typeof a && "function" == typeof b && (a = [a]), !(a instanceof Array)) {
        if ("string" == typeof a) {
          var g = f.get(a);
          return g.__useDefault ? g.default : g;
        }
        throw new TypeError("Invalid require");
      }
      for (var h = [],
          i = 0; i < a.length; i++)
        h.push(f.import(a[i], e));
      Promise.all(h).then(function(a) {
        b && b.apply(null, a);
      }, c);
    }
    function e(a, e, h) {
      "string" != typeof a && (h = e, e = a, a = null), e instanceof Array || (h = e, e = ["require", "exports", "module"].splice(0, h.length)), "function" != typeof h && (h = function(a) {
        return function() {
          return a;
        };
      }(h)), void 0 === e[e.length - 1] && e.pop();
      var i,
          j,
          k;
      -1 != (i = g.call(e, "require")) && (e.splice(i, 1), a || (e = e.concat(c(h.toString(), i)))), -1 != (j = g.call(e, "exports")) && e.splice(j, 1), -1 != (k = g.call(e, "module")) && e.splice(k, 1);
      var l = {
        name: a,
        deps: e,
        execute: function(a, c, g) {
          for (var l = [],
              m = 0; m < e.length; m++)
            l.push(a(e[m]));
          g.uri = g.id, g.config = function() {}, -1 != k && l.splice(k, 0, g), -1 != j && l.splice(j, 0, c), -1 != i && l.splice(i, 0, function(b, c, e) {
            return "string" == typeof b && "function" != typeof c ? a(b) : d.call(f, b, c, e, g.id);
          });
          var n = h.apply(-1 == j ? b : c, l);
          return "undefined" == typeof n && g && (n = g.exports), "undefined" != typeof n ? n : void 0;
        }
      };
      if (a)
        n.anonDefine || n.isBundle ? n.anonDefine && n.anonDefine.name && (n.anonDefine = null) : n.anonDefine = l, n.isBundle = !0, f.registerDynamic(l.name, l.deps, !1, l.execute);
      else {
        if (n.anonDefine && !n.anonDefine.name)
          throw new Error("Multiple anonymous defines in module " + a);
        n.anonDefine = l;
      }
    }
    var f = a,
        g = Array.prototype.indexOf || function(a) {
          for (var b = 0,
              c = this.length; c > b; b++)
            if (this[b] === a)
              return b;
          return -1;
        },
        h = /(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm,
        i = "(?:^|[^$_a-zA-Z\\xA0-\\uFFFF.])",
        j = "\\s*\\(\\s*(\"([^\"]+)\"|'([^']+)')\\s*\\)",
        k = /\(([^\)]*)\)/,
        l = /^\s+|\s+$/g,
        m = {};
    e.amd = {};
    var n = {
      isBundle: !1,
      anonDefine: null
    };
    f.amdDefine = e, f.amdRequire = d;
  }("undefined" != typeof self ? self : global), a.registerDynamic("2", ["4", "5", "6", "7", "8", "9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function f(a, b) {
      var c = [],
          d = u.functionExpression(null, [u.identifier("global")], u.blockStatement(c)),
          e = u.program([u.expressionStatement(u.callExpression(d, [k.get("selfGlobal")]))]);
      return c.push(u.variableDeclaration("var", [u.variableDeclarator(a, u.assignmentExpression("=", u.memberExpression(u.identifier("global"), a), u.objectExpression([])))])), b(c), e;
    }
    function g(a, b) {
      var c = [];
      return c.push(u.variableDeclaration("var", [u.variableDeclarator(a, u.identifier("global"))])), b(c), u.program([v({
        FACTORY_PARAMETERS: u.identifier("global"),
        BROWSER_ARGUMENTS: u.assignmentExpression("=", u.memberExpression(u.identifier("root"), a), u.objectExpression([])),
        COMMON_ARGUMENTS: u.identifier("exports"),
        AMD_ARGUMENTS: u.arrayExpression([u.stringLiteral("exports")]),
        FACTORY_BODY: c,
        UMD_ROOT: u.identifier("this")
      })]);
    }
    function h(a, b) {
      var c = [];
      return c.push(u.variableDeclaration("var", [u.variableDeclarator(a, u.objectExpression([]))])), b(c), c.push(u.expressionStatement(a)), u.program(c);
    }
    function i(a, b, c) {
      (0, s.default)(k.list, function(d) {
        if (!(c && c.indexOf(d) < 0)) {
          var e = u.identifier(d);
          a.push(u.expressionStatement(u.assignmentExpression("=", u.memberExpression(b, e), k.get(d))));
        }
      });
    }
    a("3"), this || self;
    b.__esModule = !0, b.default = function(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "global",
          c = u.identifier("babelHelpers"),
          d = function(b) {
            return i(b, c, a);
          },
          e = void 0,
          j = {
            global: f,
            umd: g,
            var: h
          }[b];
      if (!j)
        throw new Error(o.get("unsupportedOutputType", b));
      return e = j(c, d), (0, m.default)(e).code;
    };
    var j = a("4"),
        k = e(j),
        l = a("5"),
        m = d(l),
        n = a("6"),
        o = e(n),
        p = a("7"),
        q = d(p),
        r = a("8"),
        s = d(r),
        t = a("9"),
        u = e(t),
        v = (0, q.default)('\n  (function (root, factory) {\n    if (typeof define === "function" && define.amd) {\n      define(AMD_ARGUMENTS, factory);\n    } else if (typeof exports === "object") {\n      factory(COMMON_ARGUMENTS);\n    } else {\n      factory(BROWSER_ARGUMENTS);\n    }\n  })(UMD_ROOT, function (FACTORY_PARAMETERS) {\n    FACTORY_BODY\n  });\n');
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("a", [], !1, function() {
    return {
      name: "babel-core",
      version: "6.18.0",
      description: "Babel compiler core.",
      author: "Sebastian McKenzie <sebmck@gmail.com>",
      homepage: "https://babeljs.io/",
      license: "MIT",
      repository: "https://github.com/babel/babel/tree/master/packages/babel-core",
      keywords: ["6to5", "babel", "classes", "const", "es6", "harmony", "let", "modules", "transpile", "transpiler", "var"],
      scripts: {
        bench: "make bench",
        test: "make test"
      },
      dependencies: {
        "babel-code-frame": "^6.16.0",
        "babel-generator": "^6.18.0",
        "babel-helpers": "^6.16.0",
        "babel-messages": "^6.8.0",
        "babel-template": "^6.16.0",
        "babel-runtime": "^6.9.1",
        "babel-register": "^6.18.0",
        "babel-traverse": "^6.18.0",
        "babel-types": "^6.18.0",
        babylon: "^6.11.0",
        "convert-source-map": "^1.1.0",
        debug: "^2.1.1",
        json5: "^0.5.0",
        lodash: "^4.2.0",
        minimatch: "^3.0.2",
        "path-is-absolute": "^1.0.0",
        private: "^0.1.6",
        slash: "^1.0.0",
        "source-map": "^0.5.0"
      },
      devDependencies: {
        "babel-helper-fixtures": "^6.18.0",
        "babel-helper-transform-fixture-test-runner": "^6.18.0",
        "babel-polyfill": "^6.16.0"
      }
    };
  }), a.registerDynamic("b", ["9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    a("3"), this || self;
    b.__esModule = !0, b.default = function(a, b, c) {
      if (a) {
        if ("Program" === a.type)
          return f.file(a, b || [], c || []);
        if ("File" === a.type)
          return a;
      }
      throw new Error("Not a valid ast?");
    };
    var e = a("9"),
        f = d(e);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("c", ["7"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("7"),
        f = d(e),
        g = {};
    return b.default = g, g.typeof = (0, f.default)('\n  (typeof Symbol === "function" && typeof Symbol.iterator === "symbol")\n    ? function (obj) { return typeof obj; }\n    : function (obj) {\n        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype\n          ? "symbol"\n          : typeof obj;\n      };\n'), g.jsx = (0, f.default)('\n  (function () {\n    var REACT_ELEMENT_TYPE = (typeof Symbol === "function" && Symbol.for && Symbol.for("react.element")) || 0xeac7;\n\n    return function createRawReactElement (type, props, key, children) {\n      var defaultProps = type && type.defaultProps;\n      var childrenLength = arguments.length - 3;\n\n      if (!props && childrenLength !== 0) {\n        // If we\'re going to assign props.children, we create a new object now\n        // to avoid mutating defaultProps.\n        props = {};\n      }\n      if (props && defaultProps) {\n        for (var propName in defaultProps) {\n          if (props[propName] === void 0) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n      } else if (!props) {\n        props = defaultProps || {};\n      }\n\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 3];\n        }\n        props.children = childArray;\n      }\n\n      return {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key === undefined ? null : \'\' + key,\n        ref: null,\n        props: props,\n        _owner: null,\n      };\n    };\n\n  })()\n'), g.asyncIterator = (0, f.default)('\n  (function (iterable) {\n    if (typeof Symbol === "function") {\n      if (Symbol.asyncIterator) {\n        var method = iterable[Symbol.asyncIterator];\n        if (method != null) return method.call(iterable);\n      }\n      if (Symbol.iterator) {\n        return iterable[Symbol.iterator]();\n      }\n    }\n    throw new TypeError("Object is not async iterable");\n  })\n'), g.asyncGenerator = (0, f.default)('\n  (function () {\n    function AwaitValue(value) {\n      this.value = value;\n    }\n\n    function AsyncGenerator(gen) {\n      var front, back;\n\n      function send(key, arg) {\n        return new Promise(function (resolve, reject) {\n          var request = {\n            key: key,\n            arg: arg,\n            resolve: resolve,\n            reject: reject,\n            next: null\n          };\n\n          if (back) {\n            back = back.next = request;\n          } else {\n            front = back = request;\n            resume(key, arg);\n          }\n        });\n      }\n\n      function resume(key, arg) {\n        try {\n          var result = gen[key](arg)\n          var value = result.value;\n          if (value instanceof AwaitValue) {\n            Promise.resolve(value.value).then(\n              function (arg) { resume("next", arg); },\n              function (arg) { resume("throw", arg); });\n          } else {\n            settle(result.done ? "return" : "normal", result.value);\n          }\n        } catch (err) {\n          settle("throw", err);\n        }\n      }\n\n      function settle(type, value) {\n        switch (type) {\n          case "return":\n            front.resolve({ value: value, done: true });\n            break;\n          case "throw":\n            front.reject(value);\n            break;\n          default:\n            front.resolve({ value: value, done: false });\n            break;\n        }\n\n        front = front.next;\n        if (front) {\n          resume(front.key, front.arg);\n        } else {\n          back = null;\n        }\n      }\n\n      this._invoke = send;\n\n      // Hide "return" method if generator return is not supported\n      if (typeof gen.return !== "function") {\n        this.return = undefined;\n      }\n    }\n\n    if (typeof Symbol === "function" && Symbol.asyncIterator) {\n      AsyncGenerator.prototype[Symbol.asyncIterator] = function () { return this; };\n    }\n\n    AsyncGenerator.prototype.next = function (arg) { return this._invoke("next", arg); };\n    AsyncGenerator.prototype.throw = function (arg) { return this._invoke("throw", arg); };\n    AsyncGenerator.prototype.return = function (arg) { return this._invoke("return", arg); };\n\n    return {\n      wrap: function (fn) {\n        return function () {\n          return new AsyncGenerator(fn.apply(this, arguments));\n        };\n      },\n      await: function (value) {\n        return new AwaitValue(value);\n      }\n    };\n\n  })()\n'), g.asyncGeneratorDelegate = (0, f.default)('\n  (function (inner, awaitWrap) {\n    var iter = {}, waiting = false;\n\n    function pump(key, value) {\n      waiting = true;\n      value = new Promise(function (resolve) { resolve(inner[key](value)); });\n      return { done: false, value: awaitWrap(value) };\n    };\n\n    if (typeof Symbol === "function" && Symbol.iterator) {\n      iter[Symbol.iterator] = function () { return this; };\n    }\n\n    iter.next = function (value) {\n      if (waiting) {\n        waiting = false;\n        return value;\n      }\n      return pump("next", value);\n    };\n\n    if (typeof inner.throw === "function") {\n      iter.throw = function (value) {\n        if (waiting) {\n          waiting = false;\n          throw value;\n        }\n        return pump("throw", value);\n      };\n    }\n\n    if (typeof inner.return === "function") {\n      iter.return = function (value) {\n        return pump("return", value);\n      };\n    }\n\n    return iter;\n  })\n'), g.asyncToGenerator = (0, f.default)('\n  (function (fn) {\n    return function () {\n      var gen = fn.apply(this, arguments);\n      return new Promise(function (resolve, reject) {\n        function step(key, arg) {\n          try {\n            var info = gen[key](arg);\n            var value = info.value;\n          } catch (error) {\n            reject(error);\n            return;\n          }\n\n          if (info.done) {\n            resolve(value);\n          } else {\n            return Promise.resolve(value).then(function (value) {\n              step("next", value);\n            }, function (err) {\n              step("throw", err);\n            });\n          }\n        }\n\n        return step("next");\n      });\n    };\n  })\n'), g.classCallCheck = (0, f.default)('\n  (function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError("Cannot call a class as a function");\n    }\n  });\n'), g.createClass = (0, f.default)('\n  (function() {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i ++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  })()\n'), g.defineEnumerableProperties = (0, f.default)('\n  (function (obj, descs) {\n    for (var key in descs) {\n      var desc = descs[key];\n      desc.configurable = desc.enumerable = true;\n      if ("value" in desc) desc.writable = true;\n      Object.defineProperty(obj, key, desc);\n    }\n    return obj;\n  })\n'), g.defaults = (0, f.default)("\n  (function (obj, defaults) {\n    var keys = Object.getOwnPropertyNames(defaults);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var value = Object.getOwnPropertyDescriptor(defaults, key);\n      if (value && value.configurable && obj[key] === undefined) {\n        Object.defineProperty(obj, key, value);\n      }\n    }\n    return obj;\n  })\n"), g.defineProperty = (0, f.default)("\n  (function (obj, key, value) {\n    // Shortcircuit the slow defineProperty path when possible.\n    // We are trying to avoid issues where setters defined on the\n    // prototype cause side effects under the fast path of simple\n    // assignment. By checking for existence of the property with\n    // the in operator, we can optimize most of this overhead away.\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  });\n"), g.extends = (0, f.default)("\n  Object.assign || (function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  })\n"), g.get = (0, f.default)('\n  (function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return get(parent, property, receiver);\n      }\n    } else if ("value" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  });\n'), g.inherits = (0, f.default)('\n  (function (subClass, superClass) {\n    if (typeof superClass !== "function" && superClass !== null) {\n      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  })\n'), g.instanceof = (0, f.default)('\n  (function (left, right) {\n    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  });\n'), g.interopRequireDefault = (0, f.default)("\n  (function (obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n  })\n"), g.interopRequireWildcard = (0, f.default)("\n  (function (obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    } else {\n      var newObj = {};\n      if (obj != null) {\n        for (var key in obj) {\n          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n        }\n      }\n      newObj.default = obj;\n      return newObj;\n    }\n  })\n"), g.newArrowCheck = (0, f.default)('\n  (function (innerThis, boundThis) {\n    if (innerThis !== boundThis) {\n      throw new TypeError("Cannot instantiate an arrow function");\n    }\n  });\n'), g.objectDestructuringEmpty = (0, f.default)('\n  (function (obj) {\n    if (obj == null) throw new TypeError("Cannot destructure undefined");\n  });\n'), g.objectWithoutProperties = (0, f.default)("\n  (function (obj, keys) {\n    var target = {};\n    for (var i in obj) {\n      if (keys.indexOf(i) >= 0) continue;\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n      target[i] = obj[i];\n    }\n    return target;\n  })\n"), g.possibleConstructorReturn = (0, f.default)('\n  (function (self, call) {\n    if (!self) {\n      throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n    }\n    return call && (typeof call === "object" || typeof call === "function") ? call : self;\n  });\n'), g.selfGlobal = (0, f.default)('\n  typeof global === "undefined" ? self : global\n'), g.set = (0, f.default)('\n  (function set(object, property, value, receiver) {\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent !== null) {\n        set(parent, property, value, receiver);\n      }\n    } else if ("value" in desc && desc.writable) {\n      desc.value = value;\n    } else {\n      var setter = desc.set;\n\n      if (setter !== undefined) {\n        setter.call(receiver, value);\n      }\n    }\n\n    return value;\n  });\n'), g.slicedToArray = (0, f.default)('\n  (function () {\n    // Broken out into a separate function to avoid deoptimizations due to the try/catch for the\n    // array iterator case.\n    function sliceIterator(arr, i) {\n      // this is an expanded form of `for...of` that properly supports abrupt completions of\n      // iterators etc. variable names have been minimised to reduce the size of this massive\n      // helper. sometimes spec compliancy is annoying :(\n      //\n      // _n = _iteratorNormalCompletion\n      // _d = _didIteratorError\n      // _e = _iteratorError\n      // _i = _iterator\n      // _s = _step\n\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i["return"]) _i["return"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError("Invalid attempt to destructure non-iterable instance");\n      }\n    };\n  })();\n'), g.slicedToArrayLoose = (0, f.default)('\n  (function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      var _arr = [];\n      for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {\n        _arr.push(_step.value);\n        if (i && _arr.length === i) break;\n      }\n      return _arr;\n    } else {\n      throw new TypeError("Invalid attempt to destructure non-iterable instance");\n    }\n  });\n'), g.taggedTemplateLiteral = (0, f.default)("\n  (function (strings, raw) {\n    return Object.freeze(Object.defineProperties(strings, {\n        raw: { value: Object.freeze(raw) }\n    }));\n  });\n"), g.taggedTemplateLiteralLoose = (0, f.default)("\n  (function (strings, raw) {\n    strings.raw = raw;\n    return strings;\n  });\n"), g.temporalRef = (0, f.default)('\n  (function (val, name, undef) {\n    if (val === undef) {\n      throw new ReferenceError(name + " is not defined - temporal dead zone");\n    } else {\n      return val;\n    }\n  })\n'), g.temporalUndefined = (0, f.default)("\n  ({})\n"), g.toArray = (0, f.default)("\n  (function (arr) {\n    return Array.isArray(arr) ? arr : Array.from(arr);\n  });\n"), g.toConsumableArray = (0, f.default)("\n  (function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  });\n"), c.exports = b.default, c.exports;
  }), a.registerDynamic("4", ["d", "c"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e(a) {
      var b = i.default[a];
      if (!b)
        throw new ReferenceError("Unknown helper " + a);
      return b().expression;
    }
    this || self;
    b.__esModule = !0, b.list = void 0;
    var f = a("d"),
        g = d(f);
    b.get = e;
    var h = a("c"),
        i = d(h);
    b.list = (0, g.default)(i.default).map(function(a) {
      return "_" === a[0] ? a.slice(1) : a;
    }).filter(function(a) {
      return "__esModule" !== a;
    });
    return b.default = e, c.exports;
  }), a.registerDynamic("e", ["f", "9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a, b) {
      var c = a.node,
          d = c.source ? c.source.value : null,
          e = b.metadata.modules.exports,
          f = a.get("declaration");
      if (f.isStatement()) {
        var g = f.getBindingIdentifiers();
        for (var h in g)
          e.exported.push(h), e.specifiers.push({
            kind: "local",
            local: h,
            exported: a.isExportDefaultDeclaration() ? "default" : h
          });
      }
      if (a.isExportNamedDeclaration() && c.specifiers)
        for (var j = c.specifiers,
            l = Array.isArray(j),
            m = 0,
            j = l ? j : (0, i.default)(j); ; ) {
          var n;
          if (l) {
            if (m >= j.length)
              break;
            n = j[m++];
          } else {
            if (m = j.next(), m.done)
              break;
            n = m.value;
          }
          var o = n,
              p = o.exported.name;
          e.exported.push(p), k.isExportDefaultSpecifier(o) && e.specifiers.push({
            kind: "external",
            local: p,
            exported: p,
            source: d
          }), k.isExportNamespaceSpecifier(o) && e.specifiers.push({
            kind: "external-namespace",
            exported: p,
            source: d
          });
          var q = o.local;
          q && (d && e.specifiers.push({
            kind: "external",
            local: q.name,
            exported: p,
            source: d
          }), d || e.specifiers.push({
            kind: "local",
            local: q.name,
            exported: p
          }));
        }
      a.isExportAllDeclaration() && e.specifiers.push({
        kind: "external-all",
        source: d
      });
    }
    function g(a) {
      a.skip();
    }
    a("3"), this || self;
    b.__esModule = !0, b.ImportDeclaration = b.ModuleDeclaration = void 0;
    var h = a("f"),
        i = e(h);
    b.ExportDeclaration = f, b.Scope = g;
    var j = a("9"),
        k = d(j);
    b.ModuleDeclaration = {enter: function(a, b) {
        var c = a.node;
        c.source && (c.source.value = b.resolveModuleSource(c.source.value));
      }}, b.ImportDeclaration = {exit: function(a, b) {
        var c = a.node,
            d = [],
            e = [];
        b.metadata.modules.imports.push({
          source: c.source.value,
          imported: e,
          specifiers: d
        });
        for (var f = a.get("specifiers"),
            g = Array.isArray(f),
            h = 0,
            f = g ? f : (0, i.default)(f); ; ) {
          var j;
          if (g) {
            if (h >= f.length)
              break;
            j = f[h++];
          } else {
            if (h = f.next(), h.done)
              break;
            j = h.value;
          }
          var k = j,
              l = k.node.local.name;
          if (k.isImportDefaultSpecifier() && (e.push("default"), d.push({
            kind: "named",
            imported: "default",
            local: l
          })), k.isImportSpecifier()) {
            var m = k.node.imported.name;
            e.push(m), d.push({
              kind: "named",
              imported: m,
              local: l
            });
          }
          k.isImportNamespaceSpecifier() && (e.push("*"), d.push({
            kind: "namespace",
            local: l
          }));
        }
      }};
    return c.exports;
  }), a.registerDynamic("10", ["11", "12", "13"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return new i(a, "base64").toString();
    }
    function e(a) {
      return a.split(",").pop();
    }
    function f(a, b) {
      var c = m.exec(a);
      m.lastIndex = 0;
      var d = c[1] || c[2],
          e = k.resolve(b, d);
      try {
        return j.readFileSync(e, "utf8");
      } catch (a) {
        throw new Error("An error occurred while trying to read the map file at " + e + "\n" + a);
      }
    }
    function g(a, b) {
      b = b || {}, b.isFileComment && (a = f(a, b.commentFileDir)), b.hasComment && (a = e(a)), b.isEncoded && (a = d(a)), (b.isJSON || b.isEncoded) && (a = JSON.parse(a)), this.sourcemap = a;
    }
    function h(a) {
      for (var c,
          d = a.split("\n"),
          e = d.length - 1; e > 0; e--)
        if (c = d[e], ~c.indexOf("sourceMappingURL=data:"))
          return b.fromComment(c);
    }
    var i = a("13"),
        j = (this || self, a("11")),
        k = a("12"),
        l = /^\s*\/(?:\/|\*)[@#]\s+sourceMappingURL=data:(?:application|text)\/json;(?:charset[:=]\S+;)?base64,(.*)$/gm,
        m = /(?:\/\/[@#][ \t]+sourceMappingURL=([^\s'"]+?)[ \t]*$)|(?:\/\*[@#][ \t]+sourceMappingURL=([^\*]+?)[ \t]*(?:\*\/){1}[ \t]*$)/gm;
    return g.prototype.toJSON = function(a) {
      return JSON.stringify(this.sourcemap, null, a);
    }, g.prototype.toBase64 = function() {
      var a = this.toJSON();
      return new i(a).toString("base64");
    }, g.prototype.toComment = function(a) {
      var b = this.toBase64(),
          c = "sourceMappingURL=data:application/json;base64," + b;
      return a && a.multiline ? "/*# " + c + " */" : "//# " + c;
    }, g.prototype.toObject = function() {
      return JSON.parse(this.toJSON());
    }, g.prototype.addProperty = function(a, b) {
      if (this.sourcemap.hasOwnProperty(a))
        throw new Error("property %s already exists on the sourcemap, use set property instead");
      return this.setProperty(a, b);
    }, g.prototype.setProperty = function(a, b) {
      return this.sourcemap[a] = b, this;
    }, g.prototype.getProperty = function(a) {
      return this.sourcemap[a];
    }, b.fromObject = function(a) {
      return new g(a);
    }, b.fromJSON = function(a) {
      return new g(a, {isJSON: !0});
    }, b.fromBase64 = function(a) {
      return new g(a, {isEncoded: !0});
    }, b.fromComment = function(a) {
      return a = a.replace(/^\/\*/g, "//").replace(/\*\/$/g, ""), new g(a, {
        isEncoded: !0,
        hasComment: !0
      });
    }, b.fromMapFileComment = function(a, b) {
      return new g(a, {
        commentFileDir: b,
        isFileComment: !0,
        isJSON: !0
      });
    }, b.fromSource = function(a, c) {
      if (c) {
        var d = h(a);
        return d ? d : null;
      }
      var e = a.match(l);
      return l.lastIndex = 0, e ? b.fromComment(e.pop()) : null;
    }, b.fromMapFileSource = function(a, c) {
      var d = a.match(m);
      return m.lastIndex = 0, d ? b.fromMapFileComment(d.pop(), c) : null;
    }, b.removeComments = function(a) {
      return l.lastIndex = 0, a.replace(l, "");
    }, b.removeMapFileComments = function(a) {
      return m.lastIndex = 0, a.replace(m, "");
    }, b.generateMapFileComment = function(a, b) {
      var c = "sourceMappingURL=" + a;
      return b && b.multiline ? "/*# " + c + " */" : "//# " + c;
    }, Object.defineProperty(b, "commentRegex", {get: function() {
        return l.lastIndex = 0, l;
      }}), Object.defineProperty(b, "mapFileCommentRegex", {get: function() {
        return m.lastIndex = 0, m;
      }}), c.exports;
  }), a.registerDynamic("14", ["17", "18", "19", "15", "16", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    a("3"), this || self;
    b.__esModule = !0;
    var e = a("17"),
        f = d(e),
        g = a("18"),
        h = d(g),
        i = a("19"),
        j = d(i),
        k = a("15"),
        l = d(k),
        m = a("16"),
        n = (d(m), function(a) {
          function b(c, d) {
            var e = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            (0, f.default)(this, b);
            var g = (0, h.default)(this, a.call(this));
            return g.plugin = d, g.key = d.key, g.file = c, g.opts = e, g;
          }
          return (0, j.default)(b, a), b.prototype.addHelper = function() {
            var a;
            return (a = this.file).addHelper.apply(a, arguments);
          }, b.prototype.addImport = function() {
            var a;
            return (a = this.file).addImport.apply(a, arguments);
          }, b.prototype.getModuleName = function() {
            var a;
            return (a = this.file).getModuleName.apply(a, arguments);
          }, b.prototype.buildCodeFrameError = function() {
            var a;
            return (a = this.file).buildCodeFrameError.apply(a, arguments);
          }, b;
        }(l.default));
    return b.default = n, c.exports = b.default, c.exports;
  }), a.registerDynamic("1a", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return c.exports = Number.isNaN || function(a) {
      return a !== a;
    }, c.exports;
  }), a.registerDynamic("1b", ["1a"], !0, function(a, b, c) {
    "use strict";
    var d = (this || self, a("1a"));
    return c.exports = Number.isFinite || function(a) {
      return !("number" != typeof a || d(a) || a === 1 / 0 || a === -(1 / 0));
    }, c.exports;
  }), a.registerDynamic("1c", ["1b"], !0, function(a, b, c) {
    "use strict";
    var d = (this || self, a("1b"));
    return c.exports = function(a, b) {
      if ("string" != typeof a)
        throw new TypeError("Expected `input` to be a string");
      if (b < 0 || !d(b))
        throw new TypeError("Expected `count` to be a positive finite number");
      var c = "";
      do
        1 & b && (c += a), a += a;
 while (b >>= 1);
      return c;
    }, c.exports;
  }), a.registerDynamic("1d", ["1c"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      var b = 0,
          c = 0,
          d = 0;
      for (var e in a) {
        var f = a[e],
            g = f[0],
            h = f[1];
        (g > c || g === c && h > d) && (c = g, d = h, b = Number(e));
      }
      return b;
    }
    var e = (this || self, a("1c")),
        f = /^(?:( )+|\t+)/;
    return c.exports = function(a) {
      if ("string" != typeof a)
        throw new TypeError("Expected a string");
      var b,
          c,
          g = 0,
          h = 0,
          i = 0,
          j = {};
      a.split(/\n/g).forEach(function(a) {
        if (a) {
          var d,
              e = a.match(f);
          e ? (d = e[0].length, e[1] ? h++ : g++) : d = 0;
          var k = d - i;
          i = d, k ? (c = k > 0, b = j[c ? k : -k], b ? b[0]++ : b = j[k] = [1, 0]) : b && (b[1] += Number(c));
        }
      });
      var k,
          l,
          m = d(j);
      return m ? h >= g ? (k = "space", l = e(" ", m)) : (k = "tab", l = e("\t", m)) : (k = null, l = ""), {
        amount: m,
        type: k,
        indent: l
      };
    }, c.exports;
  }), a.registerDynamic("1e", [], !0, function(a, b, c) {
    function d(a, c, e, f, g, h) {
      var i = Math.floor((c - a) / 2) + a,
          j = g(e, f[i], !0);
      return 0 === j ? i : j > 0 ? c - i > 1 ? d(i, c, e, f, g, h) : h == b.LEAST_UPPER_BOUND ? c < f.length ? c : -1 : i : i - a > 1 ? d(a, i, e, f, g, h) : h == b.LEAST_UPPER_BOUND ? i : a < 0 ? -1 : a;
    }
    this || self;
    return b.GREATEST_LOWER_BOUND = 1, b.LEAST_UPPER_BOUND = 2, b.search = function(a, c, e, f) {
      if (0 === c.length)
        return -1;
      var g = d(-1, c.length, a, c, e, f || b.GREATEST_LOWER_BOUND);
      if (g < 0)
        return -1;
      for (; g - 1 >= 0 && 0 === e(c[g], c[g - 1], !0); )
        --g;
      return g;
    }, c.exports;
  }), a.registerDynamic("1f", [], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = a[b];
      a[b] = a[c], a[c] = d;
    }
    function e(a, b) {
      return Math.round(a + Math.random() * (b - a));
    }
    function f(a, b, c, g) {
      if (c < g) {
        var h = e(c, g),
            i = c - 1;
        d(a, h, g);
        for (var j = a[g],
            k = c; k < g; k++)
          b(a[k], j) <= 0 && (i += 1, d(a, i, k));
        d(a, i + 1, k);
        var l = i + 1;
        f(a, b, c, l - 1), f(a, b, l + 1, g);
      }
    }
    this || self;
    return b.quickSort = function(a, b) {
      f(a, b, 0, a.length - 1);
    }, c.exports;
  }), a.registerDynamic("20", ["21", "1e", "22", "23", "1f"], !0, function(a, b, c) {
    function d(a) {
      var b = a;
      return "string" == typeof a && (b = JSON.parse(a.replace(/^\)\]\}'/, ""))), null != b.sections ? new g(b) : new e(b);
    }
    function e(a) {
      var b = a;
      "string" == typeof a && (b = JSON.parse(a.replace(/^\)\]\}'/, "")));
      var c = h.getArg(b, "version"),
          d = h.getArg(b, "sources"),
          e = h.getArg(b, "names", []),
          f = h.getArg(b, "sourceRoot", null),
          g = h.getArg(b, "sourcesContent", null),
          i = h.getArg(b, "mappings"),
          k = h.getArg(b, "file", null);
      if (c != this._version)
        throw new Error("Unsupported version: " + c);
      d = d.map(String).map(h.normalize).map(function(a) {
        return f && h.isAbsolute(f) && h.isAbsolute(a) ? h.relative(f, a) : a;
      }), this._names = j.fromArray(e.map(String), !0), this._sources = j.fromArray(d, !0), this.sourceRoot = f, this.sourcesContent = g, this._mappings = i, this.file = k;
    }
    function f() {
      this.generatedLine = 0, this.generatedColumn = 0, this.source = null, this.originalLine = null, this.originalColumn = null, this.name = null;
    }
    function g(a) {
      var b = a;
      "string" == typeof a && (b = JSON.parse(a.replace(/^\)\]\}'/, "")));
      var c = h.getArg(b, "version"),
          e = h.getArg(b, "sections");
      if (c != this._version)
        throw new Error("Unsupported version: " + c);
      this._sources = new j, this._names = new j;
      var f = {
        line: -1,
        column: 0
      };
      this._sections = e.map(function(a) {
        if (a.url)
          throw new Error("Support for url field in sections not implemented.");
        var b = h.getArg(a, "offset"),
            c = h.getArg(b, "line"),
            e = h.getArg(b, "column");
        if (c < f.line || c === f.line && e < f.column)
          throw new Error("Section offsets must be ordered and non-overlapping.");
        return f = b, {
          generatedOffset: {
            generatedLine: c + 1,
            generatedColumn: e + 1
          },
          consumer: new d(h.getArg(a, "map"))
        };
      });
    }
    var h = (this || self, a("21")),
        i = a("1e"),
        j = a("22").ArraySet,
        k = a("23"),
        l = a("1f").quickSort;
    return d.fromSourceMap = function(a) {
      return e.fromSourceMap(a);
    }, d.prototype._version = 3, d.prototype.__generatedMappings = null, Object.defineProperty(d.prototype, "_generatedMappings", {get: function() {
        return this.__generatedMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__generatedMappings;
      }}), d.prototype.__originalMappings = null, Object.defineProperty(d.prototype, "_originalMappings", {get: function() {
        return this.__originalMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__originalMappings;
      }}), d.prototype._charIsMappingSeparator = function(a, b) {
      var c = a.charAt(b);
      return ";" === c || "," === c;
    }, d.prototype._parseMappings = function(a, b) {
      throw new Error("Subclasses must implement _parseMappings");
    }, d.GENERATED_ORDER = 1, d.ORIGINAL_ORDER = 2, d.GREATEST_LOWER_BOUND = 1, d.LEAST_UPPER_BOUND = 2, d.prototype.eachMapping = function(a, b, c) {
      var e,
          f = b || null,
          g = c || d.GENERATED_ORDER;
      switch (g) {
        case d.GENERATED_ORDER:
          e = this._generatedMappings;
          break;
        case d.ORIGINAL_ORDER:
          e = this._originalMappings;
          break;
        default:
          throw new Error("Unknown order of iteration.");
      }
      var i = this.sourceRoot;
      e.map(function(a) {
        var b = null === a.source ? null : this._sources.at(a.source);
        return null != b && null != i && (b = h.join(i, b)), {
          source: b,
          generatedLine: a.generatedLine,
          generatedColumn: a.generatedColumn,
          originalLine: a.originalLine,
          originalColumn: a.originalColumn,
          name: null === a.name ? null : this._names.at(a.name)
        };
      }, this).forEach(a, f);
    }, d.prototype.allGeneratedPositionsFor = function(a) {
      var b = h.getArg(a, "line"),
          c = {
            source: h.getArg(a, "source"),
            originalLine: b,
            originalColumn: h.getArg(a, "column", 0)
          };
      if (null != this.sourceRoot && (c.source = h.relative(this.sourceRoot, c.source)), !this._sources.has(c.source))
        return [];
      c.source = this._sources.indexOf(c.source);
      var d = [],
          e = this._findMapping(c, this._originalMappings, "originalLine", "originalColumn", h.compareByOriginalPositions, i.LEAST_UPPER_BOUND);
      if (e >= 0) {
        var f = this._originalMappings[e];
        if (void 0 === a.column)
          for (var g = f.originalLine; f && f.originalLine === g; )
            d.push({
              line: h.getArg(f, "generatedLine", null),
              column: h.getArg(f, "generatedColumn", null),
              lastColumn: h.getArg(f, "lastGeneratedColumn", null)
            }), f = this._originalMappings[++e];
        else
          for (var j = f.originalColumn; f && f.originalLine === b && f.originalColumn == j; )
            d.push({
              line: h.getArg(f, "generatedLine", null),
              column: h.getArg(f, "generatedColumn", null),
              lastColumn: h.getArg(f, "lastGeneratedColumn", null)
            }), f = this._originalMappings[++e];
      }
      return d;
    }, b.SourceMapConsumer = d, e.prototype = Object.create(d.prototype), e.prototype.consumer = d, e.fromSourceMap = function(a) {
      var b = Object.create(e.prototype),
          c = b._names = j.fromArray(a._names.toArray(), !0),
          d = b._sources = j.fromArray(a._sources.toArray(), !0);
      b.sourceRoot = a._sourceRoot, b.sourcesContent = a._generateSourcesContent(b._sources.toArray(), b.sourceRoot), b.file = a._file;
      for (var g = a._mappings.toArray().slice(),
          i = b.__generatedMappings = [],
          k = b.__originalMappings = [],
          m = 0,
          n = g.length; m < n; m++) {
        var o = g[m],
            p = new f;
        p.generatedLine = o.generatedLine, p.generatedColumn = o.generatedColumn, o.source && (p.source = d.indexOf(o.source), p.originalLine = o.originalLine, p.originalColumn = o.originalColumn, o.name && (p.name = c.indexOf(o.name)), k.push(p)), i.push(p);
      }
      return l(b.__originalMappings, h.compareByOriginalPositions), b;
    }, e.prototype._version = 3, Object.defineProperty(e.prototype, "sources", {get: function() {
        return this._sources.toArray().map(function(a) {
          return null != this.sourceRoot ? h.join(this.sourceRoot, a) : a;
        }, this);
      }}), e.prototype._parseMappings = function(a, b) {
      for (var c,
          d,
          e,
          g,
          i,
          j = 1,
          m = 0,
          n = 0,
          o = 0,
          p = 0,
          q = 0,
          r = a.length,
          s = 0,
          t = {},
          u = {},
          v = [],
          w = []; s < r; )
        if (";" === a.charAt(s))
          j++, s++, m = 0;
        else if ("," === a.charAt(s))
          s++;
        else {
          for (c = new f, c.generatedLine = j, g = s; g < r && !this._charIsMappingSeparator(a, g); g++)
            ;
          if (d = a.slice(s, g), e = t[d])
            s += d.length;
          else {
            for (e = []; s < g; )
              k.decode(a, s, u), i = u.value, s = u.rest, e.push(i);
            if (2 === e.length)
              throw new Error("Found a source, but no line and column");
            if (3 === e.length)
              throw new Error("Found a source and line, but no column");
            t[d] = e;
          }
          c.generatedColumn = m + e[0], m = c.generatedColumn, e.length > 1 && (c.source = p + e[1], p += e[1], c.originalLine = n + e[2], n = c.originalLine, c.originalLine += 1, c.originalColumn = o + e[3], o = c.originalColumn, e.length > 4 && (c.name = q + e[4], q += e[4])), w.push(c), "number" == typeof c.originalLine && v.push(c);
        }
      l(w, h.compareByGeneratedPositionsDeflated), this.__generatedMappings = w, l(v, h.compareByOriginalPositions), this.__originalMappings = v;
    }, e.prototype._findMapping = function(a, b, c, d, e, f) {
      if (a[c] <= 0)
        throw new TypeError("Line must be greater than or equal to 1, got " + a[c]);
      if (a[d] < 0)
        throw new TypeError("Column must be greater than or equal to 0, got " + a[d]);
      return i.search(a, b, e, f);
    }, e.prototype.computeColumnSpans = function() {
      for (var a = 0; a < this._generatedMappings.length; ++a) {
        var b = this._generatedMappings[a];
        if (a + 1 < this._generatedMappings.length) {
          var c = this._generatedMappings[a + 1];
          if (b.generatedLine === c.generatedLine) {
            b.lastGeneratedColumn = c.generatedColumn - 1;
            continue;
          }
        }
        b.lastGeneratedColumn = 1 / 0;
      }
    }, e.prototype.originalPositionFor = function(a) {
      var b = {
        generatedLine: h.getArg(a, "line"),
        generatedColumn: h.getArg(a, "column")
      },
          c = this._findMapping(b, this._generatedMappings, "generatedLine", "generatedColumn", h.compareByGeneratedPositionsDeflated, h.getArg(a, "bias", d.GREATEST_LOWER_BOUND));
      if (c >= 0) {
        var e = this._generatedMappings[c];
        if (e.generatedLine === b.generatedLine) {
          var f = h.getArg(e, "source", null);
          null !== f && (f = this._sources.at(f), null != this.sourceRoot && (f = h.join(this.sourceRoot, f)));
          var g = h.getArg(e, "name", null);
          return null !== g && (g = this._names.at(g)), {
            source: f,
            line: h.getArg(e, "originalLine", null),
            column: h.getArg(e, "originalColumn", null),
            name: g
          };
        }
      }
      return {
        source: null,
        line: null,
        column: null,
        name: null
      };
    }, e.prototype.hasContentsOfAllSources = function() {
      return !!this.sourcesContent && (this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function(a) {
        return null == a;
      }));
    }, e.prototype.sourceContentFor = function(a, b) {
      if (!this.sourcesContent)
        return null;
      if (null != this.sourceRoot && (a = h.relative(this.sourceRoot, a)), this._sources.has(a))
        return this.sourcesContent[this._sources.indexOf(a)];
      var c;
      if (null != this.sourceRoot && (c = h.urlParse(this.sourceRoot))) {
        var d = a.replace(/^file:\/\//, "");
        if ("file" == c.scheme && this._sources.has(d))
          return this.sourcesContent[this._sources.indexOf(d)];
        if ((!c.path || "/" == c.path) && this._sources.has("/" + a))
          return this.sourcesContent[this._sources.indexOf("/" + a)];
      }
      if (b)
        return null;
      throw new Error('"' + a + '" is not in the SourceMap.');
    }, e.prototype.generatedPositionFor = function(a) {
      var b = h.getArg(a, "source");
      if (null != this.sourceRoot && (b = h.relative(this.sourceRoot, b)), !this._sources.has(b))
        return {
          line: null,
          column: null,
          lastColumn: null
        };
      b = this._sources.indexOf(b);
      var c = {
        source: b,
        originalLine: h.getArg(a, "line"),
        originalColumn: h.getArg(a, "column")
      },
          e = this._findMapping(c, this._originalMappings, "originalLine", "originalColumn", h.compareByOriginalPositions, h.getArg(a, "bias", d.GREATEST_LOWER_BOUND));
      if (e >= 0) {
        var f = this._originalMappings[e];
        if (f.source === c.source)
          return {
            line: h.getArg(f, "generatedLine", null),
            column: h.getArg(f, "generatedColumn", null),
            lastColumn: h.getArg(f, "lastGeneratedColumn", null)
          };
      }
      return {
        line: null,
        column: null,
        lastColumn: null
      };
    }, b.BasicSourceMapConsumer = e, g.prototype = Object.create(d.prototype), g.prototype.constructor = d, g.prototype._version = 3, Object.defineProperty(g.prototype, "sources", {get: function() {
        for (var a = [],
            b = 0; b < this._sections.length; b++)
          for (var c = 0; c < this._sections[b].consumer.sources.length; c++)
            a.push(this._sections[b].consumer.sources[c]);
        return a;
      }}), g.prototype.originalPositionFor = function(a) {
      var b = {
        generatedLine: h.getArg(a, "line"),
        generatedColumn: h.getArg(a, "column")
      },
          c = i.search(b, this._sections, function(a, b) {
            var c = a.generatedLine - b.generatedOffset.generatedLine;
            return c ? c : a.generatedColumn - b.generatedOffset.generatedColumn;
          }),
          d = this._sections[c];
      return d ? d.consumer.originalPositionFor({
        line: b.generatedLine - (d.generatedOffset.generatedLine - 1),
        column: b.generatedColumn - (d.generatedOffset.generatedLine === b.generatedLine ? d.generatedOffset.generatedColumn - 1 : 0),
        bias: a.bias
      }) : {
        source: null,
        line: null,
        column: null,
        name: null
      };
    }, g.prototype.hasContentsOfAllSources = function() {
      return this._sections.every(function(a) {
        return a.consumer.hasContentsOfAllSources();
      });
    }, g.prototype.sourceContentFor = function(a, b) {
      for (var c = 0; c < this._sections.length; c++) {
        var d = this._sections[c],
            e = d.consumer.sourceContentFor(a, !0);
        if (e)
          return e;
      }
      if (b)
        return null;
      throw new Error('"' + a + '" is not in the SourceMap.');
    }, g.prototype.generatedPositionFor = function(a) {
      for (var b = 0; b < this._sections.length; b++) {
        var c = this._sections[b];
        if (c.consumer.sources.indexOf(h.getArg(a, "source")) !== -1) {
          var d = c.consumer.generatedPositionFor(a);
          if (d) {
            var e = {
              line: d.line + (c.generatedOffset.generatedLine - 1),
              column: d.column + (c.generatedOffset.generatedLine === d.line ? c.generatedOffset.generatedColumn - 1 : 0)
            };
            return e;
          }
        }
      }
      return {
        line: null,
        column: null
      };
    }, g.prototype._parseMappings = function(a, b) {
      this.__generatedMappings = [], this.__originalMappings = [];
      for (var c = 0; c < this._sections.length; c++)
        for (var d = this._sections[c],
            e = d.consumer._generatedMappings,
            f = 0; f < e.length; f++) {
          var g = e[f],
              i = d.consumer._sources.at(g.source);
          null !== d.consumer.sourceRoot && (i = h.join(d.consumer.sourceRoot, i)), this._sources.add(i), i = this._sources.indexOf(i);
          var j = d.consumer._names.at(g.name);
          this._names.add(j), j = this._names.indexOf(j);
          var k = {
            source: i,
            generatedLine: g.generatedLine + (d.generatedOffset.generatedLine - 1),
            generatedColumn: g.generatedColumn + (d.generatedOffset.generatedLine === g.generatedLine ? d.generatedOffset.generatedColumn - 1 : 0),
            originalLine: g.originalLine,
            originalColumn: g.originalColumn,
            name: j
          };
          this.__generatedMappings.push(k), "number" == typeof k.originalLine && this.__originalMappings.push(k);
        }
      l(this.__generatedMappings, h.compareByGeneratedPositionsDeflated), l(this.__originalMappings, h.compareByOriginalPositions);
    }, b.IndexedSourceMapConsumer = g, c.exports;
  }), a.registerDynamic("24", [], !0, function(a, b, c) {
    var d = (this || self, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(""));
    return b.encode = function(a) {
      if (0 <= a && a < d.length)
        return d[a];
      throw new TypeError("Must be between 0 and 63: " + a);
    }, b.decode = function(a) {
      var b = 65,
          c = 90,
          d = 97,
          e = 122,
          f = 48,
          g = 57,
          h = 43,
          i = 47,
          j = 26,
          k = 52;
      return b <= a && a <= c ? a - b : d <= a && a <= e ? a - d + j : f <= a && a <= g ? a - f + k : a == h ? 62 : a == i ? 63 : -1;
    }, c.exports;
  }), a.registerDynamic("23", ["24"], !0, function(a, b, c) {
    function d(a) {
      return a < 0 ? (-a << 1) + 1 : (a << 1) + 0;
    }
    function e(a) {
      var b = 1 === (1 & a),
          c = a >> 1;
      return b ? -c : c;
    }
    var f = (this || self, a("24")),
        g = 5,
        h = 1 << g,
        i = h - 1,
        j = h;
    return b.encode = function(a) {
      var b,
          c = "",
          e = d(a);
      do
        b = e & i, e >>>= g, e > 0 && (b |= j), c += f.encode(b);
 while (e > 0);
      return c;
    }, b.decode = function(a, b, c) {
      var d,
          h,
          k = a.length,
          l = 0,
          m = 0;
      do {
        if (b >= k)
          throw new Error("Expected more digits in base 64 VLQ value.");
        if (h = f.decode(a.charCodeAt(b++)), h === -1)
          throw new Error("Invalid base64 digit: " + a.charAt(b - 1));
        d = !!(h & j), h &= i, l += h << m, m += g;
      } while (d);
      c.value = e(l), c.rest = b;
    }, c.exports;
  }), a.registerDynamic("22", ["21"], !0, function(a, b, c) {
    function d() {
      this._array = [], this._set = Object.create(null);
    }
    var e = (this || self, a("21")),
        f = Object.prototype.hasOwnProperty;
    return d.fromArray = function(a, b) {
      for (var c = new d,
          e = 0,
          f = a.length; e < f; e++)
        c.add(a[e], b);
      return c;
    }, d.prototype.size = function() {
      return Object.getOwnPropertyNames(this._set).length;
    }, d.prototype.add = function(a, b) {
      var c = e.toSetString(a),
          d = f.call(this._set, c),
          g = this._array.length;
      d && !b || this._array.push(a), d || (this._set[c] = g);
    }, d.prototype.has = function(a) {
      var b = e.toSetString(a);
      return f.call(this._set, b);
    }, d.prototype.indexOf = function(a) {
      var b = e.toSetString(a);
      if (f.call(this._set, b))
        return this._set[b];
      throw new Error('"' + a + '" is not in the set.');
    }, d.prototype.at = function(a) {
      if (a >= 0 && a < this._array.length)
        return this._array[a];
      throw new Error("No element indexed by " + a);
    }, d.prototype.toArray = function() {
      return this._array.slice();
    }, b.ArraySet = d, c.exports;
  }), a.registerDynamic("25", ["21"], !0, function(a, b, c) {
    function d(a, b) {
      var c = a.generatedLine,
          d = b.generatedLine,
          e = a.generatedColumn,
          g = b.generatedColumn;
      return d > c || d == c && g >= e || f.compareByGeneratedPositionsInflated(a, b) <= 0;
    }
    function e() {
      this._array = [], this._sorted = !0, this._last = {
        generatedLine: -1,
        generatedColumn: 0
      };
    }
    var f = (this || self, a("21"));
    return e.prototype.unsortedForEach = function(a, b) {
      this._array.forEach(a, b);
    }, e.prototype.add = function(a) {
      d(this._last, a) ? (this._last = a, this._array.push(a)) : (this._sorted = !1, this._array.push(a));
    }, e.prototype.toArray = function() {
      return this._sorted || (this._array.sort(f.compareByGeneratedPositionsInflated), this._sorted = !0), this._array;
    }, b.MappingList = e, c.exports;
  }), a.registerDynamic("26", ["23", "21", "22", "25"], !0, function(a, b, c) {
    function d(a) {
      a || (a = {}), this._file = f.getArg(a, "file", null), this._sourceRoot = f.getArg(a, "sourceRoot", null), this._skipValidation = f.getArg(a, "skipValidation", !1), this._sources = new g, this._names = new g, this._mappings = new h, this._sourcesContents = null;
    }
    var e = (this || self, a("23")),
        f = a("21"),
        g = a("22").ArraySet,
        h = a("25").MappingList;
    return d.prototype._version = 3, d.fromSourceMap = function(a) {
      var b = a.sourceRoot,
          c = new d({
            file: a.file,
            sourceRoot: b
          });
      return a.eachMapping(function(a) {
        var d = {generated: {
            line: a.generatedLine,
            column: a.generatedColumn
          }};
        null != a.source && (d.source = a.source, null != b && (d.source = f.relative(b, d.source)), d.original = {
          line: a.originalLine,
          column: a.originalColumn
        }, null != a.name && (d.name = a.name)), c.addMapping(d);
      }), a.sources.forEach(function(b) {
        var d = a.sourceContentFor(b);
        null != d && c.setSourceContent(b, d);
      }), c;
    }, d.prototype.addMapping = function(a) {
      var b = f.getArg(a, "generated"),
          c = f.getArg(a, "original", null),
          d = f.getArg(a, "source", null),
          e = f.getArg(a, "name", null);
      this._skipValidation || this._validateMapping(b, c, d, e), null != d && (d = String(d), this._sources.has(d) || this._sources.add(d)), null != e && (e = String(e), this._names.has(e) || this._names.add(e)), this._mappings.add({
        generatedLine: b.line,
        generatedColumn: b.column,
        originalLine: null != c && c.line,
        originalColumn: null != c && c.column,
        source: d,
        name: e
      });
    }, d.prototype.setSourceContent = function(a, b) {
      var c = a;
      null != this._sourceRoot && (c = f.relative(this._sourceRoot, c)), null != b ? (this._sourcesContents || (this._sourcesContents = Object.create(null)), this._sourcesContents[f.toSetString(c)] = b) : this._sourcesContents && (delete this._sourcesContents[f.toSetString(c)], 0 === Object.keys(this._sourcesContents).length && (this._sourcesContents = null));
    }, d.prototype.applySourceMap = function(a, b, c) {
      var d = b;
      if (null == b) {
        if (null == a.file)
          throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.');
        d = a.file;
      }
      var e = this._sourceRoot;
      null != e && (d = f.relative(e, d));
      var h = new g,
          i = new g;
      this._mappings.unsortedForEach(function(b) {
        if (b.source === d && null != b.originalLine) {
          var g = a.originalPositionFor({
            line: b.originalLine,
            column: b.originalColumn
          });
          null != g.source && (b.source = g.source, null != c && (b.source = f.join(c, b.source)), null != e && (b.source = f.relative(e, b.source)), b.originalLine = g.line, b.originalColumn = g.column, null != g.name && (b.name = g.name));
        }
        var j = b.source;
        null == j || h.has(j) || h.add(j);
        var k = b.name;
        null == k || i.has(k) || i.add(k);
      }, this), this._sources = h, this._names = i, a.sources.forEach(function(b) {
        var d = a.sourceContentFor(b);
        null != d && (null != c && (b = f.join(c, b)), null != e && (b = f.relative(e, b)), this.setSourceContent(b, d));
      }, this);
    }, d.prototype._validateMapping = function(a, b, c, d) {
      if ((!(a && "line" in a && "column" in a && a.line > 0 && a.column >= 0) || b || c || d) && !(a && "line" in a && "column" in a && b && "line" in b && "column" in b && a.line > 0 && a.column >= 0 && b.line > 0 && b.column >= 0 && c))
        throw new Error("Invalid mapping: " + JSON.stringify({
          generated: a,
          source: c,
          original: b,
          name: d
        }));
    }, d.prototype._serializeMappings = function() {
      for (var a,
          b,
          c,
          d,
          g = 0,
          h = 1,
          i = 0,
          j = 0,
          k = 0,
          l = 0,
          m = "",
          n = this._mappings.toArray(),
          o = 0,
          p = n.length; o < p; o++) {
        if (b = n[o], a = "", b.generatedLine !== h)
          for (g = 0; b.generatedLine !== h; )
            a += ";", h++;
        else if (o > 0) {
          if (!f.compareByGeneratedPositionsInflated(b, n[o - 1]))
            continue;
          a += ",";
        }
        a += e.encode(b.generatedColumn - g), g = b.generatedColumn, null != b.source && (d = this._sources.indexOf(b.source), a += e.encode(d - l), l = d, a += e.encode(b.originalLine - 1 - j), j = b.originalLine - 1, a += e.encode(b.originalColumn - i), i = b.originalColumn, null != b.name && (c = this._names.indexOf(b.name), a += e.encode(c - k), k = c)), m += a;
      }
      return m;
    }, d.prototype._generateSourcesContent = function(a, b) {
      return a.map(function(a) {
        if (!this._sourcesContents)
          return null;
        null != b && (a = f.relative(b, a));
        var c = f.toSetString(a);
        return Object.prototype.hasOwnProperty.call(this._sourcesContents, c) ? this._sourcesContents[c] : null;
      }, this);
    }, d.prototype.toJSON = function() {
      var a = {
        version: this._version,
        sources: this._sources.toArray(),
        names: this._names.toArray(),
        mappings: this._serializeMappings()
      };
      return null != this._file && (a.file = this._file), null != this._sourceRoot && (a.sourceRoot = this._sourceRoot), this._sourcesContents && (a.sourcesContent = this._generateSourcesContent(a.sources, a.sourceRoot)), a;
    }, d.prototype.toString = function() {
      return JSON.stringify(this.toJSON());
    }, b.SourceMapGenerator = d, c.exports;
  }), a.registerDynamic("21", [], !0, function(a, b, c) {
    function d(a, b, c) {
      if (b in a)
        return a[b];
      if (3 === arguments.length)
        return c;
      throw new Error('"' + b + '" is a required argument.');
    }
    function e(a) {
      var b = a.match(r);
      return b ? {
        scheme: b[1],
        auth: b[2],
        host: b[3],
        port: b[4],
        path: b[5]
      } : null;
    }
    function f(a) {
      var b = "";
      return a.scheme && (b += a.scheme + ":"), b += "//", a.auth && (b += a.auth + "@"), a.host && (b += a.host), a.port && (b += ":" + a.port), a.path && (b += a.path), b;
    }
    function g(a) {
      var c = a,
          d = e(a);
      if (d) {
        if (!d.path)
          return a;
        c = d.path;
      }
      for (var g,
          h = b.isAbsolute(c),
          i = c.split(/\/+/),
          j = 0,
          k = i.length - 1; k >= 0; k--)
        g = i[k], "." === g ? i.splice(k, 1) : ".." === g ? j++ : j > 0 && ("" === g ? (i.splice(k + 1, j), j = 0) : (i.splice(k, 2), j--));
      return c = i.join("/"), "" === c && (c = h ? "/" : "."), d ? (d.path = c, f(d)) : c;
    }
    function h(a, b) {
      "" === a && (a = "."), "" === b && (b = ".");
      var c = e(b),
          d = e(a);
      if (d && (a = d.path || "/"), c && !c.scheme)
        return d && (c.scheme = d.scheme), f(c);
      if (c || b.match(s))
        return b;
      if (d && !d.host && !d.path)
        return d.host = b, f(d);
      var h = "/" === b.charAt(0) ? b : g(a.replace(/\/+$/, "") + "/" + b);
      return d ? (d.path = h, f(d)) : h;
    }
    function i(a, b) {
      "" === a && (a = "."), a = a.replace(/\/$/, "");
      for (var c = 0; 0 !== b.indexOf(a + "/"); ) {
        var d = a.lastIndexOf("/");
        if (d < 0)
          return b;
        if (a = a.slice(0, d), a.match(/^([^\/]+:\/)?\/*$/))
          return b;
        ++c;
      }
      return Array(c + 1).join("../") + b.substr(a.length + 1);
    }
    function j(a) {
      return a;
    }
    function k(a) {
      return m(a) ? "$" + a : a;
    }
    function l(a) {
      return m(a) ? a.slice(1) : a;
    }
    function m(a) {
      if (!a)
        return !1;
      var b = a.length;
      if (b < 9)
        return !1;
      if (95 !== a.charCodeAt(b - 1) || 95 !== a.charCodeAt(b - 2) || 111 !== a.charCodeAt(b - 3) || 116 !== a.charCodeAt(b - 4) || 111 !== a.charCodeAt(b - 5) || 114 !== a.charCodeAt(b - 6) || 112 !== a.charCodeAt(b - 7) || 95 !== a.charCodeAt(b - 8) || 95 !== a.charCodeAt(b - 9))
        return !1;
      for (var c = b - 10; c >= 0; c--)
        if (36 !== a.charCodeAt(c))
          return !1;
      return !0;
    }
    function n(a, b, c) {
      var d = a.source - b.source;
      return 0 !== d ? d : (d = a.originalLine - b.originalLine, 0 !== d ? d : (d = a.originalColumn - b.originalColumn, 0 !== d || c ? d : (d = a.generatedColumn - b.generatedColumn, 0 !== d ? d : (d = a.generatedLine - b.generatedLine, 0 !== d ? d : a.name - b.name))));
    }
    function o(a, b, c) {
      var d = a.generatedLine - b.generatedLine;
      return 0 !== d ? d : (d = a.generatedColumn - b.generatedColumn, 0 !== d || c ? d : (d = a.source - b.source, 0 !== d ? d : (d = a.originalLine - b.originalLine, 0 !== d ? d : (d = a.originalColumn - b.originalColumn, 0 !== d ? d : a.name - b.name))));
    }
    function p(a, b) {
      return a === b ? 0 : a > b ? 1 : -1;
    }
    function q(a, b) {
      var c = a.generatedLine - b.generatedLine;
      return 0 !== c ? c : (c = a.generatedColumn - b.generatedColumn, 0 !== c ? c : (c = p(a.source, b.source), 0 !== c ? c : (c = a.originalLine - b.originalLine, 0 !== c ? c : (c = a.originalColumn - b.originalColumn, 0 !== c ? c : p(a.name, b.name)))));
    }
    this || self;
    b.getArg = d;
    var r = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/,
        s = /^data:.+\,.+$/;
    b.urlParse = e, b.urlGenerate = f, b.normalize = g, b.join = h, b.isAbsolute = function(a) {
      return "/" === a.charAt(0) || !!a.match(r);
    }, b.relative = i;
    var t = function() {
      var a = Object.create(null);
      return !("__proto__" in a);
    }();
    return b.toSetString = t ? j : k, b.fromSetString = t ? j : l, b.compareByOriginalPositions = n, b.compareByGeneratedPositionsDeflated = o, b.compareByGeneratedPositionsInflated = q, c.exports;
  }), a.registerDynamic("27", ["26", "21"], !0, function(a, b, c) {
    function d(a, b, c, d, e) {
      this.children = [], this.sourceContents = {}, this.line = null == a ? null : a, this.column = null == b ? null : b, this.source = null == c ? null : c, this.name = null == e ? null : e, this[i] = !0, null != d && this.add(d);
    }
    var e = (this || self, a("26").SourceMapGenerator),
        f = a("21"),
        g = /(\r?\n)/,
        h = 10,
        i = "$$$isSourceNode$$$";
    return d.fromStringWithSourceMap = function(a, b, c) {
      function e(a, b) {
        if (null === a || void 0 === a.source)
          h.add(b);
        else {
          var e = c ? f.join(c, a.source) : a.source;
          h.add(new d(a.originalLine, a.originalColumn, e, b, a.name));
        }
      }
      var h = new d,
          i = a.split(g),
          j = function() {
            var a = i.shift(),
                b = i.shift() || "";
            return a + b;
          },
          k = 1,
          l = 0,
          m = null;
      return b.eachMapping(function(a) {
        if (null !== m) {
          if (!(k < a.generatedLine)) {
            var b = i[0],
                c = b.substr(0, a.generatedColumn - l);
            return i[0] = b.substr(a.generatedColumn - l), l = a.generatedColumn, e(m, c), void(m = a);
          }
          e(m, j()), k++, l = 0;
        }
        for (; k < a.generatedLine; )
          h.add(j()), k++;
        if (l < a.generatedColumn) {
          var b = i[0];
          h.add(b.substr(0, a.generatedColumn)), i[0] = b.substr(a.generatedColumn), l = a.generatedColumn;
        }
        m = a;
      }, this), i.length > 0 && (m && e(m, j()), h.add(i.join(""))), b.sources.forEach(function(a) {
        var d = b.sourceContentFor(a);
        null != d && (null != c && (a = f.join(c, a)), h.setSourceContent(a, d));
      }), h;
    }, d.prototype.add = function(a) {
      if (Array.isArray(a))
        a.forEach(function(a) {
          this.add(a);
        }, this);
      else {
        if (!a[i] && "string" != typeof a)
          throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + a);
        a && this.children.push(a);
      }
      return this;
    }, d.prototype.prepend = function(a) {
      if (Array.isArray(a))
        for (var b = a.length - 1; b >= 0; b--)
          this.prepend(a[b]);
      else {
        if (!a[i] && "string" != typeof a)
          throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + a);
        this.children.unshift(a);
      }
      return this;
    }, d.prototype.walk = function(a) {
      for (var b,
          c = 0,
          d = this.children.length; c < d; c++)
        b = this.children[c], b[i] ? b.walk(a) : "" !== b && a(b, {
          source: this.source,
          line: this.line,
          column: this.column,
          name: this.name
        });
    }, d.prototype.join = function(a) {
      var b,
          c,
          d = this.children.length;
      if (d > 0) {
        for (b = [], c = 0; c < d - 1; c++)
          b.push(this.children[c]), b.push(a);
        b.push(this.children[c]), this.children = b;
      }
      return this;
    }, d.prototype.replaceRight = function(a, b) {
      var c = this.children[this.children.length - 1];
      return c[i] ? c.replaceRight(a, b) : "string" == typeof c ? this.children[this.children.length - 1] = c.replace(a, b) : this.children.push("".replace(a, b)), this;
    }, d.prototype.setSourceContent = function(a, b) {
      this.sourceContents[f.toSetString(a)] = b;
    }, d.prototype.walkSourceContents = function(a) {
      for (var b = 0,
          c = this.children.length; b < c; b++)
        this.children[b][i] && this.children[b].walkSourceContents(a);
      for (var d = Object.keys(this.sourceContents),
          b = 0,
          c = d.length; b < c; b++)
        a(f.fromSetString(d[b]), this.sourceContents[d[b]]);
    }, d.prototype.toString = function() {
      var a = "";
      return this.walk(function(b) {
        a += b;
      }), a;
    }, d.prototype.toStringWithSourceMap = function(a) {
      var b = {
        code: "",
        line: 1,
        column: 0
      },
          c = new e(a),
          d = !1,
          f = null,
          g = null,
          i = null,
          j = null;
      return this.walk(function(a, e) {
        b.code += a, null !== e.source && null !== e.line && null !== e.column ? (f === e.source && g === e.line && i === e.column && j === e.name || c.addMapping({
          source: e.source,
          original: {
            line: e.line,
            column: e.column
          },
          generated: {
            line: b.line,
            column: b.column
          },
          name: e.name
        }), f = e.source, g = e.line, i = e.column, j = e.name, d = !0) : d && (c.addMapping({generated: {
            line: b.line,
            column: b.column
          }}), f = null, d = !1);
        for (var k = 0,
            l = a.length; k < l; k++)
          a.charCodeAt(k) === h ? (b.line++, b.column = 0, k + 1 === l ? (f = null, d = !1) : d && c.addMapping({
            source: e.source,
            original: {
              line: e.line,
              column: e.column
            },
            generated: {
              line: b.line,
              column: b.column
            },
            name: e.name
          })) : b.column++;
      }), this.walkSourceContents(function(a, b) {
        c.setSourceContent(a, b);
      }), {
        code: b.code,
        map: c
      };
    }, b.SourceNode = d, c.exports;
  }), a.registerDynamic("28", ["26", "20", "27"], !0, function(a, b, c) {
    this || self;
    return b.SourceMapGenerator = a("26").SourceMapGenerator, b.SourceMapConsumer = a("20").SourceMapConsumer, b.SourceNode = a("27").SourceNode, c.exports;
  }), a.registerDynamic("29", ["d", "2a", "17", "28"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("d"),
        f = d(e),
        g = a("2a"),
        h = d(g),
        i = a("17"),
        j = d(i),
        k = a("28"),
        l = d(k),
        m = function() {
          function a(b, c) {
            var d = this;
            (0, j.default)(this, a), this._opts = b, this._map = new l.default.SourceMapGenerator({
              file: b.sourceMapTarget,
              sourceRoot: b.sourceRoot
            }), "string" == typeof c ? this._map.setSourceContent(b.sourceFileName, c) : "object" === ("undefined" == typeof c ? "undefined" : (0, h.default)(c)) && (0, f.default)(c).forEach(function(a) {
              d._map.setSourceContent(a, c[a]);
            });
          }
          return a.prototype.get = function() {
            return this._map.toJSON();
          }, a.prototype.mark = function(a, b, c, d, e, f) {
            this._lastGenLine !== a && null === c || this._lastGenLine === a && this._lastSourceLine === c && this._lastSourceColumn === d || (this._lastGenLine = a, this._lastSourceLine = c, this._lastSourceColumn = d, this._map.addMapping({
              name: e,
              generated: {
                line: a,
                column: b
              },
              source: null == c ? null : f || this._opts.sourceFileName,
              original: null == c ? null : {
                line: c,
                column: d
              }
            }));
          }, a;
        }();
    return b.default = m, c.exports = b.default, c.exports;
  }), a.registerDynamic("2b", ["2c", "2d", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), this || self, a("2c"));
    return a("2d")("WeakSet", function(a) {
      return function() {
        return a(this, arguments.length > 0 ? arguments[0] : void 0);
      };
    }, {add: function(a) {
        return d.def(this, a, !0);
      }}, d, !1, !0), c.exports;
  }), a.registerDynamic("2e", ["2f", "30", "2b", "31", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return a("2f"), a("30"), a("2b"), c.exports = a("31").WeakSet, c.exports;
  }), a.registerDynamic("32", ["2e"], !0, function(a, b, c) {
    this || self;
    return c.exports = {
      default: a("2e"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("33", ["34", "35", "36"], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = a ? a.length : 0;
      if (!d)
        return -1;
      var i = null == c ? 0 : g(c);
      return i < 0 && (i = h(d + i, 0)), e(a, f(b, 3), i);
    }
    var e = (this || self, a("34")),
        f = a("35"),
        g = a("36"),
        h = Math.max;
    return c.exports = d, c.exports;
  }), a.registerDynamic("37", ["38", "33"], !0, function(a, b, c) {
    var d = (this || self, a("38")),
        e = a("33"),
        f = d(e);
    return c.exports = f, c.exports;
  }), a.registerDynamic("38", ["35", "39", "3a"], !0, function(a, b, c) {
    function d(a) {
      return function(b, c, d) {
        var h = Object(b);
        if (!f(b)) {
          var i = e(c, 3);
          b = g(b), c = function(a) {
            return i(h[a], a, h);
          };
        }
        var j = a(b, c, d);
        return j > -1 ? h[i ? b[j] : j] : void 0;
      };
    }
    var e = (this || self, a("35")),
        f = a("39"),
        g = a("3a");
    return c.exports = d, c.exports;
  }), a.registerDynamic("3b", ["34", "35", "36"], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = a ? a.length : 0;
      if (!d)
        return -1;
      var j = d - 1;
      return void 0 !== c && (j = g(c), j = c < 0 ? h(d + j, 0) : i(j, d - 1)), e(a, f(b, 3), j, !0);
    }
    var e = (this || self, a("34")),
        f = a("35"),
        g = a("36"),
        h = Math.max,
        i = Math.min;
    return c.exports = d, c.exports;
  }), a.registerDynamic("3c", ["38", "3b"], !0, function(a, b, c) {
    var d = (this || self, a("38")),
        e = a("3b"),
        f = d(e);
    return c.exports = f, c.exports;
  }), a.registerDynamic("3d", ["36"], !0, function(a, b, c) {
    function d(a) {
      return "number" == typeof a && a == e(a);
    }
    var e = (this || self, a("36"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("3e", [], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = -1,
          e = a.length;
      b < 0 && (b = -b > e ? 0 : e + b), c = c > e ? e : c, c < 0 && (c += e), e = b > c ? 0 : c - b >>> 0, b >>>= 0;
      for (var f = Array(e); ++d < e; )
        f[d] = a[d + b];
      return f;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("3f", ["3e"], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = a.length;
      return c = void 0 === c ? d : c, !b && c >= d ? a : e(a, b, c);
    }
    var e = (this || self, a("3e"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("40", ["41"], !0, function(a, b, c) {
    function d(a, b) {
      for (var c = a.length; c-- && e(b, a[c], 0) > -1; )
        ;
      return c;
    }
    var e = (this || self, a("41"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("42", [], !0, function(a, b, c) {
    function d(a) {
      return a.split("");
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("43", [], !0, function(a, b, c) {
    function d(a) {
      return j.test(a);
    }
    var e = (this || self, "\\ud800-\\udfff"),
        f = "\\u0300-\\u036f\\ufe20-\\ufe23",
        g = "\\u20d0-\\u20f0",
        h = "\\ufe0e\\ufe0f",
        i = "\\u200d",
        j = RegExp("[" + i + e + f + g + h + "]");
    return c.exports = d, c.exports;
  }), a.registerDynamic("44", [], !0, function(a, b, c) {
    function d(a) {
      return a.match(v) || [];
    }
    var e = (this || self, "\\ud800-\\udfff"),
        f = "\\u0300-\\u036f\\ufe20-\\ufe23",
        g = "\\u20d0-\\u20f0",
        h = "\\ufe0e\\ufe0f",
        i = "[" + e + "]",
        j = "[" + f + g + "]",
        k = "\\ud83c[\\udffb-\\udfff]",
        l = "(?:" + j + "|" + k + ")",
        m = "[^" + e + "]",
        n = "(?:\\ud83c[\\udde6-\\uddff]){2}",
        o = "[\\ud800-\\udbff][\\udc00-\\udfff]",
        p = "\\u200d",
        q = l + "?",
        r = "[" + h + "]?",
        s = "(?:" + p + "(?:" + [m, n, o].join("|") + ")" + r + q + ")*",
        t = r + q + s,
        u = "(?:" + [m + j + "?", j, n, o, i].join("|") + ")",
        v = RegExp(k + "(?=" + k + ")|" + u + t, "g");
    return c.exports = d, c.exports;
  }), a.registerDynamic("45", ["42", "43", "44"], !0, function(a, b, c) {
    function d(a) {
      return f(a) ? g(a) : e(a);
    }
    var e = (this || self, a("42")),
        f = a("43"),
        g = a("44");
    return c.exports = d, c.exports;
  }), a.registerDynamic("46", ["47", "3f", "40", "45", "48"], !0, function(a, b, c) {
    function d(a, b, c) {
      if (a = i(a), a && (c || void 0 === b))
        return a.replace(j, "");
      if (!a || !(b = e(b)))
        return a;
      var d = h(a),
          k = g(d, h(b)) + 1;
      return f(d, 0, k).join("");
    }
    var e = (this || self, a("47")),
        f = a("3f"),
        g = a("40"),
        h = a("45"),
        i = a("48"),
        j = /\s+$/;
    return c.exports = d, c.exports;
  }), a.registerDynamic("49", [], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      var b = a.length;
      if (b % 4 > 0)
        throw new Error("Invalid string. Length must be a multiple of 4");
      return "=" === a[b - 2] ? 2 : "=" === a[b - 1] ? 1 : 0;
    }
    function e(a) {
      return 3 * a.length / 4 - d(a);
    }
    function f(a) {
      var b,
          c,
          e,
          f,
          g,
          h,
          i = a.length;
      g = d(a), h = new l(3 * i / 4 - g), e = g > 0 ? i - 4 : i;
      var j = 0;
      for (b = 0, c = 0; b < e; b += 4, c += 3)
        f = k[a.charCodeAt(b)] << 18 | k[a.charCodeAt(b + 1)] << 12 | k[a.charCodeAt(b + 2)] << 6 | k[a.charCodeAt(b + 3)], h[j++] = f >> 16 & 255, h[j++] = f >> 8 & 255, h[j++] = 255 & f;
      return 2 === g ? (f = k[a.charCodeAt(b)] << 2 | k[a.charCodeAt(b + 1)] >> 4, h[j++] = 255 & f) : 1 === g && (f = k[a.charCodeAt(b)] << 10 | k[a.charCodeAt(b + 1)] << 4 | k[a.charCodeAt(b + 2)] >> 2, h[j++] = f >> 8 & 255, h[j++] = 255 & f), h;
    }
    function g(a) {
      return j[a >> 18 & 63] + j[a >> 12 & 63] + j[a >> 6 & 63] + j[63 & a];
    }
    function h(a, b, c) {
      for (var d,
          e = [],
          f = b; f < c; f += 3)
        d = (a[f] << 16) + (a[f + 1] << 8) + a[f + 2], e.push(g(d));
      return e.join("");
    }
    function i(a) {
      for (var b,
          c = a.length,
          d = c % 3,
          e = "",
          f = [],
          g = 16383,
          i = 0,
          k = c - d; i < k; i += g)
        f.push(h(a, i, i + g > k ? k : i + g));
      return 1 === d ? (b = a[c - 1], e += j[b >> 2], e += j[b << 4 & 63], e += "==") : 2 === d && (b = (a[c - 2] << 8) + a[c - 1], e += j[b >> 10], e += j[b >> 4 & 63], e += j[b << 2 & 63], e += "="), f.push(e), f.join("");
    }
    this || self;
    b.byteLength = e, b.toByteArray = f, b.fromByteArray = i;
    for (var j = [],
        k = [],
        l = "undefined" != typeof Uint8Array ? Uint8Array : Array,
        m = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
        n = 0,
        o = m.length; n < o; ++n)
      j[n] = m[n], k[m.charCodeAt(n)] = n;
    return k["-".charCodeAt(0)] = 62, k["_".charCodeAt(0)] = 63, c.exports;
  }), a.registerDynamic("4a", [], !0, function(a, b, c) {
    this || self;
    return b.read = function(a, b, c, d, e) {
      var f,
          g,
          h = 8 * e - d - 1,
          i = (1 << h) - 1,
          j = i >> 1,
          k = -7,
          l = c ? e - 1 : 0,
          m = c ? -1 : 1,
          n = a[b + l];
      for (l += m, f = n & (1 << -k) - 1, n >>= -k, k += h; k > 0; f = 256 * f + a[b + l], l += m, k -= 8)
        ;
      for (g = f & (1 << -k) - 1, f >>= -k, k += d; k > 0; g = 256 * g + a[b + l], l += m, k -= 8)
        ;
      if (0 === f)
        f = 1 - j;
      else {
        if (f === i)
          return g ? NaN : (n ? -1 : 1) * (1 / 0);
        g += Math.pow(2, d), f -= j;
      }
      return (n ? -1 : 1) * g * Math.pow(2, f - d);
    }, b.write = function(a, b, c, d, e, f) {
      var g,
          h,
          i,
          j = 8 * f - e - 1,
          k = (1 << j) - 1,
          l = k >> 1,
          m = 23 === e ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
          n = d ? 0 : f - 1,
          o = d ? 1 : -1,
          p = b < 0 || 0 === b && 1 / b < 0 ? 1 : 0;
      for (b = Math.abs(b), isNaN(b) || b === 1 / 0 ? (h = isNaN(b) ? 1 : 0, g = k) : (g = Math.floor(Math.log(b) / Math.LN2), b * (i = Math.pow(2, -g)) < 1 && (g--, i *= 2), b += g + l >= 1 ? m / i : m * Math.pow(2, 1 - l), b * i >= 2 && (g++, i /= 2), g + l >= k ? (h = 0, g = k) : g + l >= 1 ? (h = (b * i - 1) * Math.pow(2, e), g += l) : (h = b * Math.pow(2, l - 1) * Math.pow(2, e), g = 0)); e >= 8; a[c + n] = 255 & h, n += o, h /= 256, e -= 8)
        ;
      for (g = g << e | h, j += e; j > 0; a[c + n] = 255 & g, n += o, g /= 256, j -= 8)
        ;
      a[c + n - o] |= 128 * p;
    }, c.exports;
  }), a.registerDynamic("4b", [], !0, function(a, b, c) {
    var d = (this || self, {}.toString);
    return c.exports = Array.isArray || function(a) {
      return "[object Array]" == d.call(a);
    }, c.exports;
  }), a.registerDynamic("4c", ["49", "4a", "4b", "3"], !0, function(a, b, c) {
    "use strict";
    function d() {
      try {
        var a = new Uint8Array(1);
        return a.__proto__ = {
          __proto__: Uint8Array.prototype,
          foo: function() {
            return 42;
          }
        }, 42 === a.foo() && "function" == typeof a.subarray && 0 === a.subarray(1, 1).byteLength;
      } catch (a) {
        return !1;
      }
    }
    function e() {
      return g.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
    }
    function f(a, b) {
      if (e() < b)
        throw new RangeError("Invalid typed array length");
      return g.TYPED_ARRAY_SUPPORT ? (a = new Uint8Array(b), a.__proto__ = g.prototype) : (null === a && (a = new g(b)), a.length = b), a;
    }
    function g(a, b, c) {
      if (!(g.TYPED_ARRAY_SUPPORT || this instanceof g))
        return new g(a, b, c);
      if ("number" == typeof a) {
        if ("string" == typeof b)
          throw new Error("If encoding is specified then the first argument must be a string");
        return k(this, a);
      }
      return h(this, a, b, c);
    }
    function h(a, b, c, d) {
      if ("number" == typeof b)
        throw new TypeError('"value" argument must not be a number');
      return "undefined" != typeof ArrayBuffer && b instanceof ArrayBuffer ? n(a, b, c, d) : "string" == typeof b ? l(a, b, c) : o(a, b);
    }
    function i(a) {
      if ("number" != typeof a)
        throw new TypeError('"size" argument must be a number');
      if (a < 0)
        throw new RangeError('"size" argument must not be negative');
    }
    function j(a, b, c, d) {
      return i(b), b <= 0 ? f(a, b) : void 0 !== c ? "string" == typeof d ? f(a, b).fill(c, d) : f(a, b).fill(c) : f(a, b);
    }
    function k(a, b) {
      if (i(b), a = f(a, b < 0 ? 0 : 0 | p(b)), !g.TYPED_ARRAY_SUPPORT)
        for (var c = 0; c < b; ++c)
          a[c] = 0;
      return a;
    }
    function l(a, b, c) {
      if ("string" == typeof c && "" !== c || (c = "utf8"), !g.isEncoding(c))
        throw new TypeError('"encoding" must be a valid string encoding');
      var d = 0 | r(b, c);
      a = f(a, d);
      var e = a.write(b, c);
      return e !== d && (a = a.slice(0, e)), a;
    }
    function m(a, b) {
      var c = b.length < 0 ? 0 : 0 | p(b.length);
      a = f(a, c);
      for (var d = 0; d < c; d += 1)
        a[d] = 255 & b[d];
      return a;
    }
    function n(a, b, c, d) {
      if (b.byteLength, c < 0 || b.byteLength < c)
        throw new RangeError("'offset' is out of bounds");
      if (b.byteLength < c + (d || 0))
        throw new RangeError("'length' is out of bounds");
      return b = void 0 === c && void 0 === d ? new Uint8Array(b) : void 0 === d ? new Uint8Array(b, c) : new Uint8Array(b, c, d), g.TYPED_ARRAY_SUPPORT ? (a = b, a.__proto__ = g.prototype) : a = m(a, b), a;
    }
    function o(a, b) {
      if (g.isBuffer(b)) {
        var c = 0 | p(b.length);
        return a = f(a, c), 0 === a.length ? a : (b.copy(a, 0, 0, c), a);
      }
      if (b) {
        if ("undefined" != typeof ArrayBuffer && b.buffer instanceof ArrayBuffer || "length" in b)
          return "number" != typeof b.length || Y(b.length) ? f(a, 0) : m(a, b);
        if ("Buffer" === b.type && aa(b.data))
          return m(a, b.data);
      }
      throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
    }
    function p(a) {
      if (a >= e())
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + e().toString(16) + " bytes");
      return 0 | a;
    }
    function q(a) {
      return +a != a && (a = 0), g.alloc(+a);
    }
    function r(a, b) {
      if (g.isBuffer(a))
        return a.length;
      if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(a) || a instanceof ArrayBuffer))
        return a.byteLength;
      "string" != typeof a && (a = "" + a);
      var c = a.length;
      if (0 === c)
        return 0;
      for (var d = !1; ; )
        switch (b) {
          case "ascii":
          case "latin1":
          case "binary":
            return c;
          case "utf8":
          case "utf-8":
          case void 0:
            return T(a).length;
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return 2 * c;
          case "hex":
            return c >>> 1;
          case "base64":
            return W(a).length;
          default:
            if (d)
              return T(a).length;
            b = ("" + b).toLowerCase(), d = !0;
        }
    }
    function s(a, b, c) {
      var d = !1;
      if ((void 0 === b || b < 0) && (b = 0), b > this.length)
        return "";
      if ((void 0 === c || c > this.length) && (c = this.length), c <= 0)
        return "";
      if (c >>>= 0, b >>>= 0, c <= b)
        return "";
      for (a || (a = "utf8"); ; )
        switch (a) {
          case "hex":
            return H(this, b, c);
          case "utf8":
          case "utf-8":
            return D(this, b, c);
          case "ascii":
            return F(this, b, c);
          case "latin1":
          case "binary":
            return G(this, b, c);
          case "base64":
            return C(this, b, c);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return I(this, b, c);
          default:
            if (d)
              throw new TypeError("Unknown encoding: " + a);
            a = (a + "").toLowerCase(), d = !0;
        }
    }
    function t(a, b, c) {
      var d = a[b];
      a[b] = a[c], a[c] = d;
    }
    function u(a, b, c, d, e) {
      if (0 === a.length)
        return -1;
      if ("string" == typeof c ? (d = c, c = 0) : c > 2147483647 ? c = 2147483647 : c < -2147483648 && (c = -2147483648), c = +c, isNaN(c) && (c = e ? 0 : a.length - 1), c < 0 && (c = a.length + c), c >= a.length) {
        if (e)
          return -1;
        c = a.length - 1;
      } else if (c < 0) {
        if (!e)
          return -1;
        c = 0;
      }
      if ("string" == typeof b && (b = g.from(b, d)), g.isBuffer(b))
        return 0 === b.length ? -1 : v(a, b, c, d, e);
      if ("number" == typeof b)
        return b = 255 & b, g.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? e ? Uint8Array.prototype.indexOf.call(a, b, c) : Uint8Array.prototype.lastIndexOf.call(a, b, c) : v(a, [b], c, d, e);
      throw new TypeError("val must be string, number or Buffer");
    }
    function v(a, b, c, d, e) {
      function f(a, b) {
        return 1 === g ? a[b] : a.readUInt16BE(b * g);
      }
      var g = 1,
          h = a.length,
          i = b.length;
      if (void 0 !== d && (d = String(d).toLowerCase(), "ucs2" === d || "ucs-2" === d || "utf16le" === d || "utf-16le" === d)) {
        if (a.length < 2 || b.length < 2)
          return -1;
        g = 2, h /= 2, i /= 2, c /= 2;
      }
      var j;
      if (e) {
        var k = -1;
        for (j = c; j < h; j++)
          if (f(a, j) === f(b, k === -1 ? 0 : j - k)) {
            if (k === -1 && (k = j), j - k + 1 === i)
              return k * g;
          } else
            k !== -1 && (j -= j - k), k = -1;
      } else
        for (c + i > h && (c = h - i), j = c; j >= 0; j--) {
          for (var l = !0,
              m = 0; m < i; m++)
            if (f(a, j + m) !== f(b, m)) {
              l = !1;
              break;
            }
          if (l)
            return j;
        }
      return -1;
    }
    function w(a, b, c, d) {
      c = Number(c) || 0;
      var e = a.length - c;
      d ? (d = Number(d), d > e && (d = e)) : d = e;
      var f = b.length;
      if (f % 2 !== 0)
        throw new TypeError("Invalid hex string");
      d > f / 2 && (d = f / 2);
      for (var g = 0; g < d; ++g) {
        var h = parseInt(b.substr(2 * g, 2), 16);
        if (isNaN(h))
          return g;
        a[c + g] = h;
      }
      return g;
    }
    function x(a, b, c, d) {
      return X(T(b, a.length - c), a, c, d);
    }
    function y(a, b, c, d) {
      return X(U(b), a, c, d);
    }
    function z(a, b, c, d) {
      return y(a, b, c, d);
    }
    function A(a, b, c, d) {
      return X(W(b), a, c, d);
    }
    function B(a, b, c, d) {
      return X(V(b, a.length - c), a, c, d);
    }
    function C(a, b, c) {
      return 0 === b && c === a.length ? $.fromByteArray(a) : $.fromByteArray(a.slice(b, c));
    }
    function D(a, b, c) {
      c = Math.min(a.length, c);
      for (var d = [],
          e = b; e < c; ) {
        var f = a[e],
            g = null,
            h = f > 239 ? 4 : f > 223 ? 3 : f > 191 ? 2 : 1;
        if (e + h <= c) {
          var i,
              j,
              k,
              l;
          switch (h) {
            case 1:
              f < 128 && (g = f);
              break;
            case 2:
              i = a[e + 1], 128 === (192 & i) && (l = (31 & f) << 6 | 63 & i, l > 127 && (g = l));
              break;
            case 3:
              i = a[e + 1], j = a[e + 2], 128 === (192 & i) && 128 === (192 & j) && (l = (15 & f) << 12 | (63 & i) << 6 | 63 & j, l > 2047 && (l < 55296 || l > 57343) && (g = l));
              break;
            case 4:
              i = a[e + 1], j = a[e + 2], k = a[e + 3], 128 === (192 & i) && 128 === (192 & j) && 128 === (192 & k) && (l = (15 & f) << 18 | (63 & i) << 12 | (63 & j) << 6 | 63 & k, l > 65535 && l < 1114112 && (g = l));
          }
        }
        null === g ? (g = 65533, h = 1) : g > 65535 && (g -= 65536, d.push(g >>> 10 & 1023 | 55296), g = 56320 | 1023 & g), d.push(g), e += h;
      }
      return E(d);
    }
    function E(a) {
      var b = a.length;
      if (b <= ba)
        return String.fromCharCode.apply(String, a);
      for (var c = "",
          d = 0; d < b; )
        c += String.fromCharCode.apply(String, a.slice(d, d += ba));
      return c;
    }
    function F(a, b, c) {
      var d = "";
      c = Math.min(a.length, c);
      for (var e = b; e < c; ++e)
        d += String.fromCharCode(127 & a[e]);
      return d;
    }
    function G(a, b, c) {
      var d = "";
      c = Math.min(a.length, c);
      for (var e = b; e < c; ++e)
        d += String.fromCharCode(a[e]);
      return d;
    }
    function H(a, b, c) {
      var d = a.length;
      (!b || b < 0) && (b = 0), (!c || c < 0 || c > d) && (c = d);
      for (var e = "",
          f = b; f < c; ++f)
        e += S(a[f]);
      return e;
    }
    function I(a, b, c) {
      for (var d = a.slice(b, c),
          e = "",
          f = 0; f < d.length; f += 2)
        e += String.fromCharCode(d[f] + 256 * d[f + 1]);
      return e;
    }
    function J(a, b, c) {
      if (a % 1 !== 0 || a < 0)
        throw new RangeError("offset is not uint");
      if (a + b > c)
        throw new RangeError("Trying to access beyond buffer length");
    }
    function K(a, b, c, d, e, f) {
      if (!g.isBuffer(a))
        throw new TypeError('"buffer" argument must be a Buffer instance');
      if (b > e || b < f)
        throw new RangeError('"value" argument is out of bounds');
      if (c + d > a.length)
        throw new RangeError("Index out of range");
    }
    function L(a, b, c, d) {
      b < 0 && (b = 65535 + b + 1);
      for (var e = 0,
          f = Math.min(a.length - c, 2); e < f; ++e)
        a[c + e] = (b & 255 << 8 * (d ? e : 1 - e)) >>> 8 * (d ? e : 1 - e);
    }
    function M(a, b, c, d) {
      b < 0 && (b = 4294967295 + b + 1);
      for (var e = 0,
          f = Math.min(a.length - c, 4); e < f; ++e)
        a[c + e] = b >>> 8 * (d ? e : 3 - e) & 255;
    }
    function N(a, b, c, d, e, f) {
      if (c + d > a.length)
        throw new RangeError("Index out of range");
      if (c < 0)
        throw new RangeError("Index out of range");
    }
    function O(a, b, c, d, e) {
      return e || N(a, b, c, 4, 3.4028234663852886e38, -3.4028234663852886e38), _.write(a, b, c, d, 23, 4), c + 4;
    }
    function P(a, b, c, d, e) {
      return e || N(a, b, c, 8, 1.7976931348623157e308, -1.7976931348623157e308), _.write(a, b, c, d, 52, 8), c + 8;
    }
    function Q(a) {
      if (a = R(a).replace(ca, ""), a.length < 2)
        return "";
      for (; a.length % 4 !== 0; )
        a += "=";
      return a;
    }
    function R(a) {
      return a.trim ? a.trim() : a.replace(/^\s+|\s+$/g, "");
    }
    function S(a) {
      return a < 16 ? "0" + a.toString(16) : a.toString(16);
    }
    function T(a, b) {
      b = b || 1 / 0;
      for (var c,
          d = a.length,
          e = null,
          f = [],
          g = 0; g < d; ++g) {
        if (c = a.charCodeAt(g), c > 55295 && c < 57344) {
          if (!e) {
            if (c > 56319) {
              (b -= 3) > -1 && f.push(239, 191, 189);
              continue;
            }
            if (g + 1 === d) {
              (b -= 3) > -1 && f.push(239, 191, 189);
              continue;
            }
            e = c;
            continue;
          }
          if (c < 56320) {
            (b -= 3) > -1 && f.push(239, 191, 189), e = c;
            continue;
          }
          c = (e - 55296 << 10 | c - 56320) + 65536;
        } else
          e && (b -= 3) > -1 && f.push(239, 191, 189);
        if (e = null, c < 128) {
          if ((b -= 1) < 0)
            break;
          f.push(c);
        } else if (c < 2048) {
          if ((b -= 2) < 0)
            break;
          f.push(c >> 6 | 192, 63 & c | 128);
        } else if (c < 65536) {
          if ((b -= 3) < 0)
            break;
          f.push(c >> 12 | 224, c >> 6 & 63 | 128, 63 & c | 128);
        } else {
          if (!(c < 1114112))
            throw new Error("Invalid code point");
          if ((b -= 4) < 0)
            break;
          f.push(c >> 18 | 240, c >> 12 & 63 | 128, c >> 6 & 63 | 128, 63 & c | 128);
        }
      }
      return f;
    }
    function U(a) {
      for (var b = [],
          c = 0; c < a.length; ++c)
        b.push(255 & a.charCodeAt(c));
      return b;
    }
    function V(a, b) {
      for (var c,
          d,
          e,
          f = [],
          g = 0; g < a.length && !((b -= 2) < 0); ++g)
        c = a.charCodeAt(g), d = c >> 8, e = c % 256, f.push(e), f.push(d);
      return f;
    }
    function W(a) {
      return $.toByteArray(Q(a));
    }
    function X(a, b, c, d) {
      for (var e = 0; e < d && !(e + c >= b.length || e >= a.length); ++e)
        b[e + c] = a[e];
      return e;
    }
    function Y(a) {
      return a !== a;
    }
    var Z = (a("3"), this || self),
        $ = a("49"),
        _ = a("4a"),
        aa = a("4b");
    b.Buffer = g, b.SlowBuffer = q, b.INSPECT_MAX_BYTES = 50, g.TYPED_ARRAY_SUPPORT = void 0 !== Z.TYPED_ARRAY_SUPPORT ? Z.TYPED_ARRAY_SUPPORT : d(), b.kMaxLength = e(), g.poolSize = 8192, g._augment = function(a) {
      return a.__proto__ = g.prototype, a;
    }, g.from = function(a, b, c) {
      return h(null, a, b, c);
    }, g.TYPED_ARRAY_SUPPORT && (g.prototype.__proto__ = Uint8Array.prototype, g.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && g[Symbol.species] === g && Object.defineProperty(g, Symbol.species, {
      value: null,
      configurable: !0
    })), g.alloc = function(a, b, c) {
      return j(null, a, b, c);
    }, g.allocUnsafe = function(a) {
      return k(null, a);
    }, g.allocUnsafeSlow = function(a) {
      return k(null, a);
    }, g.isBuffer = function(a) {
      return !(null == a || !a._isBuffer);
    }, g.compare = function(a, b) {
      if (!g.isBuffer(a) || !g.isBuffer(b))
        throw new TypeError("Arguments must be Buffers");
      if (a === b)
        return 0;
      for (var c = a.length,
          d = b.length,
          e = 0,
          f = Math.min(c, d); e < f; ++e)
        if (a[e] !== b[e]) {
          c = a[e], d = b[e];
          break;
        }
      return c < d ? -1 : d < c ? 1 : 0;
    }, g.isEncoding = function(a) {
      switch (String(a).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return !0;
        default:
          return !1;
      }
    }, g.concat = function(a, b) {
      if (!aa(a))
        throw new TypeError('"list" argument must be an Array of Buffers');
      if (0 === a.length)
        return g.alloc(0);
      var c;
      if (void 0 === b)
        for (b = 0, c = 0; c < a.length; ++c)
          b += a[c].length;
      var d = g.allocUnsafe(b),
          e = 0;
      for (c = 0; c < a.length; ++c) {
        var f = a[c];
        if (!g.isBuffer(f))
          throw new TypeError('"list" argument must be an Array of Buffers');
        f.copy(d, e), e += f.length;
      }
      return d;
    }, g.byteLength = r, g.prototype._isBuffer = !0, g.prototype.swap16 = function() {
      var a = this.length;
      if (a % 2 !== 0)
        throw new RangeError("Buffer size must be a multiple of 16-bits");
      for (var b = 0; b < a; b += 2)
        t(this, b, b + 1);
      return this;
    }, g.prototype.swap32 = function() {
      var a = this.length;
      if (a % 4 !== 0)
        throw new RangeError("Buffer size must be a multiple of 32-bits");
      for (var b = 0; b < a; b += 4)
        t(this, b, b + 3), t(this, b + 1, b + 2);
      return this;
    }, g.prototype.swap64 = function() {
      var a = this.length;
      if (a % 8 !== 0)
        throw new RangeError("Buffer size must be a multiple of 64-bits");
      for (var b = 0; b < a; b += 8)
        t(this, b, b + 7), t(this, b + 1, b + 6), t(this, b + 2, b + 5), t(this, b + 3, b + 4);
      return this;
    }, g.prototype.toString = function() {
      var a = 0 | this.length;
      return 0 === a ? "" : 0 === arguments.length ? D(this, 0, a) : s.apply(this, arguments);
    }, g.prototype.equals = function(a) {
      if (!g.isBuffer(a))
        throw new TypeError("Argument must be a Buffer");
      return this === a || 0 === g.compare(this, a);
    }, g.prototype.inspect = function() {
      var a = "",
          c = b.INSPECT_MAX_BYTES;
      return this.length > 0 && (a = this.toString("hex", 0, c).match(/.{2}/g).join(" "), this.length > c && (a += " ... ")), "<Buffer " + a + ">";
    }, g.prototype.compare = function(a, b, c, d, e) {
      if (!g.isBuffer(a))
        throw new TypeError("Argument must be a Buffer");
      if (void 0 === b && (b = 0), void 0 === c && (c = a ? a.length : 0), void 0 === d && (d = 0), void 0 === e && (e = this.length), b < 0 || c > a.length || d < 0 || e > this.length)
        throw new RangeError("out of range index");
      if (d >= e && b >= c)
        return 0;
      if (d >= e)
        return -1;
      if (b >= c)
        return 1;
      if (b >>>= 0, c >>>= 0, d >>>= 0, e >>>= 0, this === a)
        return 0;
      for (var f = e - d,
          h = c - b,
          i = Math.min(f, h),
          j = this.slice(d, e),
          k = a.slice(b, c),
          l = 0; l < i; ++l)
        if (j[l] !== k[l]) {
          f = j[l], h = k[l];
          break;
        }
      return f < h ? -1 : h < f ? 1 : 0;
    }, g.prototype.includes = function(a, b, c) {
      return this.indexOf(a, b, c) !== -1;
    }, g.prototype.indexOf = function(a, b, c) {
      return u(this, a, b, c, !0);
    }, g.prototype.lastIndexOf = function(a, b, c) {
      return u(this, a, b, c, !1);
    }, g.prototype.write = function(a, b, c, d) {
      if (void 0 === b)
        d = "utf8", c = this.length, b = 0;
      else if (void 0 === c && "string" == typeof b)
        d = b, c = this.length, b = 0;
      else {
        if (!isFinite(b))
          throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
        b = 0 | b, isFinite(c) ? (c = 0 | c, void 0 === d && (d = "utf8")) : (d = c, c = void 0);
      }
      var e = this.length - b;
      if ((void 0 === c || c > e) && (c = e), a.length > 0 && (c < 0 || b < 0) || b > this.length)
        throw new RangeError("Attempt to write outside buffer bounds");
      d || (d = "utf8");
      for (var f = !1; ; )
        switch (d) {
          case "hex":
            return w(this, a, b, c);
          case "utf8":
          case "utf-8":
            return x(this, a, b, c);
          case "ascii":
            return y(this, a, b, c);
          case "latin1":
          case "binary":
            return z(this, a, b, c);
          case "base64":
            return A(this, a, b, c);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return B(this, a, b, c);
          default:
            if (f)
              throw new TypeError("Unknown encoding: " + d);
            d = ("" + d).toLowerCase(), f = !0;
        }
    }, g.prototype.toJSON = function() {
      return {
        type: "Buffer",
        data: Array.prototype.slice.call(this._arr || this, 0)
      };
    };
    var ba = 4096;
    g.prototype.slice = function(a, b) {
      var c = this.length;
      a = ~~a, b = void 0 === b ? c : ~~b, a < 0 ? (a += c, a < 0 && (a = 0)) : a > c && (a = c), b < 0 ? (b += c, b < 0 && (b = 0)) : b > c && (b = c), b < a && (b = a);
      var d;
      if (g.TYPED_ARRAY_SUPPORT)
        d = this.subarray(a, b), d.__proto__ = g.prototype;
      else {
        var e = b - a;
        d = new g(e, void 0);
        for (var f = 0; f < e; ++f)
          d[f] = this[f + a];
      }
      return d;
    }, g.prototype.readUIntLE = function(a, b, c) {
      a = 0 | a, b = 0 | b, c || J(a, b, this.length);
      for (var d = this[a],
          e = 1,
          f = 0; ++f < b && (e *= 256); )
        d += this[a + f] * e;
      return d;
    }, g.prototype.readUIntBE = function(a, b, c) {
      a = 0 | a, b = 0 | b, c || J(a, b, this.length);
      for (var d = this[a + --b],
          e = 1; b > 0 && (e *= 256); )
        d += this[a + --b] * e;
      return d;
    }, g.prototype.readUInt8 = function(a, b) {
      return b || J(a, 1, this.length), this[a];
    }, g.prototype.readUInt16LE = function(a, b) {
      return b || J(a, 2, this.length), this[a] | this[a + 1] << 8;
    }, g.prototype.readUInt16BE = function(a, b) {
      return b || J(a, 2, this.length), this[a] << 8 | this[a + 1];
    }, g.prototype.readUInt32LE = function(a, b) {
      return b || J(a, 4, this.length), (this[a] | this[a + 1] << 8 | this[a + 2] << 16) + 16777216 * this[a + 3];
    }, g.prototype.readUInt32BE = function(a, b) {
      return b || J(a, 4, this.length), 16777216 * this[a] + (this[a + 1] << 16 | this[a + 2] << 8 | this[a + 3]);
    }, g.prototype.readIntLE = function(a, b, c) {
      a = 0 | a, b = 0 | b, c || J(a, b, this.length);
      for (var d = this[a],
          e = 1,
          f = 0; ++f < b && (e *= 256); )
        d += this[a + f] * e;
      return e *= 128, d >= e && (d -= Math.pow(2, 8 * b)), d;
    }, g.prototype.readIntBE = function(a, b, c) {
      a = 0 | a, b = 0 | b, c || J(a, b, this.length);
      for (var d = b,
          e = 1,
          f = this[a + --d]; d > 0 && (e *= 256); )
        f += this[a + --d] * e;
      return e *= 128, f >= e && (f -= Math.pow(2, 8 * b)), f;
    }, g.prototype.readInt8 = function(a, b) {
      return b || J(a, 1, this.length), 128 & this[a] ? (255 - this[a] + 1) * -1 : this[a];
    }, g.prototype.readInt16LE = function(a, b) {
      b || J(a, 2, this.length);
      var c = this[a] | this[a + 1] << 8;
      return 32768 & c ? 4294901760 | c : c;
    }, g.prototype.readInt16BE = function(a, b) {
      b || J(a, 2, this.length);
      var c = this[a + 1] | this[a] << 8;
      return 32768 & c ? 4294901760 | c : c;
    }, g.prototype.readInt32LE = function(a, b) {
      return b || J(a, 4, this.length), this[a] | this[a + 1] << 8 | this[a + 2] << 16 | this[a + 3] << 24;
    }, g.prototype.readInt32BE = function(a, b) {
      return b || J(a, 4, this.length), this[a] << 24 | this[a + 1] << 16 | this[a + 2] << 8 | this[a + 3];
    }, g.prototype.readFloatLE = function(a, b) {
      return b || J(a, 4, this.length), _.read(this, a, !0, 23, 4);
    }, g.prototype.readFloatBE = function(a, b) {
      return b || J(a, 4, this.length), _.read(this, a, !1, 23, 4);
    }, g.prototype.readDoubleLE = function(a, b) {
      return b || J(a, 8, this.length), _.read(this, a, !0, 52, 8);
    }, g.prototype.readDoubleBE = function(a, b) {
      return b || J(a, 8, this.length), _.read(this, a, !1, 52, 8);
    }, g.prototype.writeUIntLE = function(a, b, c, d) {
      if (a = +a, b = 0 | b, c = 0 | c, !d) {
        var e = Math.pow(2, 8 * c) - 1;
        K(this, a, b, c, e, 0);
      }
      var f = 1,
          g = 0;
      for (this[b] = 255 & a; ++g < c && (f *= 256); )
        this[b + g] = a / f & 255;
      return b + c;
    }, g.prototype.writeUIntBE = function(a, b, c, d) {
      if (a = +a, b = 0 | b, c = 0 | c, !d) {
        var e = Math.pow(2, 8 * c) - 1;
        K(this, a, b, c, e, 0);
      }
      var f = c - 1,
          g = 1;
      for (this[b + f] = 255 & a; --f >= 0 && (g *= 256); )
        this[b + f] = a / g & 255;
      return b + c;
    }, g.prototype.writeUInt8 = function(a, b, c) {
      return a = +a, b = 0 | b, c || K(this, a, b, 1, 255, 0), g.TYPED_ARRAY_SUPPORT || (a = Math.floor(a)), this[b] = 255 & a, b + 1;
    }, g.prototype.writeUInt16LE = function(a, b, c) {
      return a = +a, b = 0 | b, c || K(this, a, b, 2, 65535, 0), g.TYPED_ARRAY_SUPPORT ? (this[b] = 255 & a, this[b + 1] = a >>> 8) : L(this, a, b, !0), b + 2;
    }, g.prototype.writeUInt16BE = function(a, b, c) {
      return a = +a, b = 0 | b, c || K(this, a, b, 2, 65535, 0), g.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 8, this[b + 1] = 255 & a) : L(this, a, b, !1), b + 2;
    }, g.prototype.writeUInt32LE = function(a, b, c) {
      return a = +a, b = 0 | b, c || K(this, a, b, 4, 4294967295, 0), g.TYPED_ARRAY_SUPPORT ? (this[b + 3] = a >>> 24, this[b + 2] = a >>> 16, this[b + 1] = a >>> 8, this[b] = 255 & a) : M(this, a, b, !0), b + 4;
    }, g.prototype.writeUInt32BE = function(a, b, c) {
      return a = +a, b = 0 | b, c || K(this, a, b, 4, 4294967295, 0), g.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 24, this[b + 1] = a >>> 16, this[b + 2] = a >>> 8, this[b + 3] = 255 & a) : M(this, a, b, !1), b + 4;
    }, g.prototype.writeIntLE = function(a, b, c, d) {
      if (a = +a, b = 0 | b, !d) {
        var e = Math.pow(2, 8 * c - 1);
        K(this, a, b, c, e - 1, -e);
      }
      var f = 0,
          g = 1,
          h = 0;
      for (this[b] = 255 & a; ++f < c && (g *= 256); )
        a < 0 && 0 === h && 0 !== this[b + f - 1] && (h = 1), this[b + f] = (a / g >> 0) - h & 255;
      return b + c;
    }, g.prototype.writeIntBE = function(a, b, c, d) {
      if (a = +a, b = 0 | b, !d) {
        var e = Math.pow(2, 8 * c - 1);
        K(this, a, b, c, e - 1, -e);
      }
      var f = c - 1,
          g = 1,
          h = 0;
      for (this[b + f] = 255 & a; --f >= 0 && (g *= 256); )
        a < 0 && 0 === h && 0 !== this[b + f + 1] && (h = 1), this[b + f] = (a / g >> 0) - h & 255;
      return b + c;
    }, g.prototype.writeInt8 = function(a, b, c) {
      return a = +a, b = 0 | b, c || K(this, a, b, 1, 127, -128), g.TYPED_ARRAY_SUPPORT || (a = Math.floor(a)), a < 0 && (a = 255 + a + 1), this[b] = 255 & a, b + 1;
    }, g.prototype.writeInt16LE = function(a, b, c) {
      return a = +a, b = 0 | b, c || K(this, a, b, 2, 32767, -32768), g.TYPED_ARRAY_SUPPORT ? (this[b] = 255 & a, this[b + 1] = a >>> 8) : L(this, a, b, !0), b + 2;
    }, g.prototype.writeInt16BE = function(a, b, c) {
      return a = +a, b = 0 | b, c || K(this, a, b, 2, 32767, -32768), g.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 8, this[b + 1] = 255 & a) : L(this, a, b, !1), b + 2;
    }, g.prototype.writeInt32LE = function(a, b, c) {
      return a = +a, b = 0 | b, c || K(this, a, b, 4, 2147483647, -2147483648), g.TYPED_ARRAY_SUPPORT ? (this[b] = 255 & a, this[b + 1] = a >>> 8, this[b + 2] = a >>> 16, this[b + 3] = a >>> 24) : M(this, a, b, !0), b + 4;
    }, g.prototype.writeInt32BE = function(a, b, c) {
      return a = +a, b = 0 | b, c || K(this, a, b, 4, 2147483647, -2147483648), a < 0 && (a = 4294967295 + a + 1), g.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 24, this[b + 1] = a >>> 16, this[b + 2] = a >>> 8, this[b + 3] = 255 & a) : M(this, a, b, !1), b + 4;
    }, g.prototype.writeFloatLE = function(a, b, c) {
      return O(this, a, b, !0, c);
    }, g.prototype.writeFloatBE = function(a, b, c) {
      return O(this, a, b, !1, c);
    }, g.prototype.writeDoubleLE = function(a, b, c) {
      return P(this, a, b, !0, c);
    }, g.prototype.writeDoubleBE = function(a, b, c) {
      return P(this, a, b, !1, c);
    }, g.prototype.copy = function(a, b, c, d) {
      if (c || (c = 0), d || 0 === d || (d = this.length), b >= a.length && (b = a.length), b || (b = 0), d > 0 && d < c && (d = c), d === c)
        return 0;
      if (0 === a.length || 0 === this.length)
        return 0;
      if (b < 0)
        throw new RangeError("targetStart out of bounds");
      if (c < 0 || c >= this.length)
        throw new RangeError("sourceStart out of bounds");
      if (d < 0)
        throw new RangeError("sourceEnd out of bounds");
      d > this.length && (d = this.length), a.length - b < d - c && (d = a.length - b + c);
      var e,
          f = d - c;
      if (this === a && c < b && b < d)
        for (e = f - 1; e >= 0; --e)
          a[e + b] = this[e + c];
      else if (f < 1e3 || !g.TYPED_ARRAY_SUPPORT)
        for (e = 0; e < f; ++e)
          a[e + b] = this[e + c];
      else
        Uint8Array.prototype.set.call(a, this.subarray(c, c + f), b);
      return f;
    }, g.prototype.fill = function(a, b, c, d) {
      if ("string" == typeof a) {
        if ("string" == typeof b ? (d = b, b = 0, c = this.length) : "string" == typeof c && (d = c, c = this.length), 1 === a.length) {
          var e = a.charCodeAt(0);
          e < 256 && (a = e);
        }
        if (void 0 !== d && "string" != typeof d)
          throw new TypeError("encoding must be a string");
        if ("string" == typeof d && !g.isEncoding(d))
          throw new TypeError("Unknown encoding: " + d);
      } else
        "number" == typeof a && (a = 255 & a);
      if (b < 0 || this.length < b || this.length < c)
        throw new RangeError("Out of range index");
      if (c <= b)
        return this;
      b >>>= 0, c = void 0 === c ? this.length : c >>> 0, a || (a = 0);
      var f;
      if ("number" == typeof a)
        for (f = b; f < c; ++f)
          this[f] = a;
      else {
        var h = g.isBuffer(a) ? a : T(new g(a, d).toString()),
            i = h.length;
        for (f = 0; f < c - b; ++f)
          this[f + b] = h[f % i];
      }
      return this;
    };
    var ca = /[^+\/0-9A-Za-z-_]/g;
    return c.exports;
  }), a.registerDynamic("13", ["4c"], !0, function(a, b, c) {
    this || self;
    return c.exports = a("4c").Buffer, c.exports;
  }), a.registerDynamic("4d", ["17", "46", "13"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    var e = a("13");
    this || self;
    b.__esModule = !0;
    var f = a("17"),
        g = d(f),
        h = a("46"),
        i = d(h),
        j = /^[ \t]+$/,
        e = function() {
          function a(b) {
            (0, g.default)(this, a), this._map = null, this._buf = [], this._last = "", this._queue = [], this._position = {
              line: 1,
              column: 0
            }, this._sourcePosition = {
              identifierName: null,
              line: null,
              column: null,
              filename: null
            }, this._map = b;
          }
          return a.prototype.get = function() {
            return this._flush(), {
              code: (0, i.default)(this._buf.join("")),
              map: this._map ? this._map.get() : null
            };
          }, a.prototype.append = function(a) {
            this._flush();
            var b = this._sourcePosition,
                c = b.line,
                d = b.column,
                e = b.filename,
                f = b.identifierName;
            this._append(a, c, d, f, e);
          }, a.prototype.queue = function(a) {
            if ("\n" === a)
              for (; this._queue.length > 0 && j.test(this._queue[0][0]); )
                this._queue.shift();
            var b = this._sourcePosition,
                c = b.line,
                d = b.column,
                e = b.filename,
                f = b.identifierName;
            this._queue.unshift([a, c, d, f, e]);
          }, a.prototype._flush = function() {
            for (var a = void 0; a = this._queue.pop(); )
              this._append.apply(this, a);
          }, a.prototype._append = function(a, b, c, d, e) {
            this._map && "\n" !== a[0] && this._map.mark(this._position.line, this._position.column, b, c, d, e), this._buf.push(a), this._last = a[a.length - 1];
            for (var f = 0; f < a.length; f++)
              "\n" === a[f] ? (this._position.line++, this._position.column = 0) : this._position.column++;
          }, a.prototype.removeTrailingNewline = function() {
            this._queue.length > 0 && "\n" === this._queue[0][0] && this._queue.shift();
          }, a.prototype.removeLastSemicolon = function() {
            this._queue.length > 0 && ";" === this._queue[0][0] && this._queue.shift();
          }, a.prototype.endsWith = function(a) {
            if (1 === a.length) {
              var b = void 0;
              if (this._queue.length > 0) {
                var c = this._queue[0][0];
                b = c[c.length - 1];
              } else
                b = this._last;
              return b === a;
            }
            var d = this._last + this._queue.reduce(function(a, b) {
              return b[0] + a;
            }, "");
            return a.length <= d.length && d.slice(-a.length) === a;
          }, a.prototype.hasContent = function() {
            return this._queue.length > 0 || !!this._last;
          }, a.prototype.source = function(a, b) {
            if (!a || b) {
              var c = b ? b[a] : null;
              this._sourcePosition.identifierName = b && b.identifierName || null, this._sourcePosition.line = c ? c.line : null, this._sourcePosition.column = c ? c.column : null, this._sourcePosition.filename = b && b.filename || null;
            }
          }, a.prototype.withSource = function(a, b, c) {
            if (!this._map)
              return c();
            var d = this._sourcePosition.line,
                e = this._sourcePosition.column,
                f = this._sourcePosition.filename,
                g = this._sourcePosition.identifierName;
            this.source(a, b), c(), this._sourcePosition.line = d, this._sourcePosition.column = e, this._sourcePosition.filename = f, this._sourcePosition.identifierName = g;
          }, a.prototype.getCurrentColumn = function() {
            var a = this._queue.reduce(function(a, b) {
              return b[0] + a;
            }, ""),
                b = a.lastIndexOf("\n");
            return b === -1 ? this._position.column + a.length : a.length - 1 - b;
          }, a.prototype.getCurrentLine = function() {
            for (var a = this._queue.reduce(function(a, b) {
              return b[0] + a;
            }, ""),
                b = 0,
                c = 0; c < a.length; c++)
              "\n" === a[c] && b++;
            return this._position.line + b;
          }, a;
        }();
    return b.default = e, c.exports = b.default, c.exports;
  }), a.registerDynamic("4e", ["17"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("17"),
        f = d(e),
        g = function() {
          function a(b) {
            (0, f.default)(this, a), this.tokens = b, this.used = {};
          }
          return a.prototype.getNewlinesBefore = function(a) {
            var b = void 0,
                c = void 0,
                d = this.tokens,
                e = this._findToken(function(b) {
                  return b.start - a.start;
                }, 0, d.length);
            if (e >= 0) {
              for (; e && a.start === d[e - 1].start; )
                --e;
              b = d[e - 1], c = d[e];
            }
            return this._getNewlinesBetween(b, c);
          }, a.prototype.getNewlinesAfter = function(a) {
            var b = void 0,
                c = void 0,
                d = this.tokens,
                e = this._findToken(function(b) {
                  return b.end - a.end;
                }, 0, d.length);
            if (e >= 0) {
              for (; e && a.end === d[e - 1].end; )
                --e;
              b = d[e], c = d[e + 1], "," === c.type.label && (c = d[e + 2]);
            }
            return c && "eof" === c.type.label ? 1 : this._getNewlinesBetween(b, c);
          }, a.prototype._getNewlinesBetween = function(a, b) {
            if (!b || !b.loc)
              return 0;
            for (var c = a ? a.loc.end.line : 1,
                d = b.loc.start.line,
                e = 0,
                f = c; f < d; f++)
              "undefined" == typeof this.used[f] && (this.used[f] = !0, e++);
            return e;
          }, a.prototype._findToken = function(a, b, c) {
            if (b >= c)
              return -1;
            var d = b + c >>> 1,
                e = a(this.tokens[d]);
            return e < 0 ? this._findToken(a, d + 1, c) : e > 0 ? this._findToken(a, b, d) : 0 === e ? d : -1;
          }, a;
        }();
    return b.default = g, c.exports = b.default, c.exports;
  }), a.registerDynamic("4f", [], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      this.print(a.tag, a), this.print(a.quasi, a);
    }
    function e(a, b) {
      var c = b.quasis[0] === a,
          d = b.quasis[b.quasis.length - 1] === a,
          e = (c ? "`" : "}") + a.value.raw + (d ? "`" : "${");
      c || this.space(), this.token(e), d || this.space();
    }
    function f(a) {
      for (var b = a.quasis,
          c = 0; c < b.length; c++)
        this.print(b[c], a), c + 1 < b.length && this.print(a.expressions[c], a);
    }
    this || self;
    return b.__esModule = !0, b.TaggedTemplateExpression = d, b.TemplateElement = e, b.TemplateLiteral = f, c.exports;
  }), a.registerDynamic("50", ["51", "35", "52", "53"], !0, function(a, b, c) {
    function d(a, b) {
      var c = h(a) ? e : g;
      return c(a, f(b, 3));
    }
    var e = (this || self, a("51")),
        f = a("35"),
        g = a("52"),
        h = a("53");
    return c.exports = d, c.exports;
  }), a.registerDynamic("54", ["55", "8", "50", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      return p.isMemberExpression(a) ? (f(a.object, b), a.computed && f(a.property, b)) : p.isBinary(a) || p.isAssignmentExpression(a) ? (f(a.left, b), f(a.right, b)) : p.isCallExpression(a) ? (b.hasCall = !0, f(a.callee, b)) : p.isFunction(a) ? b.hasFunction = !0 : p.isIdentifier(a) && (b.hasHelper = b.hasHelper || g(a.callee)), b;
    }
    function g(a) {
      return p.isMemberExpression(a) ? g(a.object) || g(a.property) : p.isIdentifier(a) ? "require" === a.name || "_" === a.name[0] : p.isCallExpression(a) ? g(a.callee) : !(!p.isBinary(a) && !p.isAssignmentExpression(a)) && (p.isIdentifier(a.left) && g(a.left) || g(a.right));
    }
    function h(a) {
      return p.isLiteral(a) || p.isObjectExpression(a) || p.isArrayExpression(a) || p.isIdentifier(a) || p.isMemberExpression(a);
    }
    var i = (this || self, a("55")),
        j = e(i),
        k = a("8"),
        l = e(k),
        m = a("50"),
        n = e(m),
        o = a("9"),
        p = d(o);
    return b.nodes = {
      AssignmentExpression: function(a) {
        var b = f(a.right);
        if (b.hasCall && b.hasHelper || b.hasFunction)
          return {
            before: b.hasFunction,
            after: !0
          };
      },
      SwitchCase: function(a, b) {
        return {before: a.consequent.length || b.cases[0] === a};
      },
      LogicalExpression: function(a) {
        if (p.isFunction(a.left) || p.isFunction(a.right))
          return {after: !0};
      },
      Literal: function(a) {
        if ("use strict" === a.value)
          return {after: !0};
      },
      CallExpression: function(a) {
        if (p.isFunction(a.callee) || g(a))
          return {
            before: !0,
            after: !0
          };
      },
      VariableDeclaration: function(a) {
        for (var b = 0; b < a.declarations.length; b++) {
          var c = a.declarations[b],
              d = g(c.id) && !h(c.init);
          if (!d) {
            var e = f(c.init);
            d = g(c.init) && e.hasCall || e.hasFunction;
          }
          if (d)
            return {
              before: !0,
              after: !0
            };
        }
      },
      IfStatement: function(a) {
        if (p.isBlockStatement(a.consequent))
          return {
            before: !0,
            after: !0
          };
      }
    }, b.nodes.ObjectProperty = b.nodes.ObjectTypeProperty = b.nodes.ObjectMethod = b.nodes.SpreadProperty = function(a, b) {
      if (b.properties[0] === a)
        return {before: !0};
    }, b.list = {
      VariableDeclaration: function(a) {
        return (0, n.default)(a.declarations, "init");
      },
      ArrayExpression: function(a) {
        return a.elements;
      },
      ObjectExpression: function(a) {
        return a.properties;
      }
    }, (0, l.default)({
      Function: !0,
      Class: !0,
      Loop: !0,
      LabeledStatement: !0,
      SwitchStatement: !0,
      TryStatement: !0
    }, function(a, c) {
      (0, j.default)(a) && (a = {
        after: a,
        before: a
      }), (0, l.default)([c].concat(p.FLIPPED_ALIAS_KEYS[c] || []), function(c) {
        b.nodes[c] = function() {
          return a;
        };
      });
    }), c.exports;
  }), a.registerDynamic("56", ["9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a, b) {
      return t.isArrayTypeAnnotation(b);
    }
    function f(a, b) {
      return !(!t.isMemberExpression(b) || b.object !== a);
    }
    function g(a, b, c) {
      return r(c, {considerArrow: !0});
    }
    function h(a, b) {
      if ((t.isCallExpression(b) || t.isNewExpression(b)) && b.callee === a)
        return !0;
      if (t.isUnaryLike(b))
        return !0;
      if (t.isMemberExpression(b) && b.object === a)
        return !0;
      if (t.isBinary(b)) {
        var c = b.operator,
            d = u[c],
            e = a.operator,
            f = u[e];
        if (d > f)
          return !0;
        if (d === f && b.right === a && !t.isLogicalExpression(b))
          return !0;
      }
      return !1;
    }
    function i(a, b) {
      if ("in" === a.operator) {
        if (t.isVariableDeclarator(b))
          return !0;
        if (t.isFor(b))
          return !0;
      }
      return !1;
    }
    function j(a, b) {
      return !t.isForStatement(b) && ((!t.isExpressionStatement(b) || b.expression !== a) && (!t.isReturnStatement(b) && (!t.isThrowStatement(b) && ((!t.isSwitchStatement(b) || b.discriminant !== a) && ((!t.isWhileStatement(b) || b.test !== a) && ((!t.isIfStatement(b) || b.test !== a) && (!t.isForInStatement(b) || b.right !== a)))))));
    }
    function k(a, b) {
      return t.isBinary(b) || t.isUnaryLike(b) || t.isCallExpression(b) || t.isMemberExpression(b) || t.isNewExpression(b) || t.isConditionalExpression(b) && a === b.test;
    }
    function l(a, b, c) {
      return r(c, {considerDefaultExports: !0});
    }
    function m(a, b) {
      return !!t.isMemberExpression(b, {object: a}) || !(!t.isCallExpression(b, {callee: a}) && !t.isNewExpression(b, {callee: a}));
    }
    function n(a, b, c) {
      return r(c, {considerDefaultExports: !0});
    }
    function o(a, b) {
      return !!t.isExportDeclaration(b) || (!(!t.isBinaryExpression(b) && !t.isLogicalExpression(b)) || (!!t.isUnaryExpression(b) || m(a, b)));
    }
    function p(a, b) {
      return !!t.isUnaryLike(b) || (!!t.isBinary(b) || (!!t.isConditionalExpression(b, {test: a}) || m(a, b)));
    }
    function q(a) {
      return !!t.isObjectPattern(a.left) || p.apply(void 0, arguments);
    }
    function r(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          c = b.considerArrow,
          d = void 0 !== c && c,
          e = b.considerDefaultExports,
          f = void 0 !== e && e,
          g = a.length - 1,
          h = a[g];
      g--;
      for (var i = a[g]; g > 0; ) {
        if (t.isExpressionStatement(i, {expression: h}))
          return !0;
        if (f && t.isExportDefaultDeclaration(i, {declaration: h}))
          return !0;
        if (d && t.isArrowFunctionExpression(i, {body: h}))
          return !0;
        if (!(t.isCallExpression(i, {callee: h}) || t.isSequenceExpression(i) && i.expressions[0] === h || t.isMemberExpression(i, {object: h}) || t.isConditional(i, {test: h}) || t.isBinary(i, {left: h}) || t.isAssignmentExpression(i, {left: h})))
          return !1;
        h = i, g--, i = a[g];
      }
      return !1;
    }
    this || self;
    b.__esModule = !0, b.AwaitExpression = b.FunctionTypeAnnotation = void 0, b.NullableTypeAnnotation = e, b.UpdateExpression = f, b.ObjectExpression = g, b.Binary = h, b.BinaryExpression = i, b.SequenceExpression = j, b.YieldExpression = k, b.ClassExpression = l, b.UnaryLike = m, b.FunctionExpression = n, b.ArrowFunctionExpression = o, b.ConditionalExpression = p, b.AssignmentExpression = q;
    var s = a("9"),
        t = d(s),
        u = {
          "||": 0,
          "&&": 1,
          "|": 2,
          "^": 3,
          "&": 4,
          "==": 5,
          "===": 5,
          "!=": 5,
          "!==": 5,
          "<": 6,
          ">": 6,
          "<=": 6,
          ">=": 6,
          in: 6,
          instanceof: 6,
          ">>": 7,
          "<<": 7,
          ">>>": 7,
          "+": 8,
          "-": 8,
          "*": 9,
          "/": 9,
          "%": 9,
          "**": 10
        };
    return b.FunctionTypeAnnotation = e, b.AwaitExpression = k, c.exports;
  }), a.registerDynamic("57", ["f", "d", "54", "56", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      function b(a, b) {
        var d = c[a];
        c[a] = d ? function(a, c, e) {
          var f = d(a, c, e);
          return null == f ? b(a, c, e) : f;
        } : b;
      }
      for (var c = {},
          d = (0, p.default)(a),
          e = Array.isArray(d),
          f = 0,
          d = e ? d : (0, n.default)(d); ; ) {
        var g;
        if (e) {
          if (f >= d.length)
            break;
          g = d[f++];
        } else {
          if (f = d.next(), f.done)
            break;
          g = f.value;
        }
        var h = g,
            i = v.FLIPPED_ALIAS_KEYS[h];
        if (i)
          for (var j = i,
              k = Array.isArray(j),
              l = 0,
              j = k ? j : (0, n.default)(j); ; ) {
            var m;
            if (k) {
              if (l >= j.length)
                break;
              m = j[l++];
            } else {
              if (l = j.next(), l.done)
                break;
              m = l.value;
            }
            var o = m;
            b(o, a[h]);
          }
        else
          b(h, a[h]);
      }
      return c;
    }
    function g(a, b, c, d) {
      var e = a[b.type];
      return e ? e(b, c, d) : null;
    }
    function h(a) {
      return !!v.isCallExpression(a) || !!v.isMemberExpression(a) && (h(a.object) || !a.computed && h(a.property));
    }
    function i(a, b, c) {
      if (!a)
        return 0;
      v.isExpressionStatement(a) && (a = a.expression);
      var d = g(x, a, b);
      if (!d) {
        var e = g(y, a, b);
        if (e)
          for (var f = 0; f < e.length && !(d = i(e[f], a, c)); f++)
            ;
      }
      return d && d[c] || 0;
    }
    function j(a, b) {
      return i(a, b, "before");
    }
    function k(a, b) {
      return i(a, b, "after");
    }
    function l(a, b, c) {
      return !!b && (!(!v.isNewExpression(b) || b.callee !== a || !h(a)) || g(w, a, b, c));
    }
    this || self;
    b.__esModule = !0;
    var m = a("f"),
        n = e(m),
        o = a("d"),
        p = e(o);
    b.needsWhitespace = i, b.needsWhitespaceBefore = j, b.needsWhitespaceAfter = k, b.needsParens = l;
    var q = a("54"),
        r = e(q),
        s = a("56"),
        t = d(s),
        u = a("9"),
        v = d(u),
        w = f(t),
        x = f(r.default.nodes),
        y = f(r.default.list);
    return c.exports;
  }), a.registerDynamic("58", ["59", "9", "57"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      "void" === a.operator || "delete" === a.operator || "typeof" === a.operator ? (this.word(a.operator), this.space()) : this.token(a.operator), this.print(a.argument, a);
    }
    function g(a) {
      this.word("do"), this.space(), this.print(a.body, a);
    }
    function h(a) {
      this.token("("), this.print(a.expression, a), this.token(")");
    }
    function i(a) {
      a.prefix ? (this.token(a.operator), this.print(a.argument, a)) : (this.print(a.argument, a), this.token(a.operator));
    }
    function j(a) {
      this.print(a.test, a), this.space(), this.token("?"), this.space(), this.print(a.consequent, a), this.space(), this.token(":"), this.space(), this.print(a.alternate, a);
    }
    function k(a, b) {
      this.word("new"), this.space(), this.print(a.callee, a), (0 !== a.arguments.length || !this.format.minified || C.isCallExpression(b, {callee: a}) || C.isMemberExpression(b) || C.isNewExpression(b)) && (this.token("("), this.printList(a.arguments, a), this.token(")"));
    }
    function l(a) {
      this.printList(a.expressions, a);
    }
    function m() {
      this.word("this");
    }
    function n() {
      this.word("super");
    }
    function o(a) {
      this.token("@"), this.print(a.expression, a), this.newline();
    }
    function p() {
      this.token(","), this.newline(), this.endsWith("\n") || this.space();
    }
    function q(a) {
      this.print(a.callee, a), this.token("(");
      var b = a._prettyCall,
          c = void 0;
      b && (c = p, this.newline(), this.indent()), this.printList(a.arguments, a, {separator: c}), b && (this.newline(), this.dedent()), this.token(")");
    }
    function r(a) {
      return function(b) {
        if (this.word(a), b.delegate && this.token("*"), b.argument) {
          this.space();
          var c = this.startTerminatorless();
          this.print(b.argument, b), this.endTerminatorless(c);
        }
      };
    }
    function s() {
      this.semicolon(!0);
    }
    function t(a) {
      this.print(a.expression, a), this.semicolon();
    }
    function u(a) {
      this.print(a.left, a), this.space(), this.token("="), this.space(), this.print(a.right, a);
    }
    function v(a, b) {
      var c = this.inForStatementInitCounter && "in" === a.operator && !E.needsParens(a, b);
      c && this.token("("), this.print(a.left, a), this.space(), "in" === a.operator || "instanceof" === a.operator ? this.word(a.operator) : this.token(a.operator), this.space(), this.print(a.right, a), c && this.token(")");
    }
    function w(a) {
      this.print(a.object, a), this.token("::"), this.print(a.callee, a);
    }
    function x(a) {
      if (this.print(a.object, a), !a.computed && C.isMemberExpression(a.property))
        throw new TypeError("Got a MemberExpression for MemberExpression property");
      var b = a.computed;
      C.isLiteral(a.property) && (0, A.default)(a.property.value) && (b = !0), b ? (this.token("["), this.print(a.property, a), this.token("]")) : (this.token("."), this.print(a.property, a));
    }
    function y(a) {
      this.print(a.meta, a), this.token("."), this.print(a.property, a);
    }
    this || self;
    b.__esModule = !0, b.LogicalExpression = b.BinaryExpression = b.AwaitExpression = b.YieldExpression = void 0, b.UnaryExpression = f, b.DoExpression = g, b.ParenthesizedExpression = h, b.UpdateExpression = i, b.ConditionalExpression = j, b.NewExpression = k, b.SequenceExpression = l, b.ThisExpression = m, b.Super = n, b.Decorator = o, b.CallExpression = q, b.EmptyStatement = s, b.ExpressionStatement = t, b.AssignmentPattern = u, b.AssignmentExpression = v, b.BindExpression = w, b.MemberExpression = x, b.MetaProperty = y;
    var z = a("59"),
        A = e(z),
        B = a("9"),
        C = d(B),
        D = a("57"),
        E = d(D);
    b.YieldExpression = r("yield"), b.AwaitExpression = r("await");
    return b.BinaryExpression = v, b.LogicalExpression = v, c.exports;
  }), a.registerDynamic("5a", ["f", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      this.word("with"), this.space(), this.token("("), this.print(a.object, a), this.token(")"), this.printBlock(a);
    }
    function g(a) {
      this.word("if"), this.space(), this.token("("), this.print(a.test, a), this.token(")"), this.space();
      var b = a.alternate && z.isIfStatement(h(a.consequent));
      b && (this.token("{"), this.newline(), this.indent()), this.printAndIndentOnComments(a.consequent, a), b && (this.dedent(), this.newline(), this.token("}")), a.alternate && (this.endsWith("}") && this.space(), this.word("else"), this.space(), this.printAndIndentOnComments(a.alternate, a));
    }
    function h(a) {
      return z.isStatement(a.body) ? h(a.body) : a;
    }
    function i(a) {
      this.word("for"), this.space(), this.token("("), this.inForStatementInitCounter++, this.print(a.init, a), this.inForStatementInitCounter--, this.token(";"), a.test && (this.space(), this.print(a.test, a)), this.token(";"), a.update && (this.space(), this.print(a.update, a)), this.token(")"), this.printBlock(a);
    }
    function j(a) {
      this.word("while"), this.space(), this.token("("), this.print(a.test, a), this.token(")"), this.printBlock(a);
    }
    function k(a) {
      this.word("do"), this.space(), this.print(a.body, a), this.space(), this.word("while"), this.space(), this.token("("), this.print(a.test, a), this.token(")"), this.semicolon();
    }
    function l(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "label";
      return function(c) {
        this.word(a);
        var d = c[b];
        if (d) {
          this.space();
          var e = this.startTerminatorless();
          this.print(d, c), this.endTerminatorless(e);
        }
        this.semicolon();
      };
    }
    function m(a) {
      this.print(a.label, a), this.token(":"), this.space(), this.print(a.body, a);
    }
    function n(a) {
      this.word("try"), this.space(), this.print(a.block, a), this.space(), a.handlers ? this.print(a.handlers[0], a) : this.print(a.handler, a), a.finalizer && (this.space(), this.word("finally"), this.space(), this.print(a.finalizer, a));
    }
    function o(a) {
      this.word("catch"), this.space(), this.token("("), this.print(a.param, a), this.token(")"), this.space(), this.print(a.body, a);
    }
    function p(a) {
      this.word("switch"), this.space(), this.token("("), this.print(a.discriminant, a), this.token(")"), this.space(), this.token("{"), this.printSequence(a.cases, a, {
        indent: !0,
        addNewlines: function(b, c) {
          if (!b && a.cases[a.cases.length - 1] === c)
            return -1;
        }
      }), this.token("}");
    }
    function q(a) {
      a.test ? (this.word("case"), this.space(), this.print(a.test, a), this.token(":")) : (this.word("default"), this.token(":")), a.consequent.length && (this.newline(), this.printSequence(a.consequent, a, {indent: !0}));
    }
    function r() {
      this.word("debugger"), this.semicolon();
    }
    function s() {
      if (this.token(","), this.newline(), this.endsWith("\n"))
        for (var a = 0; a < 4; a++)
          this.space(!0);
    }
    function t() {
      if (this.token(","), this.newline(), this.endsWith("\n"))
        for (var a = 0; a < 6; a++)
          this.space(!0);
    }
    function u(a, b) {
      this.word(a.kind), this.space();
      var c = !1;
      if (!z.isFor(b))
        for (var d = a.declarations,
            e = Array.isArray(d),
            f = 0,
            d = e ? d : (0, x.default)(d); ; ) {
          var g;
          if (e) {
            if (f >= d.length)
              break;
            g = d[f++];
          } else {
            if (f = d.next(), f.done)
              break;
            g = f.value;
          }
          var h = g;
          h.init && (c = !0);
        }
      var i = void 0;
      c && (i = "const" === a.kind ? t : s), this.printList(a.declarations, a, {separator: i}), (!z.isFor(b) || b.left !== a && b.init !== a) && this.semicolon();
    }
    function v(a) {
      this.print(a.id, a), this.print(a.id.typeAnnotation, a), a.init && (this.space(), this.token("="), this.space(), this.print(a.init, a));
    }
    this || self;
    b.__esModule = !0, b.ThrowStatement = b.BreakStatement = b.ReturnStatement = b.ContinueStatement = b.ForAwaitStatement = b.ForOfStatement = b.ForInStatement = void 0;
    var w = a("f"),
        x = e(w);
    b.WithStatement = f, b.IfStatement = g, b.ForStatement = i, b.WhileStatement = j, b.DoWhileStatement = k, b.LabeledStatement = m, b.TryStatement = n, b.CatchClause = o, b.SwitchStatement = p, b.SwitchCase = q, b.DebuggerStatement = r, b.VariableDeclaration = u, b.VariableDeclarator = v;
    var y = a("9"),
        z = d(y),
        A = function(a) {
          return function(b) {
            this.word("for"), this.space(), "await" === a && (this.word("await"), this.space(), a = "of"), this.token("("), this.print(b.left, b), this.space(), this.word(a), this.space(), this.print(b.right, b), this.token(")"), this.printBlock(b);
          };
        };
    b.ForInStatement = A("in"), b.ForOfStatement = A("of"), b.ForAwaitStatement = A("await"), b.ContinueStatement = l("continue"), b.ReturnStatement = l("return", "argument"), b.BreakStatement = l("break"), b.ThrowStatement = l("throw", "argument");
    return c.exports;
  }), a.registerDynamic("5b", [], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      this.printJoin(a.decorators, a), this.word("class"), a.id && (this.space(), this.print(a.id, a)), this.print(a.typeParameters, a), a.superClass && (this.space(), this.word("extends"), this.space(), this.print(a.superClass, a), this.print(a.superTypeParameters, a)), a.implements && (this.space(), this.word("implements"), this.space(), this.printList(a.implements, a)), this.space(), this.print(a.body, a);
    }
    function e(a) {
      this.token("{"), this.printInnerComments(a), 0 === a.body.length ? this.token("}") : (this.newline(), this.indent(), this.printSequence(a.body, a), this.dedent(), this.endsWith("\n") || this.newline(), this.rightBrace());
    }
    function f(a) {
      this.printJoin(a.decorators, a), a.static && (this.word("static"), this.space()), a.computed ? (this.token("["), this.print(a.key, a), this.token("]")) : (this._variance(a), this.print(a.key, a)), this.print(a.typeAnnotation, a), a.value && (this.space(), this.token("="), this.space(), this.print(a.value, a)), this.semicolon();
    }
    function g(a) {
      this.printJoin(a.decorators, a), a.static && (this.word("static"), this.space()), "constructorCall" === a.kind && (this.word("call"), this.space()), this._method(a);
    }
    this || self;
    return b.__esModule = !0, b.ClassDeclaration = d, b.ClassBody = e, b.ClassProperty = f, b.ClassMethod = g, b.ClassExpression = d, c.exports;
  }), a.registerDynamic("5c", ["9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      var b = this;
      this.print(a.typeParameters, a), this.token("("), this.printList(a.params, a, {iterator: function(a) {
          a.optional && b.token("?"), b.print(a.typeAnnotation, a);
        }}), this.token(")"), a.returnType && this.print(a.returnType, a);
    }
    function f(a) {
      var b = a.kind,
          c = a.key;
      "method" !== b && "init" !== b || a.generator && this.token("*"), "get" !== b && "set" !== b || (this.word(b), this.space()), a.async && (this.word("async"), this.space()), a.computed ? (this.token("["), this.print(c, a), this.token("]")) : this.print(c, a), this._params(a), this.space(), this.print(a.body, a);
    }
    function g(a) {
      a.async && (this.word("async"), this.space()), this.word("function"), a.generator && this.token("*"), a.id ? (this.space(), this.print(a.id, a)) : this.space(), this._params(a), this.space(), this.print(a.body, a);
    }
    function h(a) {
      a.async && (this.word("async"), this.space());
      var b = a.params[0];
      1 === a.params.length && k.isIdentifier(b) && !i(a, b) ? this.print(b, a) : this._params(a), this.space(), this.token("=>"), this.space(), this.print(a.body, a);
    }
    function i(a, b) {
      return a.typeParameters || a.returnType || b.typeAnnotation || b.optional || b.trailingComments;
    }
    this || self;
    b.__esModule = !0, b.FunctionDeclaration = void 0, b._params = e, b._method = f, b.FunctionExpression = g, b.ArrowFunctionExpression = h;
    var j = a("9"),
        k = d(j);
    return b.FunctionDeclaration = g, c.exports;
  }), a.registerDynamic("5d", ["9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      this.print(a.imported, a), a.local && a.local.name !== a.imported.name && (this.space(), this.word("as"), this.space(), this.print(a.local, a));
    }
    function f(a) {
      this.print(a.local, a);
    }
    function g(a) {
      this.print(a.exported, a);
    }
    function h(a) {
      this.print(a.local, a), a.exported && a.local.name !== a.exported.name && (this.space(), this.word("as"), this.space(), this.print(a.exported, a));
    }
    function i(a) {
      this.token("*"), this.space(), this.word("as"), this.space(), this.print(a.exported, a);
    }
    function j(a) {
      this.word("export"), this.space(), this.token("*"), a.exported && (this.space(), this.word("as"), this.space(), this.print(a.exported, a)), this.space(), this.word("from"), this.space(), this.print(a.source, a), this.semicolon();
    }
    function k() {
      this.word("export"), this.space(), m.apply(this, arguments);
    }
    function l() {
      this.word("export"), this.space(), this.word("default"), this.space(), m.apply(this, arguments);
    }
    function m(a) {
      if (a.declaration) {
        var b = a.declaration;
        this.print(b, a), q.isStatement(b) || this.semicolon();
      } else {
        "type" === a.exportKind && (this.word("type"), this.space());
        for (var c = a.specifiers.slice(0),
            d = !1; ; ) {
          var e = c[0];
          if (!q.isExportDefaultSpecifier(e) && !q.isExportNamespaceSpecifier(e))
            break;
          d = !0, this.print(c.shift(), a), c.length && (this.token(","), this.space());
        }
        (c.length || !c.length && !d) && (this.token("{"), c.length && (this.space(), this.printList(c, a), this.space()), this.token("}")), a.source && (this.space(), this.word("from"), this.space(), this.print(a.source, a)), this.semicolon();
      }
    }
    function n(a) {
      this.word("import"), this.space(), "type" !== a.importKind && "typeof" !== a.importKind || (this.word(a.importKind), this.space());
      var b = a.specifiers.slice(0);
      if (b && b.length) {
        for (; ; ) {
          var c = b[0];
          if (!q.isImportDefaultSpecifier(c) && !q.isImportNamespaceSpecifier(c))
            break;
          this.print(b.shift(), a), b.length && (this.token(","), this.space());
        }
        b.length && (this.token("{"), this.space(), this.printList(b, a), this.space(), this.token("}")), this.space(), this.word("from"), this.space();
      }
      this.print(a.source, a), this.semicolon();
    }
    function o(a) {
      this.token("*"), this.space(), this.word("as"), this.space(), this.print(a.local, a);
    }
    this || self;
    b.__esModule = !0, b.ImportSpecifier = e, b.ImportDefaultSpecifier = f, b.ExportDefaultSpecifier = g, b.ExportSpecifier = h, b.ExportNamespaceSpecifier = i, b.ExportAllDeclaration = j, b.ExportNamedDeclaration = k, b.ExportDefaultDeclaration = l, b.ImportDeclaration = n, b.ImportNamespaceSpecifier = o;
    var p = a("9"),
        q = d(p);
    return c.exports;
  }), a.registerDynamic("5e", ["5f"], !0, function(a, b, c) {
    "use strict";
    function d() {
      this.word("any");
    }
    function e(a) {
      this.print(a.elementType, a), this.token("["), this.token("]");
    }
    function f() {
      this.word("boolean");
    }
    function g(a) {
      this.word(a.value ? "true" : "false");
    }
    function h() {
      this.word("null");
    }
    function i(a) {
      this.word("declare"), this.space(), this.word("class"), this.space(), this._interfaceish(a);
    }
    function j(a) {
      this.word("declare"), this.space(), this.word("function"), this.space(), this.print(a.id, a), this.print(a.id.typeAnnotation.typeAnnotation, a), this.semicolon();
    }
    function k(a) {
      this.word("declare"), this.space(), this.InterfaceDeclaration(a);
    }
    function l(a) {
      this.word("declare"), this.space(), this.word("module"), this.space(), this.print(a.id, a), this.space(), this.print(a.body, a);
    }
    function m(a) {
      this.word("declare"), this.space(), this.word("module"), this.token("."), this.word("exports"), this.print(a.typeAnnotation, a);
    }
    function n(a) {
      this.word("declare"), this.space(), this.TypeAlias(a);
    }
    function o(a) {
      this.word("declare"), this.space(), this.word("var"), this.space(), this.print(a.id, a), this.print(a.id.typeAnnotation, a), this.semicolon();
    }
    function p() {
      this.token("*");
    }
    function q(a, b) {
      this.print(a.typeParameters, a), this.token("("), this.printList(a.params, a), a.rest && (a.params.length && (this.token(","), this.space()), this.token("..."), this.print(a.rest, a)), this.token(")"), "ObjectTypeCallProperty" === b.type || "DeclareFunction" === b.type ? this.token(":") : (this.space(), this.token("=>")), this.space(), this.print(a.returnType, a);
    }
    function r(a) {
      this.print(a.name, a), a.optional && this.token("?"), this.token(":"), this.space(), this.print(a.typeAnnotation, a);
    }
    function s(a) {
      this.print(a.id, a), this.print(a.typeParameters, a);
    }
    function t(a) {
      this.print(a.id, a), this.print(a.typeParameters, a), a.extends.length && (this.space(), this.word("extends"), this.space(), this.printList(a.extends, a)), a.mixins && a.mixins.length && (this.space(), this.word("mixins"), this.space(), this.printList(a.mixins, a)), this.space(), this.print(a.body, a);
    }
    function u(a) {
      "plus" === a.variance ? this.token("+") : "minus" === a.variance && this.token("-");
    }
    function v(a) {
      this.word("interface"), this.space(), this._interfaceish(a);
    }
    function w() {
      this.space(), this.token("&"), this.space();
    }
    function x(a) {
      this.printJoin(a.types, a, {separator: w});
    }
    function y() {
      this.word("mixed");
    }
    function z() {
      this.word("empty");
    }
    function A(a) {
      this.token("?"), this.print(a.typeAnnotation, a);
    }
    function B() {
      this.word("number");
    }
    function C() {
      this.word("string");
    }
    function D() {
      this.word("this");
    }
    function E(a) {
      this.token("["), this.printList(a.types, a), this.token("]");
    }
    function F(a) {
      this.word("typeof"), this.space(), this.print(a.argument, a);
    }
    function G(a) {
      this.word("type"), this.space(), this.print(a.id, a), this.print(a.typeParameters, a), this.space(), this.token("="), this.space(), this.print(a.right, a), this.semicolon();
    }
    function H(a) {
      this.token(":"), this.space(), a.optional && this.token("?"), this.print(a.typeAnnotation, a);
    }
    function I(a) {
      this._variance(a), this.word(a.name), a.bound && this.print(a.bound, a), a.default && (this.space(), this.token("="), this.space(), this.print(a.default, a));
    }
    function J(a) {
      this.token("<"), this.printList(a.params, a, {}), this.token(">");
    }
    function K(a) {
      var b = this;
      a.exact ? this.token("{|") : this.token("{");
      var c = a.properties.concat(a.callProperties, a.indexers);
      c.length && (this.space(), this.printJoin(c, a, {
        indent: !0,
        statement: !0,
        iterator: function() {
          1 !== c.length && (b.semicolon(), b.space());
        }
      }), this.space()), a.exact ? this.token("|}") : this.token("}");
    }
    function L(a) {
      a.static && (this.word("static"), this.space()), this.print(a.value, a);
    }
    function M(a) {
      a.static && (this.word("static"), this.space()), this._variance(a), this.token("["), this.print(a.id, a), this.token(":"), this.space(), this.print(a.key, a), this.token("]"), this.token(":"), this.space(), this.print(a.value, a);
    }
    function N(a) {
      a.static && (this.word("static"), this.space()), this._variance(a), this.print(a.key, a), a.optional && this.token("?"), this.token(":"), this.space(), this.print(a.value, a);
    }
    function O(a) {
      this.print(a.qualification, a), this.token("."), this.print(a.id, a);
    }
    function P() {
      this.space(), this.token("|"), this.space();
    }
    function Q(a) {
      this.printJoin(a.types, a, {separator: P});
    }
    function R(a) {
      this.token("("), this.print(a.expression, a), this.print(a.typeAnnotation, a), this.token(")");
    }
    function S() {
      this.word("void");
    }
    this || self;
    b.__esModule = !0, b.AnyTypeAnnotation = d, b.ArrayTypeAnnotation = e, b.BooleanTypeAnnotation = f, b.BooleanLiteralTypeAnnotation = g, b.NullLiteralTypeAnnotation = h, b.DeclareClass = i, b.DeclareFunction = j, b.DeclareInterface = k, b.DeclareModule = l, b.DeclareModuleExports = m, b.DeclareTypeAlias = n, b.DeclareVariable = o, b.ExistentialTypeParam = p, b.FunctionTypeAnnotation = q, b.FunctionTypeParam = r, b.InterfaceExtends = s, b._interfaceish = t, b._variance = u, b.InterfaceDeclaration = v, b.IntersectionTypeAnnotation = x, b.MixedTypeAnnotation = y, b.EmptyTypeAnnotation = z, b.NullableTypeAnnotation = A;
    var T = a("5f");
    return Object.defineProperty(b, "NumericLiteralTypeAnnotation", {
      enumerable: !0,
      get: function() {
        return T.NumericLiteral;
      }
    }), Object.defineProperty(b, "StringLiteralTypeAnnotation", {
      enumerable: !0,
      get: function() {
        return T.StringLiteral;
      }
    }), b.NumberTypeAnnotation = B, b.StringTypeAnnotation = C, b.ThisTypeAnnotation = D, b.TupleTypeAnnotation = E, b.TypeofTypeAnnotation = F, b.TypeAlias = G, b.TypeAnnotation = H, b.TypeParameter = I, b.TypeParameterInstantiation = J, b.ObjectTypeAnnotation = K, b.ObjectTypeCallProperty = L, b.ObjectTypeIndexer = M, b.ObjectTypeProperty = N, b.QualifiedTypeIdentifier = O, b.UnionTypeAnnotation = Q, b.TypeCastExpression = R, b.VoidTypeAnnotation = S, b.ClassImplements = s, b.GenericTypeAnnotation = s, b.TypeParameterDeclaration = J, c.exports;
  }), a.registerDynamic("60", [], !0, function(a, b, c) {
    var d,
        e = this || self;
    return function(a) {
      var f = "object" == typeof b && b,
          g = "object" == typeof c && c && c.exports == f && c,
          h = "object" == typeof e && e;
      h.global !== h && h.window !== h || (a = h);
      var i = {},
          j = i.hasOwnProperty,
          k = function(a, b) {
            var c;
            for (c in a)
              j.call(a, c) && b(c, a[c]);
          },
          l = function(a, b) {
            return b ? (k(b, function(b, c) {
              a[b] = c;
            }), a) : a;
          },
          m = function(a, b) {
            for (var c = a.length,
                d = -1; ++d < c; )
              b(a[d]);
          },
          n = i.toString,
          o = function(a) {
            return "[object Array]" == n.call(a);
          },
          p = function(a) {
            return "[object Object]" == n.call(a);
          },
          q = function(a) {
            return "string" == typeof a || "[object String]" == n.call(a);
          },
          r = function(a) {
            return "number" == typeof a || "[object Number]" == n.call(a);
          },
          s = function(a) {
            return "function" == typeof a || "[object Function]" == n.call(a);
          },
          t = function(a) {
            return "[object Map]" == n.call(a);
          },
          u = function(a) {
            return "[object Set]" == n.call(a);
          },
          v = {
            '"': '\\"',
            "'": "\\'",
            "\\": "\\\\",
            "\b": "\\b",
            "\f": "\\f",
            "\n": "\\n",
            "\r": "\\r",
            "\t": "\\t"
          },
          w = /["'\\\b\f\n\r\t]/,
          x = /[0-9]/,
          y = /[ !#-&\(-\[\]-~]/,
          z = function(a, b) {
            var c = {
              escapeEverything: !1,
              escapeEtago: !1,
              quotes: "single",
              wrap: !1,
              es6: !1,
              json: !1,
              compact: !0,
              lowercaseHex: !1,
              numbers: "decimal",
              indent: "\t",
              __indent__: "",
              __inline1__: !1,
              __inline2__: !1
            },
                d = b && b.json;
            d && (c.quotes = "double", c.wrap = !0), b = l(c, b), "single" != b.quotes && "double" != b.quotes && (b.quotes = "single");
            var e,
                f = "double" == b.quotes ? '"' : "'",
                g = b.compact,
                h = b.indent,
                i = b.lowercaseHex,
                j = "",
                n = b.__inline1__,
                A = b.__inline2__,
                B = g ? "" : "\n",
                C = !0,
                D = "binary" == b.numbers,
                E = "octal" == b.numbers,
                F = "decimal" == b.numbers,
                G = "hexadecimal" == b.numbers;
            if (d && a && s(a.toJSON) && (a = a.toJSON()), !q(a)) {
              if (t(a))
                return 0 == a.size ? "new Map()" : (g || (b.__inline1__ = !0), "new Map(" + z(Array.from(a), b) + ")");
              if (u(a))
                return 0 == a.size ? "new Set()" : "new Set(" + z(Array.from(a), b) + ")";
              if (o(a))
                return e = [], b.wrap = !0, n ? (b.__inline1__ = !1, b.__inline2__ = !0) : (j = b.__indent__, h += j, b.__indent__ = h), m(a, function(a) {
                  C = !1, A && (b.__inline2__ = !1), e.push((g || A ? "" : h) + z(a, b));
                }), C ? "[]" : A ? "[" + e.join(", ") + "]" : "[" + B + e.join("," + B) + B + (g ? "" : j) + "]";
              if (!r(a))
                return p(a) ? (e = [], b.wrap = !0, j = b.__indent__, h += j, b.__indent__ = h, k(a, function(a, c) {
                  C = !1, e.push((g ? "" : h) + z(a, b) + ":" + (g ? "" : " ") + z(c, b));
                }), C ? "{}" : "{" + B + e.join("," + B) + B + (g ? "" : j) + "}") : d ? JSON.stringify(a) || "null" : String(a);
              if (d)
                return JSON.stringify(a);
              if (F)
                return String(a);
              if (G) {
                var H = a.toString(16);
                return i || (H = H.toUpperCase()), "0x" + H;
              }
              if (D)
                return "0b" + a.toString(2);
              if (E)
                return "0o" + a.toString(8);
            }
            var I,
                J,
                K,
                L = a,
                M = -1,
                N = L.length;
            for (e = ""; ++M < N; ) {
              var O = L.charAt(M);
              if (b.es6 && (I = L.charCodeAt(M), I >= 55296 && I <= 56319 && N > M + 1 && (J = L.charCodeAt(M + 1), J >= 56320 && J <= 57343))) {
                K = 1024 * (I - 55296) + J - 56320 + 65536;
                var P = K.toString(16);
                i || (P = P.toUpperCase()), e += "\\u{" + P + "}", M++;
              } else {
                if (!b.escapeEverything) {
                  if (y.test(O)) {
                    e += O;
                    continue;
                  }
                  if ('"' == O) {
                    e += f == O ? '\\"' : O;
                    continue;
                  }
                  if ("'" == O) {
                    e += f == O ? "\\'" : O;
                    continue;
                  }
                }
                if ("\0" != O || d || x.test(L.charAt(M + 1)))
                  if (w.test(O))
                    e += v[O];
                  else {
                    var Q = O.charCodeAt(0),
                        P = Q.toString(16);
                    i || (P = P.toUpperCase());
                    var R = P.length > 2 || d,
                        S = "\\" + (R ? "u" : "x") + ("0000" + P).slice(R ? -4 : -2);
                    e += S;
                  }
                else
                  e += "\\0";
              }
            }
            return b.wrap && (e = f + e + f), b.escapeEtago ? e.replace(/<\/(script|style)/gi, "<\\/$1") : e;
          };
      z.version = "1.3.0", "function" == typeof d && "object" == typeof d.amd && d.amd ? d(function() {
        return z;
      }) : f && !f.nodeType ? g ? g.exports = z : f.jsesc = z : a.jsesc = z;
    }(this), c.exports;
  }), a.registerDynamic("5f", ["9", "60"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function f(a) {
      a.variance && ("plus" === a.variance ? this.token("+") : "minus" === a.variance && this.token("-")), this.word(a.name);
    }
    function g(a) {
      this.token("..."), this.print(a.argument, a);
    }
    function h(a) {
      var b = a.properties;
      this.token("{"), this.printInnerComments(a), b.length && (this.space(), this.printList(b, a, {
        indent: !0,
        statement: !0
      }), this.space()), this.token("}");
    }
    function i(a) {
      this.printJoin(a.decorators, a), this._method(a);
    }
    function j(a) {
      if (this.printJoin(a.decorators, a), a.computed)
        this.token("["), this.print(a.key, a), this.token("]");
      else {
        if (r.isAssignmentPattern(a.value) && r.isIdentifier(a.key) && a.key.name === a.value.left.name)
          return void this.print(a.value, a);
        if (this.print(a.key, a), a.shorthand && r.isIdentifier(a.key) && r.isIdentifier(a.value) && a.key.name === a.value.name)
          return;
      }
      this.token(":"), this.space(), this.print(a.value, a);
    }
    function k(a) {
      var b = a.elements,
          c = b.length;
      this.token("["), this.printInnerComments(a);
      for (var d = 0; d < b.length; d++) {
        var e = b[d];
        e ? (d > 0 && this.space(), this.print(e, a), d < c - 1 && this.token(",")) : this.token(",");
      }
      this.token("]");
    }
    function l(a) {
      this.word("/" + a.pattern + "/" + a.flags);
    }
    function m(a) {
      this.word(a.value ? "true" : "false");
    }
    function n() {
      this.word("null");
    }
    function o(a) {
      var b = this.getPossibleRaw(a);
      this.number(null == b ? a.value + "" : b);
    }
    function p(a, b) {
      var c = this.getPossibleRaw(a);
      if (null != c)
        return void this.token(c);
      var d = (0, t.default)(a.value, {
        quotes: r.isJSX(b) ? "double" : this.format.quotes,
        wrap: !0
      });
      return this.token(d);
    }
    this || self;
    b.__esModule = !0, b.ArrayPattern = b.ObjectPattern = b.RestProperty = b.SpreadProperty = b.SpreadElement = void 0, b.Identifier = f, b.RestElement = g, b.ObjectExpression = h, b.ObjectMethod = i, b.ObjectProperty = j, b.ArrayExpression = k, b.RegExpLiteral = l, b.BooleanLiteral = m, b.NullLiteral = n, b.NumericLiteral = o, b.StringLiteral = p;
    var q = a("9"),
        r = e(q),
        s = a("60"),
        t = d(s);
    return b.SpreadElement = g, b.SpreadProperty = g, b.RestProperty = g, b.ObjectPattern = h, b.ArrayPattern = k, c.exports;
  }), a.registerDynamic("61", ["5f"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      this.print(a.program, a);
    }
    function e(a) {
      this.printInnerComments(a, !1), this.printSequence(a.directives, a), a.directives && a.directives.length && this.newline(), this.printSequence(a.body, a);
    }
    function f(a) {
      this.token("{"), this.printInnerComments(a), a.body.length ? (this.newline(), this.printSequence(a.directives, a, {indent: !0}), a.directives && a.directives.length && this.newline(), this.printSequence(a.body, a, {indent: !0}), this.removeTrailingNewline(), this.source("end", a.loc), this.endsWith("\n") || this.newline(), this.rightBrace()) : (this.source("end", a.loc), this.token("}"));
    }
    function g() {}
    function h(a) {
      this.print(a.value, a), this.semicolon();
    }
    this || self;
    b.__esModule = !0, b.File = d, b.Program = e, b.BlockStatement = f, b.Noop = g, b.Directive = h;
    var i = a("5f");
    return Object.defineProperty(b, "DirectiveLiteral", {
      enumerable: !0,
      get: function() {
        return i.StringLiteral;
      }
    }), c.exports;
  }), a.registerDynamic("62", ["f"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e(a) {
      this.print(a.name, a), a.value && (this.token("="), this.print(a.value, a));
    }
    function f(a) {
      this.word(a.name);
    }
    function g(a) {
      this.print(a.namespace, a), this.token(":"), this.print(a.name, a);
    }
    function h(a) {
      this.print(a.object, a), this.token("."), this.print(a.property, a);
    }
    function i(a) {
      this.token("{"), this.token("..."), this.print(a.argument, a), this.token("}");
    }
    function j(a) {
      this.token("{"), this.print(a.expression, a), this.token("}");
    }
    function k(a) {
      this.token(a.value);
    }
    function l(a) {
      var b = a.openingElement;
      if (this.print(b, a), !b.selfClosing) {
        this.indent();
        for (var c = a.children,
            d = Array.isArray(c),
            e = 0,
            c = d ? c : (0, r.default)(c); ; ) {
          var f;
          if (d) {
            if (e >= c.length)
              break;
            f = c[e++];
          } else {
            if (e = c.next(), e.done)
              break;
            f = e.value;
          }
          var g = f;
          this.print(g, a);
        }
        this.dedent(), this.print(a.closingElement, a);
      }
    }
    function m() {
      this.space();
    }
    function n(a) {
      this.token("<"), this.print(a.name, a), a.attributes.length > 0 && (this.space(), this.printJoin(a.attributes, a, {separator: m})), a.selfClosing ? (this.space(), this.token("/>")) : this.token(">");
    }
    function o(a) {
      this.token("</"), this.print(a.name, a), this.token(">");
    }
    function p() {}
    this || self;
    b.__esModule = !0;
    var q = a("f"),
        r = d(q);
    return b.JSXAttribute = e, b.JSXIdentifier = f, b.JSXNamespacedName = g, b.JSXMemberExpression = h, b.JSXSpreadAttribute = i, b.JSXExpressionContainer = j, b.JSXText = k, b.JSXElement = l, b.JSXOpeningElement = n, b.JSXClosingElement = o, b.JSXEmptyExpression = p, c.exports;
  }), a.registerDynamic("63", ["64", "f", "65", "32", "17", "37", "3c", "3d", "66", "4d", "57", "4e", "9", "4f", "58", "5a", "5b", "5c", "5d", "5f", "5e", "61", "62"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f() {
      this.token(","), this.space();
    }
    this || self;
    b.__esModule = !0;
    var g = a("64"),
        h = e(g),
        i = a("f"),
        j = e(i),
        k = a("65"),
        l = e(k),
        m = a("32"),
        n = e(m),
        o = a("17"),
        p = e(o),
        q = a("37"),
        r = e(q),
        s = a("3c"),
        t = e(s),
        u = a("3d"),
        v = e(u),
        w = a("66"),
        x = e(w),
        y = a("4d"),
        z = e(y),
        A = a("57"),
        B = d(A),
        C = a("4e"),
        D = e(C),
        E = a("9"),
        F = d(E),
        G = /e/i,
        H = /\.0+$/,
        I = /^0[box]/,
        J = function() {
          function a(b, c, d) {
            (0, p.default)(this, a), this.inForStatementInitCounter = 0, this._printStack = [], this._indent = 0, this._insideAux = !1, this._printedCommentStarts = {}, this._parenPushNewlineState = null, this._printAuxAfterOnNextUserNode = !1, this._printedComments = new n.default, this._endsWithInteger = !1, this._endsWithWord = !1, this.format = b || {}, this._buf = new z.default(c), this._whitespace = d.length > 0 ? new D.default(d) : null;
          }
          return a.prototype.generate = function(a) {
            return this.print(a), this._maybeAddAuxComment(), this._buf.get();
          }, a.prototype.indent = function() {
            this.format.compact || this.format.concise || this._indent++;
          }, a.prototype.dedent = function() {
            this.format.compact || this.format.concise || this._indent--;
          }, a.prototype.semicolon = function() {
            var a = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            this._maybeAddAuxComment(), this._append(";", !a);
          }, a.prototype.rightBrace = function() {
            this.format.minified && this._buf.removeLastSemicolon(), this.token("}");
          }, a.prototype.space = function() {
            var a = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            this.format.compact || (this._buf.hasContent() && !this.endsWith(" ") && !this.endsWith("\n") || a) && this._space();
          }, a.prototype.word = function(a) {
            this._endsWithWord && this._space(), this._maybeAddAuxComment(), this._append(a), this._endsWithWord = !0;
          }, a.prototype.number = function(a) {
            this.word(a), this._endsWithInteger = (0, v.default)(+a) && !I.test(a) && !G.test(a) && !H.test(a) && "." !== a[a.length - 1];
          }, a.prototype.token = function(a) {
            ("--" === a && this.endsWith("!") || "+" === a[0] && this.endsWith("+") || "-" === a[0] && this.endsWith("-") || "." === a[0] && this._endsWithInteger) && this._space(), this._maybeAddAuxComment(), this._append(a);
          }, a.prototype.newline = function(a) {
            if (!this.format.retainLines && !this.format.compact) {
              if (this.format.concise)
                return void this.space();
              if (!(this.endsWith("\n\n") || ("number" != typeof a && (a = 1), a = Math.min(2, a), (this.endsWith("{\n") || this.endsWith(":\n")) && a--, a <= 0)))
                for (var b = 0; b < a; b++)
                  this._newline();
            }
          }, a.prototype.endsWith = function(a) {
            return this._buf.endsWith(a);
          }, a.prototype.removeTrailingNewline = function() {
            this._buf.removeTrailingNewline();
          }, a.prototype.source = function(a, b) {
            this._catchUp(a, b), this._buf.source(a, b);
          }, a.prototype.withSource = function(a, b, c) {
            this._catchUp(a, b), this._buf.withSource(a, b, c);
          }, a.prototype._space = function() {
            this._append(" ", !0);
          }, a.prototype._newline = function() {
            this._append("\n", !0);
          }, a.prototype._append = function(a) {
            var b = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            this._maybeAddParen(a), this._maybeIndent(a), b ? this._buf.queue(a) : this._buf.append(a), this._endsWithWord = !1, this._endsWithInteger = !1;
          }, a.prototype._maybeIndent = function(a) {
            this._indent && this.endsWith("\n") && "\n" !== a[0] && this._buf.queue(this._getIndent());
          }, a.prototype._maybeAddParen = function(a) {
            var b = this._parenPushNewlineState;
            if (b) {
              this._parenPushNewlineState = null;
              var c = void 0;
              for (c = 0; c < a.length && " " === a[c]; c++)
                ;
              if (c !== a.length) {
                var d = a[c];
                "\n" !== d && "/" !== d || (this.token("("), this.indent(), b.printed = !0);
              }
            }
          }, a.prototype._catchUp = function(a, b) {
            if (this.format.retainLines) {
              var c = b ? b[a] : null;
              if (c && null !== c.line)
                for (var d = c.line - this._buf.getCurrentLine(),
                    e = 0; e < d; e++)
                  this._newline();
            }
          }, a.prototype._getIndent = function() {
            return (0, x.default)(this.format.indent.style, this._indent);
          }, a.prototype.startTerminatorless = function() {
            return this._parenPushNewlineState = {printed: !1};
          }, a.prototype.endTerminatorless = function(a) {
            a.printed && (this.dedent(), this.newline(), this.token(")"));
          }, a.prototype.print = function(a, b) {
            var c = this;
            if (a) {
              var d = this.format.concise;
              a._compact && (this.format.concise = !0);
              var e = this[a.type];
              if (!e)
                throw new ReferenceError("unknown node of type " + (0, l.default)(a.type) + " with constructor " + (0, l.default)(a && a.constructor.name));
              this._printStack.push(a);
              var f = this._insideAux;
              this._insideAux = !a.loc, this._maybeAddAuxComment(this._insideAux && !f);
              var g = B.needsParens(a, b, this._printStack);
              this.format.retainFunctionParens && "FunctionExpression" === a.type && a.extra && a.extra.parenthesized && (g = !0), g && this.token("("), this._printLeadingComments(a, b);
              var h = F.isProgram(a) || F.isFile(a) ? null : a.loc;
              this.withSource("start", h, function() {
                c[a.type](a, b);
              }), this._printTrailingComments(a, b), g && this.token(")"), this._printStack.pop(), this.format.concise = d, this._insideAux = f;
            }
          }, a.prototype._maybeAddAuxComment = function(a) {
            a && this._printAuxBeforeComment(), this._insideAux || this._printAuxAfterComment();
          }, a.prototype._printAuxBeforeComment = function() {
            if (!this._printAuxAfterOnNextUserNode) {
              this._printAuxAfterOnNextUserNode = !0;
              var a = this.format.auxiliaryCommentBefore;
              a && this._printComment({
                type: "CommentBlock",
                value: a
              });
            }
          }, a.prototype._printAuxAfterComment = function() {
            if (this._printAuxAfterOnNextUserNode) {
              this._printAuxAfterOnNextUserNode = !1;
              var a = this.format.auxiliaryCommentAfter;
              a && this._printComment({
                type: "CommentBlock",
                value: a
              });
            }
          }, a.prototype.getPossibleRaw = function(a) {
            if (!this.format.minified) {
              var b = a.extra;
              return b && null != b.raw && null != b.rawValue && a.value === b.rawValue ? b.raw : void 0;
            }
          }, a.prototype.printJoin = function(a, b) {
            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            if (a && a.length) {
              c.indent && this.indent();
              for (var d = {addNewlines: c.addNewlines},
                  e = 0; e < a.length; e++) {
                var f = a[e];
                f && (c.statement && this._printNewline(!0, f, b, d), this.print(f, b), c.iterator && c.iterator(f, e), c.separator && e < a.length - 1 && c.separator.call(this), c.statement && this._printNewline(!1, f, b, d));
              }
              c.indent && this.dedent();
            }
          }, a.prototype.printAndIndentOnComments = function(a, b) {
            var c = !!a.leadingComments;
            c && this.indent(), this.print(a, b), c && this.dedent();
          }, a.prototype.printBlock = function(a) {
            var b = a.body;
            F.isEmptyStatement(b) || this.space(), this.print(b, a);
          }, a.prototype._printTrailingComments = function(a, b) {
            this._printComments(this._getComments(!1, a, b));
          }, a.prototype._printLeadingComments = function(a, b) {
            this._printComments(this._getComments(!0, a, b));
          }, a.prototype.printInnerComments = function(a) {
            var b = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
            a.innerComments && (b && this.indent(), this._printComments(a.innerComments), b && this.dedent());
          }, a.prototype.printSequence = function(a, b) {
            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            return c.statement = !0, this.printJoin(a, b, c);
          }, a.prototype.printList = function(a, b) {
            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            return null == c.separator && (c.separator = f), this.printJoin(a, b, c);
          }, a.prototype._printNewline = function(a, b, c, d) {
            var e = this;
            if (!this.format.retainLines && !this.format.compact) {
              if (this.format.concise)
                return void this.space();
              var f = 0;
              if (null != b.start && !b._ignoreUserWhitespace && this._whitespace)
                if (a) {
                  var g = b.leadingComments,
                      h = g && (0, r.default)(g, function(a) {
                        return !!a.loc && e.format.shouldPrintComment(a.value);
                      });
                  f = this._whitespace.getNewlinesBefore(h || b);
                } else {
                  var i = b.trailingComments,
                      j = i && (0, t.default)(i, function(a) {
                        return !!a.loc && e.format.shouldPrintComment(a.value);
                      });
                  f = this._whitespace.getNewlinesAfter(j || b);
                }
              else {
                a || f++, d.addNewlines && (f += d.addNewlines(a, b) || 0);
                var k = B.needsWhitespaceAfter;
                a && (k = B.needsWhitespaceBefore), k(b, c) && f++, this._buf.hasContent() || (f = 0);
              }
              this.newline(f);
            }
          }, a.prototype._getComments = function(a, b) {
            return b && (a ? b.leadingComments : b.trailingComments) || [];
          }, a.prototype._printComment = function(a) {
            var b = this;
            if (this.format.shouldPrintComment(a.value) && !a.ignore && !this._printedComments.has(a)) {
              if (this._printedComments.add(a), null != a.start) {
                if (this._printedCommentStarts[a.start])
                  return;
                this._printedCommentStarts[a.start] = !0;
              }
              this.newline(this._whitespace ? this._whitespace.getNewlinesBefore(a) : 0), this.endsWith("[") || this.endsWith("{") || this.space();
              var c = "CommentLine" === a.type ? "//" + a.value + "\n" : "/*" + a.value + "*/";
              if ("CommentBlock" === a.type && this.format.indent.adjustMultilineComment) {
                var d = a.loc && a.loc.start.column;
                if (d) {
                  var e = new RegExp("\\n\\s{1," + d + "}", "g");
                  c = c.replace(e, "\n");
                }
                var f = Math.max(this._getIndent().length, this._buf.getCurrentColumn());
                c = c.replace(/\n(?!$)/g, "\n" + (0, x.default)(" ", f));
              }
              this.withSource("start", a.loc, function() {
                b._append(c);
              }), this.newline((this._whitespace ? this._whitespace.getNewlinesAfter(a) : 0) + ("CommentLine" === a.type ? -1 : 0));
            }
          }, a.prototype._printComments = function(a) {
            if (a && a.length)
              for (var b = a,
                  c = Array.isArray(b),
                  d = 0,
                  b = c ? b : (0, j.default)(b); ; ) {
                var e;
                if (c) {
                  if (d >= b.length)
                    break;
                  e = b[d++];
                } else {
                  if (d = b.next(), d.done)
                    break;
                  e = d.value;
                }
                var f = e;
                this._printComment(f);
              }
          }, a;
        }();
    b.default = J;
    for (var K = [a("4f"), a("58"), a("5a"), a("5b"), a("5c"), a("5d"), a("5f"), a("5e"), a("61"), a("62")],
        L = 0; L < K.length; L++) {
      var M = K[L];
      (0, h.default)(J.prototype, M);
    }
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("5", ["17", "18", "19", "1d", "29", "6", "63"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a, b, c) {
      var d = "  ";
      if (a && "string" == typeof a) {
        var e = (0, o.default)(a).indent;
        e && " " !== e && (d = e);
      }
      var f = {
        auxiliaryCommentBefore: b.auxiliaryCommentBefore,
        auxiliaryCommentAfter: b.auxiliaryCommentAfter,
        shouldPrintComment: b.shouldPrintComment,
        retainLines: b.retainLines,
        retainFunctionParens: b.retainFunctionParens,
        comments: null == b.comments || b.comments,
        compact: b.compact,
        minified: b.minified,
        concise: b.concise,
        quotes: b.quotes || g(a, c),
        indent: {
          adjustMultilineComment: !0,
          style: d,
          base: 0
        }
      };
      return f.minified ? (f.compact = !0, f.shouldPrintComment = f.shouldPrintComment || function() {
        return f.comments;
      }) : f.shouldPrintComment = f.shouldPrintComment || function(a) {
        return f.comments || a.indexOf("@license") >= 0 || a.indexOf("@preserve") >= 0;
      }, "auto" === f.compact && (f.compact = a.length > 1e5, f.compact && console.error("[BABEL] " + s.get("codeGeneratorDeopt", b.filename, "100KB"))), f.compact && (f.indent.adjustMultilineComment = !1), f;
    }
    function g(a, b) {
      var c = "double";
      if (!a)
        return c;
      for (var d = {
        single: 0,
        double: 0
      },
          e = 0,
          f = 0; f < b.length; f++) {
        var g = b[f];
        if ("string" === g.type.label) {
          var h = a.slice(g.start, g.end);
          if ("'" === h[0] ? d.single++ : d.double++, e++, e >= 3)
            break;
        }
      }
      return d.single > d.double ? "single" : "double";
    }
    this || self;
    b.__esModule = !0, b.CodeGenerator = void 0;
    var h = a("17"),
        i = e(h),
        j = a("18"),
        k = e(j),
        l = a("19"),
        m = e(l);
    b.default = function(a, b, c) {
      var d = new v(a, b, c);
      return d.generate();
    };
    var n = a("1d"),
        o = e(n),
        p = a("29"),
        q = e(p),
        r = a("6"),
        s = d(r),
        t = a("63"),
        u = e(t),
        v = function(a) {
          function b(c, d, e) {
            (0, i.default)(this, b), d = d || {};
            var g = c.tokens || [],
                h = f(e, d, g),
                j = d.sourceMaps ? new q.default(d, e) : null,
                l = (0, k.default)(this, a.call(this, h, j, g));
            return l.ast = c, l;
          }
          return (0, m.default)(b, a), b.prototype.generate = function() {
            return a.prototype.generate.call(this, this.ast);
          }, b;
        }(u.default);
    b.CodeGenerator = function() {
      function a(b, c, d) {
        (0, i.default)(this, a), this._generator = new v(b, c, d);
      }
      return a.prototype.generate = function() {
        return this._generator.generate();
      }, a;
    }();
    return c.exports;
  }), a.registerDynamic("67", ["17", "68", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    a("3"), this || self;
    b.__esModule = !0;
    var e = a("17"),
        f = d(e),
        g = a("68"),
        h = d(g),
        i = (0, h.default)("babel:verbose"),
        j = (0, h.default)("babel"),
        k = [],
        l = function() {
          function a(b, c) {
            (0, f.default)(this, a), this.filename = c, this.file = b;
          }
          return a.prototype._buildMessage = function(a) {
            var b = "[BABEL] " + this.filename;
            return a && (b += ": " + a), b;
          }, a.prototype.warn = function(a) {
            console.warn(this._buildMessage(a));
          }, a.prototype.error = function(a) {
            var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Error;
            throw new b(this._buildMessage(a));
          }, a.prototype.deprecate = function(a) {
            this.file.opts && this.file.opts.suppressDeprecationMessages || (a = this._buildMessage(a), k.indexOf(a) >= 0 || (k.push(a), console.error(a)));
          }, a.prototype.verbose = function(a) {
            i.enabled && i(this._buildMessage(a));
          }, a.prototype.debug = function(a) {
            j.enabled && j(this._buildMessage(a));
          }, a.prototype.deopt = function(a, b) {
            this.debug(b);
          }, a;
        }();
    return b.default = l, c.exports = b.default, c.exports;
  }), a.registerDynamic("69", ["6a", "6b", "53"], !0, function(a, b, c) {
    function d(a) {
      return g(a) || f(a) || !!(h && a && a[h]);
    }
    var e = (this || self, a("6a")),
        f = a("6b"),
        g = a("53"),
        h = e ? e.isConcatSpreadable : void 0;
    return c.exports = d, c.exports;
  }), a.registerDynamic("6c", ["6d", "69"], !0, function(a, b, c) {
    function d(a, b, c, g, h) {
      var i = -1,
          j = a.length;
      for (c || (c = f), h || (h = []); ++i < j; ) {
        var k = a[i];
        b > 0 && c(k) ? b > 1 ? d(k, b - 1, c, g, h) : e(h, k) : g || (h[h.length] = k);
      }
      return h;
    }
    var e = (this || self, a("6d")),
        f = a("69");
    return c.exports = d, c.exports;
  }), a.registerDynamic("52", ["6e", "39"], !0, function(a, b, c) {
    function d(a, b) {
      var c = -1,
          d = f(a) ? Array(a.length) : [];
      return e(a, function(a, e, f) {
        d[++c] = b(a, e, f);
      }), d;
    }
    var e = (this || self, a("6e")),
        f = a("39");
    return c.exports = d, c.exports;
  }), a.registerDynamic("6f", [], !0, function(a, b, c) {
    function d(a, b) {
      var c = a.length;
      for (a.sort(b); c--; )
        a[c] = a[c].value;
      return a;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("70", ["71"], !0, function(a, b, c) {
    function d(a, b) {
      if (a !== b) {
        var c = void 0 !== a,
            d = null === a,
            f = a === a,
            g = e(a),
            h = void 0 !== b,
            i = null === b,
            j = b === b,
            k = e(b);
        if (!i && !k && !g && a > b || g && h && j && !i && !k || d && h && j || !c && j || !f)
          return 1;
        if (!d && !g && !k && a < b || k && c && f && !d && !g || i && c && f || !h && f || !j)
          return -1;
      }
      return 0;
    }
    var e = (this || self, a("71"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("72", ["70"], !0, function(a, b, c) {
    function d(a, b, c) {
      for (var d = -1,
          f = a.criteria,
          g = b.criteria,
          h = f.length,
          i = c.length; ++d < h; ) {
        var j = e(f[d], g[d]);
        if (j) {
          if (d >= i)
            return j;
          var k = c[d];
          return j * ("desc" == k ? -1 : 1);
        }
      }
      return a.index - b.index;
    }
    var e = (this || self, a("70"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("73", ["51", "35", "52", "6f", "74", "72", "75"], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = -1;
      b = e(b.length ? b : [k], i(f));
      var l = g(a, function(a, c, f) {
        var g = e(b, function(b) {
          return b(a);
        });
        return {
          criteria: g,
          index: ++d,
          value: a
        };
      });
      return h(l, function(a, b) {
        return j(a, b, c);
      });
    }
    var e = (this || self, a("51")),
        f = a("35"),
        g = a("52"),
        h = a("6f"),
        i = a("74"),
        j = a("72"),
        k = a("75");
    return c.exports = d, c.exports;
  }), a.registerDynamic("76", ["6c", "73", "77", "78"], !0, function(a, b, c) {
    var d = (this || self, a("6c")),
        e = a("73"),
        f = a("77"),
        g = a("78"),
        h = f(function(a, b) {
          if (null == a)
            return [];
          var c = b.length;
          return c > 1 && g(a, b[0], b[1]) ? b = [] : c > 2 && g(b[0], b[1], b[2]) && (b = [b[0]]), e(a, d(b, 1), []);
        });
    return c.exports = h, c.exports;
  }), a.registerDynamic("79", ["7a", "76", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    a("3"), this || self;
    b.__esModule = !0;
    var e = a("7a"),
        f = d(e),
        g = a("76"),
        h = d(g);
    return b.default = new f.default({
      name: "internal.blockHoist",
      visitor: {Block: {exit: function(a) {
            for (var b = a.node,
                c = !1,
                d = 0; d < b.body.length; d++) {
              var e = b.body[d];
              if (e && null != e._blockHoist) {
                c = !0;
                break;
              }
            }
            c && (b.body = (0, h.default)(b.body, function(a) {
              var b = a && a._blockHoist;
              return null == b && (b = 1), b === !0 && (b = 2), -1 * b;
            }));
          }}}
    }), c.exports = b.default, c.exports;
  }), a.registerDynamic("7b", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = function(a, b) {
      var c = {};
      for (var d in a)
        b.indexOf(d) >= 0 || Object.prototype.hasOwnProperty.call(a, d) && (c[d] = a[d]);
      return c;
    }, c.exports;
  }), a.registerDynamic("7c", ["48"], !0, function(a, b, c) {
    function d(a) {
      return a = e(a), a && g.test(a) ? a.replace(f, "\\$&") : a;
    }
    var e = (this || self, a("48")),
        f = /[\\^$.*+?()[\]{}|]/g,
        g = RegExp(f.source);
    return c.exports = d, c.exports;
  }), a.registerDynamic("7d", [], !0, function(a, b, c) {
    function d(a, b, c) {
      return a === a && (void 0 !== c && (a = a <= c ? a : c), void 0 !== b && (a = a >= b ? a : b)), a;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("7e", ["7d", "47", "36", "48"], !0, function(a, b, c) {
    function d(a, b, c) {
      return a = h(a), c = e(g(c), 0, a.length), b = f(b), a.slice(c, c + b.length) == b;
    }
    var e = (this || self, a("7d")),
        f = a("47"),
        g = a("36"),
        h = a("48");
    return c.exports = d, c.exports;
  }), a.registerDynamic("55", ["7f"], !0, function(a, b, c) {
    function d(a) {
      return a === !0 || a === !1 || e(a) && h.call(a) == f;
    }
    var e = (this || self, a("7f")),
        f = "[object Boolean]",
        g = Object.prototype,
        h = g.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("80", [], !0, function(a, b, c) {
    this || self;
    c.exports = function(a, b) {
      for (var c = [],
          e = 0; e < a.length; e++) {
        var f = b(a[e], e);
        d(f) ? c.push.apply(c, f) : c.push(f);
      }
      return c;
    };
    var d = Array.isArray || function(a) {
      return "[object Array]" === Object.prototype.toString.call(a);
    };
    return c.exports;
  }), a.registerDynamic("81", [], !0, function(a, b, c) {
    function d(a, b, c) {
      a instanceof RegExp && (a = e(a, c)), b instanceof RegExp && (b = e(b, c));
      var d = f(a, b, c);
      return d && {
        start: d[0],
        end: d[1],
        pre: c.slice(0, d[0]),
        body: c.slice(d[0] + a.length, d[1]),
        post: c.slice(d[1] + b.length)
      };
    }
    function e(a, b) {
      var c = b.match(a);
      return c ? c[0] : null;
    }
    function f(a, b, c) {
      var d,
          e,
          f,
          g,
          h,
          i = c.indexOf(a),
          j = c.indexOf(b, i + 1),
          k = i;
      if (i >= 0 && j > 0) {
        for (d = [], f = c.length; k >= 0 && !h; )
          k == i ? (d.push(k), i = c.indexOf(a, k + 1)) : 1 == d.length ? h = [d.pop(), j] : (e = d.pop(), e < f && (f = e, g = j), j = c.indexOf(b, k + 1)), k = i < j && i >= 0 ? i : j;
        d.length && (h = [f, g]);
      }
      return h;
    }
    this || self;
    return c.exports = d, d.range = f, c.exports;
  }), a.registerDynamic("82", ["80", "81"], !0, function(a, b, c) {
    function d(a) {
      return parseInt(a, 10) == a ? parseInt(a, 10) : a.charCodeAt(0);
    }
    function e(a) {
      return a.split("\\\\").join(p).split("\\{").join(q).split("\\}").join(r).split("\\,").join(s).split("\\.").join(t);
    }
    function f(a) {
      return a.split(p).join("\\").split(q).join("{").split(r).join("}").split(s).join(",").split(t).join(".");
    }
    function g(a) {
      if (!a)
        return [""];
      var b = [],
          c = o("{", "}", a);
      if (!c)
        return a.split(",");
      var d = c.pre,
          e = c.body,
          f = c.post,
          h = d.split(",");
      h[h.length - 1] += "{" + e + "}";
      var i = g(f);
      return f.length && (h[h.length - 1] += i.shift(), h.push.apply(h, i)), b.push.apply(b, h), b;
    }
    function h(a) {
      return a ? ("{}" === a.substr(0, 2) && (a = "\\{\\}" + a.substr(2)), m(e(a), !0).map(f)) : [];
    }
    function i(a) {
      return "{" + a + "}";
    }
    function j(a) {
      return /^-?0\d/.test(a);
    }
    function k(a, b) {
      return a <= b;
    }
    function l(a, b) {
      return a >= b;
    }
    function m(a, b) {
      var c = [],
          e = o("{", "}", a);
      if (!e || /\$$/.test(e.pre))
        return [a];
      var f = /^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(e.body),
          h = /^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(e.body),
          p = f || h,
          q = /^(.*,)+(.+)?$/.test(e.body);
      if (!p && !q)
        return e.post.match(/,.*\}/) ? (a = e.pre + "{" + e.body + r + e.post, m(a)) : [a];
      var s;
      if (p)
        s = e.body.split(/\.\./);
      else if (s = g(e.body), 1 === s.length && (s = m(s[0], !1).map(i), 1 === s.length)) {
        var t = e.post.length ? m(e.post, !1) : [""];
        return t.map(function(a) {
          return e.pre + s[0] + a;
        });
      }
      var u,
          v = e.pre,
          t = e.post.length ? m(e.post, !1) : [""];
      if (p) {
        var w = d(s[0]),
            x = d(s[1]),
            y = Math.max(s[0].length, s[1].length),
            z = 3 == s.length ? Math.abs(d(s[2])) : 1,
            A = k,
            B = x < w;
        B && (z *= -1, A = l);
        var C = s.some(j);
        u = [];
        for (var D = w; A(D, x); D += z) {
          var E;
          if (h)
            E = String.fromCharCode(D), "\\" === E && (E = "");
          else if (E = String(D), C) {
            var F = y - E.length;
            if (F > 0) {
              var G = new Array(F + 1).join("0");
              E = D < 0 ? "-" + G + E.slice(1) : G + E;
            }
          }
          u.push(E);
        }
      } else
        u = n(s, function(a) {
          return m(a, !1);
        });
      for (var H = 0; H < u.length; H++)
        for (var I = 0; I < t.length; I++) {
          var J = v + u[H] + t[I];
          (!b || p || J) && c.push(J);
        }
      return c;
    }
    var n = (this || self, a("80")),
        o = a("81");
    c.exports = h;
    var p = "\0SLASH" + Math.random() + "\0",
        q = "\0OPEN" + Math.random() + "\0",
        r = "\0CLOSE" + Math.random() + "\0",
        s = "\0COMMA" + Math.random() + "\0",
        t = "\0PERIOD" + Math.random() + "\0";
    return c.exports;
  }), a.registerDynamic("83", ["12", "82"], !0, function(a, b, c) {
    function d(a) {
      return a.split("").reduce(function(a, b) {
        return a[b] = !0, a;
      }, {});
    }
    function e(a, b) {
      return b = b || {}, function(c, d, e) {
        return g(c, a, b);
      };
    }
    function f(a, b) {
      a = a || {}, b = b || {};
      var c = {};
      return Object.keys(b).forEach(function(a) {
        c[a] = b[a];
      }), Object.keys(a).forEach(function(b) {
        c[b] = a[b];
      }), c;
    }
    function g(a, b, c) {
      if ("string" != typeof b)
        throw new TypeError("glob pattern string required");
      return c || (c = {}), !(!c.nocomment && "#" === b.charAt(0)) && ("" === b.trim() ? "" === a : new h(b, c).match(a));
    }
    function h(a, b) {
      if (!(this instanceof h))
        return new h(a, b);
      if ("string" != typeof a)
        throw new TypeError("glob pattern string required");
      b || (b = {}), a = a.trim(), "/" !== q.sep && (a = a.split(q.sep).join("/")), this.options = b, this.set = [], this.pattern = a, this.regexp = null, this.negate = !1, this.comment = !1, this.empty = !1, this.make();
    }
    function i() {
      if (!this._made) {
        var a = this.pattern,
            b = this.options;
        if (!b.nocomment && "#" === a.charAt(0))
          return void(this.comment = !0);
        if (!a)
          return void(this.empty = !0);
        this.parseNegate();
        var c = this.globSet = this.braceExpand();
        b.debug && (this.debug = console.error), this.debug(this.pattern, c), c = this.globParts = c.map(function(a) {
          return a.split(z);
        }), this.debug(this.pattern, c), c = c.map(function(a, b, c) {
          return a.map(this.parse, this);
        }, this), this.debug(this.pattern, c), c = c.filter(function(a) {
          return a.indexOf(!1) === -1;
        }), this.debug(this.pattern, c), this.set = c;
      }
    }
    function j() {
      var a = this.pattern,
          b = !1,
          c = this.options,
          d = 0;
      if (!c.nonegate) {
        for (var e = 0,
            f = a.length; e < f && "!" === a.charAt(e); e++)
          b = !b, d++;
        d && (this.pattern = a.substr(d)), this.negate = b;
      }
    }
    function k(a, b) {
      if (b || (b = this instanceof h ? this.options : {}), a = "undefined" == typeof a ? this.pattern : a, "undefined" == typeof a)
        throw new TypeError("undefined pattern");
      return b.nobrace || !a.match(/\{.*\}/) ? [a] : s(a);
    }
    function l(a, b) {
      function c() {
        if (e) {
          switch (e) {
            case "*":
              g += v, h = !0;
              break;
            case "?":
              g += u, h = !0;
              break;
            default:
              g += "\\" + e;
          }
          q.debug("clearStateChar %j %j", e, g), e = !1;
        }
      }
      if (a.length > 65536)
        throw new TypeError("pattern is too long");
      var d = this.options;
      if (!d.noglobstar && "**" === a)
        return r;
      if ("" === a)
        return "";
      for (var e,
          f,
          g = "",
          h = !!d.nocase,
          i = !1,
          j = [],
          k = [],
          l = !1,
          m = -1,
          n = -1,
          p = "." === a.charAt(0) ? "" : d.dot ? "(?!(?:^|\\/)\\.{1,2}(?:$|\\/))" : "(?!\\.)",
          q = this,
          s = 0,
          w = a.length; s < w && (f = a.charAt(s)); s++)
        if (this.debug("%s\t%s %s %j", a, s, g, f), i && y[f])
          g += "\\" + f, i = !1;
        else
          switch (f) {
            case "/":
              return !1;
            case "\\":
              c(), i = !0;
              continue;
            case "?":
            case "*":
            case "+":
            case "@":
            case "!":
              if (this.debug("%s\t%s %s %j <-- stateChar", a, s, g, f), l) {
                this.debug("  in class"), "!" === f && s === n + 1 && (f = "^"), g += f;
                continue;
              }
              q.debug("call clearStateChar %j", e), c(), e = f, d.noext && c();
              continue;
            case "(":
              if (l) {
                g += "(";
                continue;
              }
              if (!e) {
                g += "\\(";
                continue;
              }
              j.push({
                type: e,
                start: s - 1,
                reStart: g.length,
                open: t[e].open,
                close: t[e].close
              }), g += "!" === e ? "(?:(?!(?:" : "(?:", this.debug("plType %j %j", e, g), e = !1;
              continue;
            case ")":
              if (l || !j.length) {
                g += "\\)";
                continue;
              }
              c(), h = !0;
              var x = j.pop();
              g += x.close, "!" === x.type && k.push(x), x.reEnd = g.length;
              continue;
            case "|":
              if (l || !j.length || i) {
                g += "\\|", i = !1;
                continue;
              }
              c(), g += "|";
              continue;
            case "[":
              if (c(), l) {
                g += "\\" + f;
                continue;
              }
              l = !0, n = s, m = g.length, g += f;
              continue;
            case "]":
              if (s === n + 1 || !l) {
                g += "\\" + f, i = !1;
                continue;
              }
              if (l) {
                var z = a.substring(n + 1, s);
                try {
                  RegExp("[" + z + "]");
                } catch (a) {
                  var B = this.parse(z, A);
                  g = g.substr(0, m) + "\\[" + B[0] + "\\]", h = h || B[1], l = !1;
                  continue;
                }
              }
              h = !0, l = !1, g += f;
              continue;
            default:
              c(), i ? i = !1 : !y[f] || "^" === f && l || (g += "\\"), g += f;
          }
      for (l && (z = a.substr(n + 1), B = this.parse(z, A), g = g.substr(0, m) + "\\[" + B[0], h = h || B[1]), x = j.pop(); x; x = j.pop()) {
        var C = g.slice(x.reStart + x.open.length);
        this.debug("setting tail", g, x), C = C.replace(/((?:\\{2}){0,64})(\\?)\|/g, function(a, b, c) {
          return c || (c = "\\"), b + b + c + "|";
        }), this.debug("tail=%j\n   %s", C, C, x, g);
        var D = "*" === x.type ? v : "?" === x.type ? u : "\\" + x.type;
        h = !0, g = g.slice(0, x.reStart) + D + "\\(" + C;
      }
      c(), i && (g += "\\\\");
      var E = !1;
      switch (g.charAt(0)) {
        case ".":
        case "[":
        case "(":
          E = !0;
      }
      for (var F = k.length - 1; F > -1; F--) {
        var G = k[F],
            H = g.slice(0, G.reStart),
            I = g.slice(G.reStart, G.reEnd - 8),
            J = g.slice(G.reEnd - 8, G.reEnd),
            K = g.slice(G.reEnd);
        J += K;
        var L = H.split("(").length - 1,
            M = K;
        for (s = 0; s < L; s++)
          M = M.replace(/\)[+*?]?/, "");
        K = M;
        var N = "";
        "" === K && b !== A && (N = "$");
        var O = H + I + K + N + J;
        g = O;
      }
      if ("" !== g && h && (g = "(?=.)" + g), E && (g = p + g), b === A)
        return [g, h];
      if (!h)
        return o(a);
      var P = d.nocase ? "i" : "";
      try {
        var Q = new RegExp("^" + g + "$", P);
      } catch (a) {
        return new RegExp("$.");
      }
      return Q._glob = a, Q._src = g, Q;
    }
    function m() {
      if (this.regexp || this.regexp === !1)
        return this.regexp;
      var a = this.set;
      if (!a.length)
        return this.regexp = !1, this.regexp;
      var b = this.options,
          c = b.noglobstar ? v : b.dot ? w : x,
          d = b.nocase ? "i" : "",
          e = a.map(function(a) {
            return a.map(function(a) {
              return a === r ? c : "string" == typeof a ? p(a) : a._src;
            }).join("\\/");
          }).join("|");
      e = "^(?:" + e + ")$", this.negate && (e = "^(?!" + e + ").*$");
      try {
        this.regexp = new RegExp(e, d);
      } catch (a) {
        this.regexp = !1;
      }
      return this.regexp;
    }
    function n(a, b) {
      if (this.debug("match", a, this.pattern), this.comment)
        return !1;
      if (this.empty)
        return "" === a;
      if ("/" === a && b)
        return !0;
      var c = this.options;
      "/" !== q.sep && (a = a.split(q.sep).join("/")), a = a.split(z), this.debug(this.pattern, "split", a);
      var d = this.set;
      this.debug(this.pattern, "set", d);
      var e,
          f;
      for (f = a.length - 1; f >= 0 && !(e = a[f]); f--)
        ;
      for (f = 0; f < d.length; f++) {
        var g = d[f],
            h = a;
        c.matchBase && 1 === g.length && (h = [e]);
        var i = this.matchOne(h, g, b);
        if (i)
          return !!c.flipNegate || !this.negate;
      }
      return !c.flipNegate && this.negate;
    }
    function o(a) {
      return a.replace(/\\(.)/g, "$1");
    }
    function p(a) {
      return a.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
    }
    this || self;
    c.exports = g, g.Minimatch = h;
    var q = {sep: "/"};
    try {
      q = a("12");
    } catch (a) {}
    var r = g.GLOBSTAR = h.GLOBSTAR = {},
        s = a("82"),
        t = {
          "!": {
            open: "(?:(?!(?:",
            close: "))[^/]*?)"
          },
          "?": {
            open: "(?:",
            close: ")?"
          },
          "+": {
            open: "(?:",
            close: ")+"
          },
          "*": {
            open: "(?:",
            close: ")*"
          },
          "@": {
            open: "(?:",
            close: ")"
          }
        },
        u = "[^/]",
        v = u + "*?",
        w = "(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?",
        x = "(?:(?!(?:\\/|^)\\.).)*?",
        y = d("().*{}+?[]^$\\!"),
        z = /\/+/;
    g.filter = e, g.defaults = function(a) {
      if (!a || !Object.keys(a).length)
        return g;
      var b = g,
          c = function(c, d, e) {
            return b.minimatch(c, d, f(a, e));
          };
      return c.Minimatch = function(c, d) {
        return new b.Minimatch(c, f(a, d));
      }, c;
    }, h.defaults = function(a) {
      return a && Object.keys(a).length ? g.defaults(a).Minimatch : h;
    }, h.prototype.debug = function() {}, h.prototype.make = i, h.prototype.parseNegate = j, g.braceExpand = function(a, b) {
      return k(a, b);
    }, h.prototype.braceExpand = k, h.prototype.parse = l;
    var A = {};
    return g.makeRe = function(a, b) {
      return new h(a, b || {}).makeRe();
    }, h.prototype.makeRe = m, g.match = function(a, b, c) {
      c = c || {};
      var d = new h(b, c);
      return a = a.filter(function(a) {
        return d.match(a);
      }), d.options.nonull && !a.length && a.push(b), a;
    }, h.prototype.match = n, h.prototype.matchOne = function(a, b, c) {
      var d = this.options;
      this.debug("matchOne", {
        this: this,
        file: a,
        pattern: b
      }), this.debug("matchOne", a.length, b.length);
      for (var e = 0,
          f = 0,
          g = a.length,
          h = b.length; e < g && f < h; e++, f++) {
        this.debug("matchOne loop");
        var i = b[f],
            j = a[e];
        if (this.debug(b, i, j), i === !1)
          return !1;
        if (i === r) {
          this.debug("GLOBSTAR", [b, i, j]);
          var k = e,
              l = f + 1;
          if (l === h) {
            for (this.debug("** at the end"); e < g; e++)
              if ("." === a[e] || ".." === a[e] || !d.dot && "." === a[e].charAt(0))
                return !1;
            return !0;
          }
          for (; k < g; ) {
            var m = a[k];
            if (this.debug("\nglobstar while", a, k, b, l, m), this.matchOne(a.slice(k), b.slice(l), c))
              return this.debug("globstar found match!", k, g, m), !0;
            if ("." === m || ".." === m || !d.dot && "." === m.charAt(0)) {
              this.debug("dot detected!", a, k, b, l);
              break;
            }
            this.debug("globstar swallow a segment, and continue"), k++;
          }
          return !(!c || (this.debug("\n>>> no match, partial?", a, k, b, l), k !== g));
        }
        var n;
        if ("string" == typeof i ? (n = d.nocase ? j.toLowerCase() === i.toLowerCase() : j === i, this.debug("string match", i, j, n)) : (n = j.match(i), this.debug("pattern match", i, j, n)), !n)
          return !1;
      }
      if (e === g && f === h)
        return !0;
      if (e === g)
        return c;
      if (f === h) {
        var o = e === g - 1 && "" === a[e];
        return o;
      }
      throw new Error("wtf?");
    }, c.exports;
  }), a.registerDynamic("84", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return c.exports = function(a) {
      var b = /^\\\\\?\\/.test(a),
          c = /[^\x00-\x80]+/.test(a);
      return b || c ? a : a.replace(/\\/g, "/");
    }, c.exports;
  }), a.registerDynamic("85", ["f", "86", "7c", "7e", "55", "83", "87", "88", "89", "12", "84", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e(a, b) {
      var c = b || e.EXTENSIONS,
          d = D.default.extname(a);
      return (0, x.default)(c, d);
    }
    function f(a) {
      return a ? Array.isArray(a) ? a : "string" == typeof a ? a.split(",") : [a] : [];
    }
    function g(a) {
      if (!a)
        return new RegExp(/.^/);
      if (Array.isArray(a) && (a = new RegExp(a.map(p.default).join("|"), "i")), "string" == typeof a) {
        a = (0, F.default)(a), ((0, r.default)(a, "./") || (0, r.default)(a, "*/")) && (a = a.slice(2)), (0, r.default)(a, "**/") && (a = a.slice(3));
        var b = v.default.makeRe(a, {nocase: !0});
        return new RegExp(b.source.slice(1, -1), "i");
      }
      if ((0, B.default)(a))
        return a;
      throw new TypeError("illegal type for regexify");
    }
    function h(a, b) {
      return a ? (0, t.default)(a) ? h([a], b) : (0, z.default)(a) ? h(f(a), b) : Array.isArray(a) ? (b && (a = a.map(b)), a) : [a] : [];
    }
    function i(a) {
      return "true" === a || 1 == a || !("false" === a || 0 == a || !a) && a;
    }
    function j(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
          c = arguments[2];
      if (a = a.replace(/\\/g, "/"), c) {
        for (var d = c,
            e = Array.isArray(d),
            f = 0,
            d = e ? d : (0, m.default)(d); ; ) {
          var g;
          if (e) {
            if (f >= d.length)
              break;
            g = d[f++];
          } else {
            if (f = d.next(), f.done)
              break;
            g = f.value;
          }
          var h = g;
          if (k(h, a))
            return !1;
        }
        return !0;
      }
      if (b.length)
        for (var i = b,
            j = Array.isArray(i),
            l = 0,
            i = j ? i : (0, m.default)(i); ; ) {
          var n;
          if (j) {
            if (l >= i.length)
              break;
            n = i[l++];
          } else {
            if (l = i.next(), l.done)
              break;
            n = l.value;
          }
          var o = n;
          if (k(o, a))
            return !0;
        }
      return !1;
    }
    function k(a, b) {
      return "function" == typeof a ? a(b) : a.test(b);
    }
    a("3"), this || self;
    b.__esModule = !0, b.inspect = b.inherits = void 0;
    var l = a("f"),
        m = d(l),
        n = a("86");
    Object.defineProperty(b, "inherits", {
      enumerable: !0,
      get: function() {
        return n.inherits;
      }
    }), Object.defineProperty(b, "inspect", {
      enumerable: !0,
      get: function() {
        return n.inspect;
      }
    }), b.canCompile = e, b.list = f, b.regexify = g, b.arrayify = h, b.booleanify = i, b.shouldIgnore = j;
    var o = a("7c"),
        p = d(o),
        q = a("7e"),
        r = d(q),
        s = a("55"),
        t = d(s),
        u = a("83"),
        v = d(u),
        w = a("87"),
        x = d(w),
        y = a("88"),
        z = d(y),
        A = a("89"),
        B = d(A),
        C = a("12"),
        D = d(C),
        E = a("84"),
        F = d(E);
    return e.EXTENSIONS = [".js", ".jsx", ".es6", ".es"], c.exports;
  }), a.registerDynamic("8a", ["84", "85", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      return !!a;
    }
    function g(a) {
      return l.booleanify(a);
    }
    function h(a) {
      return l.list(a);
    }
    a("3"), this || self;
    b.__esModule = !0, b.filename = void 0, b.boolean = f, b.booleanString = g, b.list = h;
    var i = a("84"),
        j = e(i),
        k = a("85"),
        l = d(k);
    b.filename = j.default;
    return c.exports;
  }), a.registerDynamic("8b", ["8a", "8c", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function f() {
      var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
      for (var b in a) {
        var c = a[b];
        if (null != c) {
          var d = j.default[b];
          if (d && d.alias && (d = j.default[d.alias]), d) {
            var e = h[d.type];
            e && (c = e(c)), a[b] = c;
          }
        }
      }
      return a;
    }
    a("3"), this || self;
    b.__esModule = !0, b.config = void 0, b.normaliseOptions = f;
    var g = a("8a"),
        h = e(g),
        i = a("8c"),
        j = d(i);
    return b.config = j.default, c.exports;
  }), a.registerDynamic("8d", ["8e"], !0, function(a, b, c) {
    function d(a, b) {
      return e(a, !0, !0, b);
    }
    var e = (this || self, a("8e"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("8f", ["90", "91"], !0, function(a, b, c) {
    function d(a, b, c) {
      (void 0 === c || f(a[b], c)) && (void 0 !== c || b in a) || e(a, b, c);
    }
    var e = (this || self, a("90")),
        f = a("91");
    return c.exports = d, c.exports;
  }), a.registerDynamic("92", ["39", "7f"], !0, function(a, b, c) {
    function d(a) {
      return f(a) && e(a);
    }
    var e = (this || self, a("39")),
        f = a("7f");
    return c.exports = d, c.exports;
  }), a.registerDynamic("93", ["94", "95"], !0, function(a, b, c) {
    function d(a) {
      return e(a, f(a));
    }
    var e = (this || self, a("94")),
        f = a("95");
    return c.exports = d, c.exports;
  }), a.registerDynamic("96", ["8f", "97", "98", "99", "9a", "6b", "53", "92", "9b", "9c", "9d", "9e", "9f", "93"], !0, function(a, b, c) {
    function d(a, b, c, d, s, t, u) {
      var v = a[c],
          w = b[c],
          x = u.get(w);
      if (x)
        return void e(a, c, x);
      var y = t ? t(v, w, c + "", a, b, u) : void 0,
          z = void 0 === y;
      if (z) {
        var A = k(w),
            B = !A && m(w),
            C = !A && !B && q(w);
        y = w, A || B || C ? k(v) ? y = v : l(v) ? y = h(v) : B ? (z = !1, y = f(w, !0)) : C ? (z = !1, y = g(w, !0)) : y = [] : p(w) || j(w) ? (y = v, j(v) ? y = r(v) : (!o(v) || d && n(v)) && (y = i(w))) : z = !1;
      }
      z && (u.set(w, y), s(y, w, d, t, u), u.delete(w)), e(a, c, y);
    }
    var e = (this || self, a("8f")),
        f = a("97"),
        g = a("98"),
        h = a("99"),
        i = a("9a"),
        j = a("6b"),
        k = a("53"),
        l = a("92"),
        m = a("9b"),
        n = a("9c"),
        o = a("9d"),
        p = a("9e"),
        q = a("9f"),
        r = a("93");
    return c.exports = d, c.exports;
  }), a.registerDynamic("a0", ["a1", "8f", "a2", "96", "9d", "95"], !0, function(a, b, c) {
    function d(a, b, c, k, l) {
      a !== b && g(b, function(g, j) {
        if (i(g))
          l || (l = new e), h(a, b, j, c, d, k, l);
        else {
          var m = k ? k(a[j], g, j + "", a, b, l) : void 0;
          void 0 === m && (m = g), f(a, j, m);
        }
      }, j);
    }
    var e = (this || self, a("a1")),
        f = a("8f"),
        g = a("a2"),
        h = a("96"),
        i = a("9d"),
        j = a("95");
    return c.exports = d, c.exports;
  }), a.registerDynamic("a3", ["a0", "a4"], !0, function(a, b, c) {
    var d = (this || self, a("a0")),
        e = a("a4"),
        f = e(function(a, b, c, e) {
          d(a, b, c, e);
        });
    return c.exports = f, c.exports;
  }), a.registerDynamic("a5", ["f", "a3", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    a("3"), this || self;
    b.__esModule = !0;
    var e = a("f"),
        f = d(e);
    b.default = function(a, b) {
      if (a && b)
        return (0, h.default)(a, b, function(a, b) {
          if (b && Array.isArray(a)) {
            for (var c = b.slice(0),
                d = a,
                e = Array.isArray(d),
                g = 0,
                d = e ? d : (0, f.default)(d); ; ) {
              var h;
              if (e) {
                if (g >= d.length)
                  break;
                h = d[g++];
              } else {
                if (g = d.next(), g.done)
                  break;
                h = g.value;
              }
              var i = h;
              c.indexOf(i) < 0 && c.push(i);
            }
            return c;
          }
        });
    };
    var g = a("a3"),
        h = d(g);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("8c", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3"), this || self;
    return c.exports = {
      filename: {
        type: "filename",
        description: "filename to use when reading from stdin - this will be used in source-maps, errors etc",
        default: "unknown",
        shorthand: "f"
      },
      filenameRelative: {
        hidden: !0,
        type: "string"
      },
      inputSourceMap: {hidden: !0},
      env: {
        hidden: !0,
        default: {}
      },
      mode: {
        description: "",
        hidden: !0
      },
      retainLines: {
        type: "boolean",
        default: !1,
        description: "retain line numbers - will result in really ugly code"
      },
      highlightCode: {
        description: "enable/disable ANSI syntax highlighting of code frames (on by default)",
        type: "boolean",
        default: !0
      },
      suppressDeprecationMessages: {
        type: "boolean",
        default: !1,
        hidden: !0
      },
      presets: {
        type: "list",
        description: "",
        default: []
      },
      plugins: {
        type: "list",
        default: [],
        description: ""
      },
      ignore: {
        type: "list",
        description: "list of glob paths to **not** compile",
        default: []
      },
      only: {
        type: "list",
        description: "list of glob paths to **only** compile"
      },
      code: {
        hidden: !0,
        default: !0,
        type: "boolean"
      },
      metadata: {
        hidden: !0,
        default: !0,
        type: "boolean"
      },
      ast: {
        hidden: !0,
        default: !0,
        type: "boolean"
      },
      extends: {
        type: "string",
        hidden: !0
      },
      comments: {
        type: "boolean",
        default: !0,
        description: "write comments to generated output (true by default)"
      },
      shouldPrintComment: {
        hidden: !0,
        description: "optional callback to control whether a comment should be inserted, when this is used the comments option is ignored"
      },
      wrapPluginVisitorMethod: {
        hidden: !0,
        description: "optional callback to wrap all visitor methods"
      },
      compact: {
        type: "booleanString",
        default: "auto",
        description: "do not include superfluous whitespace characters and line terminators [true|false|auto]"
      },
      minified: {
        type: "boolean",
        default: !1,
        description: "save as much bytes when printing [true|false]"
      },
      sourceMap: {
        alias: "sourceMaps",
        hidden: !0
      },
      sourceMaps: {
        type: "booleanString",
        description: "[true|false|inline]",
        default: !1,
        shorthand: "s"
      },
      sourceMapTarget: {
        type: "string",
        description: "set `file` on returned source map"
      },
      sourceFileName: {
        type: "string",
        description: "set `sources[0]` on returned source map"
      },
      sourceRoot: {
        type: "filename",
        description: "the root from which all sources are relative"
      },
      babelrc: {
        description: "Whether or not to look up .babelrc and .babelignore files",
        type: "boolean",
        default: !0
      },
      sourceType: {
        description: "",
        default: "module"
      },
      auxiliaryCommentBefore: {
        type: "string",
        description: "print a comment before any injected non-user code"
      },
      auxiliaryCommentAfter: {
        type: "string",
        description: "print a comment after any injected non-user code"
      },
      resolveModuleSource: {hidden: !0},
      getModuleId: {hidden: !0},
      moduleRoot: {
        type: "filename",
        description: "optional prefix for the AMD module formatter that will be prepend to the filename on module definitions"
      },
      moduleIds: {
        type: "boolean",
        default: !1,
        shorthand: "M",
        description: "insert an explicit id for modules"
      },
      moduleId: {
        description: "specify a custom name for module ids",
        type: "string"
      },
      passPerPreset: {
        description: "Whether to spawn a traversal pass per a preset. By default all presets are merged.",
        type: "boolean",
        default: !1,
        hidden: !0
      },
      parserOpts: {
        description: "Options to pass into the parser, or to change parsers (parserOpts.parser)",
        default: !1
      },
      generatorOpts: {
        description: "Options to pass into the generator, or to change generators (generatorOpts.generator)",
        default: !1
      }
    }, c.exports;
  }), a.registerDynamic("a6", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3"), this || self;
    return c.exports = {
      auxiliaryComment: {message: "Use `auxiliaryCommentBefore` or `auxiliaryCommentAfter`"},
      blacklist: {message: "Put the specific transforms you want in the `plugins` option"},
      breakConfig: {message: "This is not a necessary option in Babel 6"},
      experimental: {message: "Put the specific transforms you want in the `plugins` option"},
      externalHelpers: {message: "Use the `external-helpers` plugin instead. Check out http://babeljs.io/docs/plugins/external-helpers/"},
      extra: {message: ""},
      jsxPragma: {message: "use the `pragma` option in the `react-jsx` plugin . Check out http://babeljs.io/docs/plugins/transform-react-jsx/"},
      loose: {message: "Specify the `loose` option for the relevant plugin you are using or use a preset that sets the option."},
      metadataUsedHelpers: {message: "Not required anymore as this is enabled by default"},
      modules: {message: "Use the corresponding module transform plugin in the `plugins` option. Check out http://babeljs.io/docs/plugins/#modules"},
      nonStandard: {message: "Use the `react-jsx` and `flow-strip-types` plugins to support JSX and Flow. Also check out the react preset http://babeljs.io/docs/plugins/preset-react/"},
      optional: {message: "Put the specific transforms you want in the `plugins` option"},
      sourceMapName: {message: "Use the `sourceMapTarget` option"},
      stage: {message: "Check out the corresponding stage-x presets http://babeljs.io/docs/plugins/#presets"},
      whitelist: {message: "Put the specific transforms you want in the `plugins` option"}
    }, c.exports;
  }), a.registerDynamic("a7", ["a8", "a9", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("a8"));
    return d(d.S + d.F, "Object", {assign: a("a9")}), c.exports;
  }), a.registerDynamic("aa", ["a7", "31", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return a("a7"), c.exports = a("31").Object.assign, c.exports;
  }), a.registerDynamic("64", ["aa"], !0, function(a, b, c) {
    this || self;
    return c.exports = {
      default: a("aa"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("ab", [], !0, function(b, c, d) {
    this || self;
    return d.exports = a._nodeRequire && a._nodeRequire("module"), d.exports;
  }), a.registerDynamic("ac", ["2a", "ab", "12", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    var e = a("3");
    this || self;
    b.__esModule = !0;
    var f = a("2a"),
        g = d(f);
    b.default = function(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : e.cwd();
      if ("object" === ("undefined" == typeof i.default ? "undefined" : (0, g.default)(i.default)))
        return null;
      var c = l[b];
      if (!c) {
        c = new i.default;
        var d = k.default.join(b, ".babelrc");
        c.id = d, c.filename = d, c.paths = i.default._nodeModulePaths(b), l[b] = c;
      }
      try {
        return i.default._resolveFilename(a, c);
      } catch (a) {
        return null;
      }
    };
    var h = a("ab"),
        i = d(h),
        j = a("12"),
        k = d(j),
        l = {};
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("ad", [], !0, function(a, b, c) {
    var d = (this || self, "object" == typeof b ? b : {});
    return d.parse = function() {
      "use strict";
      var a,
          b,
          c,
          d,
          e,
          f,
          g = {
            "'": "'",
            '"': '"',
            "\\": "\\",
            "/": "/",
            "\n": "",
            b: "\b",
            f: "\f",
            n: "\n",
            r: "\r",
            t: "\t"
          },
          h = [" ", "\t", "\r", "\n", "\v", "\f", " ", "\ufeff"],
          i = function(a) {
            return "" === a ? "EOF" : "'" + a + "'";
          },
          j = function(d) {
            var f = new SyntaxError;
            throw f.message = d + " at line " + b + " column " + c + " of the JSON5 data. Still to read: " + JSON.stringify(e.substring(a - 1, a + 19)), f.at = a, f.lineNumber = b, f.columnNumber = c, f;
          },
          k = function(f) {
            return f && f !== d && j("Expected " + i(f) + " instead of " + i(d)), d = e.charAt(a), a++, c++, ("\n" === d || "\r" === d && "\n" !== l()) && (b++, c = 0), d;
          },
          l = function() {
            return e.charAt(a);
          },
          m = function() {
            var a = d;
            for ("_" !== d && "$" !== d && (d < "a" || d > "z") && (d < "A" || d > "Z") && j("Bad identifier as unquoted key"); k() && ("_" === d || "$" === d || d >= "a" && d <= "z" || d >= "A" && d <= "Z" || d >= "0" && d <= "9"); )
              a += d;
            return a;
          },
          n = function() {
            var a,
                b = "",
                c = "",
                e = 10;
            if ("-" !== d && "+" !== d || (b = d, k(d)), "I" === d)
              return a = t(), ("number" != typeof a || isNaN(a)) && j("Unexpected word for number"), "-" === b ? -a : a;
            if ("N" === d)
              return a = t(), isNaN(a) || j("expected word to be NaN"), a;
            switch ("0" === d && (c += d, k(), "x" === d || "X" === d ? (c += d, k(), e = 16) : d >= "0" && d <= "9" && j("Octal literal")), e) {
              case 10:
                for (; d >= "0" && d <= "9"; )
                  c += d, k();
                if ("." === d)
                  for (c += "."; k() && d >= "0" && d <= "9"; )
                    c += d;
                if ("e" === d || "E" === d)
                  for (c += d, k(), "-" !== d && "+" !== d || (c += d, k()); d >= "0" && d <= "9"; )
                    c += d, k();
                break;
              case 16:
                for (; d >= "0" && d <= "9" || d >= "A" && d <= "F" || d >= "a" && d <= "f"; )
                  c += d, k();
            }
            return a = "-" === b ? -c : +c, isFinite(a) ? a : void j("Bad number");
          },
          o = function() {
            var a,
                b,
                c,
                e,
                f = "";
            if ('"' === d || "'" === d)
              for (c = d; k(); ) {
                if (d === c)
                  return k(), f;
                if ("\\" === d)
                  if (k(), "u" === d) {
                    for (e = 0, b = 0; b < 4 && (a = parseInt(k(), 16), isFinite(a)); b += 1)
                      e = 16 * e + a;
                    f += String.fromCharCode(e);
                  } else if ("\r" === d)
                    "\n" === l() && k();
                  else {
                    if ("string" != typeof g[d])
                      break;
                    f += g[d];
                  }
                else {
                  if ("\n" === d)
                    break;
                  f += d;
                }
              }
            j("Bad string");
          },
          p = function() {
            "/" !== d && j("Not an inline comment");
            do
              if (k(), "\n" === d || "\r" === d)
                return void k();
 while (d);
          },
          q = function() {
            "*" !== d && j("Not a block comment");
            do
              for (k(); "*" === d; )
                if (k("*"), "/" === d)
                  return void k("/");
 while (d);
            j("Unterminated block comment");
          },
          r = function() {
            "/" !== d && j("Not a comment"), k("/"), "/" === d ? p() : "*" === d ? q() : j("Unrecognized comment");
          },
          s = function() {
            for (; d; )
              if ("/" === d)
                r();
              else {
                if (!(h.indexOf(d) >= 0))
                  return;
                k();
              }
          },
          t = function() {
            switch (d) {
              case "t":
                return k("t"), k("r"), k("u"), k("e"), !0;
              case "f":
                return k("f"), k("a"), k("l"), k("s"), k("e"), !1;
              case "n":
                return k("n"), k("u"), k("l"), k("l"), null;
              case "I":
                return k("I"), k("n"), k("f"), k("i"), k("n"), k("i"), k("t"), k("y"), 1 / 0;
              case "N":
                return k("N"), k("a"), k("N"), NaN;
            }
            j("Unexpected " + i(d));
          },
          u = function() {
            var a = [];
            if ("[" === d)
              for (k("["), s(); d; ) {
                if ("]" === d)
                  return k("]"), a;
                if ("," === d ? j("Missing array element") : a.push(f()), s(), "," !== d)
                  return k("]"), a;
                k(","), s();
              }
            j("Bad array");
          },
          v = function() {
            var a,
                b = {};
            if ("{" === d)
              for (k("{"), s(); d; ) {
                if ("}" === d)
                  return k("}"), b;
                if (a = '"' === d || "'" === d ? o() : m(), s(), k(":"), b[a] = f(), s(), "," !== d)
                  return k("}"), b;
                k(","), s();
              }
            j("Bad object");
          };
      return f = function() {
        switch (s(), d) {
          case "{":
            return v();
          case "[":
            return u();
          case '"':
          case "'":
            return o();
          case "-":
          case "+":
          case ".":
            return n();
          default:
            return d >= "0" && d <= "9" ? n() : t();
        }
      }, function(g, h) {
        var i;
        return e = String(g), a = 0, b = 1, c = 1, d = " ", i = f(), s(), d && j("Syntax error"), "function" == typeof h ? function a(b, c) {
          var d,
              e,
              f = b[c];
          if (f && "object" == typeof f)
            for (d in f)
              Object.prototype.hasOwnProperty.call(f, d) && (e = a(f, d), void 0 !== e ? f[d] = e : delete f[d]);
          return h.call(b, c, f);
        }({"": i}, "") : i;
      };
    }(), d.stringify = function(a, b, c) {
      function e(a) {
        return a >= "a" && a <= "z" || a >= "A" && a <= "Z" || a >= "0" && a <= "9" || "_" === a || "$" === a;
      }
      function f(a) {
        return a >= "a" && a <= "z" || a >= "A" && a <= "Z" || "_" === a || "$" === a;
      }
      function g(a) {
        if ("string" != typeof a)
          return !1;
        if (!f(a[0]))
          return !1;
        for (var b = 1,
            c = a.length; b < c; ) {
          if (!e(a[b]))
            return !1;
          b++;
        }
        return !0;
      }
      function h(a) {
        return Array.isArray ? Array.isArray(a) : "[object Array]" === Object.prototype.toString.call(a);
      }
      function i(a) {
        return "[object Date]" === Object.prototype.toString.call(a);
      }
      function j(a) {
        for (var b = 0; b < p.length; b++)
          if (p[b] === a)
            throw new TypeError("Converting circular structure to JSON");
      }
      function k(a, b, c) {
        if (!a)
          return "";
        a.length > 10 && (a = a.substring(0, 10));
        for (var d = c ? "" : "\n",
            e = 0; e < b; e++)
          d += a;
        return d;
      }
      function l(a) {
        return q.lastIndex = 0, q.test(a) ? '"' + a.replace(q, function(a) {
          var b = r[a];
          return "string" == typeof b ? b : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
        }) + '"' : '"' + a + '"';
      }
      function m(a, b, c) {
        var d,
            e,
            f = n(a, b, c);
        switch (f && !i(f) && (f = f.valueOf()), typeof f) {
          case "boolean":
            return f.toString();
          case "number":
            return isNaN(f) || !isFinite(f) ? "null" : f.toString();
          case "string":
            return l(f.toString());
          case "object":
            if (null === f)
              return "null";
            if (h(f)) {
              j(f), d = "[", p.push(f);
              for (var q = 0; q < f.length; q++)
                e = m(f, q, !1), d += k(o, p.length), d += null === e || "undefined" == typeof e ? "null" : e, q < f.length - 1 ? d += "," : o && (d += "\n");
              p.pop(), d += k(o, p.length, !0) + "]";
            } else {
              j(f), d = "{";
              var r = !1;
              p.push(f);
              for (var s in f)
                if (f.hasOwnProperty(s)) {
                  var t = m(f, s, !1);
                  c = !1, "undefined" != typeof t && null !== t && (d += k(o, p.length), r = !0, b = g(s) ? s : l(s), d += b + ":" + (o ? " " : "") + t + ",");
                }
              p.pop(), d = r ? d.substring(0, d.length - 1) + k(o, p.length) + "}" : "{}";
            }
            return d;
          default:
            return;
        }
      }
      if (b && "function" != typeof b && !h(b))
        throw new Error("Replacer must be a function or an array");
      var n = function(a, c, d) {
        var e = a[c];
        return e && e.toJSON && "function" == typeof e.toJSON && (e = e.toJSON()), "function" == typeof b ? b.call(a, c, e) : b ? d || h(a) || b.indexOf(c) >= 0 ? e : void 0 : e;
      };
      d.isWord = g;
      var o,
          p = [];
      c && ("string" == typeof c ? o = c : "number" == typeof c && c >= 0 && (o = k(" ", c, !0)));
      var q = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
          r = {
            "\b": "\\b",
            "\t": "\\t",
            "\n": "\\n",
            "\f": "\\f",
            "\r": "\\r",
            '"': '\\"',
            "\\": "\\\\"
          },
          s = {"": a};
      return void 0 === a ? n(s, "", !0) : m(s, "", !0);
    }, c.exports;
  }), a.registerDynamic("ae", ["3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return "/" === a.charAt(0);
    }
    function e(a) {
      var b = /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/,
          c = b.exec(a),
          d = c[1] || "",
          e = Boolean(d && ":" !== d.charAt(1));
      return Boolean(c[2] || e);
    }
    var f = a("3");
    this || self;
    return c.exports = "win32" === f.platform ? e : d, c.exports.posix = d, c.exports.win32 = e, c.exports;
  }), a.registerDynamic("11", [], !0, function(a, b, c) {
    this || self;
    return b.readFileSync = function(a) {
      var b,
          c = new XMLHttpRequest;
      return c.open("GET", a, !1), c.onreadystatechange = function(a) {
        if (4 == c.readyState) {
          var d = c.status;
          if (d > 399 && d < 600 || 400 == d)
            throw "File read error on " + c.responseURL;
          b = c.responseText;
        }
      }, c.send(null), b;
    }, c.exports;
  }), a.registerDynamic("af", ["64", "17", "ac", "ad", "ae", "12", "11", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e(a) {
      var b = v[a];
      return null == b ? v[a] = u.default.existsSync(a) : b;
    }
    function f() {
      var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          b = arguments[1],
          c = a.filename,
          d = new A(b);
      return a.babelrc !== !1 && d.findConfigs(c), d.mergeConfig({
        options: a,
        alias: "base",
        dirname: c && s.default.dirname(c)
      }), d.configs;
    }
    var g = a("3");
    this || self;
    b.__esModule = !0;
    var h = a("64"),
        i = d(h),
        j = a("17"),
        k = d(j);
    b.default = f;
    var l = a("ac"),
        m = d(l),
        n = a("ad"),
        o = d(n),
        p = a("ae"),
        q = d(p),
        r = a("12"),
        s = d(r),
        t = a("11"),
        u = d(t),
        v = {},
        w = {},
        x = ".babelignore",
        y = ".babelrc",
        z = "package.json",
        A = function() {
          function a(b) {
            (0, k.default)(this, a), this.resolvedConfigs = [], this.configs = [], this.log = b;
          }
          return a.prototype.findConfigs = function(a) {
            if (a) {
              (0, q.default)(a) || (a = s.default.join(g.cwd(), a));
              for (var b = !1,
                  c = !1; a !== (a = s.default.dirname(a)); ) {
                if (!b) {
                  var d = s.default.join(a, y);
                  e(d) && (this.addConfig(d), b = !0);
                  var f = s.default.join(a, z);
                  !b && e(f) && (b = this.addConfig(f, "babel", JSON));
                }
                if (!c) {
                  var h = s.default.join(a, x);
                  e(h) && (this.addIgnoreConfig(h), c = !0);
                }
                if (c && b)
                  return;
              }
            }
          }, a.prototype.addIgnoreConfig = function(a) {
            var b = u.default.readFileSync(a, "utf8"),
                c = b.split("\n");
            c = c.map(function(a) {
              return a.replace(/#(.*?)$/, "").trim();
            }).filter(function(a) {
              return !!a;
            }), c.length && this.mergeConfig({
              options: {ignore: c},
              alias: a,
              dirname: s.default.dirname(a)
            });
          }, a.prototype.addConfig = function(a, b) {
            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : o.default;
            if (this.resolvedConfigs.indexOf(a) >= 0)
              return !1;
            this.resolvedConfigs.push(a);
            var d = u.default.readFileSync(a, "utf8"),
                e = void 0;
            try {
              e = w[d] = w[d] || c.parse(d), b && (e = e[b]);
            } catch (b) {
              throw b.message = a + ": Error while parsing JSON - " + b.message, b;
            }
            return this.mergeConfig({
              options: e,
              alias: a,
              dirname: s.default.dirname(a)
            }), !!e;
          }, a.prototype.mergeConfig = function(a) {
            var b = a.options,
                c = a.alias,
                d = a.loc,
                e = a.dirname;
            if (!b)
              return !1;
            if (b = (0, i.default)({}, b), e = e || g.cwd(), d = d || c, b.extends) {
              var f = (0, m.default)(b.extends, e);
              f ? this.addConfig(f) : this.log && this.log.error("Couldn't resolve extends clause of " + b.extends + " in " + c), delete b.extends;
            }
            this.configs.push({
              options: b,
              alias: c,
              loc: d,
              dirname: e
            });
            var h = void 0,
                j = g.env.BABEL_ENV || "production" || "development";
            b.env && (h = b.env[j], delete b.env), this.mergeConfig({
              options: h,
              alias: c + ".env." + j,
              dirname: e
            });
          }, a;
        }();
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("12", ["3"], !0, function(a, b, c) {
    function d(a, b) {
      for (var c = 0,
          d = a.length - 1; d >= 0; d--) {
        var e = a[d];
        "." === e ? a.splice(d, 1) : ".." === e ? (a.splice(d, 1), c++) : c && (a.splice(d, 1), c--);
      }
      if (b)
        for (; c--; c)
          a.unshift("..");
      return a;
    }
    function e(a, b) {
      if (a.filter)
        return a.filter(b);
      for (var c = [],
          d = 0; d < a.length; d++)
        b(a[d], d, a) && c.push(a[d]);
      return c;
    }
    var f = (this || self, a("3")),
        g = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,
        h = function(a) {
          return g.exec(a).slice(1);
        };
    b.resolve = function() {
      for (var a = "",
          b = !1,
          c = arguments.length - 1; c >= -1 && !b; c--) {
        var g = c >= 0 ? arguments[c] : f.cwd();
        if ("string" != typeof g)
          throw new TypeError("Arguments to path.resolve must be strings");
        g && (a = g + "/" + a, b = "/" === g.charAt(0));
      }
      return a = d(e(a.split("/"), function(a) {
        return !!a;
      }), !b).join("/"), (b ? "/" : "") + a || ".";
    }, b.normalize = function(a) {
      var c = b.isAbsolute(a),
          f = "/" === i(a, -1);
      return a = d(e(a.split("/"), function(a) {
        return !!a;
      }), !c).join("/"), a || c || (a = "."), a && f && (a += "/"), (c ? "/" : "") + a;
    }, b.isAbsolute = function(a) {
      return "/" === a.charAt(0);
    }, b.join = function() {
      var a = Array.prototype.slice.call(arguments, 0);
      return b.normalize(e(a, function(a, b) {
        if ("string" != typeof a)
          throw new TypeError("Arguments to path.join must be strings");
        return a;
      }).join("/"));
    }, b.relative = function(a, c) {
      function d(a) {
        for (var b = 0; b < a.length && "" === a[b]; b++)
          ;
        for (var c = a.length - 1; c >= 0 && "" === a[c]; c--)
          ;
        return b > c ? [] : a.slice(b, c - b + 1);
      }
      a = b.resolve(a).substr(1), c = b.resolve(c).substr(1);
      for (var e = d(a.split("/")),
          f = d(c.split("/")),
          g = Math.min(e.length, f.length),
          h = g,
          i = 0; i < g; i++)
        if (e[i] !== f[i]) {
          h = i;
          break;
        }
      for (var j = [],
          i = h; i < e.length; i++)
        j.push("..");
      return j = j.concat(f.slice(h)), j.join("/");
    }, b.sep = "/", b.delimiter = ":", b.dirname = function(a) {
      var b = h(a),
          c = b[0],
          d = b[1];
      return c || d ? (d && (d = d.substr(0, d.length - 1)), c + d) : ".";
    }, b.basename = function(a, b) {
      var c = h(a)[2];
      return b && c.substr(-1 * b.length) === b && (c = c.substr(0, c.length - b.length)), c;
    }, b.extname = function(a) {
      return h(a)[3];
    };
    var i = "b" === "ab".substr(-1) ? function(a, b, c) {
      return a.substr(b, c);
    } : function(a, b, c) {
      return b < 0 && (b = a.length + b), a.substr(b, c);
    };
    return c.exports;
  }), a.registerDynamic("b0", ["7b", "65", "64", "f", "2a", "17", "b1", "7a", "6", "8b", "ac", "8d", "b2", "a5", "8c", "a6", "af", "12", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    var f = a("3");
    this || self;
    b.__esModule = !0;
    var g = a("7b"),
        h = e(g),
        i = a("65"),
        j = e(i),
        k = a("64"),
        l = e(k),
        m = a("f"),
        n = e(m),
        o = a("2a"),
        p = e(o),
        q = a("17"),
        r = e(q),
        s = a("b1"),
        t = d(s),
        u = a("7a"),
        v = e(u),
        w = a("6"),
        x = d(w),
        y = a("8b"),
        z = a("ac"),
        A = e(z),
        B = a("8d"),
        C = e(B),
        D = a("b2"),
        E = e(D),
        F = a("a5"),
        G = e(F),
        H = a("8c"),
        I = e(H),
        J = a("a6"),
        K = e(J),
        L = a("af"),
        M = e(L),
        N = a("12"),
        O = e(N),
        P = function() {
          function b(a) {
            (0, r.default)(this, b), this.resolvedConfigs = [], this.options = b.createBareOptions(), this.log = a;
          }
          return b.memoisePluginContainer = function(a, c, d, e) {
            for (var f = b.memoisedPlugins,
                g = Array.isArray(f),
                h = 0,
                f = g ? f : (0, n.default)(f); ; ) {
              var i;
              if (g) {
                if (h >= f.length)
                  break;
                i = f[h++];
              } else {
                if (h = f.next(), h.done)
                  break;
                i = h.value;
              }
              var j = i;
              if (j.container === a)
                return j.plugin;
            }
            var k = void 0;
            if (k = "function" == typeof a ? a(t) : a, "object" === ("undefined" == typeof k ? "undefined" : (0, p.default)(k))) {
              var l = new v.default(k, e);
              return b.memoisedPlugins.push({
                container: a,
                plugin: l
              }), l;
            }
            throw new TypeError(x.get("pluginNotObject", c, d, "undefined" == typeof k ? "undefined" : (0, p.default)(k)) + c + d);
          }, b.createBareOptions = function() {
            var a = {};
            for (var b in I.default) {
              var c = I.default[b];
              a[b] = (0, E.default)(c.default);
            }
            return a;
          }, b.normalisePlugin = function(a, c, d, e) {
            if (a = a.__esModule ? a.default : a, !(a instanceof v.default)) {
              if ("function" != typeof a && "object" !== ("undefined" == typeof a ? "undefined" : (0, p.default)(a)))
                throw new TypeError(x.get("pluginNotFunction", c, d, "undefined" == typeof a ? "undefined" : (0, p.default)(a)));
              a = b.memoisePluginContainer(a, c, d, e);
            }
            return a.init(c, d), a;
          }, b.normalisePlugins = function(c, d, e) {
            return e.map(function(e, f) {
              var g = void 0,
                  h = void 0;
              if (!e)
                throw new TypeError("Falsy value found in plugins");
              Array.isArray(e) ? (g = e[0], h = e[1]) : g = e;
              var i = "string" == typeof g ? g : c + "$" + f;
              if ("string" == typeof g) {
                var j = (0, A.default)("babel-plugin-" + g, d) || (0, A.default)(g, d);
                if (!j)
                  throw new ReferenceError(x.get("pluginUnknown", g, c, f, d));
                g = a(j);
              }
              return g = b.normalisePlugin(g, c, f, i), [g, h];
            });
          }, b.prototype.mergeOptions = function(a) {
            var c = this,
                d = a.options,
                e = a.extending,
                g = a.alias,
                h = a.loc,
                i = a.dirname;
            if (g = g || "foreign", d) {
              ("object" !== ("undefined" == typeof d ? "undefined" : (0, p.default)(d)) || Array.isArray(d)) && this.log.error("Invalid options type for " + g, TypeError);
              var j = (0, C.default)(d, function(a) {
                if (a instanceof v.default)
                  return a;
              });
              i = i || f.cwd(), h = h || g;
              for (var k in j) {
                var m = I.default[k];
                if (!m && this.log)
                  if (K.default[k])
                    this.log.error("Using removed Babel 5 option: " + g + "." + k + " - " + K.default[k].message, ReferenceError);
                  else {
                    var n = "Unknown option: " + g + "." + k + ". Check out http://babeljs.io/docs/usage/options/ for more information about options.",
                        o = "A common cause of this error is the presence of a configuration options object without the corresponding preset name. Example:\n\nInvalid:\n  `{ presets: [{option: value}] }`\nValid:\n  `{ presets: ['pluginName', {option: value}] }`\n\nFor more detailed information on preset configuration, please see http://babeljs.io/docs/plugins/#pluginpresets-options.";
                    this.log.error(n + "\n\n" + o, ReferenceError);
                  }
              }
              (0, y.normaliseOptions)(j), j.plugins && (j.plugins = b.normalisePlugins(h, i, j.plugins)), j.presets && (j.passPerPreset ? j.presets = this.resolvePresets(j.presets, i, function(a, b) {
                c.mergeOptions({
                  options: a,
                  extending: a,
                  alias: b,
                  loc: b,
                  dirname: i
                });
              }) : (this.mergePresets(j.presets, i), delete j.presets)), d === e ? (0, l.default)(e, j) : (0, G.default)(e || this.options, j);
            }
          }, b.prototype.mergePresets = function(a, b) {
            var c = this;
            this.resolvePresets(a, b, function(a, b) {
              c.mergeOptions({
                options: a,
                alias: b,
                loc: b,
                dirname: O.default.dirname(b || "")
              });
            });
          }, b.prototype.resolvePresets = function(b, c, d) {
            return b.map(function(b) {
              var e = void 0;
              if (Array.isArray(b)) {
                if (b.length > 2)
                  throw new Error("Unexpected extra options " + (0, j.default)(b.slice(2)) + " passed to preset.");
                var f = b;
                b = f[0], e = f[1];
              }
              var g = void 0;
              try {
                if ("string" == typeof b) {
                  if (g = (0, A.default)("babel-preset-" + b, c) || (0, A.default)(b, c), !g) {
                    var i = b.match(/^(@[^\/]+)\/(.+)$/);
                    if (i) {
                      var k = i[1],
                          l = i[2];
                      b = k + "/babel-preset-" + l, g = (0, A.default)(b, c);
                    }
                  }
                  if (!g)
                    throw new Error("Couldn't find preset " + (0, j.default)(b) + " relative to directory " + (0, j.default)(c));
                  b = a(g);
                }
                if ("object" === ("undefined" == typeof b ? "undefined" : (0, p.default)(b)) && b.__esModule)
                  if (b.default)
                    b = b.default;
                  else {
                    var m = b,
                        n = (m.__esModule, (0, h.default)(m, ["__esModule"]));
                    b = n;
                  }
                if ("object" === ("undefined" == typeof b ? "undefined" : (0, p.default)(b)) && b.buildPreset && (b = b.buildPreset), "function" != typeof b && void 0 !== e)
                  throw new Error("Options " + (0, j.default)(e) + " passed to " + (g || "a preset") + " which does not accept options.");
                if ("function" == typeof b && (b = b(t, e)), "object" !== ("undefined" == typeof b ? "undefined" : (0, p.default)(b)))
                  throw new Error("Unsupported preset format: " + b + ".");
                d && d(b, g);
              } catch (a) {
                throw g && (a.message += " (While processing preset: " + (0, j.default)(g) + ")"), a;
              }
              return b;
            });
          }, b.prototype.normaliseOptions = function() {
            var a = this.options;
            for (var b in I.default) {
              var c = I.default[b],
                  d = a[b];
              !d && c.optional || (c.alias ? a[c.alias] = a[c.alias] || d : a[b] = d);
            }
          }, b.prototype.init = function() {
            for (var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                b = (0, M.default)(a, this.log),
                c = Array.isArray(b),
                d = 0,
                b = c ? b : (0, n.default)(b); ; ) {
              var e;
              if (c) {
                if (d >= b.length)
                  break;
                e = b[d++];
              } else {
                if (d = b.next(), d.done)
                  break;
                e = d.value;
              }
              var f = e;
              this.mergeOptions(f);
            }
            return this.normaliseOptions(a), this.options;
          }, b;
        }();
    return b.default = P, P.memoisedPlugins = [], c.exports = b.default, c.exports;
  }), a.registerDynamic("15", ["b3", "17", "18", "19", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    a("3"), this || self;
    b.__esModule = !0;
    var e = a("b3"),
        f = d(e),
        g = a("17"),
        h = d(g),
        i = a("18"),
        j = d(i),
        k = a("19"),
        l = d(k),
        m = function(a) {
          function b() {
            (0, h.default)(this, b);
            var c = (0, j.default)(this, a.call(this));
            return c.dynamicData = {}, c;
          }
          return (0, l.default)(b, a), b.prototype.setDynamic = function(a, b) {
            this.dynamicData[a] = b;
          }, b.prototype.get = function(b) {
            if (this.has(b))
              return a.prototype.get.call(this, b);
            if (Object.prototype.hasOwnProperty.call(this.dynamicData, b)) {
              var c = this.dynamicData[b]();
              return this.set(b, c), c;
            }
          }, b;
        }(f.default);
    return b.default = m, c.exports = b.default, c.exports;
  }), a.registerDynamic("7a", ["f", "17", "18", "19", "b0", "6", "15", "b4", "b5", "b2", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    a("3"), this || self;
    b.__esModule = !0;
    var f = a("f"),
        g = e(f),
        h = a("17"),
        i = e(h),
        j = a("18"),
        k = e(j),
        l = a("19"),
        m = e(l),
        n = a("b0"),
        o = e(n),
        p = a("6"),
        q = d(p),
        r = a("15"),
        s = e(r),
        t = a("b4"),
        u = e(t),
        v = a("b5"),
        w = e(v),
        x = a("b2"),
        y = e(x),
        z = ["enter", "exit"],
        A = function(a) {
          function b(c, d) {
            (0, i.default)(this, b);
            var e = (0, k.default)(this, a.call(this));
            return e.initialized = !1, e.raw = (0, w.default)({}, c), e.key = e.take("name") || d, e.manipulateOptions = e.take("manipulateOptions"), e.post = e.take("post"), e.pre = e.take("pre"), e.visitor = e.normaliseVisitor((0, y.default)(e.take("visitor")) || {}), e;
          }
          return (0, m.default)(b, a), b.prototype.take = function(a) {
            var b = this.raw[a];
            return delete this.raw[a], b;
          }, b.prototype.chain = function(a, b) {
            if (!a[b])
              return this[b];
            if (!this[b])
              return a[b];
            var c = [a[b], this[b]];
            return function() {
              for (var a = void 0,
                  b = arguments.length,
                  d = Array(b),
                  e = 0; e < b; e++)
                d[e] = arguments[e];
              for (var f = c,
                  h = Array.isArray(f),
                  i = 0,
                  f = h ? f : (0, g.default)(f); ; ) {
                var j;
                if (h) {
                  if (i >= f.length)
                    break;
                  j = f[i++];
                } else {
                  if (i = f.next(), i.done)
                    break;
                  j = i.value;
                }
                var k = j;
                if (k) {
                  var l = k.apply(this, d);
                  null != l && (a = l);
                }
              }
              return a;
            };
          }, b.prototype.maybeInherit = function(a) {
            var b = this.take("inherits");
            b && (b = o.default.normalisePlugin(b, a, "inherits"), this.manipulateOptions = this.chain(b, "manipulateOptions"), this.post = this.chain(b, "post"), this.pre = this.chain(b, "pre"), this.visitor = u.default.visitors.merge([b.visitor, this.visitor]));
          }, b.prototype.init = function(a, b) {
            if (!this.initialized) {
              this.initialized = !0, this.maybeInherit(a);
              for (var c in this.raw)
                throw new Error(q.get("pluginInvalidProperty", a, b, c));
            }
          }, b.prototype.normaliseVisitor = function(a) {
            for (var b = z,
                c = Array.isArray(b),
                d = 0,
                b = c ? b : (0, g.default)(b); ; ) {
              var e;
              if (c) {
                if (d >= b.length)
                  break;
                e = b[d++];
              } else {
                if (d = b.next(), d.done)
                  break;
                e = d.value;
              }
              var f = e;
              if (a[f])
                throw new Error("Plugins aren't allowed to specify catch-all enter/exit handlers. Please target individual nodes.");
            }
            return u.default.explode(a), a;
          }, b;
        }(s.default);
    return b.default = A, c.exports = b.default, c.exports;
  }), a.registerDynamic("b6", ["b7", "7a", "9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a, b) {
      return !!a.is("_forceShadow") || b;
    }
    function g(a, b) {
      var c = a.inShadow(b);
      if (f(a, c)) {
        var d = a.node._shadowedFunctionLiteral,
            e = void 0,
            g = !1,
            h = a.find(function(b) {
              if (b.parentPath && b.parentPath.isClassProperty() && "value" === b.key)
                return !0;
              if (a === b)
                return !1;
              if ((b.isProgram() || b.isFunction()) && (e = e || b), b.isProgram())
                return g = !0, !0;
              if (b.isFunction() && !b.isArrowFunctionExpression()) {
                if (d) {
                  if (b === d || b.node === d.node)
                    return !0;
                } else if (!b.is("shadow"))
                  return !0;
                return g = !0, !1;
              }
              return !1;
            });
        if (d && h.isProgram() && !d.isProgram() && (h = a.findParent(function(a) {
          return a.isProgram() || a.isFunction();
        })), h !== e && g) {
          var i = h.getData(b);
          if (i)
            return a.replaceWith(i);
          var j = a.scope.generateUidIdentifier(b);
          h.setData(b, j);
          var k = h.findParent(function(a) {
            return a.isClass();
          }),
              l = !!(k && k.node && k.node.superClass);
          if ("this" === b && h.isMethod({kind: "constructor"}) && l)
            h.scope.push({id: j}), h.traverse(o, {id: j});
          else {
            var n = "this" === b ? m.thisExpression() : m.identifier(b);
            d && (n._shadowedFunctionLiteral = d), h.scope.push({
              id: j,
              init: n
            });
          }
          return a.replaceWith(j);
        }
      }
    }
    a("3"), this || self;
    b.__esModule = !0;
    var h = a("b7"),
        i = e(h),
        j = a("7a"),
        k = e(j),
        l = a("9"),
        m = d(l),
        n = (0, i.default)("super this bound"),
        o = {CallExpression: function(a) {
            if (a.get("callee").isSuper()) {
              var b = a.node;
              b[n] || (b[n] = !0, a.replaceWith(m.assignmentExpression("=", this.id, b)));
            }
          }};
    return b.default = new k.default({
      name: "internal.shadowFunctions",
      visitor: {
        ThisExpression: function(a) {
          g(a, "this");
        },
        ReferencedIdentifier: function(a) {
          "arguments" === a.node.name && g(a, "arguments");
        }
      }
    }), c.exports = b.default, c.exports;
  }), a.registerDynamic("16", ["2a", "f", "b8", "64", "17", "18", "19", "4", "e", "10", "b0", "14", "b4", "28", "5", "b9", "ba", "67", "15", "bb", "85", "12", "9", "ac", "79", "b6", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    var f = a("3");
    this || self;
    b.__esModule = !0, b.File = void 0;
    var g = a("2a"),
        h = e(g),
        i = a("f"),
        j = e(i),
        k = a("b8"),
        l = e(k),
        m = a("64"),
        n = e(m),
        o = a("17"),
        p = e(o),
        q = a("18"),
        r = e(q),
        s = a("19"),
        t = e(s),
        u = a("4"),
        v = e(u),
        w = a("e"),
        x = d(w),
        y = a("10"),
        z = e(y),
        A = a("b0"),
        B = e(A),
        C = a("14"),
        D = e(C),
        E = a("b4"),
        F = e(E),
        G = a("28"),
        H = e(G),
        I = a("5"),
        J = e(I),
        K = a("b9"),
        L = e(K),
        M = a("ba"),
        N = e(M),
        O = a("67"),
        P = e(O),
        Q = a("15"),
        R = e(Q),
        S = a("bb"),
        T = a("85"),
        U = d(T),
        V = a("12"),
        W = e(V),
        X = a("9"),
        Y = d(X),
        Z = a("ac"),
        $ = e(Z),
        _ = a("79"),
        aa = e(_),
        ba = a("b6"),
        ca = e(ba),
        da = /^#!.*/,
        ea = [[aa.default], [ca.default]],
        fa = {enter: function(a, b) {
            var c = a.node.loc;
            c && (b.loc = c, a.stop());
          }},
        ga = function(b) {
          function c() {
            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                d = arguments[1];
            (0, p.default)(this, c);
            var e = (0, r.default)(this, b.call(this));
            return e.pipeline = d, e.log = new P.default(e, a.filename || "unknown"), e.opts = e.initOptions(a), e.parserOpts = {
              sourceType: e.opts.sourceType,
              sourceFileName: e.opts.filename,
              plugins: []
            }, e.pluginVisitors = [], e.pluginPasses = [], e.buildPluginsForOptions(e.opts), e.opts.passPerPreset && (e.perPresetOpts = [], e.opts.presets.forEach(function(a) {
              var b = (0, n.default)((0, l.default)(e.opts), a);
              e.perPresetOpts.push(b), e.buildPluginsForOptions(b);
            })), e.metadata = {
              usedHelpers: [],
              marked: [],
              modules: {
                imports: [],
                exports: {
                  exported: [],
                  specifiers: []
                }
              }
            }, e.dynamicImportTypes = {}, e.dynamicImportIds = {}, e.dynamicImports = [], e.declarations = {}, e.usedHelpers = {}, e.path = null, e.ast = {}, e.code = "", e.shebang = "", e.hub = new E.Hub(e), e;
          }
          return (0, t.default)(c, b), c.prototype.getMetadata = function() {
            for (var a = !1,
                b = this.ast.program.body,
                c = Array.isArray(b),
                d = 0,
                b = c ? b : (0, j.default)(b); ; ) {
              var e;
              if (c) {
                if (d >= b.length)
                  break;
                e = b[d++];
              } else {
                if (d = b.next(), d.done)
                  break;
                e = d.value;
              }
              var f = e;
              if (Y.isModuleDeclaration(f)) {
                a = !0;
                break;
              }
            }
            a && this.path.traverse(x, this);
          }, c.prototype.initOptions = function(a) {
            a = new B.default(this.log, this.pipeline).init(a), a.inputSourceMap && (a.sourceMaps = !0), a.moduleId && (a.moduleIds = !0), a.basename = W.default.basename(a.filename, W.default.extname(a.filename)), a.ignore = U.arrayify(a.ignore, U.regexify), a.only && (a.only = U.arrayify(a.only, U.regexify)), (0, N.default)(a, {moduleRoot: a.sourceRoot}), (0, N.default)(a, {sourceRoot: a.moduleRoot}), (0, N.default)(a, {filenameRelative: a.filename});
            var b = W.default.basename(a.filenameRelative);
            return (0, N.default)(a, {
              sourceFileName: b,
              sourceMapTarget: b
            }), a;
          }, c.prototype.buildPluginsForOptions = function(a) {
            if (Array.isArray(a.plugins)) {
              for (var b = a.plugins.concat(ea),
                  c = [],
                  d = [],
                  e = b,
                  f = Array.isArray(e),
                  g = 0,
                  e = f ? e : (0, j.default)(e); ; ) {
                var h;
                if (f) {
                  if (g >= e.length)
                    break;
                  h = e[g++];
                } else {
                  if (g = e.next(), g.done)
                    break;
                  h = g.value;
                }
                var i = h,
                    k = i[0],
                    l = i[1];
                c.push(k.visitor), d.push(new D.default(this, k, l)), k.manipulateOptions && k.manipulateOptions(a, this.parserOpts, this);
              }
              this.pluginVisitors.push(c), this.pluginPasses.push(d);
            }
          }, c.prototype.getModuleName = function() {
            var a = this.opts;
            if (!a.moduleIds)
              return null;
            if (null != a.moduleId && !a.getModuleId)
              return a.moduleId;
            var b = a.filenameRelative,
                c = "";
            if (null != a.moduleRoot && (c = a.moduleRoot + "/"), !a.filenameRelative)
              return c + a.filename.replace(/^\//, "");
            if (null != a.sourceRoot) {
              var d = new RegExp("^" + a.sourceRoot + "/?");
              b = b.replace(d, "");
            }
            return b = b.replace(/\.(\w*?)$/, ""), c += b, c = c.replace(/\\/g, "/"), a.getModuleId ? a.getModuleId(c) || c : c;
          }, c.prototype.resolveModuleSource = function a(b) {
            var a = this.opts.resolveModuleSource;
            return a && (b = a(b, this.opts.filename)), b;
          }, c.prototype.addImport = function(a, b) {
            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : b,
                d = a + ":" + b,
                e = this.dynamicImportIds[d];
            if (!e) {
              a = this.resolveModuleSource(a), e = this.dynamicImportIds[d] = this.scope.generateUidIdentifier(c);
              var f = [];
              "*" === b ? f.push(Y.importNamespaceSpecifier(e)) : "default" === b ? f.push(Y.importDefaultSpecifier(e)) : f.push(Y.importSpecifier(e, Y.identifier(b)));
              var g = Y.importDeclaration(f, Y.stringLiteral(a));
              g._blockHoist = 3, this.path.unshiftContainer("body", g);
            }
            return e;
          }, c.prototype.addHelper = function(a) {
            var b = this.declarations[a];
            if (b)
              return b;
            this.usedHelpers[a] || (this.metadata.usedHelpers.push(a), this.usedHelpers[a] = !0);
            var c = this.get("helperGenerator"),
                d = this.get("helpersNamespace");
            if (c) {
              var e = c(a);
              if (e)
                return e;
            } else if (d)
              return Y.memberExpression(d, Y.identifier(a));
            var f = (0, v.default)(a),
                g = this.declarations[a] = this.scope.generateUidIdentifier(a);
            return Y.isFunctionExpression(f) && !f.id ? (f.body._compact = !0, f._generated = !0, f.id = g, f.type = "FunctionDeclaration", this.path.unshiftContainer("body", f)) : (f._compact = !0, this.scope.push({
              id: g,
              init: f,
              unique: !0
            })), g;
          }, c.prototype.addTemplateObject = function(a, b, c) {
            var d = c.elements.map(function(a) {
              return a.value;
            }),
                e = a + "_" + c.elements.length + "_" + d.join(","),
                f = this.declarations[e];
            if (f)
              return f;
            var g = this.declarations[e] = this.scope.generateUidIdentifier("templateObject"),
                h = this.addHelper(a),
                i = Y.callExpression(h, [b, c]);
            return i._compact = !0, this.scope.push({
              id: g,
              init: i,
              _blockHoist: 1.9
            }), g;
          }, c.prototype.buildCodeFrameError = function(a, b) {
            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : SyntaxError,
                d = a && (a.loc || a._loc),
                e = new c(b);
            return d ? e.loc = d.start : ((0, F.default)(a, fa, this.scope, e), e.message += " (This is an error on an internal node. Probably an internal error", e.loc && (e.message += ". Location has been estimated."), e.message += ")"), e;
          }, c.prototype.mergeSourceMap = function(a) {
            var b = this.opts.inputSourceMap;
            if (!b)
              return a;
            var c = function() {
              var c = new H.default.SourceMapConsumer(b),
                  d = new H.default.SourceMapConsumer(a),
                  e = new H.default.SourceMapGenerator({
                    file: c.file,
                    sourceRoot: c.sourceRoot
                  }),
                  f = d.sources[0];
              c.eachMapping(function(a) {
                var b = d.generatedPositionFor({
                  line: a.generatedLine,
                  column: a.generatedColumn,
                  source: f
                });
                null != b.column && e.addMapping({
                  source: a.source,
                  original: null == a.source ? null : {
                    line: a.originalLine,
                    column: a.originalColumn
                  },
                  generated: b
                });
              });
              var g = e.toJSON();
              return b.mappings = g.mappings, {v: b};
            }();
            return "object" === ("undefined" == typeof c ? "undefined" : (0, h.default)(c)) ? c.v : void 0;
          }, c.prototype.parse = function(b) {
            var c = S.parse,
                d = this.opts.parserOpts;
            if (d && (d = (0, n.default)({}, this.parserOpts, d), d.parser)) {
              if ("string" == typeof d.parser) {
                var e = W.default.dirname(this.opts.filename) || f.cwd(),
                    g = (0, $.default)(d.parser, e);
                if (!g)
                  throw new Error("Couldn't find parser " + d.parser + ' with "parse" method relative to directory ' + e);
                c = a(g).parse;
              } else
                c = d.parser;
              d.parser = {parse: function(a) {
                  return (0, S.parse)(a, d);
                }};
            }
            this.log.debug("Parse start");
            var h = c(b, d || this.parserOpts);
            return this.log.debug("Parse stop"), h;
          }, c.prototype._addAst = function(a) {
            this.path = E.NodePath.get({
              hub: this.hub,
              parentPath: null,
              parent: a,
              container: a,
              key: "program"
            }).setContext(), this.scope = this.path.scope, this.ast = a, this.getMetadata();
          }, c.prototype.addAst = function(a) {
            this.log.debug("Start set AST"), this._addAst(a), this.log.debug("End set AST");
          }, c.prototype.transform = function() {
            for (var a = 0; a < this.pluginPasses.length; a++) {
              var b = this.pluginPasses[a];
              this.call("pre", b), this.log.debug("Start transform traverse");
              var c = F.default.visitors.merge(this.pluginVisitors[a], b, this.opts.wrapPluginVisitorMethod);
              (0, F.default)(this.ast, c, this.scope), this.log.debug("End transform traverse"), this.call("post", b);
            }
            return this.generate();
          }, c.prototype.wrap = function(a, b) {
            a += "";
            try {
              return this.shouldIgnore() ? this.makeResult({
                code: a,
                ignored: !0
              }) : b();
            } catch (b) {
              if (b._babel)
                throw b;
              b._babel = !0;
              var c = b.message = this.opts.filename + ": " + b.message,
                  d = b.loc;
              if (d && (b.codeFrame = (0, L.default)(a, d.line, d.column + 1, this.opts), c += "\n" + b.codeFrame), f.browser && (b.message = c), b.stack) {
                var e = b.stack.replace(b.message, c);
                b.stack = e;
              }
              throw b;
            }
          }, c.prototype.addCode = function(a) {
            a = (a || "") + "", a = this.parseInputSourceMap(a), this.code = a;
          }, c.prototype.parseCode = function() {
            this.parseShebang();
            var a = this.parse(this.code);
            this.addAst(a);
          }, c.prototype.shouldIgnore = function() {
            var a = this.opts;
            return U.shouldIgnore(a.filename, a.ignore, a.only);
          }, c.prototype.call = function(a, b) {
            for (var c = b,
                d = Array.isArray(c),
                e = 0,
                c = d ? c : (0, j.default)(c); ; ) {
              var f;
              if (d) {
                if (e >= c.length)
                  break;
                f = c[e++];
              } else {
                if (e = c.next(), e.done)
                  break;
                f = e.value;
              }
              var g = f,
                  h = g.plugin,
                  i = h[a];
              i && i.call(g, this);
            }
          }, c.prototype.parseInputSourceMap = function(a) {
            var b = this.opts;
            if (b.inputSourceMap !== !1) {
              var c = z.default.fromSource(a);
              c && (b.inputSourceMap = c.toObject(), a = z.default.removeComments(a));
            }
            return a;
          }, c.prototype.parseShebang = function() {
            var a = da.exec(this.code);
            a && (this.shebang = a[0], this.code = this.code.replace(da, ""));
          }, c.prototype.makeResult = function(a) {
            var b = a.code,
                c = a.map,
                d = a.ast,
                e = a.ignored,
                f = {
                  metadata: null,
                  options: this.opts,
                  ignored: !!e,
                  code: null,
                  ast: null,
                  map: c || null
                };
            return this.opts.code && (f.code = b), this.opts.ast && (f.ast = d), this.opts.metadata && (f.metadata = this.metadata), f;
          }, c.prototype.generate = function() {
            var b = this.opts,
                c = this.ast,
                d = {ast: c};
            if (!b.code)
              return this.makeResult(d);
            var e = J.default;
            if (b.generatorOpts.generator && (e = b.generatorOpts.generator, "string" == typeof e)) {
              var g = W.default.dirname(this.opts.filename) || f.cwd(),
                  h = (0, $.default)(e, g);
              if (!h)
                throw new Error("Couldn't find generator " + e + ' with "print" method relative to directory ' + g);
              e = a(h).print;
            }
            this.log.debug("Generation start");
            var i = e(c, b.generatorOpts ? (0, n.default)(b, b.generatorOpts) : b, this.code);
            return d.code = i.code, d.map = i.map, this.log.debug("Generation end"), this.shebang && (d.code = this.shebang + "\n" + d.code), d.map && (d.map = this.mergeSourceMap(d.map)), "inline" !== b.sourceMaps && "both" !== b.sourceMaps || (d.code += "\n" + z.default.fromObject(d.map).toComment()), "inline" === b.sourceMaps && (d.map = null), this.makeResult(d);
          }, c;
        }(R.default);
    return b.default = ga, b.File = ga, c.exports;
  }), a.registerDynamic("bc", ["17", "b", "7a", "16", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    a("3"), this || self;
    b.__esModule = !0;
    var e = a("17"),
        f = d(e),
        g = a("b"),
        h = d(g),
        i = a("7a"),
        j = d(i),
        k = a("16"),
        l = d(k),
        m = function() {
          function a() {
            (0, f.default)(this, a);
          }
          return a.prototype.lint = function(a) {
            var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            return b.code = !1, b.mode = "lint", this.transform(a, b);
          }, a.prototype.pretransform = function(a, b) {
            var c = new l.default(b, this);
            return c.wrap(a, function() {
              return c.addCode(a), c.parseCode(a), c;
            });
          }, a.prototype.transform = function(a, b) {
            var c = new l.default(b, this);
            return c.wrap(a, function() {
              return c.addCode(a), c.parseCode(a), c.transform();
            });
          }, a.prototype.analyse = function(a) {
            var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                c = arguments[2];
            return b.code = !1, c && (b.plugins = b.plugins || [], b.plugins.push(new j.default({visitor: c}))), this.transform(a, b).metadata;
          }, a.prototype.transformFromAst = function(a, b, c) {
            a = (0, h.default)(a);
            var d = new l.default(c, this);
            return d.wrap(b, function() {
              return d.addCode(b), d.addAst(a), d.transform();
            });
          }, a;
        }();
    return b.default = m, c.exports = b.default, c.exports;
  }), a.registerDynamic("b1", ["16", "8c", "2", "7", "a", "9c", "11", "85", "6", "9", "b4", "b0", "bc", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      throw new Error("The (" + a + ") Babel 5 plugin is being run with Babel 6.");
    }
    function g(a, b, c) {
      (0, o.default)(b) && (c = b, b = {}), b.filename = a, q.default.readFile(a, function(a, d) {
        var e = void 0;
        if (!a)
          try {
            e = E(d, b);
          } catch (b) {
            a = b;
          }
        a ? c(a) : c(null, e);
      });
    }
    function h(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      return b.filename = a, E(q.default.readFileSync(a, "utf8"), b);
    }
    a("3"), this || self;
    b.__esModule = !0, b.transformFromAst = b.transform = b.analyse = b.Pipeline = b.OptionManager = b.traverse = b.types = b.messages = b.util = b.version = b.template = b.buildExternalHelpers = b.options = b.File = void 0;
    var i = a("16");
    Object.defineProperty(b, "File", {
      enumerable: !0,
      get: function() {
        return e(i).default;
      }
    });
    var j = a("8c");
    Object.defineProperty(b, "options", {
      enumerable: !0,
      get: function() {
        return e(j).default;
      }
    });
    var k = a("2");
    Object.defineProperty(b, "buildExternalHelpers", {
      enumerable: !0,
      get: function() {
        return e(k).default;
      }
    });
    var l = a("7");
    Object.defineProperty(b, "template", {
      enumerable: !0,
      get: function() {
        return e(l).default;
      }
    });
    var m = a("a");
    Object.defineProperty(b, "version", {
      enumerable: !0,
      get: function() {
        return m.version;
      }
    }), b.Plugin = f, b.transformFile = g, b.transformFileSync = h;
    var n = a("9c"),
        o = e(n),
        p = a("11"),
        q = e(p),
        r = a("85"),
        s = d(r),
        t = a("6"),
        u = d(t),
        v = a("9"),
        w = d(v),
        x = a("b4"),
        y = e(x),
        z = a("b0"),
        A = e(z),
        B = a("bc"),
        C = e(B);
    b.util = s, b.messages = u, b.types = w, b.traverse = y.default, b.OptionManager = A.default, b.Pipeline = C.default;
    var D = new C.default,
        E = (b.analyse = D.analyse.bind(D), b.transform = D.transform.bind(D));
    b.transformFromAst = D.transformFromAst.bind(D);
    return c.exports;
  }), a.registerDynamic("bd", ["b1", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return c.exports = a("b1"), c.exports;
  }), a.registerDynamic("be", ["b8", "f", "b7", "bf", "7"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("b8"),
        f = d(e),
        g = a("f"),
        h = d(g),
        i = a("b7"),
        j = d(i);
    b.default = function(a) {
      var b = a.types,
          c = (0, j.default)(),
          d = {"AssignmentExpression|UpdateExpression": function(a) {
              if (!a.node[c]) {
                a.node[c] = !0;
                var d = a.get(a.isAssignmentExpression() ? "left" : "argument");
                if (d.isIdentifier()) {
                  var e = d.node.name;
                  if (this.scope.getBinding(e) === a.scope.getBinding(e)) {
                    var f = this.exports[e];
                    if (f) {
                      var g = a.node,
                          i = a.isUpdateExpression() && !g.prefix;
                      i && ("++" === g.operator ? g = b.binaryExpression("+", g.argument, b.numericLiteral(1)) : "--" === g.operator ? g = b.binaryExpression("-", g.argument, b.numericLiteral(1)) : i = !1);
                      for (var j = f,
                          k = Array.isArray(j),
                          l = 0,
                          j = k ? j : (0, h.default)(j); ; ) {
                        var m;
                        if (k) {
                          if (l >= j.length)
                            break;
                          m = j[l++];
                        } else {
                          if (l = j.next(), l.done)
                            break;
                          m = l.value;
                        }
                        var n = m;
                        g = this.buildCall(n, g).expression;
                      }
                      i && (g = b.sequenceExpression([g, a.node])), a.replaceWith(g);
                    }
                  }
                }
              }
            }};
      return {visitor: {
          ReferencedIdentifier: function(a, c) {
            "__moduleName" != a.node.name || a.scope.hasBinding("__moduleName") || a.replaceWith(b.memberExpression(c.contextIdent, b.identifier("id")));
          },
          Program: {
            enter: function(a, b) {
              b.contextIdent = a.scope.generateUidIdentifier("context");
            },
            exit: function(a, c) {
              function e(a, b) {
                m[a] = m[a] || [], m[a].push(b);
              }
              function g(a, b, c) {
                var d = n[a] = n[a] || {
                  imports: [],
                  exports: []
                };
                d[b] = d[b].concat(c);
              }
              function i(a, c) {
                return b.expressionStatement(b.callExpression(j, [b.stringLiteral(a), c]));
              }
              for (var j = a.scope.generateUidIdentifier("export"),
                  k = c.contextIdent,
                  m = (0, f.default)(null),
                  n = (0, f.default)(null),
                  q = [],
                  r = [],
                  s = [],
                  t = [],
                  u = [],
                  v = a.get("body"),
                  w = !0,
                  x = v,
                  y = Array.isArray(x),
                  z = 0,
                  x = y ? x : (0, h.default)(x); ; ) {
                var A;
                if (y) {
                  if (z >= x.length)
                    break;
                  A = x[z++];
                } else {
                  if (z = x.next(), z.done)
                    break;
                  A = z.value;
                }
                var B = A;
                if (B.isExportDeclaration() && (B = B.get("declaration")), B.isVariableDeclaration() && "var" !== B.node.kind) {
                  w = !1;
                  break;
                }
              }
              for (var C = v,
                  D = Array.isArray(C),
                  E = 0,
                  C = D ? C : (0, h.default)(C); ; ) {
                var F;
                if (D) {
                  if (E >= C.length)
                    break;
                  F = C[E++];
                } else {
                  if (E = C.next(), E.done)
                    break;
                  F = E.value;
                }
                var G = F;
                if (w && G.isFunctionDeclaration())
                  q.push(G.node), u.push(G);
                else if (G.isImportDeclaration()) {
                  var H = G.node.source.value;
                  g(H, "imports", G.node.specifiers);
                  for (var I in G.getBindingIdentifiers())
                    G.scope.removeBinding(I), t.push(b.identifier(I));
                  G.remove();
                } else if (G.isExportAllDeclaration())
                  g(G.node.source.value, "exports", G.node), G.remove();
                else if (G.isExportDefaultDeclaration()) {
                  var J = G.get("declaration");
                  if (J.isClassDeclaration() || J.isFunctionDeclaration()) {
                    var K = J.node.id,
                        L = [];
                    K ? (L.push(J.node), L.push(i("default", K)), e(K.name, "default")) : L.push(i("default", b.toExpression(J.node))), !w || J.isClassDeclaration() ? G.replaceWithMultiple(L) : (q = q.concat(L), u.push(G));
                  } else
                    G.replaceWith(i("default", J.node));
                } else if (G.isExportNamedDeclaration()) {
                  var M = G.get("declaration");
                  if (M.node) {
                    G.replaceWith(M);
                    var N = [],
                        O = void 0;
                    if (G.isFunction()) {
                      var P = M.node,
                          Q = P.id.name;
                      if (w)
                        e(Q, Q), q.push(P), q.push(i(Q, P.id)), u.push(G);
                      else {
                        var R;
                        R = {}, R[Q] = P.id, O = R;
                      }
                    } else
                      O = M.getBindingIdentifiers();
                    for (var S in O)
                      e(S, S), N.push(i(S, b.identifier(S)));
                    G.insertAfter(N);
                  } else {
                    var T = G.node.specifiers;
                    if (T && T.length)
                      if (G.node.source)
                        g(G.node.source.value, "exports", T), G.remove();
                      else {
                        for (var U = [],
                            V = T,
                            W = Array.isArray(V),
                            X = 0,
                            V = W ? V : (0, h.default)(V); ; ) {
                          var Y;
                          if (W) {
                            if (X >= V.length)
                              break;
                            Y = V[X++];
                          } else {
                            if (X = V.next(), X.done)
                              break;
                            Y = X.value;
                          }
                          var Z = Y;
                          U.push(i(Z.exported.name, Z.local)), e(Z.local.name, Z.exported.name);
                        }
                        G.replaceWithMultiple(U);
                      }
                  }
                }
              }
              for (var $ in n) {
                for (var _ = n[$],
                    aa = [],
                    ba = a.scope.generateUidIdentifier($),
                    ca = _.imports,
                    da = Array.isArray(ca),
                    ea = 0,
                    ca = da ? ca : (0, h.default)(ca); ; ) {
                  var fa;
                  if (da) {
                    if (ea >= ca.length)
                      break;
                    fa = ca[ea++];
                  } else {
                    if (ea = ca.next(), ea.done)
                      break;
                    fa = ea.value;
                  }
                  var ga = fa;
                  b.isImportNamespaceSpecifier(ga) ? aa.push(b.expressionStatement(b.assignmentExpression("=", ga.local, ba))) : b.isImportDefaultSpecifier(ga) && (ga = b.importSpecifier(ga.local, b.identifier("default"))), b.isImportSpecifier(ga) && aa.push(b.expressionStatement(b.assignmentExpression("=", ga.local, b.memberExpression(ba, ga.imported))));
                }
                if (_.exports.length) {
                  var ha = a.scope.generateUidIdentifier("exportObj");
                  aa.push(b.variableDeclaration("var", [b.variableDeclarator(ha, b.objectExpression([]))]));
                  for (var ia = _.exports,
                      ja = Array.isArray(ia),
                      ka = 0,
                      ia = ja ? ia : (0, h.default)(ia); ; ) {
                    var la;
                    if (ja) {
                      if (ka >= ia.length)
                        break;
                      la = ia[ka++];
                    } else {
                      if (ka = ia.next(), ka.done)
                        break;
                      la = ka.value;
                    }
                    var ma = la;
                    b.isExportAllDeclaration(ma) ? aa.push(p({
                      KEY: a.scope.generateUidIdentifier("key"),
                      EXPORT_OBJ: ha,
                      TARGET: ba
                    })) : b.isExportSpecifier(ma) && aa.push(b.expressionStatement(b.assignmentExpression("=", b.memberExpression(ha, ma.exported), b.memberExpression(ba, ma.local))));
                  }
                  aa.push(b.expressionStatement(b.callExpression(j, [ha])));
                }
                s.push(b.stringLiteral($)), r.push(b.functionExpression(null, [ba], b.blockStatement(aa)));
              }
              var na = this.getModuleName();
              na && (na = b.stringLiteral(na)), w && (0, l.default)(a, function(a) {
                return t.push(a);
              }), t.length && q.unshift(b.variableDeclaration("var", t.map(function(a) {
                return b.variableDeclarator(a);
              }))), a.traverse(d, {
                exports: m,
                buildCall: i,
                scope: a.scope
              });
              for (var oa = u,
                  pa = Array.isArray(oa),
                  qa = 0,
                  oa = pa ? oa : (0, h.default)(oa); ; ) {
                var ra;
                if (pa) {
                  if (qa >= oa.length)
                    break;
                  ra = oa[qa++];
                } else {
                  if (qa = oa.next(), qa.done)
                    break;
                  ra = qa.value;
                }
                var sa = ra;
                sa.remove();
              }
              a.node.body = [o({
                SYSTEM_REGISTER: b.memberExpression(b.identifier(c.opts.systemGlobal || "System"), b.identifier("register")),
                BEFORE_BODY: q,
                MODULE_NAME: na,
                SETTERS: r,
                SOURCES: s,
                BODY: a.node.body,
                EXPORT_IDENTIFIER: j,
                CONTEXT_IDENTIFIER: k
              })];
            }
          }
        }};
    };
    var k = a("bf"),
        l = d(k),
        m = a("7"),
        n = d(m),
        o = (0, n.default)('\n  SYSTEM_REGISTER(MODULE_NAME, [SOURCES], function (EXPORT_IDENTIFIER, CONTEXT_IDENTIFIER) {\n    "use strict";\n    BEFORE_BODY;\n    return {\n      setters: [SETTERS],\n      execute: function () {\n        BODY;\n      }\n    };\n  });\n'),
        p = (0, n.default)('\n  for (var KEY in TARGET) {\n    if (KEY !== "default" && KEY !== "__esModule") EXPORT_OBJ[KEY] = TARGET[KEY];\n  }\n');
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("c0", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = function(a) {
      var b = a.types;
      return {pre: function(a) {
          a.set("helpersNamespace", b.identifier("babelHelpers"));
        }};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("c1", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return c.exports = {
      builtins: {
        Symbol: "symbol",
        Promise: "promise",
        Map: "map",
        WeakMap: "weak-map",
        Set: "set",
        WeakSet: "weak-set",
        Observable: "observable",
        setImmediate: "set-immediate",
        clearImmediate: "clear-immediate",
        asap: "asap"
      },
      methods: {
        Array: {
          concat: "array/concat",
          copyWithin: "array/copy-within",
          entries: "array/entries",
          every: "array/every",
          fill: "array/fill",
          filter: "array/filter",
          findIndex: "array/find-index",
          find: "array/find",
          forEach: "array/for-each",
          from: "array/from",
          includes: "array/includes",
          indexOf: "array/index-of",
          join: "array/join",
          keys: "array/keys",
          lastIndexOf: "array/last-index-of",
          map: "array/map",
          of: "array/of",
          pop: "array/pop",
          push: "array/push",
          reduceRight: "array/reduce-right",
          reduce: "array/reduce",
          reverse: "array/reverse",
          shift: "array/shift",
          slice: "array/slice",
          some: "array/some",
          sort: "array/sort",
          splice: "array/splice",
          unshift: "array/unshift",
          values: "array/values"
        },
        JSON: {stringify: "json/stringify"},
        Object: {
          assign: "object/assign",
          create: "object/create",
          defineProperties: "object/define-properties",
          defineProperty: "object/define-property",
          entries: "object/entries",
          freeze: "object/freeze",
          getOwnPropertyDescriptor: "object/get-own-property-descriptor",
          getOwnPropertyDescriptors: "object/get-own-property-descriptors",
          getOwnPropertyNames: "object/get-own-property-names",
          getOwnPropertySymbols: "object/get-own-property-symbols",
          getPrototypeOf: "object/get-prototype-of",
          isExtensible: "object/is-extensible",
          isFrozen: "object/is-frozen",
          isSealed: "object/is-sealed",
          is: "object/is",
          keys: "object/keys",
          preventExtensions: "object/prevent-extensions",
          seal: "object/seal",
          setPrototypeOf: "object/set-prototype-of",
          values: "object/values"
        },
        RegExp: {escape: "regexp/escape"},
        Math: {
          acosh: "math/acosh",
          asinh: "math/asinh",
          atanh: "math/atanh",
          cbrt: "math/cbrt",
          clz32: "math/clz32",
          cosh: "math/cosh",
          expm1: "math/expm1",
          fround: "math/fround",
          hypot: "math/hypot",
          imul: "math/imul",
          log10: "math/log10",
          log1p: "math/log1p",
          log2: "math/log2",
          sign: "math/sign",
          sinh: "math/sinh",
          tanh: "math/tanh",
          trunc: "math/trunc",
          iaddh: "math/iaddh",
          isubh: "math/isubh",
          imulh: "math/imulh",
          umulh: "math/umulh"
        },
        Symbol: {
          asyncIterator: "symbol/async-iterator",
          for: "symbol/for",
          hasInstance: "symbol/has-instance",
          isConcatSpreadable: "symbol/is-concat-spreadable",
          iterator: "symbol/iterator",
          keyFor: "symbol/key-for",
          match: "symbol/match",
          observable: "symbol/observable",
          replace: "symbol/replace",
          search: "symbol/search",
          species: "symbol/species",
          split: "symbol/split",
          toPrimitive: "symbol/to-primitive",
          toStringTag: "symbol/to-string-tag",
          unscopables: "symbol/unscopables"
        },
        String: {
          at: "string/at",
          codePointAt: "string/code-point-at",
          endsWith: "string/ends-with",
          fromCodePoint: "string/from-code-point",
          includes: "string/includes",
          matchAll: "string/match-all",
          padLeft: "string/pad-left",
          padRight: "string/pad-right",
          padStart: "string/pad-start",
          padEnd: "string/pad-end",
          raw: "string/raw",
          repeat: "string/repeat",
          startsWith: "string/starts-with",
          trim: "string/trim",
          trimLeft: "string/trim-left",
          trimRight: "string/trim-right",
          trimStart: "string/trim-start",
          trimEnd: "string/trim-end"
        },
        Number: {
          EPSILON: "number/epsilon",
          isFinite: "number/is-finite",
          isInteger: "number/is-integer",
          isNaN: "number/is-nan",
          isSafeInteger: "number/is-safe-integer",
          MAX_SAFE_INTEGER: "number/max-safe-integer",
          MIN_SAFE_INTEGER: "number/min-safe-integer",
          parseFloat: "number/parse-float",
          parseInt: "number/parse-int"
        },
        Reflect: {
          apply: "reflect/apply",
          construct: "reflect/construct",
          defineProperty: "reflect/define-property",
          deleteProperty: "reflect/delete-property",
          enumerate: "reflect/enumerate",
          getOwnPropertyDescriptor: "reflect/get-own-property-descriptor",
          getPrototypeOf: "reflect/get-prototype-of",
          get: "reflect/get",
          has: "reflect/has",
          isExtensible: "reflect/is-extensible",
          ownKeys: "reflect/own-keys",
          preventExtensions: "reflect/prevent-extensions",
          setPrototypeOf: "reflect/set-prototype-of",
          set: "reflect/set",
          defineMetadata: "reflect/define-metadata",
          deleteMetadata: "reflect/delete-metadata",
          getMetadata: "reflect/get-metadata",
          getMetadataKeys: "reflect/get-metadata-keys",
          getOwnMetadata: "reflect/get-own-metadata",
          getOwnMetadataKeys: "reflect/get-own-metadata-keys",
          hasMetadata: "reflect/has-metadata",
          hasOwnMetadata: "reflect/has-own-metadata",
          metadata: "reflect/metadata"
        },
        System: {global: "system/global"},
        Error: {isError: "error/is-error"},
        Date: {},
        Function: {}
      }
    }, c.exports;
  }), a.registerDynamic("c2", ["c1"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0, b.definitions = void 0, b.default = function(a) {
      function b(a) {
        return a.moduleName || "babel-runtime";
      }
      function c(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
      }
      var d = a.types,
          e = ["interopRequireWildcard", "interopRequireDefault"];
      return {
        pre: function(a) {
          var c = b(this.opts);
          this.opts.helpers !== !1 && a.set("helperGenerator", function(b) {
            if (e.indexOf(b) < 0)
              return a.addImport(c + "/helpers/" + b, "default", b);
          }), this.setDynamic("regeneratorIdentifier", function() {
            return a.addImport(c + "/regenerator", "default", "regeneratorRuntime");
          });
        },
        visitor: {
          ReferencedIdentifier: function(a, e) {
            var g = a.node,
                h = a.parent,
                i = a.scope;
            if ("regeneratorRuntime" === g.name && e.opts.regenerator !== !1)
              return void a.replaceWith(e.get("regeneratorIdentifier"));
            if (e.opts.polyfill !== !1 && !d.isMemberExpression(h) && c(f.default.builtins, g.name) && !i.getBindingIdentifier(g.name)) {
              var j = b(e.opts);
              a.replaceWith(e.addImport(j + "/core-js/" + f.default.builtins[g.name], "default", g.name));
            }
          },
          CallExpression: function(a, c) {
            if (c.opts.polyfill !== !1 && !a.node.arguments.length) {
              var e = a.node.callee;
              if (d.isMemberExpression(e) && e.computed && a.get("callee.property").matchesPattern("Symbol.iterator")) {
                var f = b(c.opts);
                a.replaceWith(d.callExpression(c.addImport(f + "/core-js/get-iterator", "default", "getIterator"), [e.object]));
              }
            }
          },
          BinaryExpression: function(a, c) {
            if (c.opts.polyfill !== !1 && "in" === a.node.operator && a.get("left").matchesPattern("Symbol.iterator")) {
              var e = b(c.opts);
              a.replaceWith(d.callExpression(c.addImport(e + "/core-js/is-iterable", "default", "isIterable"), [a.node.right]));
            }
          },
          MemberExpression: {
            enter: function(a, e) {
              if (e.opts.polyfill !== !1 && a.isReferenced()) {
                var g = a.node,
                    h = g.object,
                    i = g.property;
                if (d.isReferenced(h, g) && !g.computed && c(f.default.methods, h.name)) {
                  var j = f.default.methods[h.name];
                  if (c(j, i.name) && !a.scope.getBindingIdentifier(h.name)) {
                    if ("Object" === h.name && "defineProperty" === i.name && a.parentPath.isCallExpression()) {
                      var k = a.parentPath.node;
                      if (3 === k.arguments.length && d.isLiteral(k.arguments[1]))
                        return;
                    }
                    var l = b(e.opts);
                    a.replaceWith(e.addImport(l + "/core-js/" + j[i.name], "default", h.name + "$" + i.name));
                  }
                }
              }
            },
            exit: function(a, e) {
              if (e.opts.polyfill !== !1 && a.isReferenced()) {
                var g = a.node,
                    h = g.object;
                if (c(f.default.builtins, h.name) && !a.scope.getBindingIdentifier(h.name)) {
                  var i = b(e.opts);
                  a.replaceWith(d.memberExpression(e.addImport(i + "/core-js/" + f.default.builtins[h.name], "default", h.name), g.property, g.computed));
                }
              }
            }
          }
        }
      };
    };
    var e = a("c1"),
        f = d(e);
    return b.definitions = f.default, c.exports;
  }), a.registerDynamic("c3", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = function() {
      return {manipulateOptions: function(a, b) {
          b.plugins.push("classConstructorCall");
        }};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("c4", ["f", "b7", "c3", "7"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("f"),
        f = d(e),
        g = a("b7"),
        h = d(g);
    b.default = function(b) {
      function c(a) {
        for (var b = a.get("body.body"),
            c = b,
            d = Array.isArray(c),
            e = 0,
            c = d ? c : (0, f.default)(c); ; ) {
          var g;
          if (d) {
            if (e >= c.length)
              break;
            g = c[e++];
          } else {
            if (e = c.next(), e.done)
              break;
            g = e.value;
          }
          var h = g;
          if ("constructorCall" === h.node.kind)
            return h;
        }
        return null;
      }
      function d(a, b) {
        var c = b,
            d = c.node,
            f = d.id || b.scope.generateUidIdentifier("class");
        b.parentPath.isExportDefaultDeclaration() && (b = b.parentPath, b.insertAfter(e.exportDefaultDeclaration(f))), b.replaceWithMultiple(k({
          CLASS_REF: b.scope.generateUidIdentifier(f.name),
          CALL_REF: b.scope.generateUidIdentifier(f.name + "Call"),
          CALL: e.functionExpression(null, a.node.params, a.node.body),
          CLASS: e.toExpression(d),
          WRAPPER_REF: f
        })), a.remove();
      }
      var e = b.types,
          g = (0, h.default)();
      return {
        inherits: a("c3"),
        visitor: {Class: function(a) {
            if (!a.node[g]) {
              a.node[g] = !0;
              var b = c(a);
              b && d(b, a);
            }
          }}
      };
    };
    var i = a("7"),
        j = d(i),
        k = (0, j.default)("\n  let CLASS_REF = CLASS;\n  var CALL_REF = CALL;\n  var WRAPPER_REF = function (...args) {\n    if (this instanceof WRAPPER_REF) {\n      return Reflect.construct(CLASS_REF, args);\n    } else {\n      return CALL_REF.apply(this, args);\n    }\n  };\n  WRAPPER_REF.__proto__ = CLASS_REF;\n  WRAPPER_REF;\n");
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("c5", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = function() {
      return {manipulateOptions: function(a, b) {
          b.plugins.push("exportExtensions");
        }};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("c6", ["c5"], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = function(b) {
      function c(a, b, e) {
        var f = a.specifiers[0];
        if (d.isExportNamespaceSpecifier(f) || d.isExportDefaultSpecifier(f)) {
          var g = a.specifiers.shift(),
              h = e.generateUidIdentifier(g.exported.name),
              i = void 0;
          i = d.isExportNamespaceSpecifier(g) ? d.importNamespaceSpecifier(h) : d.importDefaultSpecifier(h), b.push(d.importDeclaration([i], a.source)), b.push(d.exportNamedDeclaration(null, [d.exportSpecifier(h, g.exported)])), c(a, b, e);
        }
      }
      var d = b.types;
      return {
        inherits: a("c5"),
        visitor: {ExportNamedDeclaration: function(a) {
            var b = a.node,
                d = a.scope,
                e = [];
            c(b, e, d), e.length && (b.specifiers.length >= 1 && e.push(b), a.replaceWithMultiple(e));
          }}
      };
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("c7", ["c8", "c4", "c6"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("c8"),
        f = d(e),
        g = a("c4"),
        h = d(g),
        i = a("c6"),
        j = d(i);
    return b.default = {
      presets: [f.default],
      plugins: [h.default, j.default]
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("c9", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = function() {
      return {manipulateOptions: function(a, b) {
          b.plugins.push("classProperties");
        }};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("ca", ["f", "c9", "cb"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("f"),
        f = d(e);
    b.default = function(b) {
      var c = b.types,
          d = {Super: function(a) {
              a.parentPath.isCallExpression({callee: a.node}) && this.push(a.parentPath);
            }},
          e = {ReferencedIdentifier: function(a) {
              this.scope.hasOwnBinding(a.node.name) && (this.collision = !0, a.skip());
            }};
      return {
        inherits: a("c9"),
        visitor: {
          Class: function(a) {
            for (var b = !!a.node.superClass,
                g = void 0,
                i = [],
                j = a.get("body"),
                k = j.get("body"),
                l = Array.isArray(k),
                m = 0,
                k = l ? k : (0, f.default)(k); ; ) {
              var n;
              if (l) {
                if (m >= k.length)
                  break;
                n = k[m++];
              } else {
                if (m = k.next(), m.done)
                  break;
                n = m.value;
              }
              var o = n;
              o.isClassProperty() ? i.push(o) : o.isClassMethod({kind: "constructor"}) && (g = o);
            }
            if (i.length) {
              var p = [],
                  q = void 0;
              a.isClassExpression() || !a.node.id ? ((0, h.default)(a), q = a.scope.generateUidIdentifier("class")) : q = a.node.id;
              for (var r = [],
                  s = i,
                  t = Array.isArray(s),
                  u = 0,
                  s = t ? s : (0, f.default)(s); ; ) {
                var v;
                if (t) {
                  if (u >= s.length)
                    break;
                  v = s[u++];
                } else {
                  if (u = s.next(), u.done)
                    break;
                  v = u.value;
                }
                var w = v,
                    x = w.node;
                if (!(x.decorators && x.decorators.length > 0) && x.value) {
                  var y = x.static,
                      z = x.computed || c.isLiteral(w.key);
                  y ? p.push(c.expressionStatement(c.assignmentExpression("=", c.memberExpression(q, x.key, z), x.value))) : r.push(c.expressionStatement(c.assignmentExpression("=", c.memberExpression(c.thisExpression(), x.key, z), x.value)));
                }
              }
              if (r.length) {
                if (!g) {
                  var A = c.classMethod("constructor", c.identifier("constructor"), [], c.blockStatement([]));
                  b && (A.params = [c.restElement(c.identifier("args"))], A.body.body.push(c.returnStatement(c.callExpression(c.super(), [c.spreadElement(c.identifier("args"))]))));
                  var B = j.unshiftContainer("body", A);
                  g = B[0];
                }
                for (var C = {
                  collision: !1,
                  scope: g.scope
                },
                    D = i,
                    E = Array.isArray(D),
                    F = 0,
                    D = E ? D : (0, f.default)(D); ; ) {
                  var G;
                  if (E) {
                    if (F >= D.length)
                      break;
                    G = D[F++];
                  } else {
                    if (F = D.next(), F.done)
                      break;
                    G = F.value;
                  }
                  var H = G;
                  if (H.traverse(e, C), C.collision)
                    break;
                }
                if (C.collision) {
                  var I = a.scope.generateUidIdentifier("initialiseProps");
                  p.push(c.variableDeclaration("var", [c.variableDeclarator(I, c.functionExpression(null, [], c.blockStatement(r)))])), r = [c.expressionStatement(c.callExpression(c.memberExpression(I, c.identifier("call")), [c.thisExpression()]))];
                }
                if (b) {
                  var J = [];
                  g.traverse(d, J);
                  for (var K = J,
                      L = Array.isArray(K),
                      M = 0,
                      K = L ? K : (0, f.default)(K); ; ) {
                    var N;
                    if (L) {
                      if (M >= K.length)
                        break;
                      N = K[M++];
                    } else {
                      if (M = K.next(), M.done)
                        break;
                      N = M.value;
                    }
                    var O = N;
                    O.insertAfter(r);
                  }
                } else
                  g.get("body").unshiftContainer("body", r);
              }
              for (var P = i,
                  Q = Array.isArray(P),
                  R = 0,
                  P = Q ? P : (0, f.default)(P); ; ) {
                var S;
                if (Q) {
                  if (R >= P.length)
                    break;
                  S = P[R++];
                } else {
                  if (R = P.next(), R.done)
                    break;
                  S = R.value;
                }
                var T = S;
                T.remove();
              }
              p.length && (a.isClassExpression() ? (a.scope.push({id: q}), a.replaceWith(c.assignmentExpression("=", q, a.node))) : (a.node.id || (a.node.id = q), a.parentPath.isExportDeclaration() && (a = a.parentPath)), a.insertAfter(p));
            }
          },
          ArrowFunctionExpression: function(a) {
            var b = a.get("body");
            if (b.isClassExpression()) {
              var c = b.get("body"),
                  d = c.get("body");
              d.some(function(a) {
                return a.isClassProperty();
              }) && a.ensureBlock();
            }
          }
        }
      };
    };
    var g = a("cb"),
        h = d(g);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("cc", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = function() {
      return {manipulateOptions: function(a, b) {
          b.plugins.push("decorators");
        }};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("cd", ["f", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      for (var b = a,
          c = Array.isArray(b),
          d = 0,
          b = c ? b : (0, h.default)(b); ; ) {
        var e;
        if (c) {
          if (d >= b.length)
            break;
          e = b[d++];
        } else {
          if (d = b.next(), d.done)
            break;
          e = d.value;
        }
        var f = e,
            g = f.node,
            i = g.expression;
        if (j.isMemberExpression(i)) {
          var k = f.scope.maybeGenerateMemoised(i.object),
              l = void 0,
              m = [];
          k ? (l = k, m.push(j.assignmentExpression("=", k, i.object))) : l = i.object, m.push(j.callExpression(j.memberExpression(j.memberExpression(l, i.property, i.computed), j.identifier("bind")), [l])), 1 === m.length ? g.expression = m[0] : g.expression = j.sequenceExpression(m);
        }
      }
    }
    this || self;
    b.__esModule = !0;
    var g = a("f"),
        h = e(g);
    b.default = f;
    var i = a("9"),
        j = d(i);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("ce", ["f", "cd", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var f = a("f"),
        g = e(f);
    b.default = function(a) {
      function b(b) {
        if (b.node && !b.isPure()) {
          var c = a.scope.generateDeclaredUidIdentifier();
          d.push(k.assignmentExpression("=", c, b.node)), b.replaceWith(c);
        }
      }
      function c(a) {
        if (Array.isArray(a) && a.length) {
          a = a.reverse(), (0, i.default)(a);
          for (var c = a,
              d = Array.isArray(c),
              e = 0,
              c = d ? c : (0, g.default)(c); ; ) {
            var f;
            if (d) {
              if (e >= c.length)
                break;
              f = c[e++];
            } else {
              if (e = c.next(), e.done)
                break;
              f = e.value;
            }
            var h = f;
            b(h);
          }
        }
      }
      a.assertClass();
      var d = [];
      b(a.get("superClass")), c(a.get("decorators"), !0);
      for (var e = a.get("body.body"),
          f = e,
          h = Array.isArray(f),
          j = 0,
          f = h ? f : (0, g.default)(f); ; ) {
        var l;
        if (h) {
          if (j >= f.length)
            break;
          l = f[j++];
        } else {
          if (j = f.next(), j.done)
            break;
          l = j.value;
        }
        var m = l;
        m.is("computed") && b(m.get("key")), m.has("decorators") && c(a.get("decorators"));
      }
      d && a.insertBefore(d.map(function(a) {
        return k.expressionStatement(a);
      }));
    };
    var h = a("cd"),
        i = e(h),
        j = a("9"),
        k = d(j);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("cf", ["b8", "f", "cc", "7", "ce"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("b8"),
        f = d(e),
        g = a("f"),
        h = d(g);
    b.default = function(b) {
      function c(a) {
        return a.reverse().map(function(a) {
          return a.expression;
        });
      }
      function d(a, b, d) {
        var e = [],
            g = a.node.decorators;
        if (g) {
          a.node.decorators = null, g = c(g);
          for (var j = g,
              k = Array.isArray(j),
              l = 0,
              j = k ? j : (0, h.default)(j); ; ) {
            var n;
            if (k) {
              if (l >= j.length)
                break;
              n = j[l++];
            } else {
              if (l = j.next(), l.done)
                break;
              n = l.value;
            }
            var o = n;
            e.push(m({
              CLASS_REF: b,
              DECORATOR: o
            }));
          }
        }
        for (var p = (0, f.default)(null),
            q = a.get("body.body"),
            r = Array.isArray(q),
            s = 0,
            q = r ? q : (0, h.default)(q); ; ) {
          var t;
          if (r) {
            if (s >= q.length)
              break;
            t = q[s++];
          } else {
            if (s = q.next(), s.done)
              break;
            t = s.value;
          }
          var u = t,
              v = u.node.decorators;
          if (v) {
            var w = i.toKeyAlias(u.node);
            p[w] = p[w] || [], p[w].push(u.node), u.remove();
          }
        }
        for (var x in p)
          var y = p[x];
        return e;
      }
      function e(a) {
        if (a.isClass()) {
          if (a.node.decorators)
            return !0;
          for (var b = a.node.body.body,
              c = Array.isArray(b),
              d = 0,
              b = c ? b : (0, h.default)(b); ; ) {
            var e;
            if (c) {
              if (d >= b.length)
                break;
              e = b[d++];
            } else {
              if (d = b.next(), d.done)
                break;
              e = d.value;
            }
            var f = e;
            if (f.decorators)
              return !0;
          }
        } else if (a.isObjectExpression())
          for (var g = a.node.properties,
              i = Array.isArray(g),
              j = 0,
              g = i ? g : (0, h.default)(g); ; ) {
            var k;
            if (i) {
              if (j >= g.length)
                break;
              k = g[j++];
            } else {
              if (j = g.next(), j.done)
                break;
              k = j.value;
            }
            var l = k;
            if (l.decorators)
              return !0;
          }
        return !1;
      }
      function g(a) {
        throw a.buildCodeFrameError('Decorators are not officially supported yet in 6.x pending a proposal update.\nHowever, if you need to use them you can install the legacy decorators transform with:\n\nnpm install babel-plugin-transform-decorators-legacy --save-dev\n\nand add the following line to your .babelrc file:\n\n{\n  "plugins": ["transform-decorators-legacy"]\n}\n\nThe repo url is: https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy.\n    ');
      }
      var i = b.types;
      return {
        inherits: a("cc"),
        visitor: {
          ClassExpression: function(a) {
            if (e(a)) {
              g(a), (0, l.default)(a);
              var b = a.scope.generateDeclaredUidIdentifier("ref"),
                  c = [];
              c.push(i.assignmentExpression("=", b, a.node)), c = c.concat(d(a, b, this)), c.push(b), a.replaceWith(i.sequenceExpression(c));
            }
          },
          ClassDeclaration: function(a) {
            if (e(a)) {
              g(a), (0, l.default)(a);
              var b = a.node.id,
                  c = [];
              c = c.concat(d(a, b, this).map(function(a) {
                return i.expressionStatement(a);
              })), c.push(i.expressionStatement(b)), a.insertAfter(c);
            }
          },
          ObjectExpression: function(a) {
            e(a) && g(a);
          }
        }
      };
    };
    var i = a("7"),
        j = d(i),
        k = a("ce"),
        l = d(k),
        m = (0, j.default)("\n  CLASS_REF = DECORATOR(CLASS_REF) || CLASS_REF;\n");
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("d0", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = function() {
      return {manipulateOptions: function(a, b) {
          b.plugins.push("dynamicImport");
        }};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("c8", ["d1", "ca", "cf", "d0"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("d1"),
        f = d(e),
        g = a("ca"),
        h = d(g),
        i = a("cf"),
        j = d(i),
        k = a("d0"),
        l = d(k);
    return b.default = {
      presets: [f.default],
      plugins: [l.default, h.default, j.default]
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("d2", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = function() {
      return {manipulateOptions: function(a, b) {
          b.plugins.push("trailingFunctionCommas");
        }};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("d3", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = function() {
      return {manipulateOptions: function(a, b) {
          b.plugins.push("asyncFunctions");
        }};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("d4", ["d3", "d5"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0, b.default = function() {
      return {
        inherits: a("d3"),
        visitor: {Function: function(a, b) {
            a.node.async && !a.node.generator && (0, f.default)(a, b.file, {wrapAsync: b.addHelper("asyncToGenerator")});
          }}
      };
    };
    var e = a("d5"),
        f = d(e);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("d6", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = function() {
      return {manipulateOptions: function(a, b) {
          b.plugins.push("exponentiationOperator");
        }};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("d7", ["9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a, b, c, d) {
      var e = void 0;
      if (h.isSuper(a))
        return a;
      if (h.isIdentifier(a)) {
        if (d.hasBinding(a.name))
          return a;
        e = a;
      } else {
        if (!h.isMemberExpression(a))
          throw new Error("We can't explode this node type " + a.type);
        if (e = a.object, h.isSuper(e) || h.isIdentifier(e) && d.hasBinding(e.name))
          return e;
      }
      var f = d.generateUidIdentifierBasedOnNode(e);
      return b.push(h.variableDeclaration("var", [h.variableDeclarator(f, e)])), f;
    }
    function f(a, b, c, d) {
      var e = a.property,
          f = h.toComputedKey(a, e);
      if (h.isLiteral(f) && h.isPureish(f))
        return f;
      var g = d.generateUidIdentifierBasedOnNode(e);
      return b.push(h.variableDeclaration("var", [h.variableDeclarator(g, e)])), g;
    }
    this || self;
    b.__esModule = !0, b.default = function(a, b, c, d, g) {
      var i = void 0;
      i = h.isIdentifier(a) && g ? a : e(a, b, c, d);
      var j = void 0,
          k = void 0;
      if (h.isIdentifier(a))
        j = a, k = i;
      else {
        var l = f(a, b, c, d),
            m = a.computed || h.isLiteral(l);
        k = j = h.memberExpression(i, l, m);
      }
      return {
        uid: k,
        ref: j
      };
    };
    var g = a("9"),
        h = d(g);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("d8", ["d7", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0, b.default = function(a) {
      function b(b) {
        return b && b.operator === a.operator + "=";
      }
      function c(a, b) {
        return i.assignmentExpression("=", a, b);
      }
      var d = {};
      return d.ExpressionStatement = function(d, e) {
        if (!d.isCompletionRecord()) {
          var f = d.node.expression;
          if (b(f)) {
            var h = [],
                j = (0, g.default)(f.left, h, e, d.scope, !0);
            h.push(i.expressionStatement(c(j.ref, a.build(j.uid, f.right)))), d.replaceWithMultiple(h);
          }
        }
      }, d.AssignmentExpression = function(d, e) {
        var f = d.node,
            h = d.scope;
        if (b(f)) {
          var i = [],
              j = (0, g.default)(f.left, i, e, h);
          i.push(c(j.ref, a.build(j.uid, f.right))), d.replaceWithMultiple(i);
        }
      }, d.BinaryExpression = function(b) {
        var c = b.node;
        c.operator === a.operator && b.replaceWith(a.build(c.left, c.right));
      }, d;
    };
    var f = a("d7"),
        g = e(f),
        h = a("9"),
        i = d(h);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("d9", ["d6", "d8"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0, b.default = function(b) {
      var c = b.types;
      return {
        inherits: a("d6"),
        visitor: (0, f.default)({
          operator: "**",
          build: function(a, b) {
            return c.callExpression(c.memberExpression(c.identifier("Math"), c.identifier("pow")), [a, b]);
          }
        })
      };
    };
    var e = a("d8"),
        f = d(e);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("da", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = function() {
      return {manipulateOptions: function(a, b) {
          b.plugins.push("objectRestSpread");
        }};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("db", ["f", "da"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("f"),
        f = d(e);
    return b.default = function(b) {
      function c(a) {
        for (var b = a.properties,
            c = Array.isArray(b),
            e = 0,
            b = c ? b : (0, f.default)(b); ; ) {
          var g;
          if (c) {
            if (e >= b.length)
              break;
            g = b[e++];
          } else {
            if (e = b.next(), e.done)
              break;
            g = e.value;
          }
          var h = g;
          if (d.isSpreadProperty(h))
            return !0;
        }
        return !1;
      }
      var d = b.types;
      return {
        inherits: a("da"),
        visitor: {ObjectExpression: function(a, b) {
            function e() {
              i.length && (h.push(d.objectExpression(i)), i = []);
            }
            if (c(a.node)) {
              var g = b.opts.useBuiltIns || !1;
              if ("boolean" != typeof g)
                throw new Error("transform-object-rest-spread currently only accepts a boolean option for useBuiltIns (defaults to false)");
              for (var h = [],
                  i = [],
                  j = a.node.properties,
                  k = Array.isArray(j),
                  l = 0,
                  j = k ? j : (0, f.default)(j); ; ) {
                var m;
                if (k) {
                  if (l >= j.length)
                    break;
                  m = j[l++];
                } else {
                  if (l = j.next(), l.done)
                    break;
                  m = l.value;
                }
                var n = m;
                d.isSpreadProperty(n) ? (e(), h.push(n.argument)) : i.push(n);
              }
              e(), d.isObjectExpression(h[0]) || h.unshift(d.objectExpression([]));
              var o = g ? d.memberExpression(d.identifier("Object"), d.identifier("assign")) : b.addHelper("extends");
              a.replaceWith(d.callExpression(o, h));
            }
          }}
      };
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("dc", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = function() {
      return {manipulateOptions: function(a, b) {
          b.plugins.push("asyncGenerators");
        }};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("dd", ["9", "7", "b4"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    this || self;
    b.__esModule = !0, b.default = function(a, b) {
      var c = a.node,
          d = a.scope,
          e = a.parent,
          f = d.generateUidIdentifier("step"),
          h = d.generateUidIdentifier("value"),
          i = c.left,
          j = void 0;
      g.isIdentifier(i) || g.isPattern(i) || g.isMemberExpression(i) ? j = g.expressionStatement(g.assignmentExpression("=", i, h)) : g.isVariableDeclaration(i) && (j = g.variableDeclaration(i.kind, [g.variableDeclarator(i.declarations[0].id, h)]));
      var n = l();
      (0, k.default)(n, m, null, {
        ITERATOR_HAD_ERROR_KEY: d.generateUidIdentifier("didIteratorError"),
        ITERATOR_COMPLETION: d.generateUidIdentifier("iteratorNormalCompletion"),
        ITERATOR_ERROR_KEY: d.generateUidIdentifier("iteratorError"),
        ITERATOR_KEY: d.generateUidIdentifier("iterator"),
        GET_ITERATOR: b.getAsyncIterator,
        OBJECT: c.right,
        STEP_VALUE: h,
        STEP_KEY: f,
        AWAIT: b.wrapAwait
      }), n = n.body.body;
      var o = g.isLabeledStatement(e),
          p = n[3].block.body,
          q = p[0];
      return o && (p[0] = g.labeledStatement(e.label, q)), {
        replaceParent: o,
        node: n,
        declar: j,
        loop: q
      };
    };
    var f = a("9"),
        g = e(f),
        h = a("7"),
        i = d(h),
        j = a("b4"),
        k = d(j),
        l = (0, i.default)("\n  function* wrapper() {\n    var ITERATOR_COMPLETION = true;\n    var ITERATOR_HAD_ERROR_KEY = false;\n    var ITERATOR_ERROR_KEY = undefined;\n    try {\n      for (\n        var ITERATOR_KEY = GET_ITERATOR(OBJECT), STEP_KEY, STEP_VALUE;\n        (\n          STEP_KEY = yield AWAIT(ITERATOR_KEY.next()),\n          ITERATOR_COMPLETION = STEP_KEY.done,\n          STEP_VALUE = yield AWAIT(STEP_KEY.value),\n          !ITERATOR_COMPLETION\n        );\n        ITERATOR_COMPLETION = true) {\n      }\n    } catch (err) {\n      ITERATOR_HAD_ERROR_KEY = true;\n      ITERATOR_ERROR_KEY = err;\n    } finally {\n      try {\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return) {\n          yield AWAIT(ITERATOR_KEY.return());\n        }\n      } finally {\n        if (ITERATOR_HAD_ERROR_KEY) {\n          throw ITERATOR_ERROR_KEY;\n        }\n      }\n    }\n  }\n"),
        m = {
          noScope: !0,
          Identifier: function(a, b) {
            a.node.name in b && a.replaceInline(b[a.node.name]);
          },
          CallExpression: function(a, b) {
            var c = a.node.callee;
            g.isIdentifier(c) && "AWAIT" === c.name && !b.AWAIT && a.replaceWith(a.node.arguments[0]);
          }
        };
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("d5", ["cb", "7", "9", "dd"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a, b) {
      var c = a.node,
          d = c.body;
      c.async = !1;
      var e = m.functionExpression(null, [], m.blockStatement(d.body), !0);
      e.shadow = !0, d.body = [m.returnStatement(m.callExpression(m.callExpression(b, [e]), []))], c.generator = !1;
    }
    function g(a, b) {
      var c = a.node,
          d = a.isFunctionDeclaration(),
          e = c.id,
          f = p;
      a.isArrowFunctionExpression() ? a.arrowFunctionToShadowed() : !d && e && (f = q), c.async = !1, c.generator = !0, c.id = null, d && (c.type = "FunctionExpression");
      var g = m.callExpression(b, [c]),
          h = f({
            NAME: e,
            REF: a.scope.generateUidIdentifier("ref"),
            FUNCTION: g,
            PARAMS: c.params.map(function() {
              return a.scope.generateUidIdentifier("x");
            })
          }).expression;
      if (d) {
        var j = m.variableDeclaration("let", [m.variableDeclarator(m.identifier(e.name), m.callExpression(h, []))]);
        j._blockHoist = !0, a.replaceWith(j);
      } else {
        var k = h.body.body[1].argument;
        e || (0, i.default)({
          node: k,
          parent: a.parent,
          scope: a.scope
        }), !k || k.id || c.params.length ? a.replaceWith(m.callExpression(h, [])) : a.replaceWith(g);
      }
    }
    this || self;
    b.__esModule = !0, b.default = function(a, b, c) {
      c || (c = {wrapAsync: b}, b = null), a.traverse(r, {
        file: b,
        wrapAwait: c.wrapAwait
      }), a.isClassMethod() || a.isObjectMethod() ? f(a, c.wrapAsync) : g(a, c.wrapAsync);
    };
    var h = a("cb"),
        i = e(h),
        j = a("7"),
        k = e(j),
        l = a("9"),
        m = d(l),
        n = a("dd"),
        o = e(n),
        p = (0, k.default)("\n  (() => {\n    var REF = FUNCTION;\n    return function NAME(PARAMS) {\n      return REF.apply(this, arguments);\n    };\n  })\n"),
        q = (0, k.default)("\n  (() => {\n    var REF = FUNCTION;\n    function NAME(PARAMS) {\n      return REF.apply(this, arguments);\n    }\n    return NAME;\n  })\n"),
        r = {
          Function: function(a) {
            return a.isArrowFunctionExpression() && !a.node.async ? void a.arrowFunctionToShadowed() : void a.skip();
          },
          AwaitExpression: function(a, b) {
            var c = a.node,
                d = b.wrapAwait;
            c.type = "YieldExpression", d && (c.argument = m.callExpression(d, [c.argument]));
          },
          ForAwaitStatement: function(a, b) {
            var c = b.file,
                d = b.wrapAwait,
                e = a.node,
                f = (0, o.default)(a, {
                  getAsyncIterator: c.addHelper("asyncIterator"),
                  wrapAwait: d
                }),
                g = f.declar,
                h = f.loop,
                i = h.body;
            a.ensureBlock(), g && i.body.push(g), i.body = i.body.concat(e.body.body), m.inherits(h, e), m.inherits(h.body, e.body), f.replaceParent ? (a.parentPath.replaceWithMultiple(f.node), a.remove()) : a.replaceWithMultiple(f.node);
          }
        };
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("de", ["dc", "d5"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0, b.default = function(b) {
      var c = b.types,
          d = {
            Function: function(a) {
              a.skip();
            },
            YieldExpression: function(a, b) {
              var d = a.node;
              if (d.delegate) {
                var e = b.addHelper("asyncGeneratorDelegate");
                d.argument = c.callExpression(e, [c.callExpression(b.addHelper("asyncIterator"), [d.argument]), c.memberExpression(b.addHelper("asyncGenerator"), c.identifier("await"))]);
              }
            }
          };
      return {
        inherits: a("dc"),
        visitor: {Function: function(a, b) {
            a.node.async && a.node.generator && (a.traverse(d, b), (0, f.default)(a, b.file, {
              wrapAsync: c.memberExpression(b.addHelper("asyncGenerator"), c.identifier("wrap")),
              wrapAwait: c.memberExpression(b.addHelper("asyncGenerator"), c.identifier("await"))
            }));
          }}
      };
    };
    var e = a("d5"),
        f = d(e);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("d1", ["d2", "d4", "d9", "db", "de"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("d2"),
        f = d(e),
        g = a("d4"),
        h = d(g),
        i = a("d9"),
        j = d(i),
        k = a("db"),
        l = d(k),
        m = a("de"),
        n = d(m);
    return b.default = {plugins: [f.default, h.default, j.default, n.default, l.default]}, c.exports = b.default, c.exports;
  }), a.registerDynamic("df", ["f"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("f"),
        f = d(e);
    return b.default = function(a) {
      function b(a) {
        return d.isLiteral(a) && "string" == typeof a.value;
      }
      function c(a, b) {
        return d.binaryExpression("+", a, b);
      }
      var d = a.types;
      return {visitor: {
          TaggedTemplateExpression: function(a, b) {
            for (var c = a.node,
                e = c.quasi,
                g = [],
                h = [],
                i = [],
                j = e.quasis,
                k = Array.isArray(j),
                l = 0,
                j = k ? j : (0, f.default)(j); ; ) {
              var m;
              if (k) {
                if (l >= j.length)
                  break;
                m = j[l++];
              } else {
                if (l = j.next(), l.done)
                  break;
                m = l.value;
              }
              var n = m;
              h.push(d.stringLiteral(n.value.cooked)), i.push(d.stringLiteral(n.value.raw));
            }
            h = d.arrayExpression(h), i = d.arrayExpression(i);
            var o = "taggedTemplateLiteral";
            b.opts.loose && (o += "Loose");
            var p = b.file.addTemplateObject(o, h, i);
            g.push(p), g = g.concat(e.expressions), a.replaceWith(d.callExpression(c.tag, g));
          },
          TemplateLiteral: function(a, e) {
            for (var g = [],
                h = a.get("expressions"),
                i = a.node.quasis,
                j = Array.isArray(i),
                k = 0,
                i = j ? i : (0, f.default)(i); ; ) {
              var l;
              if (j) {
                if (k >= i.length)
                  break;
                l = i[k++];
              } else {
                if (k = i.next(), k.done)
                  break;
                l = k.value;
              }
              var m = l;
              g.push(d.stringLiteral(m.value.cooked));
              var n = h.shift();
              n && (!e.opts.spec || n.isBaseType("string") || n.isBaseType("number") ? g.push(n.node) : g.push(d.callExpression(d.identifier("String"), [n.node])));
            }
            if (g = g.filter(function(a) {
              return !d.isLiteral(a, {value: ""});
            }), b(g[0]) || b(g[1]) || g.unshift(d.stringLiteral("")), g.length > 1) {
              for (var o = c(g.shift(), g.shift()),
                  p = g,
                  q = Array.isArray(p),
                  r = 0,
                  p = q ? p : (0, f.default)(p); ; ) {
                var s;
                if (q) {
                  if (r >= p.length)
                    break;
                  s = p[r++];
                } else {
                  if (r = p.next(), r.done)
                    break;
                  s = r.value;
                }
                var t = s;
                o = c(o, t);
              }
              a.replaceWith(o);
            } else
              a.replaceWith(g[0]);
          }
        }};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("e0", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = function() {
      return {visitor: {
          NumericLiteral: function(a) {
            var b = a.node;
            b.extra && /^0[ob]/i.test(b.extra.raw) && (b.extra = void 0);
          },
          StringLiteral: function(a) {
            var b = a.node;
            b.extra && /\\[u]/gi.test(b.extra.raw) && (b.extra = void 0);
          }
        }};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("e1", ["cb"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0, b.default = function() {
      return {visitor: {
          "ArrowFunctionExpression|FunctionExpression": {exit: function(a) {
              if ("value" !== a.key && !a.parentPath.isObjectProperty()) {
                var b = (0, f.default)(a);
                b && a.replaceWith(b);
              }
            }},
          ObjectProperty: function(a) {
            var b = a.get("value");
            if (b.isFunction()) {
              var c = (0, f.default)(b);
              c && b.replaceWith(c);
            }
          }
        }};
    };
    var e = a("cb"),
        f = d(e);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("e2", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = function(a) {
      var b = a.types;
      return {visitor: {ArrowFunctionExpression: function(a, c) {
            if (c.opts.spec) {
              var d = a.node;
              if (d.shadow)
                return;
              d.shadow = {this: !1}, d.type = "FunctionExpression";
              var e = b.thisExpression();
              e._forceShadow = a, a.ensureBlock(), a.get("body").unshiftContainer("body", b.expressionStatement(b.callExpression(c.addHelper("newArrowCheck"), [b.thisExpression(), e]))), a.replaceWith(b.callExpression(b.memberExpression(d, b.identifier("bind")), [b.thisExpression()]));
            } else
              a.arrowFunctionToShadowed();
          }}};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("e3", ["f"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("f"),
        f = d(e);
    return b.default = function(a) {
      function b(a, b) {
        for (var d = b.get(a),
            e = d,
            g = Array.isArray(e),
            h = 0,
            e = g ? e : (0, f.default)(e); ; ) {
          var i;
          if (g) {
            if (h >= e.length)
              break;
            i = e[h++];
          } else {
            if (h = e.next(), h.done)
              break;
            i = h.value;
          }
          var j = i,
              k = j.node;
          if (j.isFunctionDeclaration()) {
            var l = c.variableDeclaration("let", [c.variableDeclarator(k.id, c.toExpression(k))]);
            l._blockHoist = 2, k.id = null, j.replaceWith(l);
          }
        }
      }
      var c = a.types;
      return {visitor: {
          BlockStatement: function(a) {
            var d = a.node,
                e = a.parent;
            c.isFunction(e, {body: d}) || c.isExportDeclaration(e) || b("body", a);
          },
          SwitchCase: function(a) {
            b("consequent", a);
          }
        }};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("18", ["2a"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("2a"),
        f = d(e);
    return b.default = function(a, b) {
      if (!a)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return !b || "object" !== ("undefined" == typeof b ? "undefined" : (0, f.default)(b)) && "function" != typeof b ? a : b;
    }, c.exports;
  }), a.registerDynamic("e4", ["e5", "e6", "e7", "e8", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("e5")),
        e = a("e6"),
        f = function(a, b) {
          if (e(a), !d(b) && null !== b)
            throw TypeError(b + ": can't set as prototype!");
        };
    return c.exports = {
      set: Object.setPrototypeOf || ("__proto__" in {} ? function(b, c, d) {
        try {
          d = a("e7")(Function.call, a("e8").f(Object.prototype, "__proto__").set, 2), d(b, []), c = !(b instanceof Array);
        } catch (a) {
          c = !0;
        }
        return function(a, b) {
          return f(a, b), c ? a.__proto__ = b : d(a, b), a;
        };
      }({}, !1) : void 0),
      check: f
    }, c.exports;
  }), a.registerDynamic("e9", ["a8", "e4", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("a8"));
    return d(d.S, "Object", {setPrototypeOf: a("e4").set}), c.exports;
  }), a.registerDynamic("ea", ["e9", "31", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return a("e9"), c.exports = a("31").Object.setPrototypeOf, c.exports;
  }), a.registerDynamic("eb", ["ea"], !0, function(a, b, c) {
    this || self;
    return c.exports = {
      default: a("ea"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("19", ["eb", "b8", "2a"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("eb"),
        f = d(e),
        g = a("b8"),
        h = d(g),
        i = a("2a"),
        j = d(i);
    return b.default = function(a, b) {
      if ("function" != typeof b && null !== b)
        throw new TypeError("Super expression must either be null or a function, not " + ("undefined" == typeof b ? "undefined" : (0, j.default)(b)));
      a.prototype = (0, h.default)(b && b.prototype, {constructor: {
          value: a,
          enumerable: !1,
          writable: !0,
          configurable: !0
        }}), b && (f.default ? (0, f.default)(a, b) : a.__proto__ = b);
    }, c.exports;
  }), a.registerDynamic("ec", ["17", "18", "19", "cb", "ed", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var f = a("17"),
        g = e(f),
        h = a("18"),
        i = e(h),
        j = a("19"),
        k = e(j),
        l = a("cb"),
        m = e(l),
        n = a("ed"),
        o = e(n),
        p = a("9"),
        q = d(p),
        r = function(a) {
          function b() {
            (0, g.default)(this, b);
            var c = (0, i.default)(this, a.apply(this, arguments));
            return c.isLoose = !0, c;
          }
          return (0, k.default)(b, a), b.prototype._processMethod = function(a, b) {
            if (!a.decorators) {
              var c = this.classRef;
              a.static || (c = q.memberExpression(c, q.identifier("prototype")));
              var d = q.memberExpression(c, a.key, a.computed || q.isLiteral(a.key)),
                  e = q.functionExpression(null, a.params, a.body, a.generator, a.async);
              e.returnType = a.returnType;
              var f = q.toComputedKey(a, a.key);
              q.isStringLiteral(f) && (e = (0, m.default)({
                node: e,
                id: f,
                scope: b
              }));
              var g = q.expressionStatement(q.assignmentExpression("=", d, e));
              return q.inheritsComments(g, a), this.body.push(g), !0;
            }
          }, b;
        }(o.default);
    return b.default = r, c.exports = b.default, c.exports;
  }), a.registerDynamic("ee", ["cb", "8", "ef", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      return !s.isClassMethod(a) && !s.isObjectMethod(a) || "get" !== a.kind && "set" !== a.kind ? "value" : a.kind;
    }
    function g(a, b, c, d, e) {
      var g = s.toKeyAlias(b),
          h = {};
      if ((0, q.default)(a, g) && (h = a[g]), a[g] = h, h._inherits = h._inherits || [], h._inherits.push(b), h._key = b.key, b.computed && (h._computed = !0), b.decorators) {
        var i = h.decorators = h.decorators || s.arrayExpression([]);
        i.elements = i.elements.concat(b.decorators.map(function(a) {
          return a.expression;
        }).reverse());
      }
      if (h.value || h.initializer)
        throw d.buildCodeFrameError(b, "Key conflict with sibling node");
      var j = void 0,
          k = void 0;
      (s.isObjectProperty(b) || s.isObjectMethod(b) || s.isClassMethod(b)) && (j = s.toComputedKey(b, b.key)), s.isObjectProperty(b) || s.isClassProperty(b) ? k = b.value : (s.isObjectMethod(b) || s.isClassMethod(b)) && (k = s.functionExpression(null, b.params, b.body, b.generator, b.async), k.returnType = b.returnType);
      var l = f(b);
      return c && "value" === l || (c = l), e && s.isStringLiteral(j) && ("value" === c || "initializer" === c) && s.isFunctionExpression(k) && (k = (0, m.default)({
        id: j,
        node: k,
        scope: e
      })), k && (s.inheritsComments(k, b), h[c] = k), h;
    }
    function h(a) {
      for (var b in a)
        if (a[b]._computed)
          return !0;
      return !1;
    }
    function i(a) {
      for (var b = s.arrayExpression([]),
          c = 0; c < a.properties.length; c++) {
        var d = a.properties[c],
            e = d.value;
        e.properties.unshift(s.objectProperty(s.identifier("key"), s.toComputedKey(d))), b.elements.push(e);
      }
      return b;
    }
    function j(a) {
      var b = s.objectExpression([]);
      return (0, o.default)(a, function(a) {
        var c = s.objectExpression([]),
            d = s.objectProperty(a._key, c, a._computed);
        (0, o.default)(a, function(a, b) {
          if ("_" !== b[0]) {
            var d = a;
            (s.isClassMethod(a) || s.isClassProperty(a)) && (a = a.value);
            var e = s.objectProperty(s.identifier(b), a);
            s.inheritsComments(e, d), s.removeComments(d), c.properties.push(e);
          }
        }), b.properties.push(d);
      }), b;
    }
    function k(a) {
      return (0, o.default)(a, function(a) {
        a.value && (a.writable = s.booleanLiteral(!0)), a.configurable = s.booleanLiteral(!0), a.enumerable = s.booleanLiteral(!0);
      }), j(a);
    }
    this || self;
    b.__esModule = !0, b.push = g, b.hasComputed = h, b.toComputedObjectFromClass = i, b.toClassObject = j, b.toDefineObject = k;
    var l = a("cb"),
        m = e(l),
        n = a("8"),
        o = e(n),
        p = a("ef"),
        q = e(p),
        r = a("9"),
        s = d(r);
    return c.exports;
  }), a.registerDynamic("ed", ["f", "17", "b4", "f0", "f1", "ee", "7", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var f = a("f"),
        g = e(f),
        h = a("17"),
        i = e(h),
        j = a("b4"),
        k = a("f0"),
        l = e(k),
        m = a("f1"),
        n = e(m),
        o = a("ee"),
        p = d(o),
        q = a("7"),
        r = e(q),
        s = a("9"),
        t = d(s),
        u = (0, r.default)("\n  (function () {\n    super(...arguments);\n  })\n"),
        v = {
          "FunctionExpression|FunctionDeclaration": function(a) {
            a.is("shadow") || a.skip();
          },
          Method: function(a) {
            a.skip();
          }
        },
        w = j.visitors.merge([v, {
          Super: function(a) {
            if (this.isDerived && !this.hasBareSuper && !a.parentPath.isCallExpression({callee: a.node}))
              throw a.buildCodeFrameError("'super.*' is not allowed before super()");
          },
          CallExpression: {exit: function(a) {
              if (a.get("callee").isSuper() && (this.hasBareSuper = !0, !this.isDerived))
                throw a.buildCodeFrameError("super() is only allowed in a derived constructor");
            }},
          ThisExpression: function(a) {
            if (this.isDerived && !this.hasBareSuper && !a.inShadow("this"))
              throw a.buildCodeFrameError("'this' is not allowed before super()");
          }
        }]),
        x = j.visitors.merge([v, {ThisExpression: function(a) {
            this.superThises.push(a);
          }}]),
        y = function() {
          function a(b, c) {
            (0, i.default)(this, a), this.parent = b.parent, this.scope = b.scope, this.node = b.node, this.path = b, this.file = c, this.clearDescriptors(), this.instancePropBody = [], this.instancePropRefs = {}, this.staticPropBody = [], this.body = [], this.bareSuperAfter = [], this.bareSupers = [], this.pushedConstructor = !1, this.pushedInherits = !1, this.isLoose = !1, this.superThises = [], this.classId = this.node.id, this.classRef = this.node.id ? t.identifier(this.node.id.name) : this.scope.generateUidIdentifier("class"), this.superName = this.node.superClass || t.identifier("Function"), this.isDerived = !!this.node.superClass;
          }
          return a.prototype.run = function() {
            var a = this,
                b = this.superName,
                c = this.file,
                d = this.body,
                e = this.constructorBody = t.blockStatement([]);
            this.constructor = this.buildConstructor();
            var f = [],
                g = [];
            if (this.isDerived && (g.push(b), b = this.scope.generateUidIdentifierBasedOnNode(b), f.push(b), this.superName = b), this.buildBody(), e.body.unshift(t.expressionStatement(t.callExpression(c.addHelper("classCallCheck"), [t.thisExpression(), this.classRef]))), d = d.concat(this.staticPropBody.map(function(b) {
              return b(a.classRef);
            })), this.classId && 1 === d.length)
              return t.toExpression(d[0]);
            d.push(t.returnStatement(this.classRef));
            var h = t.functionExpression(null, f, t.blockStatement(d));
            return h.shadow = !0, t.callExpression(h, g);
          }, a.prototype.buildConstructor = function() {
            var a = t.functionDeclaration(this.classRef, [], this.constructorBody);
            return t.inherits(a, this.node), a;
          }, a.prototype.pushToMap = function(a, b) {
            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "value",
                d = arguments[3],
                e = void 0;
            a.static ? (this.hasStaticDescriptors = !0, e = this.staticMutatorMap) : (this.hasInstanceDescriptors = !0, e = this.instanceMutatorMap);
            var f = p.push(e, a, c, this.file, d);
            return b && (f.enumerable = t.booleanLiteral(!0)), f;
          }, a.prototype.constructorMeMaybe = function() {
            for (var a = !1,
                b = this.path.get("body.body"),
                c = b,
                d = Array.isArray(c),
                e = 0,
                c = d ? c : (0, g.default)(c); ; ) {
              var f;
              if (d) {
                if (e >= c.length)
                  break;
                f = c[e++];
              } else {
                if (e = c.next(), e.done)
                  break;
                f = e.value;
              }
              var h = f;
              if (a = h.equals("kind", "constructor"))
                break;
            }
            if (!a) {
              var i = void 0,
                  j = void 0;
              if (this.isDerived) {
                var k = u().expression;
                i = k.params, j = k.body;
              } else
                i = [], j = t.blockStatement([]);
              this.path.get("body").unshiftContainer("body", t.classMethod("constructor", t.identifier("constructor"), i, j));
            }
          }, a.prototype.buildBody = function() {
            if (this.constructorMeMaybe(), this.pushBody(), this.verifyConstructor(), this.userConstructor) {
              var a = this.constructorBody;
              a.body = a.body.concat(this.userConstructor.body.body), t.inherits(this.constructor, this.userConstructor), t.inherits(a, this.userConstructor.body);
            }
            this.pushDescriptors();
          }, a.prototype.pushBody = function() {
            for (var a = this.path.get("body.body"),
                b = a,
                c = Array.isArray(b),
                d = 0,
                b = c ? b : (0, g.default)(b); ; ) {
              var e;
              if (c) {
                if (d >= b.length)
                  break;
                e = b[d++];
              } else {
                if (d = b.next(), d.done)
                  break;
                e = d.value;
              }
              var f = e,
                  h = f.node;
              if (f.isClassProperty())
                throw f.buildCodeFrameError("Missing class properties transform.");
              if (h.decorators)
                throw f.buildCodeFrameError("Method has decorators, put the decorator plugin before the classes one.");
              if (t.isClassMethod(h)) {
                var i = "constructor" === h.kind;
                if (i && (f.traverse(w, this), !this.hasBareSuper && this.isDerived))
                  throw f.buildCodeFrameError("missing super() call in constructor");
                var j = new l.default({
                  forceSuperMemoisation: i,
                  methodPath: f,
                  methodNode: h,
                  objectRef: this.classRef,
                  superRef: this.superName,
                  isStatic: h.static,
                  isLoose: this.isLoose,
                  scope: this.scope,
                  file: this.file
                }, !0);
                j.replace(), i ? this.pushConstructor(j, h, f) : this.pushMethod(h, f);
              }
            }
          }, a.prototype.clearDescriptors = function() {
            this.hasInstanceDescriptors = !1, this.hasStaticDescriptors = !1, this.instanceMutatorMap = {}, this.staticMutatorMap = {};
          }, a.prototype.pushDescriptors = function() {
            this.pushInherits();
            var a = this.body,
                b = void 0,
                c = void 0;
            if (this.hasInstanceDescriptors && (b = p.toClassObject(this.instanceMutatorMap)), this.hasStaticDescriptors && (c = p.toClassObject(this.staticMutatorMap)), b || c) {
              b && (b = p.toComputedObjectFromClass(b)), c && (c = p.toComputedObjectFromClass(c));
              var d = t.nullLiteral(),
                  e = [this.classRef, d, d, d, d];
              b && (e[1] = b), c && (e[2] = c), this.instanceInitializersId && (e[3] = this.instanceInitializersId, a.unshift(this.buildObjectAssignment(this.instanceInitializersId))), this.staticInitializersId && (e[4] = this.staticInitializersId, a.unshift(this.buildObjectAssignment(this.staticInitializersId)));
              for (var f = 0,
                  g = 0; g < e.length; g++)
                e[g] !== d && (f = g);
              e = e.slice(0, f + 1), a.push(t.expressionStatement(t.callExpression(this.file.addHelper("createClass"), e)));
            }
            this.clearDescriptors();
          }, a.prototype.buildObjectAssignment = function(a) {
            return t.variableDeclaration("var", [t.variableDeclarator(a, t.objectExpression([]))]);
          }, a.prototype.wrapSuperCall = function(a, b, c, d) {
            var e = a.node;
            this.isLoose ? (e.arguments.unshift(t.thisExpression()), 2 === e.arguments.length && t.isSpreadElement(e.arguments[1]) && t.isIdentifier(e.arguments[1].argument, {name: "arguments"}) ? (e.arguments[1] = e.arguments[1].argument, e.callee = t.memberExpression(b, t.identifier("apply"))) : e.callee = t.memberExpression(b, t.identifier("call"))) : e = (0, n.default)(t.logicalExpression("||", t.memberExpression(this.classRef, t.identifier("__proto__")), t.callExpression(t.memberExpression(t.identifier("Object"), t.identifier("getPrototypeOf")), [this.classRef])), t.thisExpression(), e.arguments);
            var f = t.callExpression(this.file.addHelper("possibleConstructorReturn"), [t.thisExpression(), e]),
                g = this.bareSuperAfter.map(function(a) {
                  return a(c);
                });
            a.parentPath.isExpressionStatement() && a.parentPath.container === d.node.body && d.node.body.length - 1 === a.parentPath.key ? ((this.superThises.length || g.length) && (a.scope.push({id: c}), f = t.assignmentExpression("=", c, f)), g.length && (f = t.toSequenceExpression([f].concat(g, [c]))), a.parentPath.replaceWith(t.returnStatement(f))) : a.replaceWithMultiple([t.variableDeclaration("var", [t.variableDeclarator(c, f)])].concat(g, [t.expressionStatement(c)]));
          }, a.prototype.verifyConstructor = function() {
            var a = this;
            if (this.isDerived) {
              var b = this.userConstructorPath,
                  c = b.get("body");
              b.traverse(x, this);
              for (var d = !!this.bareSupers.length,
                  e = this.superName || t.identifier("Function"),
                  f = b.scope.generateUidIdentifier("this"),
                  h = this.bareSupers,
                  i = Array.isArray(h),
                  j = 0,
                  h = i ? h : (0, g.default)(h); ; ) {
                var k;
                if (i) {
                  if (j >= h.length)
                    break;
                  k = h[j++];
                } else {
                  if (j = h.next(), j.done)
                    break;
                  k = j.value;
                }
                var l = k;
                this.wrapSuperCall(l, e, f, c), d && l.find(function(a) {
                  return a === b || (a.isLoop() || a.isConditional() ? (d = !1, !0) : void 0);
                });
              }
              for (var m = this.superThises,
                  n = Array.isArray(m),
                  o = 0,
                  m = n ? m : (0, g.default)(m); ; ) {
                var p;
                if (n) {
                  if (o >= m.length)
                    break;
                  p = m[o++];
                } else {
                  if (o = m.next(), o.done)
                    break;
                  p = o.value;
                }
                var q = p;
                q.replaceWith(f);
              }
              var r = function(b) {
                return t.callExpression(a.file.addHelper("possibleConstructorReturn"), [f].concat(b || []));
              },
                  s = c.get("body");
              s.length && !s.pop().isReturnStatement() && c.pushContainer("body", t.returnStatement(d ? f : r()));
              for (var u = this.superReturns,
                  v = Array.isArray(u),
                  w = 0,
                  u = v ? u : (0, g.default)(u); ; ) {
                var y;
                if (v) {
                  if (w >= u.length)
                    break;
                  y = u[w++];
                } else {
                  if (w = u.next(), w.done)
                    break;
                  y = w.value;
                }
                var z = y;
                if (z.node.argument) {
                  var A = z.scope.generateDeclaredUidIdentifier("ret");
                  z.get("argument").replaceWithMultiple([t.assignmentExpression("=", A, z.node.argument), r(A)]);
                } else
                  z.get("argument").replaceWith(r());
              }
            }
          }, a.prototype.pushMethod = function(a, b) {
            var c = b ? b.scope : this.scope;
            "method" === a.kind && this._processMethod(a, c) || this.pushToMap(a, !1, null, c);
          }, a.prototype._processMethod = function() {
            return !1;
          }, a.prototype.pushConstructor = function(a, b, c) {
            this.bareSupers = a.bareSupers, this.superReturns = a.returns, c.scope.hasOwnBinding(this.classRef.name) && c.scope.rename(this.classRef.name);
            var d = this.constructor;
            this.userConstructorPath = c, this.userConstructor = b, this.hasConstructor = !0, t.inheritsComments(d, b), d._ignoreUserWhitespace = !0, d.params = b.params, t.inherits(d.body, b.body), d.body.directives = b.body.directives, this._pushConstructor();
          }, a.prototype._pushConstructor = function() {
            this.pushedConstructor || (this.pushedConstructor = !0, (this.hasInstanceDescriptors || this.hasStaticDescriptors) && this.pushDescriptors(), this.body.push(this.constructor), this.pushInherits());
          }, a.prototype.pushInherits = function() {
            this.isDerived && !this.pushedInherits && (this.pushedInherits = !0, this.body.unshift(t.expressionStatement(t.callExpression(this.file.addHelper("inherits"), [this.classRef, this.superName]))));
          }, a;
        }();
    return b.default = y, c.exports = b.default, c.exports;
  }), a.registerDynamic("cb", ["f2", "7", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a, b, c, d) {
      if (a.selfReference) {
        if (!d.hasBinding(c.name) || d.hasGlobal(c.name)) {
          if (!m.isFunction(b))
            return;
          var e = n;
          b.generator && (e = o);
          var f = e({
            FUNCTION: b,
            FUNCTION_ID: c,
            FUNCTION_KEY: d.generateUidIdentifier(c.name)
          }).expression;
          f.callee._skipModulesRemap = !0;
          for (var g = f.callee.body.body[0].params,
              h = 0,
              j = (0, i.default)(b); h < j; h++)
            g.push(d.generateUidIdentifier("x"));
          return f;
        }
        d.rename(c.name);
      }
      b.id = c, d.getProgramParent().references[c.name] = !0;
    }
    function g(a, b, c) {
      var d = {
        selfAssignment: !1,
        selfReference: !1,
        outerDeclar: c.getBindingIdentifier(b),
        references: [],
        name: b
      },
          e = c.getOwnBinding(b);
      return e ? "param" === e.kind && (d.selfReference = !0) : (d.outerDeclar || c.hasGlobal(b)) && c.traverse(a, p, d), d;
    }
    this || self;
    b.__esModule = !0, b.default = function(a) {
      var b = a.node,
          c = a.parent,
          d = a.scope,
          e = a.id;
      if (!b.id) {
        if (!m.isObjectProperty(c) && !m.isObjectMethod(c, {kind: "method"}) || c.computed && !m.isLiteral(c.key)) {
          if (m.isVariableDeclarator(c)) {
            if (e = c.id, m.isIdentifier(e)) {
              var h = d.parent.getBinding(e.name);
              if (h && h.constant && d.getBinding(e.name) === h)
                return b.id = e, void(b.id[m.NOT_LOCAL_BINDING] = !0);
            }
          } else if (m.isAssignmentExpression(c))
            e = c.left;
          else if (!e)
            return;
        } else
          e = c.key;
        var i = void 0;
        if (e && m.isLiteral(e))
          i = e.value;
        else {
          if (!e || !m.isIdentifier(e))
            return;
          i = e.name;
        }
        i = m.toBindingIdentifierName(i), e = m.identifier(i), e[m.NOT_LOCAL_BINDING] = !0;
        var j = g(b, i, d);
        return f(j, b, e, d) || b;
      }
    };
    var h = a("f2"),
        i = e(h),
        j = a("7"),
        k = e(j),
        l = a("9"),
        m = d(l),
        n = (0, k.default)("\n  (function (FUNCTION_KEY) {\n    function FUNCTION_ID() {\n      return FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    }\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"),
        o = (0, k.default)("\n  (function (FUNCTION_KEY) {\n    function* FUNCTION_ID() {\n      return yield* FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    };\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"),
        p = {"ReferencedIdentifier|BindingIdentifier": function(a, b) {
            if (a.node.name === b.name) {
              var c = a.scope.getBindingIdentifier(b.name);
              c === b.outerDeclar && (b.selfReference = !0, a.stop());
            }
          }};
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("f3", ["b7", "ec", "ed", "cb"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("b7"),
        f = d(e);
    b.default = function(a) {
      var b = a.types,
          c = (0, f.default)();
      return {visitor: {
          ExportDefaultDeclaration: function(a) {
            if (a.get("declaration").isClassDeclaration()) {
              var c = a.node,
                  d = c.declaration.id || a.scope.generateUidIdentifier("class");
              c.declaration.id = d, a.replaceWith(c.declaration), a.insertAfter(b.exportDefaultDeclaration(d));
            }
          },
          ClassDeclaration: function(a) {
            var c = a.node,
                d = c.id || a.scope.generateUidIdentifier("class");
            a.replaceWith(b.variableDeclaration("let", [b.variableDeclarator(d, b.toExpression(c))]));
          },
          ClassExpression: function(a, b) {
            var d = a.node;
            if (!d[c]) {
              var e = (0, l.default)(a);
              if (e && e !== d)
                return a.replaceWith(e);
              d[c] = !0;
              var f = j.default;
              b.opts.loose && (f = h.default), a.replaceWith(new f(a, b.file).run());
            }
          }
        }};
    };
    var g = a("ec"),
        h = d(g),
        i = a("ed"),
        j = d(i),
        k = a("cb"),
        l = d(k);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("f1", ["9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    this || self;
    b.__esModule = !0, b.default = function(a, b, c) {
      return 1 === c.length && f.isSpreadElement(c[0]) && f.isIdentifier(c[0].argument, {name: "arguments"}) ? f.callExpression(f.memberExpression(a, f.identifier("apply")), [b, c[0].argument]) : f.callExpression(f.memberExpression(a, f.identifier("call")), [b].concat(c));
    };
    var e = a("9"),
        f = d(e);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("f0", ["17", "b7", "f1", "6", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a, b) {
      return !!r.isSuper(a) && (!r.isMemberExpression(b, {computed: !1}) && !r.isCallExpression(b, {callee: a}));
    }
    function g(a) {
      return r.isMemberExpression(a) && r.isSuper(a.object);
    }
    function h(a, b) {
      var c = b ? a : r.memberExpression(a, r.identifier("prototype"));
      return r.logicalExpression("||", r.memberExpression(c, r.identifier("__proto__")), r.callExpression(r.memberExpression(r.identifier("Object"), r.identifier("getPrototypeOf")), [c]));
    }
    this || self;
    b.__esModule = !0;
    var i = a("17"),
        j = e(i),
        k = a("b7"),
        l = e(k),
        m = a("f1"),
        n = e(m),
        o = a("6"),
        p = d(o),
        q = a("9"),
        r = d(q),
        s = (0, l.default)(),
        t = {
          Function: function(a) {
            a.inShadow("this") || a.skip();
          },
          ReturnStatement: function(a, b) {
            a.inShadow("this") || b.returns.push(a);
          },
          ThisExpression: function(a, b) {
            a.node[s] || b.thises.push(a);
          },
          enter: function(a, b) {
            var c = b.specHandle;
            b.isLoose && (c = b.looseHandle);
            var d = a.isCallExpression() && a.get("callee").isSuper(),
                e = c.call(b, a);
            e && (b.hasSuper = !0), d && b.bareSupers.push(a), e === !0 && a.requeue(), e !== !0 && e && (Array.isArray(e) ? a.replaceWithMultiple(e) : a.replaceWith(e));
          }
        },
        u = function() {
          function a(b) {
            var c = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            (0, j.default)(this, a), this.forceSuperMemoisation = b.forceSuperMemoisation, this.methodPath = b.methodPath, this.methodNode = b.methodNode, this.superRef = b.superRef, this.isStatic = b.isStatic, this.hasSuper = !1, this.inClass = c, this.isLoose = b.isLoose, this.scope = this.methodPath.scope, this.file = b.file, this.opts = b, this.bareSupers = [], this.returns = [], this.thises = [];
          }
          return a.prototype.getObjectRef = function() {
            return this.opts.objectRef || this.opts.getObjectRef();
          }, a.prototype.setSuperProperty = function(a, b, c) {
            return r.callExpression(this.file.addHelper("set"), [h(this.getObjectRef(), this.isStatic), c ? a : r.stringLiteral(a.name), b, r.thisExpression()]);
          }, a.prototype.getSuperProperty = function(a, b) {
            return r.callExpression(this.file.addHelper("get"), [h(this.getObjectRef(), this.isStatic), b ? a : r.stringLiteral(a.name), r.thisExpression()]);
          }, a.prototype.replace = function() {
            this.methodPath.traverse(t, this);
          }, a.prototype.getLooseSuperProperty = function(a, b) {
            var c = this.methodNode,
                d = this.superRef || r.identifier("Function");
            return b.property === a ? void 0 : r.isCallExpression(b, {callee: a}) ? void 0 : r.isMemberExpression(b) && !c.static ? r.memberExpression(d, r.identifier("prototype")) : d;
          }, a.prototype.looseHandle = function(a) {
            var b = a.node;
            if (a.isSuper())
              return this.getLooseSuperProperty(b, a.parent);
            if (a.isCallExpression()) {
              var c = b.callee;
              if (!r.isMemberExpression(c))
                return;
              if (!r.isSuper(c.object))
                return;
              return r.appendToMemberExpression(c, r.identifier("call")), b.arguments.unshift(r.thisExpression()), !0;
            }
          }, a.prototype.specHandleAssignmentExpression = function(a, b, c) {
            return "=" === c.operator ? this.setSuperProperty(c.left.property, c.right, c.left.computed) : (a = a || b.scope.generateUidIdentifier("ref"), [r.variableDeclaration("var", [r.variableDeclarator(a, c.left)]), r.expressionStatement(r.assignmentExpression("=", c.left, r.binaryExpression(c.operator[0], a, c.right)))]);
          }, a.prototype.specHandle = function(a) {
            var b = void 0,
                c = void 0,
                d = void 0,
                e = a.parent,
                h = a.node;
            if (f(h, e))
              throw a.buildCodeFrameError(p.get("classesIllegalBareSuper"));
            if (r.isCallExpression(h)) {
              var i = h.callee;
              if (r.isSuper(i))
                return;
              g(i) && (b = i.property, c = i.computed, d = h.arguments);
            } else if (r.isMemberExpression(h) && r.isSuper(h.object))
              b = h.property, c = h.computed;
            else {
              if (r.isUpdateExpression(h) && g(h.argument)) {
                var j = r.binaryExpression(h.operator[0], h.argument, r.numericLiteral(1));
                if (h.prefix)
                  return this.specHandleAssignmentExpression(null, a, j);
                var k = a.scope.generateUidIdentifier("ref");
                return this.specHandleAssignmentExpression(k, a, j).concat(r.expressionStatement(k));
              }
              if (r.isAssignmentExpression(h) && g(h.left))
                return this.specHandleAssignmentExpression(null, a, h);
            }
            if (b) {
              var l = this.getSuperProperty(b, c);
              return d ? this.optimiseCall(l, d) : l;
            }
          }, a.prototype.optimiseCall = function(a, b) {
            var c = r.thisExpression();
            return c[s] = !0, (0, n.default)(a, c, b);
          }, a;
        }();
    return b.default = u, c.exports = b.default, c.exports;
  }), a.registerDynamic("f4", ["f", "b7", "f0"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("f"),
        f = d(e),
        g = a("b7"),
        h = d(g);
    b.default = function(a) {
      function b(a, b, c, d, e) {
        var f = new j.default({
          getObjectRef: d,
          methodNode: b,
          methodPath: a,
          isStatic: !0,
          scope: c,
          file: e
        });
        f.replace();
      }
      var c = a.types,
          d = (0, h.default)();
      return {visitor: {
          Super: function(a) {
            var b = a.findParent(function(a) {
              return a.isObjectExpression();
            });
            b && (b.node[d] = !0);
          },
          ObjectExpression: {exit: function(a, e) {
              if (a.node[d]) {
                for (var g = void 0,
                    h = function() {
                      return g = g || a.scope.generateUidIdentifier("obj");
                    },
                    i = a.get("properties"),
                    j = i,
                    k = Array.isArray(j),
                    l = 0,
                    j = k ? j : (0, f.default)(j); ; ) {
                  var m;
                  if (k) {
                    if (l >= j.length)
                      break;
                    m = j[l++];
                  } else {
                    if (l = j.next(), l.done)
                      break;
                    m = l.value;
                  }
                  var n = m;
                  n.isObjectProperty() && (n = n.get("value")), b(n, n.node, a.scope, h, e);
                }
                g && (a.scope.push({id: g}), a.replaceWith(c.assignmentExpression("=", g, a.node)));
              }
            }}
        }};
    };
    var i = a("f0"),
        j = d(i);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("f5", ["9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    this || self;
    b.__esModule = !0, b.default = function() {
      return {visitor: {
          ObjectMethod: function(a) {
            var b = a.node;
            if ("method" === b.kind) {
              var c = f.functionExpression(null, b.params, b.body, b.generator, b.async);
              c.returnType = b.returnType, a.replaceWith(f.objectProperty(b.key, c, b.computed));
            }
          },
          ObjectProperty: function(a) {
            var b = a.node;
            b.shorthand && (b.shorthand = !1);
          }
        }};
    };
    var e = a("9"),
        f = d(e);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("f6", ["f"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("f"),
        f = d(e);
    return b.default = function(a) {
      function b(a) {
        return h.isObjectProperty(a) ? a.value : h.isObjectMethod(a) ? h.functionExpression(null, a.params, a.body, a.generator, a.async) : void 0;
      }
      function c(a, c, e) {
        "get" === c.kind && "set" === c.kind ? d(a, c, e) : e.push(h.expressionStatement(h.assignmentExpression("=", h.memberExpression(a, c.key, c.computed || h.isLiteral(c.key)), b(c))));
      }
      function d(a, c) {
        var d = (a.objId, a.body),
            e = a.getMutatorId,
            f = a.scope,
            g = !c.computed && h.isIdentifier(c.key) ? h.stringLiteral(c.key.name) : c.key,
            i = f.maybeGenerateMemoised(g);
        i && (d.push(h.expressionStatement(h.assignmentExpression("=", i, g))), g = i), d.push.apply(d, j({
          MUTATOR_MAP_REF: e(),
          KEY: g,
          VALUE: b(c),
          KIND: h.identifier(c.kind)
        }));
      }
      function e(a) {
        for (var b = a.computedProps,
            e = Array.isArray(b),
            g = 0,
            b = e ? b : (0, f.default)(b); ; ) {
          var h;
          if (e) {
            if (g >= b.length)
              break;
            h = b[g++];
          } else {
            if (g = b.next(), g.done)
              break;
            h = g.value;
          }
          var i = h;
          "get" === i.kind || "set" === i.kind ? d(a, i) : c(a.objId, i, a.body);
        }
      }
      function g(a) {
        for (var e = a.objId,
            g = a.body,
            i = a.computedProps,
            j = a.state,
            k = i,
            l = Array.isArray(k),
            m = 0,
            k = l ? k : (0, f.default)(k); ; ) {
          var n;
          if (l) {
            if (m >= k.length)
              break;
            n = k[m++];
          } else {
            if (m = k.next(), m.done)
              break;
            n = m.value;
          }
          var o = n,
              p = h.toComputedKey(o);
          if ("get" === o.kind || "set" === o.kind)
            d(a, o);
          else if (h.isStringLiteral(p, {value: "__proto__"}))
            c(e, o, g);
          else {
            if (1 === i.length)
              return h.callExpression(j.addHelper("defineProperty"), [a.initPropExpression, p, b(o)]);
            g.push(h.expressionStatement(h.callExpression(j.addHelper("defineProperty"), [e, p, b(o)])));
          }
        }
      }
      var h = a.types,
          i = a.template,
          j = i("\n    MUTATOR_MAP_REF[KEY] = MUTATOR_MAP_REF[KEY] || {};\n    MUTATOR_MAP_REF[KEY].KIND = VALUE;\n  ");
      return {visitor: {ObjectExpression: {exit: function(a, b) {
              for (var c = a.node,
                  d = a.parent,
                  i = a.scope,
                  j = !1,
                  k = c.properties,
                  l = Array.isArray(k),
                  m = 0,
                  k = l ? k : (0, f.default)(k); ; ) {
                var n;
                if (l) {
                  if (m >= k.length)
                    break;
                  n = k[m++];
                } else {
                  if (m = k.next(), m.done)
                    break;
                  n = m.value;
                }
                var o = n;
                if (j = o.computed === !0)
                  break;
              }
              if (j) {
                for (var p = [],
                    q = [],
                    r = !1,
                    s = c.properties,
                    t = Array.isArray(s),
                    u = 0,
                    s = t ? s : (0, f.default)(s); ; ) {
                  var v;
                  if (t) {
                    if (u >= s.length)
                      break;
                    v = s[u++];
                  } else {
                    if (u = s.next(), u.done)
                      break;
                    v = u.value;
                  }
                  var w = v;
                  w.computed && (r = !0), r ? q.push(w) : p.push(w);
                }
                var x = i.generateUidIdentifierBasedOnNode(d),
                    y = h.objectExpression(p),
                    z = [];
                z.push(h.variableDeclaration("var", [h.variableDeclarator(x, y)]));
                var A = g;
                b.opts.loose && (A = e);
                var B = void 0,
                    C = function() {
                      return B || (B = i.generateUidIdentifier("mutatorMap"), z.push(h.variableDeclaration("var", [h.variableDeclarator(B, h.objectExpression([]))]))), B;
                    },
                    D = A({
                      scope: i,
                      objId: x,
                      body: z,
                      computedProps: q,
                      initPropExpression: y,
                      getMutatorId: C,
                      state: b
                    });
                B && z.push(h.expressionStatement(h.callExpression(b.addHelper("defineEnumerableProperties"), [x, B]))), D ? a.replaceWith(D) : (z.push(h.expressionStatement(x)), a.replaceWithMultiple(z));
              }
            }}}};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("f7", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = function(a) {
      function b(a) {
        var b = a.node,
            c = a.scope,
            d = [],
            e = b.right;
        if (!g.isIdentifier(e) || !c.hasBinding(e.name)) {
          var f = c.generateUidIdentifier("arr");
          d.push(g.variableDeclaration("var", [g.variableDeclarator(f, e)])), e = f;
        }
        var i = c.generateUidIdentifier("i"),
            j = h({
              BODY: b.body,
              KEY: i,
              ARR: e
            });
        g.inherits(j, b), g.ensureBlock(j);
        var k = g.memberExpression(e, i, !0),
            l = b.left;
        return g.isVariableDeclaration(l) ? (l.declarations[0].init = k, j.body.body.unshift(l)) : j.body.body.unshift(g.expressionStatement(g.assignmentExpression("=", l, k))), a.parentPath.isLabeledStatement() && (j = g.labeledStatement(a.parentPath.node.label, j)), d.push(j), d;
      }
      function c(a, b) {
        var c = a.node,
            d = a.scope,
            f = c.left,
            h = void 0,
            j = void 0;
        if (g.isIdentifier(f) || g.isPattern(f) || g.isMemberExpression(f))
          j = f;
        else {
          if (!g.isVariableDeclaration(f))
            throw b.buildCodeFrameError(f, e.get("unknownForHead", f.type));
          j = d.generateUidIdentifier("ref"), h = g.variableDeclaration(f.kind, [g.variableDeclarator(f.declarations[0].id, j)]);
        }
        var k = d.generateUidIdentifier("iterator"),
            l = d.generateUidIdentifier("isArray"),
            m = i({
              LOOP_OBJECT: k,
              IS_ARRAY: l,
              OBJECT: c.right,
              INDEX: d.generateUidIdentifier("i"),
              ID: j
            });
        return h || m.body.body.shift(), {
          declar: h,
          node: m,
          loop: m
        };
      }
      function d(a, b) {
        var c = a.node,
            d = a.scope,
            f = a.parent,
            h = c.left,
            i = void 0,
            k = d.generateUidIdentifier("step"),
            l = g.memberExpression(k, g.identifier("value"));
        if (g.isIdentifier(h) || g.isPattern(h) || g.isMemberExpression(h))
          i = g.expressionStatement(g.assignmentExpression("=", h, l));
        else {
          if (!g.isVariableDeclaration(h))
            throw b.buildCodeFrameError(h, e.get("unknownForHead", h.type));
          i = g.variableDeclaration(h.kind, [g.variableDeclarator(h.declarations[0].id, l)]);
        }
        var m = d.generateUidIdentifier("iterator"),
            n = j({
              ITERATOR_HAD_ERROR_KEY: d.generateUidIdentifier("didIteratorError"),
              ITERATOR_COMPLETION: d.generateUidIdentifier("iteratorNormalCompletion"),
              ITERATOR_ERROR_KEY: d.generateUidIdentifier("iteratorError"),
              ITERATOR_KEY: m,
              STEP_KEY: k,
              OBJECT: c.right,
              BODY: null
            }),
            o = g.isLabeledStatement(f),
            p = n[3].block.body,
            q = p[0];
        return o && (p[0] = g.labeledStatement(f.label, q)), {
          replaceParent: o,
          declar: i,
          loop: q,
          node: n
        };
      }
      var e = a.messages,
          f = a.template,
          g = a.types,
          h = f("\n    for (var KEY = 0; KEY < ARR.length; KEY++) BODY;\n  "),
          i = f("\n    for (var LOOP_OBJECT = OBJECT,\n             IS_ARRAY = Array.isArray(LOOP_OBJECT),\n             INDEX = 0,\n             LOOP_OBJECT = IS_ARRAY ? LOOP_OBJECT : LOOP_OBJECT[Symbol.iterator]();;) {\n      var ID;\n      if (IS_ARRAY) {\n        if (INDEX >= LOOP_OBJECT.length) break;\n        ID = LOOP_OBJECT[INDEX++];\n      } else {\n        INDEX = LOOP_OBJECT.next();\n        if (INDEX.done) break;\n        ID = INDEX.value;\n      }\n    }\n  "),
          j = f("\n    var ITERATOR_COMPLETION = true;\n    var ITERATOR_HAD_ERROR_KEY = false;\n    var ITERATOR_ERROR_KEY = undefined;\n    try {\n      for (var ITERATOR_KEY = OBJECT[Symbol.iterator](), STEP_KEY; !(ITERATOR_COMPLETION = (STEP_KEY = ITERATOR_KEY.next()).done); ITERATOR_COMPLETION = true) {\n      }\n    } catch (err) {\n      ITERATOR_HAD_ERROR_KEY = true;\n      ITERATOR_ERROR_KEY = err;\n    } finally {\n      try {\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return) {\n          ITERATOR_KEY.return();\n        }\n      } finally {\n        if (ITERATOR_HAD_ERROR_KEY) {\n          throw ITERATOR_ERROR_KEY;\n        }\n      }\n    }\n  ");
      return {visitor: {ForOfStatement: function(a, e) {
            if (a.get("right").isArrayExpression())
              return a.parentPath.isLabeledStatement() ? a.parentPath.replaceWithMultiple(b(a)) : a.replaceWithMultiple(b(a));
            var f = d;
            e.opts.loose && (f = c);
            var h = a.node,
                i = f(a, e),
                j = i.declar,
                k = i.loop,
                l = k.body;
            a.ensureBlock(), j && l.body.push(j), l.body = l.body.concat(h.body.body), g.inherits(k, h), g.inherits(k.body, h.body), i.replaceParent ? (a.parentPath.replaceWithMultiple(i.node), a.remove()) : a.replaceWithMultiple(i.node);
          }}};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("f8", ["f9", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    this || self;
    b.__esModule = !0, b.default = function() {
      return {visitor: {RegExpLiteral: function(a) {
            var b = a.node;
            f.is(b, "y") && a.replaceWith(h.newExpression(h.identifier("RegExp"), [h.stringLiteral(b.pattern), h.stringLiteral(b.flags)]));
          }}};
    };
    var e = a("f9"),
        f = d(e),
        g = a("9"),
        h = d(g);
    return c.exports = b.default, c.exports;
  }), function() {
    var b = a.amdDefine;
    (function() {
      "use strict";
      function a() {
        var a,
            b,
            c = 16384,
            d = [],
            e = -1,
            f = arguments.length;
        if (!f)
          return "";
        for (var g = ""; ++e < f; ) {
          var h = Number(arguments[e]);
          if (!isFinite(h) || h < 0 || h > 1114111 || A(h) != h)
            throw RangeError("Invalid code point: " + h);
          h <= 65535 ? d.push(h) : (h -= 65536, a = (h >> 10) + 55296, b = h % 1024 + 56320, d.push(a, b)), (e + 1 == f || d.length > c) && (g += z.apply(null, d), d.length = 0);
        }
        return g;
      }
      function e(a, b) {
        if (b.indexOf("|") == -1) {
          if (a == b)
            return;
          throw Error("Invalid node type: " + a);
        }
        if (b = e.hasOwnProperty(b) ? e[b] : e[b] = RegExp("^(?:" + b + ")$"), !b.test(a))
          throw Error("Invalid node type: " + a);
      }
      function f(a) {
        var b = a.type;
        if (f.hasOwnProperty(b) && "function" == typeof f[b])
          return f[b](a);
        throw Error("Invalid node type: " + b);
      }
      function g(a) {
        e(a.type, "alternative");
        var b = a.body,
            c = b ? b.length : 0;
        if (1 == c)
          return s(b[0]);
        for (var d = -1,
            f = ""; ++d < c; )
          f += s(b[d]);
        return f;
      }
      function h(a) {
        switch (e(a.type, "anchor"), a.kind) {
          case "start":
            return "^";
          case "end":
            return "$";
          case "boundary":
            return "\\b";
          case "not-boundary":
            return "\\B";
          default:
            throw Error("Invalid assertion");
        }
      }
      function i(a) {
        return e(a.type, "anchor|characterClass|characterClassEscape|dot|group|reference|value"), f(a);
      }
      function j(a) {
        e(a.type, "characterClass");
        var b = a.body,
            c = b ? b.length : 0,
            d = -1,
            f = "[";
        for (a.negative && (f += "^"); ++d < c; )
          f += m(b[d]);
        return f += "]";
      }
      function k(a) {
        return e(a.type, "characterClassEscape"), "\\" + a.value;
      }
      function l(a) {
        e(a.type, "characterClassRange");
        var b = a.min,
            c = a.max;
        if ("characterClassRange" == b.type || "characterClassRange" == c.type)
          throw Error("Invalid character class range");
        return m(b) + "-" + m(c);
      }
      function m(a) {
        return e(a.type, "anchor|characterClassEscape|characterClassRange|dot|value"), f(a);
      }
      function n(a) {
        e(a.type, "disjunction");
        var b = a.body,
            c = b ? b.length : 0;
        if (0 == c)
          throw Error("No body");
        if (1 == c)
          return f(b[0]);
        for (var d = -1,
            g = ""; ++d < c; )
          0 != d && (g += "|"), g += f(b[d]);
        return g;
      }
      function o(a) {
        return e(a.type, "dot"), ".";
      }
      function p(a) {
        e(a.type, "group");
        var b = "(";
        switch (a.behavior) {
          case "normal":
            break;
          case "ignore":
            b += "?:";
            break;
          case "lookahead":
            b += "?=";
            break;
          case "negativeLookahead":
            b += "?!";
            break;
          default:
            throw Error("Invalid behaviour: " + a.behaviour);
        }
        var c = a.body,
            d = c ? c.length : 0;
        if (1 == d)
          b += f(c[0]);
        else
          for (var g = -1; ++g < d; )
            b += f(c[g]);
        return b += ")";
      }
      function q(a) {
        e(a.type, "quantifier");
        var b = "",
            c = a.min,
            d = a.max;
        switch (d) {
          case void 0:
          case null:
            switch (c) {
              case 0:
                b = "*";
                break;
              case 1:
                b = "+";
                break;
              default:
                b = "{" + c + ",}";
            }
            break;
          default:
            b = c == d ? "{" + c + "}" : 0 == c && 1 == d ? "?" : "{" + c + "," + d + "}";
        }
        return a.greedy || (b += "?"), i(a.body[0]) + b;
      }
      function r(a) {
        return e(a.type, "reference"), "\\" + a.matchIndex;
      }
      function s(a) {
        return e(a.type, "anchor|characterClass|characterClassEscape|empty|group|quantifier|reference|value"), f(a);
      }
      function t(b) {
        e(b.type, "value");
        var c = b.kind,
            d = b.codePoint;
        switch (c) {
          case "controlLetter":
            return "\\c" + a(d + 64);
          case "hexadecimalEscape":
            return "\\x" + ("00" + d.toString(16).toUpperCase()).slice(-2);
          case "identifier":
            return "\\" + a(d);
          case "null":
            return "\\" + d;
          case "octal":
            return "\\" + d.toString(8);
          case "singleEscape":
            switch (d) {
              case 8:
                return "\\b";
              case 9:
                return "\\t";
              case 10:
                return "\\n";
              case 11:
                return "\\v";
              case 12:
                return "\\f";
              case 13:
                return "\\r";
              default:
                throw Error("Invalid codepoint: " + d);
            }
          case "symbol":
            return a(d);
          case "unicodeEscape":
            return "\\u" + ("0000" + d.toString(16).toUpperCase()).slice(-4);
          case "unicodeCodePointEscape":
            return "\\u{" + d.toString(16).toUpperCase() + "}";
          default:
            throw Error("Unsupported node kind: " + c);
        }
      }
      var u = {
        function: !0,
        object: !0
      },
          v = u[typeof window] && window || this,
          w = u[typeof c] && c,
          x = u[typeof d] && d && !d.nodeType && d,
          y = w && x && "object" == typeof global && global;
      !y || y.global !== y && y.window !== y && y.self !== y || (v = y);
      var z = String.fromCharCode,
          A = Math.floor;
      f.alternative = g, f.anchor = h, f.characterClass = j, f.characterClassEscape = k, f.characterClassRange = l, f.disjunction = n, f.dot = o, f.group = p, f.quantifier = q, f.reference = r, f.value = t, "function" == typeof b && "object" == typeof b.amd && b.amd ? b("fa", [], function() {
        return {generate: f};
      }) : w && x ? w.generate = f : v.regjsgen = {generate: f};
    }).call(this);
  }(), a.registerDynamic("fb", [], !0, function(a, b, c) {
    this || self;
    return function() {
      function a(a, b) {
        function c(b) {
          return b.raw = a.substring(b.range[0], b.range[1]), b;
        }
        function d(a, b) {
          return a.range[0] = b, c(a);
        }
        function e(a, b) {
          return c({
            type: "anchor",
            kind: a,
            range: [Z - b, Z]
          });
        }
        function f(a, b, d, e) {
          return c({
            type: "value",
            kind: a,
            codePoint: b,
            range: [d, e]
          });
        }
        function g(a, b, c, d) {
          return d = d || 0, f(a, b, Z - (c.length + d), Z);
        }
        function h(a) {
          var b = a[0],
              c = b.charCodeAt(0);
          if (Y) {
            var d;
            if (1 === b.length && c >= 55296 && c <= 56319 && (d = v().charCodeAt(0), d >= 56320 && d <= 57343))
              return Z++, f("symbol", 1024 * (c - 55296) + d - 56320 + 65536, Z - 2, Z);
          }
          return f("symbol", c, Z - 1, Z);
        }
        function i(a, b, d) {
          return c({
            type: "disjunction",
            body: a,
            range: [b, d]
          });
        }
        function j() {
          return c({
            type: "dot",
            range: [Z - 1, Z]
          });
        }
        function k(a) {
          return c({
            type: "characterClassEscape",
            value: a,
            range: [Z - 2, Z]
          });
        }
        function l(a) {
          return c({
            type: "reference",
            matchIndex: parseInt(a, 10),
            range: [Z - 1 - a.length, Z]
          });
        }
        function m(a, b, d, e) {
          return c({
            type: "group",
            behavior: a,
            body: b,
            range: [d, e]
          });
        }
        function n(a, b, d, e) {
          return null == e && (d = Z - 1, e = Z), c({
            type: "quantifier",
            min: a,
            max: b,
            greedy: !0,
            body: null,
            range: [d, e]
          });
        }
        function o(a, b, d) {
          return c({
            type: "alternative",
            body: a,
            range: [b, d]
          });
        }
        function p(a, b, d, e) {
          return c({
            type: "characterClass",
            body: a,
            negative: b,
            range: [d, e]
          });
        }
        function q(a, b, d, e) {
          return a.codePoint > b.codePoint && U("invalid range in character class", a.raw + "-" + b.raw, d, e), c({
            type: "characterClassRange",
            min: a,
            max: b,
            range: [d, e]
          });
        }
        function r(a) {
          return "alternative" === a.type ? a.body : [a];
        }
        function s(b) {
          b = b || 1;
          var c = a.substring(Z, Z + b);
          return Z += b || 1, c;
        }
        function t(a) {
          u(a) || U("character", a);
        }
        function u(b) {
          if (a.indexOf(b, Z) === Z)
            return s(b.length);
        }
        function v() {
          return a[Z];
        }
        function w(b) {
          return a.indexOf(b, Z) === Z;
        }
        function x(b) {
          return a[Z + 1] === b;
        }
        function y(b) {
          var c = a.substring(Z),
              d = c.match(b);
          return d && (d.range = [], d.range[0] = Z, s(d[0].length), d.range[1] = Z), d;
        }
        function z() {
          var a = [],
              b = Z;
          for (a.push(A()); u("|"); )
            a.push(A());
          return 1 === a.length ? a[0] : i(a, b, Z);
        }
        function A() {
          for (var a,
              b = [],
              c = Z; a = B(); )
            b.push(a);
          return 1 === b.length ? b[0] : o(b, c, Z);
        }
        function B() {
          if (Z >= a.length || w("|") || w(")"))
            return null;
          var b = D();
          if (b)
            return b;
          var c = F();
          c || U("Expected atom");
          var e = E() || !1;
          return e ? (e.body = r(c), d(e, c.range[0]), e) : c;
        }
        function C(a, b, c, d) {
          var e = null,
              f = Z;
          if (u(a))
            e = b;
          else {
            if (!u(c))
              return !1;
            e = d;
          }
          var g = z();
          g || U("Expected disjunction"), t(")");
          var h = m(e, r(g), f, Z);
          return "normal" == e && X && W++, h;
        }
        function D() {
          return u("^") ? e("start", 1) : u("$") ? e("end", 1) : u("\\b") ? e("boundary", 2) : u("\\B") ? e("not-boundary", 2) : C("(?=", "lookahead", "(?!", "negativeLookahead");
        }
        function E() {
          var a,
              b,
              c,
              d,
              e = Z;
          return u("*") ? b = n(0) : u("+") ? b = n(1) : u("?") ? b = n(0, 1) : (a = y(/^\{([0-9]+)\}/)) ? (c = parseInt(a[1], 10), b = n(c, c, a.range[0], a.range[1])) : (a = y(/^\{([0-9]+),\}/)) ? (c = parseInt(a[1], 10), b = n(c, void 0, a.range[0], a.range[1])) : (a = y(/^\{([0-9]+),([0-9]+)\}/)) && (c = parseInt(a[1], 10), d = parseInt(a[2], 10), c > d && U("numbers out of order in {} quantifier", "", e, Z), b = n(c, d, a.range[0], a.range[1])), b && u("?") && (b.greedy = !1, b.range[1] += 1), b;
        }
        function F() {
          var a;
          return (a = y(/^[^^$\\.*+?(){[|]/)) ? h(a) : u(".") ? j() : u("\\") ? (a = I(), a || U("atomEscape"), a) : (a = N()) ? a : C("(?:", "ignore", "(", "normal");
        }
        function G(a) {
          if (Y) {
            var b,
                d;
            if ("unicodeEscape" == a.kind && (b = a.codePoint) >= 55296 && b <= 56319 && w("\\") && x("u")) {
              var e = Z;
              Z++;
              var f = H();
              "unicodeEscape" == f.kind && (d = f.codePoint) >= 56320 && d <= 57343 ? (a.range[1] = f.range[1], a.codePoint = 1024 * (b - 55296) + d - 56320 + 65536, a.type = "value", a.kind = "unicodeCodePointEscape", c(a)) : Z = e;
            }
          }
          return a;
        }
        function H() {
          return I(!0);
        }
        function I(a) {
          var b,
              c = Z;
          if (b = J())
            return b;
          if (a) {
            if (u("b"))
              return g("singleEscape", 8, "\\b");
            u("B") && U("\\B not possible inside of CharacterClass", "", c);
          }
          return b = K();
        }
        function J() {
          var a,
              b;
          if (a = y(/^(?!0)\d+/)) {
            b = a[0];
            var c = parseInt(a[0], 10);
            return c <= W ? l(a[0]) : (V.push(c), s(-a[0].length), (a = y(/^[0-7]{1,3}/)) ? g("octal", parseInt(a[0], 8), a[0], 1) : (a = h(y(/^[89]/)), d(a, a.range[0] - 1)));
          }
          return (a = y(/^[0-7]{1,3}/)) ? (b = a[0], /^0{1,3}$/.test(b) ? g("null", 0, "0", b.length + 1) : g("octal", parseInt(b, 8), b, 1)) : !!(a = y(/^[dDsSwW]/)) && k(a[0]);
        }
        function K() {
          var a;
          if (a = y(/^[fnrtv]/)) {
            var b = 0;
            switch (a[0]) {
              case "t":
                b = 9;
                break;
              case "n":
                b = 10;
                break;
              case "v":
                b = 11;
                break;
              case "f":
                b = 12;
                break;
              case "r":
                b = 13;
            }
            return g("singleEscape", b, "\\" + a[0]);
          }
          return (a = y(/^c([a-zA-Z])/)) ? g("controlLetter", a[1].charCodeAt(0) % 32, a[1], 2) : (a = y(/^x([0-9a-fA-F]{2})/)) ? g("hexadecimalEscape", parseInt(a[1], 16), a[1], 2) : (a = y(/^u([0-9a-fA-F]{4})/)) ? G(g("unicodeEscape", parseInt(a[1], 16), a[1], 2)) : Y && (a = y(/^u\{([0-9a-fA-F]+)\}/)) ? g("unicodeCodePointEscape", parseInt(a[1], 16), a[1], 4) : M();
        }
        function L(a) {
          var b = new RegExp("[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԯԱ-Ֆՙա-և֑-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺࠀ-࠭ࡀ-࡛ࢠ-ࢲࣤ-ॣ०-९ॱ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-ৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୯ୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఀ-ఃఅ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-్ౕౖౘౙౠ-ౣ౦-౯ಁ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲഁ-ഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൎൗൠ-ൣ൦-൯ൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲෳก-ฺเ-๎๐-๙ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟ᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-៓ៗៜ៝០-៩᠋-᠍᠐-᠙ᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧙ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧ᪰-᪽ᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽ᳐-᳔᳒-ᳶ᳸᳹ᴀ-᷵᷼-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‌‍‿⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙゚ゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-ꚝꚟ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞭꞰꞱꟷ-ꠧꡀ-ꡳꢀ-꣄꣐-꣙꣠-ꣷꣻ꤀-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꧠ-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭟꭤꭥꯀ-ꯪ꯬꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻ︀-️︠-︭︳︴﹍-﹏ﹰ-ﹴﹶ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]");
          return 36 === a || 95 === a || a >= 65 && a <= 90 || a >= 97 && a <= 122 || a >= 48 && a <= 57 || 92 === a || a >= 128 && b.test(String.fromCharCode(a));
        }
        function M() {
          var a,
              b = "‌",
              c = "‍";
          return L(v()) ? u(b) ? g("identifier", 8204, b) : u(c) ? g("identifier", 8205, c) : null : (a = s(), g("identifier", a.charCodeAt(0), a, 1));
        }
        function N() {
          var a,
              b = Z;
          return (a = y(/^\[\^/)) ? (a = O(), t("]"), p(a, !0, b, Z)) : u("[") ? (a = O(), t("]"), p(a, !1, b, Z)) : null;
        }
        function O() {
          var a;
          return w("]") ? [] : (a = Q(), a || U("nonEmptyClassRanges"), a);
        }
        function P(a) {
          var b,
              c,
              d;
          if (w("-") && !x("]")) {
            t("-"), d = S(), d || U("classAtom"), c = Z;
            var e = O();
            return e || U("classRanges"), b = a.range[0], "empty" === e.type ? [q(a, d, b, c)] : [q(a, d, b, c)].concat(e);
          }
          return d = R(), d || U("nonEmptyClassRangesNoDash"), [a].concat(d);
        }
        function Q() {
          var a = S();
          return a || U("classAtom"), w("]") ? [a] : P(a);
        }
        function R() {
          var a = S();
          return a || U("classAtom"), w("]") ? a : P(a);
        }
        function S() {
          return u("-") ? h("-") : T();
        }
        function T() {
          var a;
          return (a = y(/^[^\\\]-]/)) ? h(a[0]) : u("\\") ? (a = H(), a || U("classEscape"), G(a)) : void 0;
        }
        function U(b, c, d, e) {
          d = null == d ? Z : d, e = null == e ? d : e;
          var f = Math.max(0, d - 10),
              g = Math.min(e + 10, a.length),
              h = "    " + a.substring(f, g),
              i = "    " + new Array(d - f + 1).join(" ") + "^";
          throw SyntaxError(b + " at position " + d + (c ? ": " + c : "") + "\n" + h + "\n" + i);
        }
        var V = [],
            W = 0,
            X = !0,
            Y = (b || "").indexOf("u") !== -1,
            Z = 0;
        a = String(a), "" === a && (a = "(?:)");
        var $ = z();
        $.range[1] !== a.length && U("Could not parse entire input - got stuck", "", $.range[1]);
        for (var _ = 0; _ < V.length; _++)
          if (V[_] <= W)
            return Z = 0, X = !1, z();
        return $;
      }
      var b = {parse: a};
      "undefined" != typeof c && c.exports ? c.exports = b : window.regjsparser = b;
    }(), c.exports;
  }), a.registerDynamic("fc", [], !1, function() {
    return {
      75: 8490,
      83: 383,
      107: 8490,
      115: 383,
      181: 924,
      197: 8491,
      383: 83,
      452: 453,
      453: 452,
      455: 456,
      456: 455,
      458: 459,
      459: 458,
      497: 498,
      498: 497,
      837: 8126,
      914: 976,
      917: 1013,
      920: 1012,
      921: 8126,
      922: 1008,
      924: 181,
      928: 982,
      929: 1009,
      931: 962,
      934: 981,
      937: 8486,
      962: 931,
      976: 914,
      977: 1012,
      981: 934,
      982: 928,
      1008: 922,
      1009: 929,
      1012: [920, 977],
      1013: 917,
      7776: 7835,
      7835: 7776,
      8126: [837, 921],
      8486: 937,
      8490: 75,
      8491: 197,
      66560: 66600,
      66561: 66601,
      66562: 66602,
      66563: 66603,
      66564: 66604,
      66565: 66605,
      66566: 66606,
      66567: 66607,
      66568: 66608,
      66569: 66609,
      66570: 66610,
      66571: 66611,
      66572: 66612,
      66573: 66613,
      66574: 66614,
      66575: 66615,
      66576: 66616,
      66577: 66617,
      66578: 66618,
      66579: 66619,
      66580: 66620,
      66581: 66621,
      66582: 66622,
      66583: 66623,
      66584: 66624,
      66585: 66625,
      66586: 66626,
      66587: 66627,
      66588: 66628,
      66589: 66629,
      66590: 66630,
      66591: 66631,
      66592: 66632,
      66593: 66633,
      66594: 66634,
      66595: 66635,
      66596: 66636,
      66597: 66637,
      66598: 66638,
      66599: 66639,
      66600: 66560,
      66601: 66561,
      66602: 66562,
      66603: 66563,
      66604: 66564,
      66605: 66565,
      66606: 66566,
      66607: 66567,
      66608: 66568,
      66609: 66569,
      66610: 66570,
      66611: 66571,
      66612: 66572,
      66613: 66573,
      66614: 66574,
      66615: 66575,
      66616: 66576,
      66617: 66577,
      66618: 66578,
      66619: 66579,
      66620: 66580,
      66621: 66581,
      66622: 66582,
      66623: 66583,
      66624: 66584,
      66625: 66585,
      66626: 66586,
      66627: 66587,
      66628: 66588,
      66629: 66589,
      66630: 66590,
      66631: 66591,
      66632: 66592,
      66633: 66593,
      66634: 66594,
      66635: 66595,
      66636: 66596,
      66637: 66597,
      66638: 66598,
      66639: 66599,
      68736: 68800,
      68737: 68801,
      68738: 68802,
      68739: 68803,
      68740: 68804,
      68741: 68805,
      68742: 68806,
      68743: 68807,
      68744: 68808,
      68745: 68809,
      68746: 68810,
      68747: 68811,
      68748: 68812,
      68749: 68813,
      68750: 68814,
      68751: 68815,
      68752: 68816,
      68753: 68817,
      68754: 68818,
      68755: 68819,
      68756: 68820,
      68757: 68821,
      68758: 68822,
      68759: 68823,
      68760: 68824,
      68761: 68825,
      68762: 68826,
      68763: 68827,
      68764: 68828,
      68765: 68829,
      68766: 68830,
      68767: 68831,
      68768: 68832,
      68769: 68833,
      68770: 68834,
      68771: 68835,
      68772: 68836,
      68773: 68837,
      68774: 68838,
      68775: 68839,
      68776: 68840,
      68777: 68841,
      68778: 68842,
      68779: 68843,
      68780: 68844,
      68781: 68845,
      68782: 68846,
      68783: 68847,
      68784: 68848,
      68785: 68849,
      68786: 68850,
      68800: 68736,
      68801: 68737,
      68802: 68738,
      68803: 68739,
      68804: 68740,
      68805: 68741,
      68806: 68742,
      68807: 68743,
      68808: 68744,
      68809: 68745,
      68810: 68746,
      68811: 68747,
      68812: 68748,
      68813: 68749,
      68814: 68750,
      68815: 68751,
      68816: 68752,
      68817: 68753,
      68818: 68754,
      68819: 68755,
      68820: 68756,
      68821: 68757,
      68822: 68758,
      68823: 68759,
      68824: 68760,
      68825: 68761,
      68826: 68762,
      68827: 68763,
      68828: 68764,
      68829: 68765,
      68830: 68766,
      68831: 68767,
      68832: 68768,
      68833: 68769,
      68834: 68770,
      68835: 68771,
      68836: 68772,
      68837: 68773,
      68838: 68774,
      68839: 68775,
      68840: 68776,
      68841: 68777,
      68842: 68778,
      68843: 68779,
      68844: 68780,
      68845: 68781,
      68846: 68782,
      68847: 68783,
      68848: 68784,
      68849: 68785,
      68850: 68786,
      71840: 71872,
      71841: 71873,
      71842: 71874,
      71843: 71875,
      71844: 71876,
      71845: 71877,
      71846: 71878,
      71847: 71879,
      71848: 71880,
      71849: 71881,
      71850: 71882,
      71851: 71883,
      71852: 71884,
      71853: 71885,
      71854: 71886,
      71855: 71887,
      71856: 71888,
      71857: 71889,
      71858: 71890,
      71859: 71891,
      71860: 71892,
      71861: 71893,
      71862: 71894,
      71863: 71895,
      71864: 71896,
      71865: 71897,
      71866: 71898,
      71867: 71899,
      71868: 71900,
      71869: 71901,
      71870: 71902,
      71871: 71903,
      71872: 71840,
      71873: 71841,
      71874: 71842,
      71875: 71843,
      71876: 71844,
      71877: 71845,
      71878: 71846,
      71879: 71847,
      71880: 71848,
      71881: 71849,
      71882: 71850,
      71883: 71851,
      71884: 71852,
      71885: 71853,
      71886: 71854,
      71887: 71855,
      71888: 71856,
      71889: 71857,
      71890: 71858,
      71891: 71859,
      71892: 71860,
      71893: 71861,
      71894: 71862,
      71895: 71863,
      71896: 71864,
      71897: 71865,
      71898: 71866,
      71899: 71867,
      71900: 71868,
      71901: 71869,
      71902: 71870,
      71903: 71871
    };
  }), a.registerDynamic("fd", [], !0, function(a, b, c) {
    var d,
        e = this || self;
    return function(a) {
      var f = "object" == typeof b && b,
          g = "object" == typeof c && c && c.exports == f && c,
          h = "object" == typeof e && e;
      h.global !== h && h.window !== h || (a = h);
      var i = {
        rangeOrder: "A range’s `stop` value must be greater than or equal to the `start` value.",
        codePointRange: "Invalid code point value. Code points range from U+000000 to U+10FFFF."
      },
          j = 55296,
          k = 56319,
          l = 56320,
          m = 57343,
          n = /\\x00([^0123456789]|$)/g,
          o = {},
          p = o.hasOwnProperty,
          q = function(a, b) {
            var c;
            for (c in b)
              p.call(b, c) && (a[c] = b[c]);
            return a;
          },
          r = function(a, b) {
            for (var c = -1,
                d = a.length; ++c < d; )
              b(a[c], c);
          },
          s = o.toString,
          t = function(a) {
            return "[object Array]" == s.call(a);
          },
          u = function(a) {
            return "number" == typeof a || "[object Number]" == s.call(a);
          },
          v = "0000",
          w = function(a, b) {
            var c = String(a);
            return c.length < b ? (v + c).slice(-b) : c;
          },
          x = function(a) {
            return Number(a).toString(16).toUpperCase();
          },
          y = [].slice,
          z = function(a) {
            for (var b,
                c = -1,
                d = a.length,
                e = d - 1,
                f = [],
                g = !0,
                h = 0; ++c < d; )
              if (b = a[c], g)
                f.push(b), h = b, g = !1;
              else if (b == h + 1) {
                if (c != e) {
                  h = b;
                  continue;
                }
                g = !0, f.push(b + 1);
              } else
                f.push(h + 1, b), h = b;
            return g || f.push(b + 1), f;
          },
          A = function(a, b) {
            for (var c,
                d,
                e = 0,
                f = a.length; e < f; ) {
              if (c = a[e], d = a[e + 1], b >= c && b < d)
                return b == c ? d == c + 1 ? (a.splice(e, 2), a) : (a[e] = b + 1, a) : b == d - 1 ? (a[e + 1] = b, a) : (a.splice(e, 2, c, b, b + 1, d), a);
              e += 2;
            }
            return a;
          },
          B = function(a, b, c) {
            if (c < b)
              throw Error(i.rangeOrder);
            for (var d,
                e,
                f = 0; f < a.length; ) {
              if (d = a[f], e = a[f + 1] - 1, d > c)
                return a;
              if (b <= d && c >= e)
                a.splice(f, 2);
              else {
                if (b >= d && c < e)
                  return b == d ? (a[f] = c + 1, a[f + 1] = e + 1, a) : (a.splice(f, 2, d, b, c + 1, e + 1), a);
                if (b >= d && b <= e)
                  a[f + 1] = b;
                else if (c >= d && c <= e)
                  return a[f] = c + 1, a;
                f += 2;
              }
            }
            return a;
          },
          C = function(a, b) {
            var c,
                d,
                e = 0,
                f = null,
                g = a.length;
            if (b < 0 || b > 1114111)
              throw RangeError(i.codePointRange);
            for (; e < g; ) {
              if (c = a[e], d = a[e + 1], b >= c && b < d)
                return a;
              if (b == c - 1)
                return a[e] = b, a;
              if (c > b)
                return a.splice(null != f ? f + 2 : 0, 0, b, b + 1), a;
              if (b == d)
                return b + 1 == a[e + 2] ? (a.splice(e, 4, c, a[e + 3]), a) : (a[e + 1] = b + 1, a);
              f = e, e += 2;
            }
            return a.push(b, b + 1), a;
          },
          D = function(a, b) {
            for (var c,
                d,
                e = 0,
                f = a.slice(),
                g = b.length; e < g; )
              c = b[e], d = b[e + 1] - 1, f = c == d ? C(f, c) : F(f, c, d), e += 2;
            return f;
          },
          E = function(a, b) {
            for (var c,
                d,
                e = 0,
                f = a.slice(),
                g = b.length; e < g; )
              c = b[e], d = b[e + 1] - 1, f = c == d ? A(f, c) : B(f, c, d), e += 2;
            return f;
          },
          F = function(a, b, c) {
            if (c < b)
              throw Error(i.rangeOrder);
            if (b < 0 || b > 1114111 || c < 0 || c > 1114111)
              throw RangeError(i.codePointRange);
            for (var d,
                e,
                f = 0,
                g = !1,
                h = a.length; f < h; ) {
              if (d = a[f], e = a[f + 1], g) {
                if (d == c + 1)
                  return a.splice(f - 1, 2), a;
                if (d > c)
                  return a;
                d >= b && d <= c && (e > b && e - 1 <= c ? (a.splice(f, 2), f -= 2) : (a.splice(f - 1, 2), f -= 2));
              } else {
                if (d == c + 1)
                  return a[f] = b, a;
                if (d > c)
                  return a.splice(f, 0, b, c + 1), a;
                if (b >= d && b < e && c + 1 <= e)
                  return a;
                b >= d && b < e || e == b ? (a[f + 1] = c + 1, g = !0) : b <= d && c + 1 >= e && (a[f] = b, a[f + 1] = c + 1, g = !0);
              }
              f += 2;
            }
            return g || a.push(b, c + 1), a;
          },
          G = function(a, b) {
            var c = 0,
                d = a.length,
                e = a[c],
                f = a[d - 1];
            if (d >= 2 && (b < e || b > f))
              return !1;
            for (; c < d; ) {
              if (e = a[c], f = a[c + 1], b >= e && b < f)
                return !0;
              c += 2;
            }
            return !1;
          },
          H = function(a, b) {
            for (var c,
                d = 0,
                e = b.length,
                f = []; d < e; )
              c = b[d], G(a, c) && f.push(c), ++d;
            return z(f);
          },
          I = function(a) {
            return !a.length;
          },
          J = function(a) {
            return 2 == a.length && a[0] + 1 == a[1];
          },
          K = function(a) {
            for (var b,
                c,
                d = 0,
                e = [],
                f = a.length; d < f; ) {
              for (b = a[d], c = a[d + 1]; b < c; )
                e.push(b), ++b;
              d += 2;
            }
            return e;
          },
          L = Math.floor,
          M = function(a) {
            return parseInt(L((a - 65536) / 1024) + j, 10);
          },
          N = function(a) {
            return parseInt((a - 65536) % 1024 + l, 10);
          },
          O = String.fromCharCode,
          P = function(a) {
            var b;
            return b = 9 == a ? "\\t" : 10 == a ? "\\n" : 12 == a ? "\\f" : 13 == a ? "\\r" : 92 == a ? "\\\\" : 36 == a || a >= 40 && a <= 43 || 45 == a || 46 == a || 63 == a || a >= 91 && a <= 94 || a >= 123 && a <= 125 ? "\\" + O(a) : a >= 32 && a <= 126 ? O(a) : a <= 255 ? "\\x" + w(x(a), 2) : "\\u" + w(x(a), 4);
          },
          Q = function(a) {
            return a <= 65535 ? P(a) : "\\u{" + a.toString(16).toUpperCase() + "}";
          },
          R = function(a) {
            var b,
                c = a.length,
                d = a.charCodeAt(0);
            return d >= j && d <= k && c > 1 ? (b = a.charCodeAt(1), 1024 * (d - j) + b - l + 65536) : d;
          },
          S = function(a) {
            var b,
                c,
                d = "",
                e = 0,
                f = a.length;
            if (J(a))
              return P(a[0]);
            for (; e < f; )
              b = a[e], c = a[e + 1] - 1, d += b == c ? P(b) : b + 1 == c ? P(b) + P(c) : P(b) + "-" + P(c), e += 2;
            return "[" + d + "]";
          },
          T = function(a) {
            var b,
                c,
                d = "",
                e = 0,
                f = a.length;
            if (J(a))
              return Q(a[0]);
            for (; e < f; )
              b = a[e], c = a[e + 1] - 1, d += b == c ? Q(b) : b + 1 == c ? Q(b) + Q(c) : Q(b) + "-" + Q(c), e += 2;
            return "[" + d + "]";
          },
          U = function(a) {
            for (var b,
                c,
                d = [],
                e = [],
                f = [],
                g = [],
                h = 0,
                i = a.length; h < i; )
              b = a[h], c = a[h + 1] - 1, b < j ? (c < j && f.push(b, c + 1), c >= j && c <= k && (f.push(b, j), d.push(j, c + 1)), c >= l && c <= m && (f.push(b, j), d.push(j, k + 1), e.push(l, c + 1)), c > m && (f.push(b, j), d.push(j, k + 1), e.push(l, m + 1), c <= 65535 ? f.push(m + 1, c + 1) : (f.push(m + 1, 65536), g.push(65536, c + 1)))) : b >= j && b <= k ? (c >= j && c <= k && d.push(b, c + 1), c >= l && c <= m && (d.push(b, k + 1), e.push(l, c + 1)), c > m && (d.push(b, k + 1), e.push(l, m + 1), c <= 65535 ? f.push(m + 1, c + 1) : (f.push(m + 1, 65536), g.push(65536, c + 1)))) : b >= l && b <= m ? (c >= l && c <= m && e.push(b, c + 1), c > m && (e.push(b, m + 1), c <= 65535 ? f.push(m + 1, c + 1) : (f.push(m + 1, 65536), g.push(65536, c + 1)))) : b > m && b <= 65535 ? c <= 65535 ? f.push(b, c + 1) : (f.push(b, 65536), g.push(65536, c + 1)) : g.push(b, c + 1), h += 2;
            return {
              loneHighSurrogates: d,
              loneLowSurrogates: e,
              bmp: f,
              astral: g
            };
          },
          V = function(a) {
            for (var b,
                c,
                d,
                e,
                f,
                g,
                h = [],
                i = [],
                j = !1,
                k = -1,
                l = a.length; ++k < l; )
              if (b = a[k], c = a[k + 1]) {
                for (d = b[0], e = b[1], f = c[0], g = c[1], i = e; f && d[0] == f[0] && d[1] == f[1]; )
                  i = J(g) ? C(i, g[0]) : F(i, g[0], g[1] - 1), ++k, b = a[k], d = b[0], e = b[1], c = a[k + 1], f = c && c[0], g = c && c[1], j = !0;
                h.push([d, j ? i : e]), j = !1;
              } else
                h.push(b);
            return W(h);
          },
          W = function(a) {
            if (1 == a.length)
              return a;
            for (var b = -1,
                c = -1; ++b < a.length; ) {
              var d = a[b],
                  e = d[1],
                  f = e[0],
                  g = e[1];
              for (c = b; ++c < a.length; ) {
                var h = a[c],
                    i = h[1],
                    j = i[0],
                    k = i[1];
                f == j && g == k && (J(h[0]) ? d[0] = C(d[0], h[0][0]) : d[0] = F(d[0], h[0][0], h[0][1] - 1), a.splice(c, 1), --c);
              }
            }
            return a;
          },
          X = function(a) {
            if (!a.length)
              return [];
            for (var b,
                c,
                d,
                e,
                f,
                g,
                h = 0,
                i = 0,
                j = 0,
                k = [],
                n = a.length; h < n; ) {
              b = a[h], c = a[h + 1] - 1, d = M(b), e = N(b), f = M(c), g = N(c);
              var o = e == l,
                  p = g == m,
                  q = !1;
              d == f || o && p ? (k.push([[d, f + 1], [e, g + 1]]), q = !0) : k.push([[d, d + 1], [e, m + 1]]), !q && d + 1 < f && (p ? (k.push([[d + 1, f + 1], [l, g + 1]]), q = !0) : k.push([[d + 1, f], [l, m + 1]])), q || k.push([[f, f + 1], [l, g + 1]]), i = d, j = f, h += 2;
            }
            return V(k);
          },
          Y = function(a) {
            var b = [];
            return r(a, function(a) {
              var c = a[0],
                  d = a[1];
              b.push(S(c) + S(d));
            }), b.join("|");
          },
          Z = function(a, b, c) {
            if (c)
              return T(a);
            var d = [],
                e = U(a),
                f = e.loneHighSurrogates,
                g = e.loneLowSurrogates,
                h = e.bmp,
                i = e.astral,
                j = (!I(e.astral), !I(f)),
                k = !I(g),
                l = X(i);
            return b && (h = D(h, f), j = !1, h = D(h, g), k = !1), I(h) || d.push(S(h)), l.length && d.push(Y(l)), j && d.push(S(f) + "(?![\\uDC00-\\uDFFF])"), k && d.push("(?:[^\\uD800-\\uDBFF]|^)" + S(g)), d.join("|");
          },
          $ = function(a) {
            return arguments.length > 1 && (a = y.call(arguments)), this instanceof $ ? (this.data = [], a ? this.add(a) : this) : (new $).add(a);
          };
      $.version = "1.3.1";
      var _ = $.prototype;
      q(_, {
        add: function(a) {
          var b = this;
          return null == a ? b : a instanceof $ ? (b.data = D(b.data, a.data), b) : (arguments.length > 1 && (a = y.call(arguments)), t(a) ? (r(a, function(a) {
            b.add(a);
          }), b) : (b.data = C(b.data, u(a) ? a : R(a)), b));
        },
        remove: function(a) {
          var b = this;
          return null == a ? b : a instanceof $ ? (b.data = E(b.data, a.data), b) : (arguments.length > 1 && (a = y.call(arguments)), t(a) ? (r(a, function(a) {
            b.remove(a);
          }), b) : (b.data = A(b.data, u(a) ? a : R(a)), b));
        },
        addRange: function(a, b) {
          var c = this;
          return c.data = F(c.data, u(a) ? a : R(a), u(b) ? b : R(b)), c;
        },
        removeRange: function(a, b) {
          var c = this,
              d = u(a) ? a : R(a),
              e = u(b) ? b : R(b);
          return c.data = B(c.data, d, e), c;
        },
        intersection: function(a) {
          var b = this,
              c = a instanceof $ ? K(a.data) : a;
          return b.data = H(b.data, c), b;
        },
        contains: function(a) {
          return G(this.data, u(a) ? a : R(a));
        },
        clone: function() {
          var a = new $;
          return a.data = this.data.slice(0), a;
        },
        toString: function(a) {
          var b = Z(this.data, !!a && a.bmpOnly, !!a && a.hasUnicodeFlag);
          return b ? b.replace(n, "\\0$1") : "[]";
        },
        toRegExp: function(a) {
          var b = this.toString(a && a.indexOf("u") != -1 ? {hasUnicodeFlag: !0} : null);
          return RegExp(b, a || "");
        },
        valueOf: function() {
          return K(this.data);
        }
      }), _.toArray = _.valueOf, "function" == typeof d && "object" == typeof d.amd && d.amd ? d(function() {
        return $;
      }) : f && !f.nodeType ? g ? g.exports = $ : f.regenerate = $ : a.regenerate = $;
    }(this), c.exports;
  }), a.registerDynamic("fe", ["fd"], !0, function(a, b, c) {
    var d = (this || self, a("fd"));
    return b.REGULAR = {
      d: d().addRange(48, 57),
      D: d().addRange(0, 47).addRange(58, 65535),
      s: d(32, 160, 5760, 8239, 8287, 12288, 65279).addRange(9, 13).addRange(8192, 8202).addRange(8232, 8233),
      S: d().addRange(0, 8).addRange(14, 31).addRange(33, 159).addRange(161, 5759).addRange(5761, 8191).addRange(8203, 8231).addRange(8234, 8238).addRange(8240, 8286).addRange(8288, 12287).addRange(12289, 65278).addRange(65280, 65535),
      w: d(95).addRange(48, 57).addRange(65, 90).addRange(97, 122),
      W: d(96).addRange(0, 47).addRange(58, 64).addRange(91, 94).addRange(123, 65535)
    }, b.UNICODE = {
      d: d().addRange(48, 57),
      D: d().addRange(0, 47).addRange(58, 1114111),
      s: d(32, 160, 5760, 8239, 8287, 12288, 65279).addRange(9, 13).addRange(8192, 8202).addRange(8232, 8233),
      S: d().addRange(0, 8).addRange(14, 31).addRange(33, 159).addRange(161, 5759).addRange(5761, 8191).addRange(8203, 8231).addRange(8234, 8238).addRange(8240, 8286).addRange(8288, 12287).addRange(12289, 65278).addRange(65280, 1114111),
      w: d(95).addRange(48, 57).addRange(65, 90).addRange(97, 122),
      W: d(96).addRange(0, 47).addRange(58, 64).addRange(91, 94).addRange(123, 1114111)
    }, b.UNICODE_IGNORE_CASE = {
      d: d().addRange(48, 57),
      D: d().addRange(0, 47).addRange(58, 1114111),
      s: d(32, 160, 5760, 8239, 8287, 12288, 65279).addRange(9, 13).addRange(8192, 8202).addRange(8232, 8233),
      S: d().addRange(0, 8).addRange(14, 31).addRange(33, 159).addRange(161, 5759).addRange(5761, 8191).addRange(8203, 8231).addRange(8234, 8238).addRange(8240, 8286).addRange(8288, 12287).addRange(12289, 65278).addRange(65280, 1114111),
      w: d(95, 383, 8490).addRange(48, 57).addRange(65, 90).addRange(97, 122),
      W: d(75, 83, 96).addRange(0, 47).addRange(58, 64).addRange(91, 94).addRange(123, 1114111)
    }, c.exports;
  }), a.registerDynamic("ff", ["fa", "fb", "fd", "fc", "fe"], !0, function(a, b, c) {
    function d(a) {
      return x ? w ? p.UNICODE_IGNORE_CASE[a] : p.UNICODE[a] : p.REGULAR[a];
    }
    function e(a, b) {
      return r.call(a, b);
    }
    function f(a, b) {
      for (var c in b)
        a[c] = b[c];
    }
    function g(a, b) {
      if (b) {
        var c = m(b, "");
        switch (c.type) {
          case "characterClass":
          case "group":
          case "value":
            break;
          default:
            c = h(c, b);
        }
        f(a, c);
      }
    }
    function h(a, b) {
      return {
        type: "group",
        behavior: "ignore",
        body: [a],
        raw: "(?:" + b + ")"
      };
    }
    function i(a) {
      return !!e(o, a) && o[a];
    }
    function j(a) {
      var b = n();
      a.body.forEach(function(a) {
        switch (a.type) {
          case "value":
            if (b.add(a.codePoint), w && x) {
              var c = i(a.codePoint);
              c && b.add(c);
            }
            break;
          case "characterClassRange":
            var e = a.min.codePoint,
                f = a.max.codePoint;
            b.addRange(e, f), w && x && b.iuAddRange(e, f);
            break;
          case "characterClassEscape":
            b.add(d(a.value));
            break;
          default:
            throw Error("Unknown term type: " + a.type);
        }
      });
      return a.negative && (b = (x ? s : t).clone().remove(b)), g(a, b.toString()), a;
    }
    function k(a) {
      switch (a.type) {
        case "dot":
          g(a, (x ? u : v).toString());
          break;
        case "characterClass":
          a = j(a);
          break;
        case "characterClassEscape":
          g(a, d(a.value).toString());
          break;
        case "alternative":
        case "disjunction":
        case "group":
        case "quantifier":
          a.body = a.body.map(k);
          break;
        case "value":
          var b = a.codePoint,
              c = n(b);
          if (w && x) {
            var e = i(b);
            e && c.add(e);
          }
          g(a, c.toString());
          break;
        case "anchor":
        case "empty":
        case "group":
        case "reference":
          break;
        default:
          throw Error("Unknown term type: " + a.type);
      }
      return a;
    }
    var l = (this || self, a("fa").generate),
        m = a("fb").parse,
        n = a("fd"),
        o = a("fc"),
        p = a("fe"),
        q = {},
        r = q.hasOwnProperty,
        s = n().addRange(0, 1114111),
        t = n().addRange(0, 65535),
        u = s.clone().remove(10, 13, 8232, 8233),
        v = u.clone().intersection(t);
    n.prototype.iuAddRange = function(a, b) {
      var c = this;
      do {
        var d = i(a);
        d && c.add(d);
      } while (++a <= b);
      return c;
    };
    var w = !1,
        x = !1;
    return c.exports = function(a, b) {
      var c = m(a, b);
      return w = !!b && b.indexOf("i") > -1, x = !!b && b.indexOf("u") > -1, f(c, k(c)), l(c);
    }, c.exports;
  }), a.registerDynamic("100", [], !0, function(a, b, c) {
    function d(a, b, c, d) {
      for (var e = c - 1,
          f = a.length; ++e < f; )
        if (d(a[e], b))
          return e;
      return -1;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("101", ["51", "41", "100", "74", "99"], !0, function(a, b, c) {
    function d(a, b, c, d) {
      var j = d ? g : f,
          l = -1,
          m = b.length,
          n = a;
      for (a === b && (b = i(b)), c && (n = e(a, h(c))); ++l < m; )
        for (var o = 0,
            p = b[l],
            q = c ? c(p) : p; (o = j(n, q, o, d)) > -1; )
          n !== a && k.call(n, o, 1), k.call(a, o, 1);
      return a;
    }
    var e = (this || self, a("51")),
        f = a("41"),
        g = a("100"),
        h = a("74"),
        i = a("99"),
        j = Array.prototype,
        k = j.splice;
    return c.exports = d, c.exports;
  }), a.registerDynamic("102", ["101"], !0, function(a, b, c) {
    function d(a, b) {
      return a && a.length && b && b.length ? e(a, b) : a;
    }
    var e = (this || self, a("101"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("103", ["77", "102"], !0, function(a, b, c) {
    var d = (this || self, a("77")),
        e = a("102"),
        f = d(e);
    return c.exports = f, c.exports;
  }), a.registerDynamic("f9", ["103", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a, b) {
      return k.isRegExpLiteral(a) && a.flags.indexOf(b) >= 0;
    }
    function g(a, b) {
      var c = a.flags.split("");
      a.flags.indexOf(b) < 0 || ((0, i.default)(c, b), a.flags = c.join(""));
    }
    this || self;
    b.__esModule = !0, b.is = f, b.pullFlag = g;
    var h = a("103"),
        i = e(h),
        j = a("9"),
        k = d(j);
    return c.exports;
  }), a.registerDynamic("104", ["ff", "f9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0, b.default = function() {
      return {visitor: {RegExpLiteral: function(a) {
            var b = a.node;
            i.is(b, "u") && (b.pattern = (0, g.default)(b.pattern, b.flags), i.pullFlag(b, "u"));
          }}};
    };
    var f = a("ff"),
        g = e(f),
        h = a("f9"),
        i = d(h);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("105", ["f"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("f"),
        f = d(e);
    return b.default = function(a) {
      var b = a.messages;
      return {visitor: {Scope: function(a) {
            var c = a.scope;
            for (var d in c.bindings) {
              var e = c.bindings[d];
              if ("const" === e.kind || "module" === e.kind)
                for (var g = e.constantViolations,
                    h = Array.isArray(g),
                    i = 0,
                    g = h ? g : (0, f.default)(g); ; ) {
                  var j;
                  if (h) {
                    if (i >= g.length)
                      break;
                    j = g[i++];
                  } else {
                    if (i = g.next(), i.done)
                      break;
                    j = i.value;
                  }
                  var k = j;
                  throw k.buildCodeFrameError(b.get("readOnly", d));
                }
            }
          }}};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("106", ["f"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("f"),
        f = d(e);
    return b.default = function(a) {
      function b(a, b, c) {
        return c.opts.loose && !e.isIdentifier(a.argument, {name: "arguments"}) ? a.argument : b.toArray(a.argument, !0);
      }
      function c(a) {
        for (var b = 0; b < a.length; b++)
          if (e.isSpreadElement(a[b]))
            return !0;
        return !1;
      }
      function d(a, c, d) {
        function g() {
          i.length && (h.push(e.arrayExpression(i)), i = []);
        }
        for (var h = [],
            i = [],
            j = a,
            k = Array.isArray(j),
            l = 0,
            j = k ? j : (0, f.default)(j); ; ) {
          var m;
          if (k) {
            if (l >= j.length)
              break;
            m = j[l++];
          } else {
            if (l = j.next(), l.done)
              break;
            m = l.value;
          }
          var n = m;
          e.isSpreadElement(n) ? (g(), h.push(b(n, c, d))) : i.push(n);
        }
        return g(), h;
      }
      var e = a.types;
      return {visitor: {
          ArrayExpression: function(a, b) {
            var f = a.node,
                g = a.scope,
                h = f.elements;
            if (c(h)) {
              var i = d(h, g, b),
                  j = i.shift();
              e.isArrayExpression(j) || (i.unshift(j), j = e.arrayExpression([])), a.replaceWith(e.callExpression(e.memberExpression(j, e.identifier("concat")), i));
            }
          },
          CallExpression: function(a, b) {
            var f = a.node,
                g = a.scope,
                h = f.arguments;
            if (c(h)) {
              var i = a.get("callee");
              if (!i.isSuper()) {
                var j = e.identifier("undefined");
                f.arguments = [];
                var k = void 0;
                k = 1 === h.length && "arguments" === h[0].argument.name ? [h[0].argument] : d(h, g, b);
                var l = k.shift();
                k.length ? f.arguments.push(e.callExpression(e.memberExpression(l, e.identifier("concat")), k)) : f.arguments.push(l);
                var m = f.callee;
                if (i.isMemberExpression()) {
                  var n = g.maybeGenerateMemoised(m.object);
                  n ? (m.object = e.assignmentExpression("=", n, m.object), j = n) : j = m.object, e.appendToMemberExpression(m, e.identifier("apply"));
                } else
                  f.callee = e.memberExpression(f.callee, e.identifier("apply"));
                e.isSuper(j) && (j = e.thisExpression()), f.arguments.unshift(j);
              }
            }
          },
          NewExpression: function(a, b) {
            var f = a.node,
                g = a.scope,
                h = f.arguments;
            if (c(h)) {
              var i = d(h, g, b),
                  j = e.arrayExpression([e.nullLiteral()]);
              h = e.callExpression(e.memberExpression(j, e.identifier("concat")), i), a.replaceWith(e.newExpression(e.callExpression(e.memberExpression(e.memberExpression(e.memberExpression(e.identifier("Function"), e.identifier("prototype")), e.identifier("bind")), e.identifier("apply")), [f.callee, h]), []));
            }
          }
        }};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("107", ["9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    this || self;
    b.__esModule = !0, b.visitor = void 0;
    var e = a("9"),
        f = d(e);
    b.visitor = {Function: function(a) {
        for (var b = a.get("params"),
            c = f.isRestElement(b[b.length - 1]) ? 1 : 0,
            d = b.length - c,
            e = 0; e < d; e++) {
          var g = b[e];
          if (g.isArrayPattern() || g.isObjectPattern()) {
            var h = a.scope.generateUidIdentifier("ref"),
                i = f.variableDeclaration("let", [f.variableDeclarator(g.node, h)]);
            i._blockHoist = d - e, a.ensureBlock(), a.get("body").unshiftContainer("body", i), g.replaceWith(h);
          }
        }
      }};
    return c.exports;
  }), a.registerDynamic("f2", ["9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    this || self;
    b.__esModule = !0, b.default = function(a) {
      for (var b = a.params,
          c = 0; c < b.length; c++) {
        var d = b[c];
        if (f.isAssignmentPattern(d) || f.isRestElement(d))
          return c;
      }
      return b.length;
    };
    var e = a("9"),
        f = d(e);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("bf", ["f", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var f = a("f"),
        g = e(f);
    b.default = function(a, b) {
      var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "var";
      a.traverse(j, {
        kind: c,
        emit: b
      });
    };
    var h = a("9"),
        i = d(h),
        j = {
          Scope: function(a, b) {
            "let" === b.kind && a.skip();
          },
          Function: function(a) {
            a.skip();
          },
          VariableDeclaration: function(a, b) {
            if (!b.kind || a.node.kind === b.kind) {
              for (var c = [],
                  d = a.get("declarations"),
                  e = void 0,
                  f = d,
                  h = Array.isArray(f),
                  j = 0,
                  f = h ? f : (0, g.default)(f); ; ) {
                var k;
                if (h) {
                  if (j >= f.length)
                    break;
                  k = f[j++];
                } else {
                  if (j = f.next(), j.done)
                    break;
                  k = j.value;
                }
                var l = k;
                e = l.node.id, l.node.init && c.push(i.expressionStatement(i.assignmentExpression("=", l.node.id, l.node.init)));
                for (var m in l.getBindingIdentifiers())
                  b.emit(i.identifier(m), m);
              }
              a.parentPath.isFor({left: a.node}) ? a.replaceWith(e) : a.replaceWithMultiple(c);
            }
          }
        };
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("108", ["bf", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0, b.default = function(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : a.scope,
          c = a.node,
          d = i.functionExpression(null, [], c.body, c.generator, c.async),
          e = d,
          f = [];
      (0, g.default)(a, function(a) {
        return b.push({id: a});
      });
      var h = {
        foundThis: !1,
        foundArguments: !1
      };
      a.traverse(j, h), h.foundArguments && (e = i.memberExpression(d, i.identifier("apply")), f = [], h.foundThis && f.push(i.thisExpression()), h.foundArguments && (h.foundThis || f.push(i.nullLiteral()), f.push(i.identifier("arguments"))));
      var k = i.callExpression(e, f);
      return c.generator && (k = i.yieldExpression(k, !0)), i.returnStatement(k);
    };
    var f = a("bf"),
        g = e(f),
        h = a("9"),
        i = d(h),
        j = {
          enter: function(a, b) {
            a.isThisExpression() && (b.foundThis = !0), a.isReferencedIdentifier({name: "arguments"}) && (b.foundArguments = !0);
          },
          Function: function(a) {
            a.skip();
          }
        };
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("109", ["f", "f2", "108", "7", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      for (var b = a.params,
          c = Array.isArray(b),
          d = 0,
          b = c ? b : (0, i.default)(b); ; ) {
        var e;
        if (c) {
          if (d >= b.length)
            break;
          e = b[d++];
        } else {
          if (d = b.next(), d.done)
            break;
          e = d.value;
        }
        var f = e;
        if (!q.isIdentifier(f))
          return !0;
      }
      return !1;
    }
    function g(a, b) {
      if (!a.hasOwnBinding(b.name))
        return !0;
      var c = a.getOwnBinding(b.name),
          d = c.kind;
      return "param" === d || "local" === d;
    }
    this || self;
    b.__esModule = !0, b.visitor = void 0;
    var h = a("f"),
        i = e(h),
        j = a("f2"),
        k = e(j),
        l = a("108"),
        m = e(l),
        n = a("7"),
        o = e(n),
        p = a("9"),
        q = d(p),
        r = (0, o.default)("\n  let VARIABLE_NAME =\n    ARGUMENTS.length > ARGUMENT_KEY && ARGUMENTS[ARGUMENT_KEY] !== undefined ?\n      ARGUMENTS[ARGUMENT_KEY]\n    :\n      DEFAULT_VALUE;\n"),
        s = (0, o.default)("\n  let $0 = $1[$2];\n"),
        t = {
          ReferencedIdentifier: function(a, b) {
            var c = a.scope,
                d = a.node;
            "eval" !== d.name && g(c, d) || (b.iife = !0, a.stop());
          },
          Scope: function(a) {
            a.skip();
          }
        };
    b.visitor = {Function: function(a) {
        function b(a, b, d) {
          var e = r({
            VARIABLE_NAME: a,
            DEFAULT_VALUE: b,
            ARGUMENT_KEY: q.numericLiteral(d),
            ARGUMENTS: i
          });
          e._blockHoist = c.params.length - d, h.push(e);
        }
        var c = a.node,
            d = a.scope;
        if (f(c)) {
          a.ensureBlock();
          var e = {
            iife: !1,
            scope: d
          },
              h = [],
              i = q.identifier("arguments");
          i._shadowedFunctionLiteral = a;
          for (var j = (0, k.default)(c),
              l = a.get("params"),
              n = 0; n < l.length; n++) {
            var o = l[n];
            if (o.isAssignmentPattern()) {
              var p = o.get("left"),
                  u = o.get("right");
              if (n >= j || p.isPattern()) {
                var v = d.generateUidIdentifier("x");
                v._isDefaultPlaceholder = !0, c.params[n] = v;
              } else
                c.params[n] = p.node;
              e.iife || (u.isIdentifier() && !g(d, u.node) ? e.iife = !0 : u.traverse(t, e)), b(p.node, u.node, n);
            } else
              e.iife || o.isIdentifier() || o.traverse(t, e);
          }
          for (var w = j + 1; w < c.params.length; w++) {
            var x = c.params[w];
            if (!x._isDefaultPlaceholder) {
              var y = s(x, i, q.numericLiteral(w));
              y._blockHoist = c.params.length - w, h.push(y);
            }
          }
          c.params = c.params.slice(0, j), e.iife ? (h.push((0, m.default)(a, d)), a.set("body", q.blockStatement(h))) : a.get("body").unshiftContainer("body", h);
        }
      }};
    return c.exports;
  }), a.registerDynamic("10a", ["f", "7", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      return n.isRestElement(a.params[a.params.length - 1]);
    }
    function g(a, b, c) {
      var d = void 0;
      d = n.isNumericLiteral(a.parent.property) ? n.numericLiteral(a.parent.property.value + c) : 0 === c ? a.parent.property : n.binaryExpression("+", a.parent.property, n.numericLiteral(c));
      var e = a.scope;
      if (e.isPure(d))
        a.parentPath.replaceWith(p({
          ARGUMENTS: b,
          INDEX: d
        }));
      else {
        var f = e.generateUidIdentifierBasedOnNode(d);
        e.push({
          id: f,
          kind: "var"
        }), a.parentPath.replaceWith(q({
          ARGUMENTS: b,
          INDEX: d,
          REF: f
        }));
      }
    }
    function h(a, b, c) {
      c ? a.parentPath.replaceWith(r({
        ARGUMENTS: b,
        OFFSET: n.numericLiteral(c)
      })) : a.replaceWith(b);
    }
    this || self;
    b.__esModule = !0, b.visitor = void 0;
    var i = a("f"),
        j = e(i),
        k = a("7"),
        l = e(k),
        m = a("9"),
        n = d(m),
        o = (0, l.default)("\n  for (var LEN = ARGUMENTS.length,\n           ARRAY = Array(ARRAY_LEN),\n           KEY = START;\n       KEY < LEN;\n       KEY++) {\n    ARRAY[ARRAY_KEY] = ARGUMENTS[KEY];\n  }\n"),
        p = (0, l.default)("\n  ARGUMENTS.length <= INDEX ? undefined : ARGUMENTS[INDEX]\n"),
        q = (0, l.default)("\n  REF = INDEX, ARGUMENTS.length <= REF ? undefined : ARGUMENTS[REF]\n"),
        r = (0, l.default)("\n  ARGUMENTS.length <= OFFSET ? 0 : ARGUMENTS.length - OFFSET\n"),
        s = {
          Scope: function(a, b) {
            a.scope.bindingIdentifierEquals(b.name, b.outerBinding) || a.skip();
          },
          Flow: function(a) {
            a.isTypeCastExpression() || a.skip();
          },
          "Function|ClassProperty": function(a, b) {
            var c = b.noOptimise;
            b.noOptimise = !0, a.traverse(s, b), b.noOptimise = c, a.skip();
          },
          ReferencedIdentifier: function(a, b) {
            var c = a.node;
            if ("arguments" === c.name && (b.deopted = !0), c.name === b.name)
              if (b.noOptimise)
                b.deopted = !0;
              else {
                var d = a.parentPath;
                if (d.isMemberExpression({object: c})) {
                  var e = d.parentPath,
                      f = !b.deopted && !(e.isAssignmentExpression() && d.node === e.node.left || e.isLVal() || e.isForXStatement() || e.isUpdateExpression() || e.isUnaryExpression({operator: "delete"}) || (e.isCallExpression() || e.isNewExpression()) && d.node === e.node.callee);
                  if (f)
                    if (d.node.computed) {
                      if (d.get("property").isBaseType("number"))
                        return void b.candidates.push({
                          cause: "indexGetter",
                          path: a
                        });
                    } else if ("length" === d.node.property.name)
                      return void b.candidates.push({
                        cause: "lengthGetter",
                        path: a
                      });
                }
                if (0 === b.offset && d.isSpreadElement()) {
                  var g = d.parentPath;
                  if (g.isCallExpression() && 1 === g.node.arguments.length)
                    return void b.candidates.push({
                      cause: "argSpread",
                      path: a
                    });
                }
                b.references.push(a);
              }
          },
          BindingIdentifier: function(a, b) {
            var c = a.node;
            c.name === b.name && (b.deopted = !0);
          }
        };
    b.visitor = {Function: function(a) {
        var b = a.node,
            c = a.scope;
        if (f(b)) {
          var d = b.params.pop().argument,
              e = n.identifier("arguments");
          e._shadowedFunctionLiteral = a;
          var i = {
            references: [],
            offset: b.params.length,
            argumentsNode: e,
            outerBinding: c.getBindingIdentifier(d.name),
            candidates: [],
            name: d.name,
            deopted: !1
          };
          if (a.traverse(s, i), i.deopted || i.references.length) {
            i.references = i.references.concat(i.candidates.map(function(a) {
              var b = a.path;
              return b;
            })), i.deopted = i.deopted || !!b.shadow;
            var k = n.numericLiteral(b.params.length),
                l = c.generateUidIdentifier("key"),
                m = c.generateUidIdentifier("len"),
                p = l,
                q = m;
            b.params.length && (p = n.binaryExpression("-", l, k), q = n.conditionalExpression(n.binaryExpression(">", m, k), n.binaryExpression("-", m, k), n.numericLiteral(0)));
            var r = o({
              ARGUMENTS: e,
              ARRAY_KEY: p,
              ARRAY_LEN: q,
              START: k,
              ARRAY: d,
              KEY: l,
              LEN: m
            });
            if (i.deopted)
              r._blockHoist = b.params.length + 1, b.body.body.unshift(r);
            else {
              r._blockHoist = 1;
              var t = a.getEarliestCommonAncestorFrom(i.references).getStatementParent();
              t.findParent(function(a) {
                return a.isLoop() ? void(t = a) : a.isFunction();
              }), t.insertBefore(r);
            }
          } else
            for (var u = i.candidates,
                v = Array.isArray(u),
                w = 0,
                u = v ? u : (0, j.default)(u); ; ) {
              var x;
              if (v) {
                if (w >= u.length)
                  break;
                x = u[w++];
              } else {
                if (w = u.next(), w.done)
                  break;
                x = w.value;
              }
              var y = x,
                  z = y.path,
                  A = y.cause;
              switch (A) {
                case "indexGetter":
                  g(z, e, i.offset);
                  break;
                case "lengthGetter":
                  h(z, e, i.offset);
                  break;
                default:
                  z.replaceWith(e);
              }
            }
        }
      }};
    return c.exports;
  }), a.registerDynamic("10b", ["f", "b4", "107", "109", "10a"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var f = a("f"),
        g = e(f);
    b.default = function() {
      return {visitor: h.visitors.merge([{ArrowFunctionExpression: function(a) {
            for (var b = a.get("params"),
                c = b,
                d = Array.isArray(c),
                e = 0,
                c = d ? c : (0, g.default)(c); ; ) {
              var f;
              if (d) {
                if (e >= c.length)
                  break;
                f = c[e++];
              } else {
                if (e = c.next(), e.done)
                  break;
                f = e.value;
              }
              var h = f;
              if (h.isRestElement() || h.isAssignmentPattern()) {
                a.arrowFunctionToShadowed();
                break;
              }
            }
          }}, j.visitor, n.visitor, l.visitor])};
    };
    var h = a("b4"),
        i = a("107"),
        j = d(i),
        k = a("109"),
        l = d(k),
        m = a("10a"),
        n = d(m);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("10c", ["17", "f"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("17"),
        f = d(e),
        g = a("f"),
        h = d(g);
    return b.default = function(a) {
      function b(a) {
        for (var b = a.declarations,
            c = Array.isArray(b),
            e = 0,
            b = c ? b : (0, h.default)(b); ; ) {
          var f;
          if (c) {
            if (e >= b.length)
              break;
            f = b[e++];
          } else {
            if (e = b.next(), e.done)
              break;
            f = e.value;
          }
          var g = f;
          if (d.isPattern(g.id))
            return !0;
        }
        return !1;
      }
      function c(a) {
        for (var b = a.elements,
            c = Array.isArray(b),
            e = 0,
            b = c ? b : (0, h.default)(b); ; ) {
          var f;
          if (c) {
            if (e >= b.length)
              break;
            f = b[e++];
          } else {
            if (e = b.next(), e.done)
              break;
            f = e.value;
          }
          var g = f;
          if (d.isRestElement(g))
            return !0;
        }
        return !1;
      }
      var d = a.types,
          e = {ReferencedIdentifier: function(a, b) {
              b.bindings[a.node.name] && (b.deopt = !0, a.stop());
            }},
          g = function() {
            function a(b) {
              (0, f.default)(this, a), this.blockHoist = b.blockHoist, this.operator = b.operator, this.arrays = {}, this.nodes = b.nodes || [], this.scope = b.scope, this.file = b.file, this.kind = b.kind;
            }
            return a.prototype.buildVariableAssignment = function(a, b) {
              var c = this.operator;
              d.isMemberExpression(a) && (c = "=");
              var e = void 0;
              return e = c ? d.expressionStatement(d.assignmentExpression(c, a, b)) : d.variableDeclaration(this.kind, [d.variableDeclarator(a, b)]), e._blockHoist = this.blockHoist, e;
            }, a.prototype.buildVariableDeclaration = function(a, b) {
              var c = d.variableDeclaration("var", [d.variableDeclarator(a, b)]);
              return c._blockHoist = this.blockHoist, c;
            }, a.prototype.push = function(a, b) {
              d.isObjectPattern(a) ? this.pushObjectPattern(a, b) : d.isArrayPattern(a) ? this.pushArrayPattern(a, b) : d.isAssignmentPattern(a) ? this.pushAssignmentPattern(a, b) : this.nodes.push(this.buildVariableAssignment(a, b));
            }, a.prototype.toArray = function(a, b) {
              return this.file.opts.loose || d.isIdentifier(a) && this.arrays[a.name] ? a : this.scope.toArray(a, b);
            }, a.prototype.pushAssignmentPattern = function(a, b) {
              var c = this.scope.generateUidIdentifierBasedOnNode(b),
                  e = d.variableDeclaration("var", [d.variableDeclarator(c, b)]);
              e._blockHoist = this.blockHoist, this.nodes.push(e);
              var f = d.conditionalExpression(d.binaryExpression("===", c, d.identifier("undefined")), a.right, c),
                  g = a.left;
              if (d.isPattern(g)) {
                var h = d.expressionStatement(d.assignmentExpression("=", c, f));
                h._blockHoist = this.blockHoist, this.nodes.push(h), this.push(g, c);
              } else
                this.nodes.push(this.buildVariableAssignment(g, f));
            }, a.prototype.pushObjectRest = function(a, b, c, e) {
              for (var f = [],
                  g = 0; g < a.properties.length; g++) {
                var h = a.properties[g];
                if (g >= e)
                  break;
                if (!d.isRestProperty(h)) {
                  var i = h.key;
                  d.isIdentifier(i) && !h.computed && (i = d.stringLiteral(h.key.name)), f.push(i);
                }
              }
              f = d.arrayExpression(f);
              var j = d.callExpression(this.file.addHelper("objectWithoutProperties"), [b, f]);
              this.nodes.push(this.buildVariableAssignment(c.argument, j));
            }, a.prototype.pushObjectProperty = function(a, b) {
              d.isLiteral(a.key) && (a.computed = !0);
              var c = a.value,
                  e = d.memberExpression(b, a.key, a.computed);
              d.isPattern(c) ? this.push(c, e) : this.nodes.push(this.buildVariableAssignment(c, e));
            }, a.prototype.pushObjectPattern = function(a, b) {
              if (a.properties.length || this.nodes.push(d.expressionStatement(d.callExpression(this.file.addHelper("objectDestructuringEmpty"), [b]))), a.properties.length > 1 && !this.scope.isStatic(b)) {
                var c = this.scope.generateUidIdentifierBasedOnNode(b);
                this.nodes.push(this.buildVariableDeclaration(c, b)), b = c;
              }
              for (var e = 0; e < a.properties.length; e++) {
                var f = a.properties[e];
                d.isRestProperty(f) ? this.pushObjectRest(a, b, f, e) : this.pushObjectProperty(f, b);
              }
            }, a.prototype.canUnpackArrayPattern = function(a, b) {
              if (!d.isArrayExpression(b))
                return !1;
              if (!(a.elements.length > b.elements.length)) {
                if (a.elements.length < b.elements.length && !c(a))
                  return !1;
                for (var f = a.elements,
                    g = Array.isArray(f),
                    i = 0,
                    f = g ? f : (0, h.default)(f); ; ) {
                  var j;
                  if (g) {
                    if (i >= f.length)
                      break;
                    j = f[i++];
                  } else {
                    if (i = f.next(), i.done)
                      break;
                    j = i.value;
                  }
                  var k = j;
                  if (!k)
                    return !1;
                  if (d.isMemberExpression(k))
                    return !1;
                }
                for (var l = b.elements,
                    m = Array.isArray(l),
                    n = 0,
                    l = m ? l : (0, h.default)(l); ; ) {
                  var o;
                  if (m) {
                    if (n >= l.length)
                      break;
                    o = l[n++];
                  } else {
                    if (n = l.next(), n.done)
                      break;
                    o = n.value;
                  }
                  var p = o;
                  if (d.isSpreadElement(p))
                    return !1;
                  if (d.isCallExpression(p))
                    return !1;
                  if (d.isMemberExpression(p))
                    return !1;
                }
                var q = d.getBindingIdentifiers(a),
                    r = {
                      deopt: !1,
                      bindings: q
                    };
                return this.scope.traverse(b, e, r), !r.deopt;
              }
            }, a.prototype.pushUnpackedArrayPattern = function(a, b) {
              for (var c = 0; c < a.elements.length; c++) {
                var e = a.elements[c];
                d.isRestElement(e) ? this.push(e.argument, d.arrayExpression(b.elements.slice(c))) : this.push(e, b.elements[c]);
              }
            }, a.prototype.pushArrayPattern = function(a, b) {
              if (a.elements) {
                if (this.canUnpackArrayPattern(a, b))
                  return this.pushUnpackedArrayPattern(a, b);
                var e = !c(a) && a.elements.length,
                    f = this.toArray(b, e);
                d.isIdentifier(f) ? b = f : (b = this.scope.generateUidIdentifierBasedOnNode(b), this.arrays[b.name] = !0, this.nodes.push(this.buildVariableDeclaration(b, f)));
                for (var g = 0; g < a.elements.length; g++) {
                  var h = a.elements[g];
                  if (h) {
                    var i = void 0;
                    d.isRestElement(h) ? (i = this.toArray(b), g > 0 && (i = d.callExpression(d.memberExpression(i, d.identifier("slice")), [d.numericLiteral(g)])), h = h.argument) : i = d.memberExpression(b, d.numericLiteral(g), !0), this.push(h, i);
                  }
                }
              }
            }, a.prototype.init = function(a, b) {
              if (!d.isArrayExpression(b) && !d.isMemberExpression(b)) {
                var c = this.scope.maybeGenerateMemoised(b, !0);
                c && (this.nodes.push(this.buildVariableDeclaration(c, b)), b = c);
              }
              return this.push(a, b), this.nodes;
            }, a;
          }();
      return {visitor: {
          ExportNamedDeclaration: function(a) {
            var c = a.get("declaration");
            if (c.isVariableDeclaration() && b(c.node)) {
              var e = [];
              for (var f in a.getOuterBindingIdentifiers(a)) {
                var g = d.identifier(f);
                e.push(d.exportSpecifier(g, g));
              }
              a.replaceWith(c.node), a.insertAfter(d.exportNamedDeclaration(null, e));
            }
          },
          ForXStatement: function(a, b) {
            var c = a.node,
                e = a.scope,
                f = c.left;
            if (d.isPattern(f)) {
              var h = e.generateUidIdentifier("ref");
              return c.left = d.variableDeclaration("var", [d.variableDeclarator(h)]), a.ensureBlock(), void c.body.body.unshift(d.variableDeclaration("var", [d.variableDeclarator(f, h)]));
            }
            if (d.isVariableDeclaration(f)) {
              var i = f.declarations[0].id;
              if (d.isPattern(i)) {
                var j = e.generateUidIdentifier("ref");
                c.left = d.variableDeclaration(f.kind, [d.variableDeclarator(j, null)]);
                var k = [],
                    l = new g({
                      kind: f.kind,
                      file: b,
                      scope: e,
                      nodes: k
                    });
                l.init(i, j), a.ensureBlock();
                var m = c.body;
                m.body = k.concat(m.body);
              }
            }
          },
          CatchClause: function(a, b) {
            var c = a.node,
                e = a.scope,
                f = c.param;
            if (d.isPattern(f)) {
              var h = e.generateUidIdentifier("ref");
              c.param = h;
              var i = [],
                  j = new g({
                    kind: "let",
                    file: b,
                    scope: e,
                    nodes: i
                  });
              j.init(f, h), c.body.body = i.concat(c.body.body);
            }
          },
          AssignmentExpression: function(a, b) {
            var c = a.node,
                e = a.scope;
            if (d.isPattern(c.left)) {
              var f = [],
                  h = new g({
                    operator: c.operator,
                    file: b,
                    scope: e,
                    nodes: f
                  }),
                  i = void 0;
              !a.isCompletionRecord() && a.parentPath.isExpressionStatement() || (i = e.generateUidIdentifierBasedOnNode(c.right, "ref"), f.push(d.variableDeclaration("var", [d.variableDeclarator(i, c.right)])), d.isArrayExpression(c.right) && (h.arrays[i.name] = !0)), h.init(c.left, i || c.right), i && f.push(d.expressionStatement(i)), a.replaceWithMultiple(f);
            }
          },
          VariableDeclaration: function(a, c) {
            var e = a.node,
                f = a.scope,
                i = a.parent;
            if (!d.isForXStatement(i) && i && a.container && b(e)) {
              for (var j = [],
                  k = void 0,
                  l = 0; l < e.declarations.length; l++) {
                k = e.declarations[l];
                var m = k.init,
                    n = k.id,
                    o = new g({
                      blockHoist: e._blockHoist,
                      nodes: j,
                      scope: f,
                      kind: e.kind,
                      file: c
                    });
                d.isPattern(n) ? (o.init(n, m), +l !== e.declarations.length - 1 && d.inherits(j[j.length - 1], k)) : j.push(d.inherits(o.buildVariableAssignment(k.id, k.init), k));
              }
              for (var p = [],
                  q = j,
                  r = Array.isArray(q),
                  s = 0,
                  q = r ? q : (0, h.default)(q); ; ) {
                var t;
                if (r) {
                  if (s >= q.length)
                    break;
                  t = q[s++];
                } else {
                  if (s = q.next(), s.done)
                    break;
                  t = s.value;
                }
                var u = t,
                    v = p[p.length - 1];
                if (v && d.isVariableDeclaration(v) && d.isVariableDeclaration(u) && v.kind === u.kind) {
                  var w;
                  (w = v.declarations).push.apply(w, u.declarations);
                } else
                  p.push(u);
              }
              1 === p.length ? a.replaceWith(p[0]) : a.replaceWithMultiple(p);
            }
          }
        }};
    }, c.exports = b.default, c.exports;
  }), a.registerDynamic("10d", ["9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a, b) {
      var c = b._guessExecutionStatusRelativeTo(a);
      return "before" === c ? "inside" : "after" === c ? "outside" : "maybe";
    }
    function f(a, b) {
      return i.callExpression(b.addHelper("temporalRef"), [a, i.stringLiteral(a.name), b.addHelper("temporalUndefined")]);
    }
    function g(a, b, c) {
      var d = c.letReferences[a.name];
      return !!d && b.getBindingIdentifier(a.name) === d;
    }
    this || self;
    b.__esModule = !0, b.visitor = void 0;
    var h = a("9"),
        i = d(h);
    b.visitor = {
      ReferencedIdentifier: function(a, b) {
        if (this.file.opts.tdz) {
          var c = a.node,
              d = a.parent,
              h = a.scope;
          if (!a.parentPath.isFor({left: c}) && g(c, h, b)) {
            var j = h.getBinding(c.name).path,
                k = e(a, j);
            if ("inside" !== k)
              if ("maybe" === k) {
                var l = f(c, b.file);
                if (j.parent._tdzThis = !0, a.skip(), a.parentPath.isUpdateExpression()) {
                  if (d._ignoreBlockScopingTDZ)
                    return;
                  a.parentPath.replaceWith(i.sequenceExpression([l, d]));
                } else
                  a.replaceWith(l);
              } else
                "outside" === k && a.replaceWith(i.throwStatement(i.inherits(i.newExpression(i.identifier("ReferenceError"), [i.stringLiteral(c.name + " is not defined - temporal dead zone")]), c)));
          }
        }
      },
      AssignmentExpression: {exit: function(a, b) {
          if (this.file.opts.tdz) {
            var c = a.node;
            if (!c._ignoreBlockScopingTDZ) {
              var d = [],
                  e = a.getBindingIdentifiers();
              for (var h in e) {
                var j = e[h];
                g(j, a.scope, b) && d.push(f(j, b.file));
              }
              d.length && (c._ignoreBlockScopingTDZ = !0, d.push(c), a.replaceWithMultiple(d.map(i.expressionStatement)));
            }
          }
        }}
    };
    return c.exports;
  }), a.registerDynamic("10e", ["94", "a4", "95"], !0, function(a, b, c) {
    var d = (this || self, a("94")),
        e = a("a4"),
        f = a("95"),
        g = e(function(a, b) {
          d(b, f(b), a);
        });
    return c.exports = g, c.exports;
  }), a.registerDynamic("10f", ["10e"], !0, function(a, b, c) {
    this || self;
    return c.exports = a("10e"), c.exports;
  }), a.registerDynamic("110", ["8e"], !0, function(a, b, c) {
    function d(a) {
      return e(a, !0, !0);
    }
    var e = (this || self, a("8e"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("111", [], !0, function(a, b, c) {
    function d(a, b) {
      return null != a && f.call(a, b);
    }
    var e = (this || self, Object.prototype),
        f = e.hasOwnProperty;
    return c.exports = d, c.exports;
  }), a.registerDynamic("ef", ["111", "112"], !0, function(a, b, c) {
    function d(a, b) {
      return null != a && f(a, b, e);
    }
    var e = (this || self, a("111")),
        f = a("112");
    return c.exports = d, c.exports;
  }), a.registerDynamic("113", ["17", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    a("3"), this || self;
    b.__esModule = !0;
    var e = a("17"),
        f = d(e),
        g = function a(b, c) {
          (0, f.default)(this, a), this.file = b, this.options = c;
        };
    return b.default = g, c.exports = b.default, c.exports;
  });
  a.registerDynamic("114", [], !0, function(a, b, c) {
    function d(a) {
      if (a = "" + a, !(a.length > 1e4)) {
        var b = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(a);
        if (b) {
          var c = parseFloat(b[1]),
              d = (b[2] || "ms").toLowerCase();
          switch (d) {
            case "years":
            case "year":
            case "yrs":
            case "yr":
            case "y":
              return c * l;
            case "days":
            case "day":
            case "d":
              return c * k;
            case "hours":
            case "hour":
            case "hrs":
            case "hr":
            case "h":
              return c * j;
            case "minutes":
            case "minute":
            case "mins":
            case "min":
            case "m":
              return c * i;
            case "seconds":
            case "second":
            case "secs":
            case "sec":
            case "s":
              return c * h;
            case "milliseconds":
            case "millisecond":
            case "msecs":
            case "msec":
            case "ms":
              return c;
          }
        }
      }
    }
    function e(a) {
      return a >= k ? Math.round(a / k) + "d" : a >= j ? Math.round(a / j) + "h" : a >= i ? Math.round(a / i) + "m" : a >= h ? Math.round(a / h) + "s" : a + "ms";
    }
    function f(a) {
      return g(a, k, "day") || g(a, j, "hour") || g(a, i, "minute") || g(a, h, "second") || a + " ms";
    }
    function g(a, b, c) {
      if (!(a < b))
        return a < 1.5 * b ? Math.floor(a / b) + " " + c : Math.ceil(a / b) + " " + c + "s";
    }
    var h = (this || self, 1e3),
        i = 60 * h,
        j = 60 * i,
        k = 24 * j,
        l = 365.25 * k;
    return c.exports = function(a, b) {
      return b = b || {}, "string" == typeof a ? d(a) : b.long ? f(a) : e(a);
    }, c.exports;
  });
  a.registerDynamic("115", ["114"], !0, function(a, b, c) {
    function d() {
      return b.colors[k++ % b.colors.length];
    }
    function e(a) {
      function c() {}
      function e() {
        var a = e,
            c = +new Date,
            f = c - (j || c);
        a.diff = f, a.prev = j, a.curr = c, j = c, null == a.useColors && (a.useColors = b.useColors()), null == a.color && a.useColors && (a.color = d());
        var g = Array.prototype.slice.call(arguments);
        g[0] = b.coerce(g[0]), "string" != typeof g[0] && (g = ["%o"].concat(g));
        var h = 0;
        g[0] = g[0].replace(/%([a-z%])/g, function(c, d) {
          if ("%%" === c)
            return c;
          h++;
          var e = b.formatters[d];
          if ("function" == typeof e) {
            var f = g[h];
            c = e.call(a, f), g.splice(h, 1), h--;
          }
          return c;
        }), "function" == typeof b.formatArgs && (g = b.formatArgs.apply(a, g));
        var i = e.log || b.log || console.log.bind(console);
        i.apply(a, g);
      }
      c.enabled = !1, e.enabled = !0;
      var f = b.enabled(a) ? e : c;
      return f.namespace = a, f;
    }
    function f(a) {
      b.save(a);
      for (var c = (a || "").split(/[\s,]+/),
          d = c.length,
          e = 0; e < d; e++)
        c[e] && (a = c[e].replace(/\*/g, ".*?"), "-" === a[0] ? b.skips.push(new RegExp("^" + a.substr(1) + "$")) : b.names.push(new RegExp("^" + a + "$")));
    }
    function g() {
      b.enable("");
    }
    function h(a) {
      var c,
          d;
      for (c = 0, d = b.skips.length; c < d; c++)
        if (b.skips[c].test(a))
          return !1;
      for (c = 0, d = b.names.length; c < d; c++)
        if (b.names[c].test(a))
          return !0;
      return !1;
    }
    function i(a) {
      return a instanceof Error ? a.stack || a.message : a;
    }
    this || self;
    b = c.exports = e, b.coerce = i, b.disable = g, b.enable = f, b.enabled = h, b.humanize = a("114"), b.names = [], b.skips = [], b.formatters = {};
    var j,
        k = 0;
    return c.exports;
  }), a.registerDynamic("68", ["115"], !0, function(a, b, c) {
    function d() {
      return "WebkitAppearance" in document.documentElement.style || window.console && (console.firebug || console.exception && console.table) || navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31;
    }
    function e() {
      var a = arguments,
          c = this.useColors;
      if (a[0] = (c ? "%c" : "") + this.namespace + (c ? " %c" : " ") + a[0] + (c ? "%c " : " ") + "+" + b.humanize(this.diff), !c)
        return a;
      var d = "color: " + this.color;
      a = [a[0], d, "color: inherit"].concat(Array.prototype.slice.call(a, 1));
      var e = 0,
          f = 0;
      return a[0].replace(/%[a-z%]/g, function(a) {
        "%%" !== a && (e++, "%c" === a && (f = e));
      }), a.splice(f, 0, d), a;
    }
    function f() {
      return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
    }
    function g(a) {
      try {
        null == a ? b.storage.removeItem("debug") : b.storage.debug = a;
      } catch (a) {}
    }
    function h() {
      var a;
      try {
        a = b.storage.debug;
      } catch (a) {}
      return a;
    }
    function i() {
      try {
        return window.localStorage;
      } catch (a) {}
    }
    this || self;
    return b = c.exports = a("115"), b.log = f, b.formatArgs = e, b.save = g, b.load = h, b.useColors = d, b.storage = "undefined" != typeof chrome && "undefined" != typeof chrome.storage ? chrome.storage.local : i(), b.colors = ["lightseagreen", "forestgreen", "goldenrod", "dodgerblue", "darkorchid", "crimson"], b.formatters.j = function(a) {
      return JSON.stringify(a);
    }, b.enable(h()), c.exports;
  }), a.registerDynamic("116", ["3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), this || self, function(a, b, c, d, e, f, g, h) {
      if (!a) {
        var i;
        if (void 0 === b)
          i = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
        else {
          var j = [c, d, e, f, g, h],
              k = 0;
          i = new Error(b.replace(/%s/g, function() {
            return j[k++];
          })), i.name = "Invariant Violation";
        }
        throw i.framesToPop = 1, i;
      }
    });
    return c.exports = d, c.exports;
  }), a.registerDynamic("b5", ["117", "94", "a4", "39", "118", "3a"], !0, function(a, b, c) {
    var d = (this || self, a("117")),
        e = a("94"),
        f = a("a4"),
        g = a("39"),
        h = a("118"),
        i = a("3a"),
        j = Object.prototype,
        k = j.hasOwnProperty,
        l = f(function(a, b) {
          if (h(b) || g(b))
            return void e(b, i(b), a);
          for (var c in b)
            k.call(b, c) && d(a, c, b[c]);
        });
    return c.exports = l, c.exports;
  }), a.registerDynamic("119", [], !0, function(a, b, c) {
    function d(a, b) {
      var c = "";
      if (!a || b < 1 || b > e)
        return c;
      do
        b % 2 && (c += a), b = f(b / 2), b && (a += a);
 while (b);
      return c;
    }
    var e = (this || self, 9007199254740991),
        f = Math.floor;
    return c.exports = d, c.exports;
  }), a.registerDynamic("66", ["119", "78", "36", "48"], !0, function(a, b, c) {
    function d(a, b, c) {
      return b = (c ? f(a, b, c) : void 0 === b) ? 1 : g(b), e(h(a), b);
    }
    var e = (this || self, a("119")),
        f = a("78"),
        g = a("36"),
        h = a("48");
    return c.exports = d, c.exports;
  }), a.registerDynamic("11a", ["17", "11b", "9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    a("3"), this || self;
    b.__esModule = !0;
    var f = a("17"),
        g = e(f),
        h = a("11b"),
        i = (e(h), a("9")),
        j = d(i),
        k = {
          ReferencedIdentifier: function(a, b) {
            var c = a.node;
            c.name === b.oldName && (c.name = b.newName);
          },
          Scope: function(a, b) {
            a.scope.bindingIdentifierEquals(b.oldName, b.binding.identifier) || a.skip();
          },
          "AssignmentExpression|Declaration": function(a, b) {
            var c = a.getOuterBindingIdentifiers();
            for (var d in c)
              d === b.oldName && (c[d].name = b.newName);
          }
        },
        l = function() {
          function a(b, c, d) {
            (0, g.default)(this, a), this.newName = d, this.oldName = c, this.binding = b;
          }
          return a.prototype.maybeConvertFromExportDeclaration = function(a) {
            var b = a.parentPath.isExportDeclaration() && a.parentPath;
            if (b) {
              var c = b.isExportDefaultDeclaration();
              c && (a.isFunctionDeclaration() || a.isClassDeclaration()) && !a.node.id && (a.node.id = a.scope.generateUidIdentifier("default"));
              var d = a.getOuterBindingIdentifiers(),
                  e = [];
              for (var f in d) {
                var g = f === this.oldName ? this.newName : f,
                    h = c ? "default" : f;
                e.push(j.exportSpecifier(j.identifier(g), j.identifier(h)));
              }
              if (e.length) {
                var i = j.exportNamedDeclaration(null, e);
                a.isFunctionDeclaration() && (i._blockHoist = 3), b.insertAfter(i), b.replaceWith(a.node);
              }
            }
          }, a.prototype.maybeConvertFromClassFunctionDeclaration = function(a) {}, a.prototype.maybeConvertFromClassFunctionExpression = function(a) {}, a.prototype.rename = function(a) {
            var b = this.binding,
                c = this.oldName,
                d = this.newName,
                e = b.scope,
                f = b.path,
                g = f.find(function(a) {
                  return a.isDeclaration() || a.isFunctionExpression();
                });
            g && this.maybeConvertFromExportDeclaration(g), e.traverse(a || e.block, k, this), a || (e.removeOwnBinding(c), e.bindings[d] = b, this.binding.identifier.name = d), "hoisted" === b.type, g && (this.maybeConvertFromClassFunctionDeclaration(g), this.maybeConvertFromClassFunctionExpression(g));
          }, a;
        }();
    return b.default = l, c.exports = b.default, c.exports;
  }), a.registerDynamic("11c", ["91"], !0, function(a, b, c) {
    function d(a, b, c, d) {
      return void 0 === a || e(a, f[c]) && !g.call(d, c) ? b : a;
    }
    var e = (this || self, a("91")),
        f = Object.prototype,
        g = f.hasOwnProperty;
    return c.exports = d, c.exports;
  }), a.registerDynamic("78", ["91", "39", "11d", "9d"], !0, function(a, b, c) {
    function d(a, b, c) {
      if (!h(c))
        return !1;
      var d = typeof b;
      return !!("number" == d ? f(c) && g(b, c.length) : "string" == d && b in c) && e(c[b], a);
    }
    var e = (this || self, a("91")),
        f = a("39"),
        g = a("11d"),
        h = a("9d");
    return c.exports = d, c.exports;
  }), a.registerDynamic("a4", ["77", "78"], !0, function(a, b, c) {
    function d(a) {
      return e(function(b, c) {
        var d = -1,
            e = c.length,
            g = e > 1 ? c[e - 1] : void 0,
            h = e > 2 ? c[2] : void 0;
        for (g = a.length > 3 && "function" == typeof g ? (e--, g) : void 0, h && f(c[0], c[1], h) && (g = e < 3 ? void 0 : g, e = 1), b = Object(b); ++d < e; ) {
          var i = c[d];
          i && a(b, i, d, g);
        }
        return b;
      });
    }
    var e = (this || self, a("77")),
        f = a("78");
    return c.exports = d, c.exports;
  }), a.registerDynamic("11e", [], !0, function(a, b, c) {
    function d(a) {
      var b = [];
      if (null != a)
        for (var c in Object(a))
          b.push(c);
      return b;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("11f", ["9d", "118", "11e"], !0, function(a, b, c) {
    function d(a) {
      if (!e(a))
        return g(a);
      var b = f(a),
          c = [];
      for (var d in a)
        ("constructor" != d || !b && i.call(a, d)) && c.push(d);
      return c;
    }
    var e = (this || self, a("9d")),
        f = a("118"),
        g = a("11e"),
        h = Object.prototype,
        i = h.hasOwnProperty;
    return c.exports = d, c.exports;
  }), a.registerDynamic("95", ["120", "11f", "39"], !0, function(a, b, c) {
    function d(a) {
      return g(a) ? e(a, !0) : f(a);
    }
    var e = (this || self, a("120")),
        f = a("11f"),
        g = a("39");
    return c.exports = d, c.exports;
  }), a.registerDynamic("121", ["94", "a4", "95"], !0, function(a, b, c) {
    var d = (this || self, a("94")),
        e = a("a4"),
        f = a("95"),
        g = e(function(a, b, c, e) {
          d(b, f(b), a, e);
        });
    return c.exports = g, c.exports;
  }), a.registerDynamic("122", [], !0, function(a, b, c) {
    function d(a, b, c) {
      switch (c.length) {
        case 0:
          return a.call(b);
        case 1:
          return a.call(b, c[0]);
        case 2:
          return a.call(b, c[0], c[1]);
        case 3:
          return a.call(b, c[0], c[1], c[2]);
      }
      return a.apply(b, c);
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("123", ["122"], !0, function(a, b, c) {
    function d(a, b, c) {
      return b = f(void 0 === b ? a.length - 1 : b, 0), function() {
        for (var d = arguments,
            g = -1,
            h = f(d.length - b, 0),
            i = Array(h); ++g < h; )
          i[g] = d[b + g];
        g = -1;
        for (var j = Array(b + 1); ++g < b; )
          j[g] = d[g];
        return j[b] = c(i), e(a, this, j);
      };
    }
    var e = (this || self, a("122")),
        f = Math.max;
    return c.exports = d, c.exports;
  }), a.registerDynamic("124", [], !0, function(a, b, c) {
    function d(a) {
      return function() {
        return a;
      };
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("125", ["124", "126", "75"], !0, function(a, b, c) {
    var d = (this || self, a("124")),
        e = a("126"),
        f = a("75"),
        g = e ? function(a, b) {
          return e(a, "toString", {
            configurable: !0,
            enumerable: !1,
            value: d(b),
            writable: !0
          });
        } : f;
    return c.exports = g, c.exports;
  }), a.registerDynamic("127", [], !0, function(a, b, c) {
    function d(a) {
      var b = 0,
          c = 0;
      return function() {
        var d = g(),
            h = f - (d - c);
        if (c = d, h > 0) {
          if (++b >= e)
            return arguments[0];
        } else
          b = 0;
        return a.apply(void 0, arguments);
      };
    }
    var e = (this || self, 500),
        f = 16,
        g = Date.now;
    return c.exports = d, c.exports;
  }), a.registerDynamic("128", ["125", "127"], !0, function(a, b, c) {
    var d = (this || self, a("125")),
        e = a("127"),
        f = e(d);
    return c.exports = f, c.exports;
  }), a.registerDynamic("77", ["75", "123", "128"], !0, function(a, b, c) {
    function d(a, b) {
      return g(f(a, b, e), a + "");
    }
    var e = (this || self, a("75")),
        f = a("123"),
        g = a("128");
    return c.exports = d, c.exports;
  }), a.registerDynamic("ba", ["122", "11c", "121", "77"], !0, function(a, b, c) {
    var d = (this || self, a("122")),
        e = a("11c"),
        f = a("121"),
        g = a("77"),
        h = g(function(a) {
          return a.push(void 0, e), d(f, void 0, a);
        });
    return c.exports = h, c.exports;
  }), a.registerDynamic("11b", ["17", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    a("3"), this || self;
    b.__esModule = !0;
    var e = a("17"),
        f = d(e),
        g = function() {
          function a(b) {
            var c = b.existing,
                d = b.identifier,
                e = b.scope,
                g = b.path,
                h = b.kind;
            (0, f.default)(this, a), this.identifier = d, this.scope = e, this.path = g, this.kind = h, this.constantViolations = [], this.constant = !0, this.referencePaths = [], this.referenced = !1, this.references = 0, this.clearValue(), c && (this.constantViolations = [].concat(c.path, c.constantViolations, this.constantViolations));
          }
          return a.prototype.deoptValue = function() {
            this.clearValue(), this.hasDeoptedValue = !0;
          }, a.prototype.setValue = function(a) {
            this.hasDeoptedValue || (this.hasValue = !0, this.value = a);
          }, a.prototype.clearValue = function() {
            this.hasDeoptedValue = !1, this.hasValue = !1, this.value = null;
          }, a.prototype.reassign = function(a) {
            this.constant = !1, this.constantViolations.indexOf(a) === -1 && this.constantViolations.push(a);
          }, a.prototype.reference = function(a) {
            this.referencePaths.indexOf(a) === -1 && (this.referenced = !0, this.references++, this.referencePaths.push(a));
          }, a.prototype.dereference = function() {
            this.references--, this.referenced = !!this.references;
          }, a;
        }();
    return b.default = g, c.exports = b.default, c.exports;
  }), a.registerDynamic("129", [], !1, function() {
    return {
      builtin: {
        Array: !1,
        ArrayBuffer: !1,
        Boolean: !1,
        constructor: !1,
        DataView: !1,
        Date: !1,
        decodeURI: !1,
        decodeURIComponent: !1,
        encodeURI: !1,
        encodeURIComponent: !1,
        Error: !1,
        escape: !1,
        eval: !1,
        EvalError: !1,
        Float32Array: !1,
        Float64Array: !1,
        Function: !1,
        hasOwnProperty: !1,
        Infinity: !1,
        Int16Array: !1,
        Int32Array: !1,
        Int8Array: !1,
        isFinite: !1,
        isNaN: !1,
        isPrototypeOf: !1,
        JSON: !1,
        Map: !1,
        Math: !1,
        NaN: !1,
        Number: !1,
        Object: !1,
        parseFloat: !1,
        parseInt: !1,
        Promise: !1,
        propertyIsEnumerable: !1,
        Proxy: !1,
        RangeError: !1,
        ReferenceError: !1,
        Reflect: !1,
        RegExp: !1,
        Set: !1,
        String: !1,
        Symbol: !1,
        SyntaxError: !1,
        System: !1,
        toLocaleString: !1,
        toString: !1,
        TypeError: !1,
        Uint16Array: !1,
        Uint32Array: !1,
        Uint8Array: !1,
        Uint8ClampedArray: !1,
        undefined: !1,
        unescape: !1,
        URIError: !1,
        valueOf: !1,
        WeakMap: !1,
        WeakSet: !1
      },
      es5: {
        Array: !1,
        Boolean: !1,
        constructor: !1,
        Date: !1,
        decodeURI: !1,
        decodeURIComponent: !1,
        encodeURI: !1,
        encodeURIComponent: !1,
        Error: !1,
        escape: !1,
        eval: !1,
        EvalError: !1,
        Function: !1,
        hasOwnProperty: !1,
        Infinity: !1,
        isFinite: !1,
        isNaN: !1,
        isPrototypeOf: !1,
        JSON: !1,
        Math: !1,
        NaN: !1,
        Number: !1,
        Object: !1,
        parseFloat: !1,
        parseInt: !1,
        propertyIsEnumerable: !1,
        RangeError: !1,
        ReferenceError: !1,
        RegExp: !1,
        String: !1,
        SyntaxError: !1,
        toLocaleString: !1,
        toString: !1,
        TypeError: !1,
        undefined: !1,
        unescape: !1,
        URIError: !1,
        valueOf: !1
      },
      es6: {
        Array: !1,
        ArrayBuffer: !1,
        Boolean: !1,
        constructor: !1,
        DataView: !1,
        Date: !1,
        decodeURI: !1,
        decodeURIComponent: !1,
        encodeURI: !1,
        encodeURIComponent: !1,
        Error: !1,
        escape: !1,
        eval: !1,
        EvalError: !1,
        Float32Array: !1,
        Float64Array: !1,
        Function: !1,
        hasOwnProperty: !1,
        Infinity: !1,
        Int16Array: !1,
        Int32Array: !1,
        Int8Array: !1,
        isFinite: !1,
        isNaN: !1,
        isPrototypeOf: !1,
        JSON: !1,
        Map: !1,
        Math: !1,
        NaN: !1,
        Number: !1,
        Object: !1,
        parseFloat: !1,
        parseInt: !1,
        Promise: !1,
        propertyIsEnumerable: !1,
        Proxy: !1,
        RangeError: !1,
        ReferenceError: !1,
        Reflect: !1,
        RegExp: !1,
        Set: !1,
        String: !1,
        Symbol: !1,
        SyntaxError: !1,
        System: !1,
        toLocaleString: !1,
        toString: !1,
        TypeError: !1,
        Uint16Array: !1,
        Uint32Array: !1,
        Uint8Array: !1,
        Uint8ClampedArray: !1,
        undefined: !1,
        unescape: !1,
        URIError: !1,
        valueOf: !1,
        WeakMap: !1,
        WeakSet: !1
      },
      browser: {
        addEventListener: !1,
        alert: !1,
        AnalyserNode: !1,
        Animation: !1,
        AnimationEffectReadOnly: !1,
        AnimationEffectTiming: !1,
        AnimationEffectTimingReadOnly: !1,
        AnimationEvent: !1,
        AnimationPlaybackEvent: !1,
        AnimationTimeline: !1,
        applicationCache: !1,
        ApplicationCache: !1,
        ApplicationCacheErrorEvent: !1,
        atob: !1,
        Attr: !1,
        Audio: !1,
        AudioBuffer: !1,
        AudioBufferSourceNode: !1,
        AudioContext: !1,
        AudioDestinationNode: !1,
        AudioListener: !1,
        AudioNode: !1,
        AudioParam: !1,
        AudioProcessingEvent: !1,
        AutocompleteErrorEvent: !1,
        BarProp: !1,
        BatteryManager: !1,
        BeforeUnloadEvent: !1,
        BiquadFilterNode: !1,
        Blob: !1,
        blur: !1,
        btoa: !1,
        Cache: !1,
        caches: !1,
        CacheStorage: !1,
        cancelAnimationFrame: !1,
        CanvasGradient: !1,
        CanvasPattern: !1,
        CanvasRenderingContext2D: !1,
        CDATASection: !1,
        ChannelMergerNode: !1,
        ChannelSplitterNode: !1,
        CharacterData: !1,
        clearInterval: !1,
        clearTimeout: !1,
        clientInformation: !1,
        ClientRect: !1,
        ClientRectList: !1,
        ClipboardEvent: !1,
        close: !1,
        closed: !1,
        CloseEvent: !1,
        Comment: !1,
        CompositionEvent: !1,
        confirm: !1,
        console: !1,
        ConvolverNode: !1,
        Credential: !1,
        CredentialsContainer: !1,
        crypto: !1,
        Crypto: !1,
        CryptoKey: !1,
        CSS: !1,
        CSSAnimation: !1,
        CSSFontFaceRule: !1,
        CSSImportRule: !1,
        CSSKeyframeRule: !1,
        CSSKeyframesRule: !1,
        CSSMediaRule: !1,
        CSSPageRule: !1,
        CSSRule: !1,
        CSSRuleList: !1,
        CSSStyleDeclaration: !1,
        CSSStyleRule: !1,
        CSSStyleSheet: !1,
        CSSSupportsRule: !1,
        CSSTransition: !1,
        CSSUnknownRule: !1,
        CSSViewportRule: !1,
        CustomEvent: !1,
        DataTransfer: !1,
        DataTransferItem: !1,
        DataTransferItemList: !1,
        Debug: !1,
        defaultStatus: !1,
        defaultstatus: !1,
        DelayNode: !1,
        DeviceMotionEvent: !1,
        DeviceOrientationEvent: !1,
        devicePixelRatio: !1,
        dispatchEvent: !1,
        document: !1,
        Document: !1,
        DocumentFragment: !1,
        DocumentTimeline: !1,
        DocumentType: !1,
        DOMError: !1,
        DOMException: !1,
        DOMImplementation: !1,
        DOMParser: !1,
        DOMSettableTokenList: !1,
        DOMStringList: !1,
        DOMStringMap: !1,
        DOMTokenList: !1,
        DragEvent: !1,
        DynamicsCompressorNode: !1,
        Element: !1,
        ElementTimeControl: !1,
        ErrorEvent: !1,
        event: !1,
        Event: !1,
        EventSource: !1,
        EventTarget: !1,
        external: !1,
        FederatedCredential: !1,
        fetch: !1,
        File: !1,
        FileError: !1,
        FileList: !1,
        FileReader: !1,
        find: !1,
        focus: !1,
        FocusEvent: !1,
        FontFace: !1,
        FormData: !1,
        frameElement: !1,
        frames: !1,
        GainNode: !1,
        Gamepad: !1,
        GamepadButton: !1,
        GamepadEvent: !1,
        getComputedStyle: !1,
        getSelection: !1,
        HashChangeEvent: !1,
        Headers: !1,
        history: !1,
        History: !1,
        HTMLAllCollection: !1,
        HTMLAnchorElement: !1,
        HTMLAppletElement: !1,
        HTMLAreaElement: !1,
        HTMLAudioElement: !1,
        HTMLBaseElement: !1,
        HTMLBlockquoteElement: !1,
        HTMLBodyElement: !1,
        HTMLBRElement: !1,
        HTMLButtonElement: !1,
        HTMLCanvasElement: !1,
        HTMLCollection: !1,
        HTMLContentElement: !1,
        HTMLDataListElement: !1,
        HTMLDetailsElement: !1,
        HTMLDialogElement: !1,
        HTMLDirectoryElement: !1,
        HTMLDivElement: !1,
        HTMLDListElement: !1,
        HTMLDocument: !1,
        HTMLElement: !1,
        HTMLEmbedElement: !1,
        HTMLFieldSetElement: !1,
        HTMLFontElement: !1,
        HTMLFormControlsCollection: !1,
        HTMLFormElement: !1,
        HTMLFrameElement: !1,
        HTMLFrameSetElement: !1,
        HTMLHeadElement: !1,
        HTMLHeadingElement: !1,
        HTMLHRElement: !1,
        HTMLHtmlElement: !1,
        HTMLIFrameElement: !1,
        HTMLImageElement: !1,
        HTMLInputElement: !1,
        HTMLIsIndexElement: !1,
        HTMLKeygenElement: !1,
        HTMLLabelElement: !1,
        HTMLLayerElement: !1,
        HTMLLegendElement: !1,
        HTMLLIElement: !1,
        HTMLLinkElement: !1,
        HTMLMapElement: !1,
        HTMLMarqueeElement: !1,
        HTMLMediaElement: !1,
        HTMLMenuElement: !1,
        HTMLMetaElement: !1,
        HTMLMeterElement: !1,
        HTMLModElement: !1,
        HTMLObjectElement: !1,
        HTMLOListElement: !1,
        HTMLOptGroupElement: !1,
        HTMLOptionElement: !1,
        HTMLOptionsCollection: !1,
        HTMLOutputElement: !1,
        HTMLParagraphElement: !1,
        HTMLParamElement: !1,
        HTMLPictureElement: !1,
        HTMLPreElement: !1,
        HTMLProgressElement: !1,
        HTMLQuoteElement: !1,
        HTMLScriptElement: !1,
        HTMLSelectElement: !1,
        HTMLShadowElement: !1,
        HTMLSourceElement: !1,
        HTMLSpanElement: !1,
        HTMLStyleElement: !1,
        HTMLTableCaptionElement: !1,
        HTMLTableCellElement: !1,
        HTMLTableColElement: !1,
        HTMLTableElement: !1,
        HTMLTableRowElement: !1,
        HTMLTableSectionElement: !1,
        HTMLTemplateElement: !1,
        HTMLTextAreaElement: !1,
        HTMLTitleElement: !1,
        HTMLTrackElement: !1,
        HTMLUListElement: !1,
        HTMLUnknownElement: !1,
        HTMLVideoElement: !1,
        IDBCursor: !1,
        IDBCursorWithValue: !1,
        IDBDatabase: !1,
        IDBEnvironment: !1,
        IDBFactory: !1,
        IDBIndex: !1,
        IDBKeyRange: !1,
        IDBObjectStore: !1,
        IDBOpenDBRequest: !1,
        IDBRequest: !1,
        IDBTransaction: !1,
        IDBVersionChangeEvent: !1,
        Image: !1,
        ImageBitmap: !1,
        ImageData: !1,
        indexedDB: !1,
        innerHeight: !1,
        innerWidth: !1,
        InputEvent: !1,
        InputMethodContext: !1,
        IntersectionObserver: !1,
        IntersectionObserverEntry: !1,
        Intl: !1,
        KeyboardEvent: !1,
        KeyframeEffect: !1,
        KeyframeEffectReadOnly: !1,
        length: !1,
        localStorage: !1,
        location: !1,
        Location: !1,
        locationbar: !1,
        matchMedia: !1,
        MediaElementAudioSourceNode: !1,
        MediaEncryptedEvent: !1,
        MediaError: !1,
        MediaKeyError: !1,
        MediaKeyEvent: !1,
        MediaKeyMessageEvent: !1,
        MediaKeys: !1,
        MediaKeySession: !1,
        MediaKeyStatusMap: !1,
        MediaKeySystemAccess: !1,
        MediaList: !1,
        MediaQueryList: !1,
        MediaQueryListEvent: !1,
        MediaSource: !1,
        MediaStream: !1,
        MediaStreamAudioDestinationNode: !1,
        MediaStreamAudioSourceNode: !1,
        MediaStreamEvent: !1,
        MediaStreamTrack: !1,
        menubar: !1,
        MessageChannel: !1,
        MessageEvent: !1,
        MessagePort: !1,
        MIDIAccess: !1,
        MIDIConnectionEvent: !1,
        MIDIInput: !1,
        MIDIInputMap: !1,
        MIDIMessageEvent: !1,
        MIDIOutput: !1,
        MIDIOutputMap: !1,
        MIDIPort: !1,
        MimeType: !1,
        MimeTypeArray: !1,
        MouseEvent: !1,
        moveBy: !1,
        moveTo: !1,
        MutationEvent: !1,
        MutationObserver: !1,
        MutationRecord: !1,
        name: !1,
        NamedNodeMap: !1,
        navigator: !1,
        Navigator: !1,
        Node: !1,
        NodeFilter: !1,
        NodeIterator: !1,
        NodeList: !1,
        Notification: !1,
        OfflineAudioCompletionEvent: !1,
        OfflineAudioContext: !1,
        offscreenBuffering: !1,
        onbeforeunload: !0,
        onblur: !0,
        onerror: !0,
        onfocus: !0,
        onload: !0,
        onresize: !0,
        onunload: !0,
        open: !1,
        openDatabase: !1,
        opener: !1,
        opera: !1,
        Option: !1,
        OscillatorNode: !1,
        outerHeight: !1,
        outerWidth: !1,
        PageTransitionEvent: !1,
        pageXOffset: !1,
        pageYOffset: !1,
        parent: !1,
        PasswordCredential: !1,
        Path2D: !1,
        performance: !1,
        Performance: !1,
        PerformanceEntry: !1,
        PerformanceMark: !1,
        PerformanceMeasure: !1,
        PerformanceNavigation: !1,
        PerformanceResourceTiming: !1,
        PerformanceTiming: !1,
        PeriodicWave: !1,
        Permissions: !1,
        PermissionStatus: !1,
        personalbar: !1,
        Plugin: !1,
        PluginArray: !1,
        PopStateEvent: !1,
        postMessage: !1,
        print: !1,
        ProcessingInstruction: !1,
        ProgressEvent: !1,
        prompt: !1,
        PushManager: !1,
        PushSubscription: !1,
        RadioNodeList: !1,
        Range: !1,
        ReadableByteStream: !1,
        ReadableStream: !1,
        removeEventListener: !1,
        Request: !1,
        requestAnimationFrame: !1,
        requestIdleCallback: !1,
        resizeBy: !1,
        resizeTo: !1,
        Response: !1,
        RTCIceCandidate: !1,
        RTCSessionDescription: !1,
        RTCPeerConnection: !1,
        screen: !1,
        Screen: !1,
        screenLeft: !1,
        ScreenOrientation: !1,
        screenTop: !1,
        screenX: !1,
        screenY: !1,
        ScriptProcessorNode: !1,
        scroll: !1,
        scrollbars: !1,
        scrollBy: !1,
        scrollTo: !1,
        scrollX: !1,
        scrollY: !1,
        SecurityPolicyViolationEvent: !1,
        Selection: !1,
        self: !1,
        ServiceWorker: !1,
        ServiceWorkerContainer: !1,
        ServiceWorkerRegistration: !1,
        sessionStorage: !1,
        setInterval: !1,
        setTimeout: !1,
        ShadowRoot: !1,
        SharedKeyframeList: !1,
        SharedWorker: !1,
        showModalDialog: !1,
        SiteBoundCredential: !1,
        speechSynthesis: !1,
        SpeechSynthesisEvent: !1,
        SpeechSynthesisUtterance: !1,
        status: !1,
        statusbar: !1,
        stop: !1,
        Storage: !1,
        StorageEvent: !1,
        styleMedia: !1,
        StyleSheet: !1,
        StyleSheetList: !1,
        SubtleCrypto: !1,
        SVGAElement: !1,
        SVGAltGlyphDefElement: !1,
        SVGAltGlyphElement: !1,
        SVGAltGlyphItemElement: !1,
        SVGAngle: !1,
        SVGAnimateColorElement: !1,
        SVGAnimatedAngle: !1,
        SVGAnimatedBoolean: !1,
        SVGAnimatedEnumeration: !1,
        SVGAnimatedInteger: !1,
        SVGAnimatedLength: !1,
        SVGAnimatedLengthList: !1,
        SVGAnimatedNumber: !1,
        SVGAnimatedNumberList: !1,
        SVGAnimatedPathData: !1,
        SVGAnimatedPoints: !1,
        SVGAnimatedPreserveAspectRatio: !1,
        SVGAnimatedRect: !1,
        SVGAnimatedString: !1,
        SVGAnimatedTransformList: !1,
        SVGAnimateElement: !1,
        SVGAnimateMotionElement: !1,
        SVGAnimateTransformElement: !1,
        SVGAnimationElement: !1,
        SVGCircleElement: !1,
        SVGClipPathElement: !1,
        SVGColor: !1,
        SVGColorProfileElement: !1,
        SVGColorProfileRule: !1,
        SVGComponentTransferFunctionElement: !1,
        SVGCSSRule: !1,
        SVGCursorElement: !1,
        SVGDefsElement: !1,
        SVGDescElement: !1,
        SVGDiscardElement: !1,
        SVGDocument: !1,
        SVGElement: !1,
        SVGElementInstance: !1,
        SVGElementInstanceList: !1,
        SVGEllipseElement: !1,
        SVGEvent: !1,
        SVGExternalResourcesRequired: !1,
        SVGFEBlendElement: !1,
        SVGFEColorMatrixElement: !1,
        SVGFEComponentTransferElement: !1,
        SVGFECompositeElement: !1,
        SVGFEConvolveMatrixElement: !1,
        SVGFEDiffuseLightingElement: !1,
        SVGFEDisplacementMapElement: !1,
        SVGFEDistantLightElement: !1,
        SVGFEDropShadowElement: !1,
        SVGFEFloodElement: !1,
        SVGFEFuncAElement: !1,
        SVGFEFuncBElement: !1,
        SVGFEFuncGElement: !1,
        SVGFEFuncRElement: !1,
        SVGFEGaussianBlurElement: !1,
        SVGFEImageElement: !1,
        SVGFEMergeElement: !1,
        SVGFEMergeNodeElement: !1,
        SVGFEMorphologyElement: !1,
        SVGFEOffsetElement: !1,
        SVGFEPointLightElement: !1,
        SVGFESpecularLightingElement: !1,
        SVGFESpotLightElement: !1,
        SVGFETileElement: !1,
        SVGFETurbulenceElement: !1,
        SVGFilterElement: !1,
        SVGFilterPrimitiveStandardAttributes: !1,
        SVGFitToViewBox: !1,
        SVGFontElement: !1,
        SVGFontFaceElement: !1,
        SVGFontFaceFormatElement: !1,
        SVGFontFaceNameElement: !1,
        SVGFontFaceSrcElement: !1,
        SVGFontFaceUriElement: !1,
        SVGForeignObjectElement: !1,
        SVGGElement: !1,
        SVGGeometryElement: !1,
        SVGGlyphElement: !1,
        SVGGlyphRefElement: !1,
        SVGGradientElement: !1,
        SVGGraphicsElement: !1,
        SVGHKernElement: !1,
        SVGICCColor: !1,
        SVGImageElement: !1,
        SVGLangSpace: !1,
        SVGLength: !1,
        SVGLengthList: !1,
        SVGLinearGradientElement: !1,
        SVGLineElement: !1,
        SVGLocatable: !1,
        SVGMarkerElement: !1,
        SVGMaskElement: !1,
        SVGMatrix: !1,
        SVGMetadataElement: !1,
        SVGMissingGlyphElement: !1,
        SVGMPathElement: !1,
        SVGNumber: !1,
        SVGNumberList: !1,
        SVGPaint: !1,
        SVGPathElement: !1,
        SVGPathSeg: !1,
        SVGPathSegArcAbs: !1,
        SVGPathSegArcRel: !1,
        SVGPathSegClosePath: !1,
        SVGPathSegCurvetoCubicAbs: !1,
        SVGPathSegCurvetoCubicRel: !1,
        SVGPathSegCurvetoCubicSmoothAbs: !1,
        SVGPathSegCurvetoCubicSmoothRel: !1,
        SVGPathSegCurvetoQuadraticAbs: !1,
        SVGPathSegCurvetoQuadraticRel: !1,
        SVGPathSegCurvetoQuadraticSmoothAbs: !1,
        SVGPathSegCurvetoQuadraticSmoothRel: !1,
        SVGPathSegLinetoAbs: !1,
        SVGPathSegLinetoHorizontalAbs: !1,
        SVGPathSegLinetoHorizontalRel: !1,
        SVGPathSegLinetoRel: !1,
        SVGPathSegLinetoVerticalAbs: !1,
        SVGPathSegLinetoVerticalRel: !1,
        SVGPathSegList: !1,
        SVGPathSegMovetoAbs: !1,
        SVGPathSegMovetoRel: !1,
        SVGPatternElement: !1,
        SVGPoint: !1,
        SVGPointList: !1,
        SVGPolygonElement: !1,
        SVGPolylineElement: !1,
        SVGPreserveAspectRatio: !1,
        SVGRadialGradientElement: !1,
        SVGRect: !1,
        SVGRectElement: !1,
        SVGRenderingIntent: !1,
        SVGScriptElement: !1,
        SVGSetElement: !1,
        SVGStopElement: !1,
        SVGStringList: !1,
        SVGStylable: !1,
        SVGStyleElement: !1,
        SVGSVGElement: !1,
        SVGSwitchElement: !1,
        SVGSymbolElement: !1,
        SVGTests: !1,
        SVGTextContentElement: !1,
        SVGTextElement: !1,
        SVGTextPathElement: !1,
        SVGTextPositioningElement: !1,
        SVGTitleElement: !1,
        SVGTransform: !1,
        SVGTransformable: !1,
        SVGTransformList: !1,
        SVGTRefElement: !1,
        SVGTSpanElement: !1,
        SVGUnitTypes: !1,
        SVGURIReference: !1,
        SVGUseElement: !1,
        SVGViewElement: !1,
        SVGViewSpec: !1,
        SVGVKernElement: !1,
        SVGZoomAndPan: !1,
        SVGZoomEvent: !1,
        Text: !1,
        TextDecoder: !1,
        TextEncoder: !1,
        TextEvent: !1,
        TextMetrics: !1,
        TextTrack: !1,
        TextTrackCue: !1,
        TextTrackCueList: !1,
        TextTrackList: !1,
        TimeEvent: !1,
        TimeRanges: !1,
        toolbar: !1,
        top: !1,
        Touch: !1,
        TouchEvent: !1,
        TouchList: !1,
        TrackEvent: !1,
        TransitionEvent: !1,
        TreeWalker: !1,
        UIEvent: !1,
        URL: !1,
        URLSearchParams: !1,
        ValidityState: !1,
        VTTCue: !1,
        WaveShaperNode: !1,
        WebGLActiveInfo: !1,
        WebGLBuffer: !1,
        WebGLContextEvent: !1,
        WebGLFramebuffer: !1,
        WebGLProgram: !1,
        WebGLRenderbuffer: !1,
        WebGLRenderingContext: !1,
        WebGLShader: !1,
        WebGLShaderPrecisionFormat: !1,
        WebGLTexture: !1,
        WebGLUniformLocation: !1,
        WebSocket: !1,
        WheelEvent: !1,
        window: !1,
        Window: !1,
        Worker: !1,
        XDomainRequest: !1,
        XMLDocument: !1,
        XMLHttpRequest: !1,
        XMLHttpRequestEventTarget: !1,
        XMLHttpRequestProgressEvent: !1,
        XMLHttpRequestUpload: !1,
        XMLSerializer: !1,
        XPathEvaluator: !1,
        XPathException: !1,
        XPathExpression: !1,
        XPathNamespace: !1,
        XPathNSResolver: !1,
        XPathResult: !1,
        XSLTProcessor: !1
      },
      worker: {
        applicationCache: !1,
        atob: !1,
        Blob: !1,
        BroadcastChannel: !1,
        btoa: !1,
        Cache: !1,
        caches: !1,
        clearInterval: !1,
        clearTimeout: !1,
        close: !0,
        console: !1,
        fetch: !1,
        FileReaderSync: !1,
        FormData: !1,
        Headers: !1,
        IDBCursor: !1,
        IDBCursorWithValue: !1,
        IDBDatabase: !1,
        IDBFactory: !1,
        IDBIndex: !1,
        IDBKeyRange: !1,
        IDBObjectStore: !1,
        IDBOpenDBRequest: !1,
        IDBRequest: !1,
        IDBTransaction: !1,
        IDBVersionChangeEvent: !1,
        ImageData: !1,
        importScripts: !0,
        indexedDB: !1,
        location: !1,
        MessageChannel: !1,
        MessagePort: !1,
        name: !1,
        navigator: !1,
        Notification: !1,
        onclose: !0,
        onconnect: !0,
        onerror: !0,
        onlanguagechange: !0,
        onmessage: !0,
        onoffline: !0,
        ononline: !0,
        onrejectionhandled: !0,
        onunhandledrejection: !0,
        performance: !1,
        Performance: !1,
        PerformanceEntry: !1,
        PerformanceMark: !1,
        PerformanceMeasure: !1,
        PerformanceNavigation: !1,
        PerformanceResourceTiming: !1,
        PerformanceTiming: !1,
        postMessage: !0,
        Promise: !1,
        Request: !1,
        Response: !1,
        self: !0,
        ServiceWorkerRegistration: !1,
        setInterval: !1,
        setTimeout: !1,
        TextDecoder: !1,
        TextEncoder: !1,
        URL: !1,
        URLSearchParams: !1,
        WebSocket: !1,
        Worker: !1,
        XMLHttpRequest: !1
      },
      node: {
        __dirname: !1,
        __filename: !1,
        arguments: !1,
        Buffer: !1,
        clearImmediate: !1,
        clearInterval: !1,
        clearTimeout: !1,
        console: !1,
        exports: !0,
        GLOBAL: !1,
        global: !1,
        Intl: !1,
        module: !1,
        process: !1,
        require: !1,
        root: !1,
        setImmediate: !1,
        setInterval: !1,
        setTimeout: !1
      },
      commonjs: {
        exports: !0,
        module: !1,
        require: !1,
        global: !1
      },
      amd: {
        define: !1,
        require: !1
      },
      mocha: {
        after: !1,
        afterEach: !1,
        before: !1,
        beforeEach: !1,
        context: !1,
        describe: !1,
        it: !1,
        mocha: !1,
        run: !1,
        setup: !1,
        specify: !1,
        suite: !1,
        suiteSetup: !1,
        suiteTeardown: !1,
        teardown: !1,
        test: !1,
        xcontext: !1,
        xdescribe: !1,
        xit: !1,
        xspecify: !1
      },
      jasmine: {
        afterAll: !1,
        afterEach: !1,
        beforeAll: !1,
        beforeEach: !1,
        describe: !1,
        expect: !1,
        fail: !1,
        fdescribe: !1,
        fit: !1,
        it: !1,
        jasmine: !1,
        pending: !1,
        runs: !1,
        spyOn: !1,
        waits: !1,
        waitsFor: !1,
        xdescribe: !1,
        xit: !1
      },
      jest: {
        afterAll: !1,
        afterEach: !1,
        beforeAll: !1,
        beforeEach: !1,
        check: !1,
        describe: !1,
        expect: !1,
        gen: !1,
        it: !1,
        fit: !1,
        jest: !1,
        pit: !1,
        require: !1,
        test: !1,
        xdescribe: !1,
        xit: !1,
        xtest: !1
      },
      qunit: {
        asyncTest: !1,
        deepEqual: !1,
        equal: !1,
        expect: !1,
        module: !1,
        notDeepEqual: !1,
        notEqual: !1,
        notOk: !1,
        notPropEqual: !1,
        notStrictEqual: !1,
        ok: !1,
        propEqual: !1,
        QUnit: !1,
        raises: !1,
        start: !1,
        stop: !1,
        strictEqual: !1,
        test: !1,
        throws: !1
      },
      phantomjs: {
        console: !0,
        exports: !0,
        phantom: !0,
        require: !0,
        WebPage: !0
      },
      couch: {
        emit: !1,
        exports: !1,
        getRow: !1,
        log: !1,
        module: !1,
        provides: !1,
        require: !1,
        respond: !1,
        send: !1,
        start: !1,
        sum: !1
      },
      rhino: {
        defineClass: !1,
        deserialize: !1,
        gc: !1,
        help: !1,
        importClass: !1,
        importPackage: !1,
        java: !1,
        load: !1,
        loadClass: !1,
        Packages: !1,
        print: !1,
        quit: !1,
        readFile: !1,
        readUrl: !1,
        runCommand: !1,
        seal: !1,
        serialize: !1,
        spawn: !1,
        sync: !1,
        toint32: !1,
        version: !1
      },
      nashorn: {
        __DIR__: !1,
        __FILE__: !1,
        __LINE__: !1,
        com: !1,
        edu: !1,
        exit: !1,
        Java: !1,
        java: !1,
        javafx: !1,
        JavaImporter: !1,
        javax: !1,
        JSAdapter: !1,
        load: !1,
        loadWithNewGlobal: !1,
        org: !1,
        Packages: !1,
        print: !1,
        quit: !1
      },
      wsh: {
        ActiveXObject: !0,
        Enumerator: !0,
        GetObject: !0,
        ScriptEngine: !0,
        ScriptEngineBuildVersion: !0,
        ScriptEngineMajorVersion: !0,
        ScriptEngineMinorVersion: !0,
        VBArray: !0,
        WScript: !0,
        WSH: !0,
        XDomainRequest: !0
      },
      jquery: {
        $: !1,
        jQuery: !1
      },
      yui: {
        Y: !1,
        YUI: !1,
        YUI_config: !1
      },
      shelljs: {
        cat: !1,
        cd: !1,
        chmod: !1,
        config: !1,
        cp: !1,
        dirs: !1,
        echo: !1,
        env: !1,
        error: !1,
        exec: !1,
        exit: !1,
        find: !1,
        grep: !1,
        ls: !1,
        ln: !1,
        mkdir: !1,
        mv: !1,
        popd: !1,
        pushd: !1,
        pwd: !1,
        rm: !1,
        sed: !1,
        set: !1,
        target: !1,
        tempdir: !1,
        test: !1,
        touch: !1,
        which: !1
      },
      prototypejs: {
        $: !1,
        $$: !1,
        $A: !1,
        $break: !1,
        $continue: !1,
        $F: !1,
        $H: !1,
        $R: !1,
        $w: !1,
        Abstract: !1,
        Ajax: !1,
        Autocompleter: !1,
        Builder: !1,
        Class: !1,
        Control: !1,
        Draggable: !1,
        Draggables: !1,
        Droppables: !1,
        Effect: !1,
        Element: !1,
        Enumerable: !1,
        Event: !1,
        Field: !1,
        Form: !1,
        Hash: !1,
        Insertion: !1,
        ObjectRange: !1,
        PeriodicalExecuter: !1,
        Position: !1,
        Prototype: !1,
        Scriptaculous: !1,
        Selector: !1,
        Sortable: !1,
        SortableObserver: !1,
        Sound: !1,
        Template: !1,
        Toggle: !1,
        Try: !1
      },
      meteor: {
        $: !1,
        _: !1,
        Accounts: !1,
        AccountsClient: !1,
        AccountsServer: !1,
        AccountsCommon: !1,
        App: !1,
        Assets: !1,
        Blaze: !1,
        check: !1,
        Cordova: !1,
        DDP: !1,
        DDPServer: !1,
        DDPRateLimiter: !1,
        Deps: !1,
        EJSON: !1,
        Email: !1,
        HTTP: !1,
        Log: !1,
        Match: !1,
        Meteor: !1,
        Mongo: !1,
        MongoInternals: !1,
        Npm: !1,
        Package: !1,
        Plugin: !1,
        process: !1,
        Random: !1,
        ReactiveDict: !1,
        ReactiveVar: !1,
        Router: !1,
        ServiceConfiguration: !1,
        Session: !1,
        share: !1,
        Spacebars: !1,
        Template: !1,
        Tinytest: !1,
        Tracker: !1,
        UI: !1,
        Utils: !1,
        WebApp: !1,
        WebAppInternals: !1
      },
      mongo: {
        _isWindows: !1,
        _rand: !1,
        BulkWriteResult: !1,
        cat: !1,
        cd: !1,
        connect: !1,
        db: !1,
        getHostName: !1,
        getMemInfo: !1,
        hostname: !1,
        ISODate: !1,
        listFiles: !1,
        load: !1,
        ls: !1,
        md5sumFile: !1,
        mkdir: !1,
        Mongo: !1,
        NumberInt: !1,
        NumberLong: !1,
        ObjectId: !1,
        PlanCache: !1,
        print: !1,
        printjson: !1,
        pwd: !1,
        quit: !1,
        removeFile: !1,
        rs: !1,
        sh: !1,
        UUID: !1,
        version: !1,
        WriteResult: !1
      },
      applescript: {
        $: !1,
        Application: !1,
        Automation: !1,
        console: !1,
        delay: !1,
        Library: !1,
        ObjC: !1,
        ObjectSpecifier: !1,
        Path: !1,
        Progress: !1,
        Ref: !1
      },
      serviceworker: {
        caches: !1,
        Cache: !1,
        CacheStorage: !1,
        Client: !1,
        clients: !1,
        Clients: !1,
        ExtendableEvent: !1,
        ExtendableMessageEvent: !1,
        FetchEvent: !1,
        importScripts: !1,
        registration: !1,
        self: !1,
        ServiceWorker: !1,
        ServiceWorkerContainer: !1,
        ServiceWorkerGlobalScope: !1,
        ServiceWorkerMessageEvent: !1,
        ServiceWorkerRegistration: !1,
        skipWaiting: !1,
        WindowClient: !1
      },
      atomtest: {
        advanceClock: !1,
        fakeClearInterval: !1,
        fakeClearTimeout: !1,
        fakeSetInterval: !1,
        fakeSetTimeout: !1,
        resetTimeouts: !1,
        waitsForPromise: !1
      },
      embertest: {
        andThen: !1,
        click: !1,
        currentPath: !1,
        currentRouteName: !1,
        currentURL: !1,
        fillIn: !1,
        find: !1,
        findWithAssert: !1,
        keyEvent: !1,
        pauseTest: !1,
        triggerEvent: !1,
        visit: !1
      },
      protractor: {
        $: !1,
        $$: !1,
        browser: !1,
        By: !1,
        by: !1,
        DartObject: !1,
        element: !1,
        protractor: !1
      },
      "shared-node-browser": {
        clearInterval: !1,
        clearTimeout: !1,
        console: !1,
        setInterval: !1,
        setTimeout: !1
      },
      webextensions: {
        browser: !1,
        chrome: !1,
        opr: !1
      },
      greasemonkey: {
        GM_addStyle: !1,
        GM_deleteValue: !1,
        GM_getResourceText: !1,
        GM_getResourceURL: !1,
        GM_getValue: !1,
        GM_info: !1,
        GM_listValues: !1,
        GM_log: !1,
        GM_openInTab: !1,
        GM_registerMenuCommand: !1,
        GM_setClipboard: !1,
        GM_setValue: !1,
        GM_xmlhttpRequest: !1,
        unsafeWindow: !1
      }
    };
  }), a.registerDynamic("12a", ["129"], !0, function(a, b, c) {
    this || self;
    return c.exports = a("129"), c.exports;
  }), a.registerDynamic("12b", ["d", "b8", "b3", "17", "f", "87", "66", "11a", "b4", "ba", "6", "11b", "12a", "9", "12c", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a, b, c) {
      for (var d = I.scope.get(a.node) || [],
          e = d,
          f = Array.isArray(e),
          g = 0,
          e = f ? e : (0, p.default)(e); ; ) {
        var h;
        if (f) {
          if (g >= e.length)
            break;
          h = e[g++];
        } else {
          if (g = e.next(), g.done)
            break;
          h = g.value;
        }
        var i = h;
        if (i.parent === b && i.path === a)
          return i;
      }
      d.push(c), I.scope.has(a.node) || I.scope.set(a.node, d);
    }
    a("3"), this || self;
    b.__esModule = !0;
    var g = a("d"),
        h = e(g),
        i = a("b8"),
        j = e(i),
        k = a("b3"),
        l = e(k),
        m = a("17"),
        n = e(m),
        o = a("f"),
        p = e(o),
        q = a("87"),
        r = e(q),
        s = a("66"),
        t = e(s),
        u = a("11a"),
        v = e(u),
        w = a("b4"),
        x = e(w),
        y = a("ba"),
        z = e(y),
        A = a("6"),
        B = d(A),
        C = a("11b"),
        D = e(C),
        E = a("12a"),
        F = e(E),
        G = a("9"),
        H = d(G),
        I = a("12c"),
        J = 0,
        K = {
          For: function(a) {
            for (var b = H.FOR_INIT_KEYS,
                c = Array.isArray(b),
                d = 0,
                b = c ? b : (0, p.default)(b); ; ) {
              var e;
              if (c) {
                if (d >= b.length)
                  break;
                e = b[d++];
              } else {
                if (d = b.next(), d.done)
                  break;
                e = d.value;
              }
              var f = e,
                  g = a.get(f);
              g.isVar() && a.scope.getFunctionParent().registerBinding("var", g);
            }
          },
          Declaration: function(a) {
            a.isBlockScoped() || a.isExportDeclaration() && a.get("declaration").isDeclaration() || a.scope.getFunctionParent().registerDeclaration(a);
          },
          ReferencedIdentifier: function(a, b) {
            b.references.push(a);
          },
          ForXStatement: function(a, b) {
            var c = a.get("left");
            (c.isPattern() || c.isIdentifier()) && b.constantViolations.push(c);
          },
          ExportDeclaration: {exit: function(a) {
              var b = a.node,
                  c = a.scope,
                  d = b.declaration;
              if (H.isClassDeclaration(d) || H.isFunctionDeclaration(d)) {
                var e = d.id;
                if (!e)
                  return;
                var f = c.getBinding(e.name);
                f && f.reference(a);
              } else if (H.isVariableDeclaration(d))
                for (var g = d.declarations,
                    h = Array.isArray(g),
                    i = 0,
                    g = h ? g : (0, p.default)(g); ; ) {
                  var j;
                  if (h) {
                    if (i >= g.length)
                      break;
                    j = g[i++];
                  } else {
                    if (i = g.next(), i.done)
                      break;
                    j = i.value;
                  }
                  var k = j,
                      l = H.getBindingIdentifiers(k);
                  for (var m in l) {
                    var n = c.getBinding(m);
                    n && n.reference(a);
                  }
                }
            }},
          LabeledStatement: function(a) {
            a.scope.getProgramParent().addGlobal(a.node), a.scope.getBlockParent().registerDeclaration(a);
          },
          AssignmentExpression: function(a, b) {
            b.assignments.push(a);
          },
          UpdateExpression: function(a, b) {
            b.constantViolations.push(a.get("argument"));
          },
          UnaryExpression: function(a, b) {
            "delete" === a.node.operator && b.constantViolations.push(a.get("argument"));
          },
          BlockScoped: function(a) {
            var b = a.scope;
            b.path === a && (b = b.parent), b.getBlockParent().registerDeclaration(a);
          },
          ClassDeclaration: function(a) {
            var b = a.node.id;
            if (b) {
              var c = b.name;
              a.scope.bindings[c] = a.scope.getBinding(c);
            }
          },
          Block: function(a) {
            for (var b = a.get("body"),
                c = b,
                d = Array.isArray(c),
                e = 0,
                c = d ? c : (0, p.default)(c); ; ) {
              var f;
              if (d) {
                if (e >= c.length)
                  break;
                f = c[e++];
              } else {
                if (e = c.next(), e.done)
                  break;
                f = e.value;
              }
              var g = f;
              g.isFunctionDeclaration() && a.scope.getBlockParent().registerDeclaration(g);
            }
          }
        },
        L = 0,
        M = function() {
          function a(b, c) {
            if ((0, n.default)(this, a), c && c.block === b.node)
              return c;
            var d = f(b, c, this);
            return d ? d : (this.uid = L++, this.parent = c, this.hub = b.hub, this.parentBlock = b.parent, this.block = b.node, this.path = b, void(this.labels = new l.default));
          }
          return a.prototype.traverse = function(a, b, c) {
            (0, x.default)(a, b, this, c, this.path);
          }, a.prototype.generateDeclaredUidIdentifier = function() {
            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "temp",
                b = this.generateUidIdentifier(a);
            return this.push({id: b}), b;
          }, a.prototype.generateUidIdentifier = function() {
            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "temp";
            return H.identifier(this.generateUid(a));
          }, a.prototype.generateUid = function() {
            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "temp";
            a = H.toIdentifier(a).replace(/^_+/, "").replace(/[0-9]+$/g, "");
            var b = void 0,
                c = 0;
            do
              b = this._generateUid(a, c), c++;
 while (this.hasLabel(b) || this.hasBinding(b) || this.hasGlobal(b) || this.hasReference(b));
            var d = this.getProgramParent();
            return d.references[b] = !0, d.uids[b] = !0, b;
          }, a.prototype._generateUid = function(a, b) {
            var c = a;
            return b > 1 && (c += b), "_" + c;
          }, a.prototype.generateUidIdentifierBasedOnNode = function(a, b) {
            var c = a;
            H.isAssignmentExpression(a) ? c = a.left : H.isVariableDeclarator(a) ? c = a.id : (H.isObjectProperty(c) || H.isObjectMethod(c)) && (c = c.key);
            var d = [],
                e = function a(b) {
                  if (H.isModuleDeclaration(b))
                    if (b.source)
                      a(b.source);
                    else if (b.specifiers && b.specifiers.length)
                      for (var c = b.specifiers,
                          e = Array.isArray(c),
                          f = 0,
                          c = e ? c : (0, p.default)(c); ; ) {
                        var g;
                        if (e) {
                          if (f >= c.length)
                            break;
                          g = c[f++];
                        } else {
                          if (f = c.next(), f.done)
                            break;
                          g = f.value;
                        }
                        var h = g;
                        a(h);
                      }
                    else
                      b.declaration && a(b.declaration);
                  else if (H.isModuleSpecifier(b))
                    a(b.local);
                  else if (H.isMemberExpression(b))
                    a(b.object), a(b.property);
                  else if (H.isIdentifier(b))
                    d.push(b.name);
                  else if (H.isLiteral(b))
                    d.push(b.value);
                  else if (H.isCallExpression(b))
                    a(b.callee);
                  else if (H.isObjectExpression(b) || H.isObjectPattern(b))
                    for (var i = b.properties,
                        j = Array.isArray(i),
                        k = 0,
                        i = j ? i : (0, p.default)(i); ; ) {
                      var l;
                      if (j) {
                        if (k >= i.length)
                          break;
                        l = i[k++];
                      } else {
                        if (k = i.next(), k.done)
                          break;
                        l = k.value;
                      }
                      var m = l;
                      a(m.key || m.argument);
                    }
                };
            e(c);
            var f = d.join("$");
            return f = f.replace(/^_/, "") || b || "ref", this.generateUidIdentifier(f.slice(0, 20));
          }, a.prototype.isStatic = function(a) {
            if (H.isThisExpression(a) || H.isSuper(a))
              return !0;
            if (H.isIdentifier(a)) {
              var b = this.getBinding(a.name);
              return b ? b.constant : this.hasBinding(a.name);
            }
            return !1;
          }, a.prototype.maybeGenerateMemoised = function(a, b) {
            if (this.isStatic(a))
              return null;
            var c = this.generateUidIdentifierBasedOnNode(a);
            return b || this.push({id: c}), c;
          }, a.prototype.checkBlockScopedCollisions = function(a, b, c, d) {
            if ("param" !== b && ("hoisted" !== b || "let" !== a.kind)) {
              var e = !1;
              if (e || (e = "let" === b || "let" === a.kind || "const" === a.kind || "module" === a.kind), e || (e = "param" === a.kind && ("let" === b || "const" === b)), e)
                throw this.hub.file.buildCodeFrameError(d, B.get("scopeDuplicateDeclaration", c), TypeError);
            }
          }, a.prototype.rename = function(a, b, c) {
            var d = this.getBinding(a);
            if (d)
              return b = b || this.generateUidIdentifier(a).name, new v.default(d, a, b).rename(c);
          }, a.prototype._renameFromMap = function(a, b, c, d) {
            a[b] && (a[c] = d, a[b] = null);
          }, a.prototype.dump = function() {
            var a = (0, t.default)("-", 60);
            console.log(a);
            var b = this;
            do {
              console.log("#", b.block.type);
              for (var c in b.bindings) {
                var d = b.bindings[c];
                console.log(" -", c, {
                  constant: d.constant,
                  references: d.references,
                  violations: d.constantViolations.length,
                  kind: d.kind
                });
              }
            } while (b = b.parent);
            console.log(a);
          }, a.prototype.toArray = function(a, b) {
            var c = this.hub.file;
            if (H.isIdentifier(a)) {
              var d = this.getBinding(a.name);
              if (d && d.constant && d.path.isGenericType("Array"))
                return a;
            }
            if (H.isArrayExpression(a))
              return a;
            if (H.isIdentifier(a, {name: "arguments"}))
              return H.callExpression(H.memberExpression(H.memberExpression(H.memberExpression(H.identifier("Array"), H.identifier("prototype")), H.identifier("slice")), H.identifier("call")), [a]);
            var e = "toArray",
                f = [a];
            return b === !0 ? e = "toConsumableArray" : b && (f.push(H.numericLiteral(b)), e = "slicedToArray"), H.callExpression(c.addHelper(e), f);
          }, a.prototype.hasLabel = function(a) {
            return !!this.getLabel(a);
          }, a.prototype.getLabel = function(a) {
            return this.labels.get(a);
          }, a.prototype.registerLabel = function(a) {
            this.labels.set(a.node.label.name, a);
          }, a.prototype.registerDeclaration = function(a) {
            if (a.isLabeledStatement())
              this.registerLabel(a);
            else if (a.isFunctionDeclaration())
              this.registerBinding("hoisted", a.get("id"), a);
            else if (a.isVariableDeclaration())
              for (var b = a.get("declarations"),
                  c = b,
                  d = Array.isArray(c),
                  e = 0,
                  c = d ? c : (0, p.default)(c); ; ) {
                var f;
                if (d) {
                  if (e >= c.length)
                    break;
                  f = c[e++];
                } else {
                  if (e = c.next(), e.done)
                    break;
                  f = e.value;
                }
                var g = f;
                this.registerBinding(a.node.kind, g);
              }
            else if (a.isClassDeclaration())
              this.registerBinding("let", a);
            else if (a.isImportDeclaration())
              for (var h = a.get("specifiers"),
                  i = h,
                  j = Array.isArray(i),
                  k = 0,
                  i = j ? i : (0, p.default)(i); ; ) {
                var l;
                if (j) {
                  if (k >= i.length)
                    break;
                  l = i[k++];
                } else {
                  if (k = i.next(), k.done)
                    break;
                  l = k.value;
                }
                var m = l;
                this.registerBinding("module", m);
              }
            else if (a.isExportDeclaration()) {
              var n = a.get("declaration");
              (n.isClassDeclaration() || n.isFunctionDeclaration() || n.isVariableDeclaration()) && this.registerDeclaration(n);
            } else
              this.registerBinding("unknown", a);
          }, a.prototype.buildUndefinedNode = function() {
            return this.hasBinding("undefined") ? H.unaryExpression("void", H.numericLiteral(0), !0) : H.identifier("undefined");
          }, a.prototype.registerConstantViolation = function(a) {
            var b = a.getBindingIdentifiers();
            for (var c in b) {
              var d = this.getBinding(c);
              d && d.reassign(a);
            }
          }, a.prototype.registerBinding = function(a, b) {
            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : b;
            if (!a)
              throw new ReferenceError("no `kind`");
            if (b.isVariableDeclaration())
              for (var d = b.get("declarations"),
                  e = d,
                  f = Array.isArray(e),
                  g = 0,
                  e = f ? e : (0, p.default)(e); ; ) {
                var h;
                if (f) {
                  if (g >= e.length)
                    break;
                  h = e[g++];
                } else {
                  if (g = e.next(), g.done)
                    break;
                  h = g.value;
                }
                var i = h;
                this.registerBinding(a, i);
              }
            else {
              var j = this.getProgramParent(),
                  k = b.getBindingIdentifiers(!0);
              for (var l in k)
                for (var m = k[l],
                    n = Array.isArray(m),
                    o = 0,
                    m = n ? m : (0, p.default)(m); ; ) {
                  var q;
                  if (n) {
                    if (o >= m.length)
                      break;
                    q = m[o++];
                  } else {
                    if (o = m.next(), o.done)
                      break;
                    q = o.value;
                  }
                  var r = q,
                      s = this.getOwnBinding(l);
                  if (s) {
                    if (s.identifier === r)
                      continue;
                    this.checkBlockScopedCollisions(s, a, l, r);
                  }
                  s && s.path.isFlow() && (s = null), j.references[l] = !0, this.bindings[l] = new D.default({
                    identifier: r,
                    existing: s,
                    scope: this,
                    path: c,
                    kind: a
                  });
                }
            }
          }, a.prototype.addGlobal = function(a) {
            this.globals[a.name] = a;
          }, a.prototype.hasUid = function(a) {
            var b = this;
            do
              if (b.uids[a])
                return !0;
 while (b = b.parent);
            return !1;
          }, a.prototype.hasGlobal = function(a) {
            var b = this;
            do
              if (b.globals[a])
                return !0;
 while (b = b.parent);
            return !1;
          }, a.prototype.hasReference = function(a) {
            var b = this;
            do
              if (b.references[a])
                return !0;
 while (b = b.parent);
            return !1;
          }, a.prototype.isPure = function(a, b) {
            if (H.isIdentifier(a)) {
              var c = this.getBinding(a.name);
              return !!c && (!b || c.constant);
            }
            if (H.isClass(a))
              return !(a.superClass && !this.isPure(a.superClass, b)) && this.isPure(a.body, b);
            if (H.isClassBody(a)) {
              for (var d = a.body,
                  e = Array.isArray(d),
                  f = 0,
                  d = e ? d : (0, p.default)(d); ; ) {
                var g;
                if (e) {
                  if (f >= d.length)
                    break;
                  g = d[f++];
                } else {
                  if (f = d.next(), f.done)
                    break;
                  g = f.value;
                }
                var h = g;
                if (!this.isPure(h, b))
                  return !1;
              }
              return !0;
            }
            if (H.isBinary(a))
              return this.isPure(a.left, b) && this.isPure(a.right, b);
            if (H.isArrayExpression(a)) {
              for (var i = a.elements,
                  j = Array.isArray(i),
                  k = 0,
                  i = j ? i : (0, p.default)(i); ; ) {
                var l;
                if (j) {
                  if (k >= i.length)
                    break;
                  l = i[k++];
                } else {
                  if (k = i.next(), k.done)
                    break;
                  l = k.value;
                }
                var m = l;
                if (!this.isPure(m, b))
                  return !1;
              }
              return !0;
            }
            if (H.isObjectExpression(a)) {
              for (var n = a.properties,
                  o = Array.isArray(n),
                  q = 0,
                  n = o ? n : (0, p.default)(n); ; ) {
                var r;
                if (o) {
                  if (q >= n.length)
                    break;
                  r = n[q++];
                } else {
                  if (q = n.next(), q.done)
                    break;
                  r = q.value;
                }
                var s = r;
                if (!this.isPure(s, b))
                  return !1;
              }
              return !0;
            }
            return H.isClassMethod(a) ? !(a.computed && !this.isPure(a.key, b)) && ("get" !== a.kind && "set" !== a.kind) : H.isClassProperty(a) || H.isObjectProperty(a) ? !(a.computed && !this.isPure(a.key, b)) && this.isPure(a.value, b) : H.isUnaryExpression(a) ? this.isPure(a.argument, b) : H.isPureish(a);
          }, a.prototype.setData = function(a, b) {
            return this.data[a] = b;
          }, a.prototype.getData = function(a) {
            var b = this;
            do {
              var c = b.data[a];
              if (null != c)
                return c;
            } while (b = b.parent);
          }, a.prototype.removeData = function(a) {
            var b = this;
            do {
              var c = b.data[a];
              null != c && (b.data[a] = null);
            } while (b = b.parent);
          }, a.prototype.init = function() {
            this.references || this.crawl();
          }, a.prototype.crawl = function() {
            J++, this._crawl(), J--;
          }, a.prototype._crawl = function() {
            var a = this.path;
            if (this.references = (0, j.default)(null), this.bindings = (0, j.default)(null), this.globals = (0, j.default)(null), this.uids = (0, j.default)(null), this.data = (0, j.default)(null), a.isLoop())
              for (var b = H.FOR_INIT_KEYS,
                  c = Array.isArray(b),
                  d = 0,
                  b = c ? b : (0, p.default)(b); ; ) {
                var e;
                if (c) {
                  if (d >= b.length)
                    break;
                  e = b[d++];
                } else {
                  if (d = b.next(), d.done)
                    break;
                  e = d.value;
                }
                var f = e,
                    g = a.get(f);
                g.isBlockScoped() && this.registerBinding(g.node.kind, g);
              }
            if (a.isFunctionExpression() && a.has("id") && (a.get("id").node[H.NOT_LOCAL_BINDING] || this.registerBinding("local", a.get("id"), a)), a.isClassExpression() && a.has("id") && (a.get("id").node[H.NOT_LOCAL_BINDING] || this.registerBinding("local", a)), a.isFunction())
              for (var h = a.get("params"),
                  i = h,
                  k = Array.isArray(i),
                  l = 0,
                  i = k ? i : (0, p.default)(i); ; ) {
                var m;
                if (k) {
                  if (l >= i.length)
                    break;
                  m = i[l++];
                } else {
                  if (l = i.next(), l.done)
                    break;
                  m = l.value;
                }
                var n = m;
                this.registerBinding("param", n);
              }
            a.isCatchClause() && this.registerBinding("let", a);
            var o = this.getProgramParent();
            if (!o.crawling) {
              var q = {
                references: [],
                constantViolations: [],
                assignments: []
              };
              this.crawling = !0, a.traverse(K, q), this.crawling = !1;
              for (var r = q.assignments,
                  s = Array.isArray(r),
                  t = 0,
                  r = s ? r : (0, p.default)(r); ; ) {
                var u;
                if (s) {
                  if (t >= r.length)
                    break;
                  u = r[t++];
                } else {
                  if (t = r.next(), t.done)
                    break;
                  u = t.value;
                }
                var v = u,
                    w = v.getBindingIdentifiers(),
                    x = void 0;
                for (var y in w)
                  v.scope.getBinding(y) || (x = x || v.scope.getProgramParent(), x.addGlobal(w[y]));
                v.scope.registerConstantViolation(v);
              }
              for (var z = q.references,
                  A = Array.isArray(z),
                  B = 0,
                  z = A ? z : (0, p.default)(z); ; ) {
                var C;
                if (A) {
                  if (B >= z.length)
                    break;
                  C = z[B++];
                } else {
                  if (B = z.next(), B.done)
                    break;
                  C = B.value;
                }
                var D = C,
                    E = D.scope.getBinding(D.node.name);
                E ? E.reference(D) : D.scope.getProgramParent().addGlobal(D.node);
              }
              for (var F = q.constantViolations,
                  G = Array.isArray(F),
                  I = 0,
                  F = G ? F : (0, p.default)(F); ; ) {
                var J;
                if (G) {
                  if (I >= F.length)
                    break;
                  J = F[I++];
                } else {
                  if (I = F.next(), I.done)
                    break;
                  J = I.value;
                }
                var L = J;
                L.scope.registerConstantViolation(L);
              }
            }
          }, a.prototype.push = function(a) {
            var b = this.path;
            b.isBlockStatement() || b.isProgram() || (b = this.getBlockParent().path), b.isSwitchStatement() && (b = this.getFunctionParent().path), (b.isLoop() || b.isCatchClause() || b.isFunction()) && (H.ensureBlock(b.node), b = b.get("body"));
            var c = a.unique,
                d = a.kind || "var",
                e = null == a._blockHoist ? 2 : a._blockHoist,
                f = "declaration:" + d + ":" + e,
                g = !c && b.getData(f);
            if (!g) {
              var h = H.variableDeclaration(d, []);
              h._generated = !0, h._blockHoist = e;
              var i = b.unshiftContainer("body", [h]);
              g = i[0], c || b.setData(f, g);
            }
            var j = H.variableDeclarator(a.id, a.init);
            g.node.declarations.push(j), this.registerBinding(d, g.get("declarations").pop());
          }, a.prototype.getProgramParent = function() {
            var a = this;
            do
              if (a.path.isProgram())
                return a;
 while (a = a.parent);
            throw new Error("We couldn't find a Function or Program...");
          }, a.prototype.getFunctionParent = function() {
            var a = this;
            do
              if (a.path.isFunctionParent())
                return a;
 while (a = a.parent);
            throw new Error("We couldn't find a Function or Program...");
          }, a.prototype.getBlockParent = function() {
            var a = this;
            do
              if (a.path.isBlockParent())
                return a;
 while (a = a.parent);
            throw new Error("We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...");
          }, a.prototype.getAllBindings = function() {
            var a = (0, j.default)(null),
                b = this;
            do
              (0, z.default)(a, b.bindings), b = b.parent;
 while (b);
            return a;
          }, a.prototype.getAllBindingsOfKind = function() {
            for (var a = (0, j.default)(null),
                b = arguments,
                c = Array.isArray(b),
                d = 0,
                b = c ? b : (0, p.default)(b); ; ) {
              var e;
              if (c) {
                if (d >= b.length)
                  break;
                e = b[d++];
              } else {
                if (d = b.next(), d.done)
                  break;
                e = d.value;
              }
              var f = e,
                  g = this;
              do {
                for (var h in g.bindings) {
                  var i = g.bindings[h];
                  i.kind === f && (a[h] = i);
                }
                g = g.parent;
              } while (g);
            }
            return a;
          }, a.prototype.bindingIdentifierEquals = function(a, b) {
            return this.getBindingIdentifier(a) === b;
          }, a.prototype.warnOnFlowBinding = function(a) {
            return 0 === J && a && a.path.isFlow() && console.warn("\n        You or one of the Babel plugins you are using are using Flow declarations as bindings.\n        Support for this will be removed in version 6.8. To find out the caller, grep for this\n        message and change it to a `console.trace()`.\n      "), a;
          }, a.prototype.getBinding = function(a) {
            var b = this;
            do {
              var c = b.getOwnBinding(a);
              if (c)
                return this.warnOnFlowBinding(c);
            } while (b = b.parent);
          }, a.prototype.getOwnBinding = function(a) {
            return this.warnOnFlowBinding(this.bindings[a]);
          }, a.prototype.getBindingIdentifier = function(a) {
            var b = this.getBinding(a);
            return b && b.identifier;
          }, a.prototype.getOwnBindingIdentifier = function(a) {
            var b = this.bindings[a];
            return b && b.identifier;
          }, a.prototype.hasOwnBinding = function(a) {
            return !!this.getOwnBinding(a);
          }, a.prototype.hasBinding = function(b, c) {
            return !!b && (!!this.hasOwnBinding(b) || (!!this.parentHasBinding(b, c) || (!!this.hasUid(b) || (!(c || !(0, r.default)(a.globals, b)) || !(c || !(0, r.default)(a.contextVariables, b))))));
          }, a.prototype.parentHasBinding = function(a, b) {
            return this.parent && this.parent.hasBinding(a, b);
          }, a.prototype.moveBindingTo = function(a, b) {
            var c = this.getBinding(a);
            c && (c.scope.removeOwnBinding(a), c.scope = b, b.bindings[a] = c);
          }, a.prototype.removeOwnBinding = function(a) {
            delete this.bindings[a];
          }, a.prototype.removeBinding = function(a) {
            var b = this.getBinding(a);
            b && b.scope.removeOwnBinding(a);
            var c = this;
            do
              c.uids[a] && (c.uids[a] = !1);
 while (c = c.parent);
          }, a;
        }();
    return M.globals = (0, h.default)(F.default.builtin), M.contextVariables = ["arguments", "undefined", "Infinity", "NaN"], b.default = M, c.exports = b.default, c.exports;
  }), a.registerDynamic("12d", ["f", "9", "12e", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      for (var b = this; b = b.parentPath; )
        if (a(b))
          return b;
      return null;
    }
    function g(a) {
      var b = this;
      do
        if (a(b))
          return b;
 while (b = b.parentPath);
      return null;
    }
    function h() {
      return this.findParent(function(a) {
        return a.isFunction() || a.isProgram();
      });
    }
    function i() {
      var a = this;
      do
        if (Array.isArray(a.container))
          return a;
 while (a = a.parentPath);
    }
    function j(a) {
      return this.getDeepestCommonAncestorFrom(a, function(a, b, c) {
        for (var d = void 0,
            e = r.VISITOR_KEYS[a.type],
            f = c,
            g = Array.isArray(f),
            h = 0,
            f = g ? f : (0, p.default)(f); ; ) {
          var i;
          if (g) {
            if (h >= f.length)
              break;
            i = f[h++];
          } else {
            if (h = f.next(), h.done)
              break;
            i = h.value;
          }
          var j = i,
              k = j[b + 1];
          if (d)
            if (k.listKey && d.listKey === k.listKey && k.key < d.key)
              d = k;
            else {
              var l = e.indexOf(d.parentKey),
                  m = e.indexOf(k.parentKey);
              l > m && (d = k);
            }
          else
            d = k;
        }
        return d;
      });
    }
    function k(a, b) {
      var c = this;
      if (!a.length)
        return this;
      if (1 === a.length)
        return a[0];
      var d = 1 / 0,
          e = void 0,
          f = void 0,
          g = a.map(function(a) {
            var b = [];
            do
              b.unshift(a);
 while ((a = a.parentPath) && a !== c);
            return b.length < d && (d = b.length), b;
          }),
          h = g[0];
      a: for (var i = 0; i < d; i++) {
        for (var j = h[i],
            k = g,
            l = Array.isArray(k),
            m = 0,
            k = l ? k : (0, p.default)(k); ; ) {
          var n;
          if (l) {
            if (m >= k.length)
              break;
            n = k[m++];
          } else {
            if (m = k.next(), m.done)
              break;
            n = m.value;
          }
          var o = n;
          if (o[i] !== j)
            break a;
        }
        e = i, f = j;
      }
      if (f)
        return b ? b(f, e, g) : f;
      throw new Error("Couldn't find intersection");
    }
    function l() {
      var a = this,
          b = [];
      do
        b.push(a);
 while (a = a.parentPath);
      return b;
    }
    function m() {
      for (var a = this; a; ) {
        for (var b = arguments,
            c = Array.isArray(b),
            d = 0,
            b = c ? b : (0, p.default)(b); ; ) {
          var e;
          if (c) {
            if (d >= b.length)
              break;
            e = b[d++];
          } else {
            if (d = b.next(), d.done)
              break;
            e = d.value;
          }
          var f = e;
          if (a.node.type === f)
            return !0;
        }
        a = a.parentPath;
      }
      return !1;
    }
    function n(a) {
      var b = this.isFunction() ? this : this.findParent(function(a) {
        return a.isFunction();
      });
      if (b) {
        if (b.isFunctionExpression() || b.isFunctionDeclaration()) {
          var c = b.node.shadow;
          if (c && (!a || c[a] !== !1))
            return b;
        } else if (b.isArrowFunctionExpression())
          return b;
        return null;
      }
    }
    a("3"), this || self;
    b.__esModule = !0;
    var o = a("f"),
        p = e(o);
    b.findParent = f, b.find = g, b.getFunctionParent = h, b.getStatementParent = i, b.getEarliestCommonAncestorFrom = j, b.getDeepestCommonAncestorFrom = k, b.getAncestry = l, b.inType = m, b.inShadow = n;
    var q = a("9"),
        r = d(q),
        s = a("12e");
    e(s);
    return c.exports;
  }), a.registerDynamic("12f", ["f", "9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a, b) {
      var c = a.scope.getBinding(b),
          d = [];
      a.typeAnnotation = n.unionTypeAnnotation(d);
      var e = [],
          f = g(c, a, e),
          h = j(a, b);
      if (h && !function() {
        var a = g(c, h.ifStatement);
        f = f.filter(function(b) {
          return a.indexOf(b) < 0;
        }), d.push(h.typeAnnotation);
      }(), f.length) {
        f = f.concat(e);
        for (var i = f,
            k = Array.isArray(i),
            m = 0,
            i = k ? i : (0, l.default)(i); ; ) {
          var o;
          if (k) {
            if (m >= i.length)
              break;
            o = i[m++];
          } else {
            if (m = i.next(), m.done)
              break;
            o = m.value;
          }
          var p = o;
          d.push(p.getTypeAnnotation());
        }
      }
      if (d.length)
        return n.createUnionTypeAnnotation(d);
    }
    function g(a, b, c) {
      var d = a.constantViolations.slice();
      return d.unshift(a.path), d.filter(function(a) {
        a = a.resolve();
        var d = a._guessExecutionStatusRelativeTo(b);
        return c && "function" === d && c.push(a), "before" === d;
      });
    }
    function h(a, b) {
      var c = b.node.operator,
          d = b.get("right").resolve(),
          e = b.get("left").resolve(),
          f = void 0;
      if (e.isIdentifier({name: a}) ? f = d : d.isIdentifier({name: a}) && (f = e), f)
        return "===" === c ? f.getTypeAnnotation() : n.BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(c) >= 0 ? n.numberTypeAnnotation() : void 0;
      if ("===" === c) {
        var g = void 0,
            h = void 0;
        if (e.isUnaryExpression({operator: "typeof"}) ? (g = e, h = d) : d.isUnaryExpression({operator: "typeof"}) && (g = d, h = e), (h || g) && (h = h.resolve(), h.isLiteral())) {
          var i = h.node.value;
          if ("string" == typeof i && g.get("argument").isIdentifier({name: a}))
            return n.createTypeAnnotationBasedOnTypeof(h.node.value);
        }
      }
    }
    function i(a) {
      for (var b = void 0; b = a.parentPath; ) {
        if (b.isIfStatement() || b.isConditionalExpression())
          return "test" === a.key ? void 0 : b;
        a = b;
      }
    }
    function j(a, b) {
      var c = i(a);
      if (c) {
        var d = c.get("test"),
            e = [d],
            f = [];
        do {
          var g = e.shift().resolve();
          if (g.isLogicalExpression() && (e.push(g.get("left")), e.push(g.get("right"))), g.isBinaryExpression()) {
            var k = h(b, g);
            k && f.push(k);
          }
        } while (e.length);
        return f.length ? {
          typeAnnotation: n.createUnionTypeAnnotation(f),
          ifStatement: c
        } : j(c, b);
      }
    }
    a("3"), this || self;
    b.__esModule = !0;
    var k = a("f"),
        l = e(k);
    b.default = function(a) {
      if (this.isReferenced()) {
        var b = this.scope.getBinding(a.name);
        return b ? b.identifier.typeAnnotation ? b.identifier.typeAnnotation : f(this, a.name) : "undefined" === a.name ? n.voidTypeAnnotation() : "NaN" === a.name || "Infinity" === a.name ? n.numberTypeAnnotation() : void("arguments" === a.name);
      }
    };
    var m = a("9"),
        n = d(m);
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("130", ["12f", "9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f() {
      var a = this.get("id");
      return a.isIdentifier() ? this.get("init").getTypeAnnotation() : void 0;
    }
    function g(a) {
      return a.typeAnnotation;
    }
    function h(a) {
      if (this.get("callee").isIdentifier())
        return E.genericTypeAnnotation(a.callee);
    }
    function i() {
      return E.stringTypeAnnotation();
    }
    function j(a) {
      var b = a.operator;
      return "void" === b ? E.voidTypeAnnotation() : E.NUMBER_UNARY_OPERATORS.indexOf(b) >= 0 ? E.numberTypeAnnotation() : E.STRING_UNARY_OPERATORS.indexOf(b) >= 0 ? E.stringTypeAnnotation() : E.BOOLEAN_UNARY_OPERATORS.indexOf(b) >= 0 ? E.booleanTypeAnnotation() : void 0;
    }
    function k(a) {
      var b = a.operator;
      if (E.NUMBER_BINARY_OPERATORS.indexOf(b) >= 0)
        return E.numberTypeAnnotation();
      if (E.BOOLEAN_BINARY_OPERATORS.indexOf(b) >= 0)
        return E.booleanTypeAnnotation();
      if ("+" === b) {
        var c = this.get("right"),
            d = this.get("left");
        return d.isBaseType("number") && c.isBaseType("number") ? E.numberTypeAnnotation() : d.isBaseType("string") || c.isBaseType("string") ? E.stringTypeAnnotation() : E.unionTypeAnnotation([E.stringTypeAnnotation(), E.numberTypeAnnotation()]);
      }
    }
    function l() {
      return E.createUnionTypeAnnotation([this.get("left").getTypeAnnotation(), this.get("right").getTypeAnnotation()]);
    }
    function m() {
      return E.createUnionTypeAnnotation([this.get("consequent").getTypeAnnotation(), this.get("alternate").getTypeAnnotation()]);
    }
    function n() {
      return this.get("expressions").pop().getTypeAnnotation();
    }
    function o() {
      return this.get("right").getTypeAnnotation();
    }
    function p(a) {
      var b = a.operator;
      if ("++" === b || "--" === b)
        return E.numberTypeAnnotation();
    }
    function q() {
      return E.stringTypeAnnotation();
    }
    function r() {
      return E.numberTypeAnnotation();
    }
    function s() {
      return E.booleanTypeAnnotation();
    }
    function t() {
      return E.nullLiteralTypeAnnotation();
    }
    function u() {
      return E.genericTypeAnnotation(E.identifier("RegExp"));
    }
    function v() {
      return E.genericTypeAnnotation(E.identifier("Object"));
    }
    function w() {
      return E.genericTypeAnnotation(E.identifier("Array"));
    }
    function x() {
      return w();
    }
    function y() {
      return E.genericTypeAnnotation(E.identifier("Function"));
    }
    function z() {
      return B(this.get("callee"));
    }
    function A() {
      return B(this.get("tag"));
    }
    function B(a) {
      if (a = a.resolve(), a.isFunction()) {
        if (a.is("async"))
          return a.is("generator") ? E.genericTypeAnnotation(E.identifier("AsyncIterator")) : E.genericTypeAnnotation(E.identifier("Promise"));
        if (a.node.returnType)
          return a.node.returnType;
      }
    }
    a("3"), this || self;
    b.__esModule = !0, b.ClassDeclaration = b.ClassExpression = b.FunctionDeclaration = b.ArrowFunctionExpression = b.FunctionExpression = b.Identifier = void 0;
    var C = a("12f");
    Object.defineProperty(b, "Identifier", {
      enumerable: !0,
      get: function() {
        return e(C).default;
      }
    }), b.VariableDeclarator = f, b.TypeCastExpression = g, b.NewExpression = h, b.TemplateLiteral = i, b.UnaryExpression = j, b.BinaryExpression = k, b.LogicalExpression = l, b.ConditionalExpression = m, b.SequenceExpression = n, b.AssignmentExpression = o, b.UpdateExpression = p, b.StringLiteral = q, b.NumericLiteral = r, b.BooleanLiteral = s, b.NullLiteral = t, b.RegExpLiteral = u, b.ObjectExpression = v, b.ArrayExpression = w, b.RestElement = x, b.CallExpression = z, b.TaggedTemplateExpression = A;
    var D = a("9"),
        E = d(D);
    return g.validParent = !0, x.validParent = !0, b.FunctionExpression = y, b.ArrowFunctionExpression = y, b.FunctionDeclaration = y, b.ClassExpression = y, b.ClassDeclaration = y, c.exports;
  }), a.registerDynamic("131", ["f", "130", "9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f() {
      if (this.typeAnnotation)
        return this.typeAnnotation;
      var a = this._getTypeAnnotation() || r.anyTypeAnnotation();
      return r.isTypeAnnotation(a) && (a = a.typeAnnotation), this.typeAnnotation = a;
    }
    function g() {
      var a = this.node;
      {
        if (a) {
          if (a.typeAnnotation)
            return a.typeAnnotation;
          var b = p[a.type];
          return b ? b.call(this, a) : (b = p[this.parentPath.type], b && b.validParent ? this.parentPath.getTypeAnnotation() : void 0);
        }
        if ("init" === this.key && this.parentPath.isVariableDeclarator()) {
          var c = this.parentPath.parentPath,
              d = c.parentPath;
          return "left" === c.key && d.isForInStatement() ? r.stringTypeAnnotation() : "left" === c.key && d.isForOfStatement() ? r.anyTypeAnnotation() : r.voidTypeAnnotation();
        }
      }
    }
    function h(a, b) {
      return i(a, this.getTypeAnnotation(), b);
    }
    function i(a, b, c) {
      if ("string" === a)
        return r.isStringTypeAnnotation(b);
      if ("number" === a)
        return r.isNumberTypeAnnotation(b);
      if ("boolean" === a)
        return r.isBooleanTypeAnnotation(b);
      if ("any" === a)
        return r.isAnyTypeAnnotation(b);
      if ("mixed" === a)
        return r.isMixedTypeAnnotation(b);
      if ("empty" === a)
        return r.isEmptyTypeAnnotation(b);
      if ("void" === a)
        return r.isVoidTypeAnnotation(b);
      if (c)
        return !1;
      throw new Error("Unknown base type " + a);
    }
    function j(a) {
      var b = this.getTypeAnnotation();
      if (r.isAnyTypeAnnotation(b))
        return !0;
      if (r.isUnionTypeAnnotation(b)) {
        for (var c = b.types,
            d = Array.isArray(c),
            e = 0,
            c = d ? c : (0, n.default)(c); ; ) {
          var f;
          if (d) {
            if (e >= c.length)
              break;
            f = c[e++];
          } else {
            if (e = c.next(), e.done)
              break;
            f = e.value;
          }
          var g = f;
          if (r.isAnyTypeAnnotation(g) || i(a, g, !0))
            return !0;
        }
        return !1;
      }
      return i(a, b, !0);
    }
    function k(a) {
      var b = this.getTypeAnnotation();
      if (a = a.getTypeAnnotation(), !r.isAnyTypeAnnotation(b) && r.isFlowBaseAnnotation(b))
        return a.type === b.type;
    }
    function l(a) {
      var b = this.getTypeAnnotation();
      return r.isGenericTypeAnnotation(b) && r.isIdentifier(b.id, {name: a});
    }
    a("3"), this || self;
    b.__esModule = !0;
    var m = a("f"),
        n = e(m);
    b.getTypeAnnotation = f, b._getTypeAnnotation = g, b.isBaseType = h, b.couldBeBaseType = j, b.baseTypeStrictlyMatches = k, b.isGenericType = l;
    var o = a("130"),
        p = d(o),
        q = a("9"),
        r = d(q);
    return c.exports;
  }), a.registerDynamic("132", [], !0, function(a, b, c) {
    this || self;
    return c.exports = /((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyu]{1,5}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]{1,6}\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g, c.exports.matchToToken = function(a) {
      var b = {
        type: "invalid",
        value: a[0]
      };
      return a[1] ? (b.type = "string", b.closed = !(!a[3] && !a[4])) : a[5] ? b.type = "comment" : a[6] ? (b.type = "comment", b.closed = !!a[7]) : a[8] ? b.type = "regex" : a[9] ? b.type = "number" : a[10] ? b.type = "name" : a[11] ? b.type = "punctuator" : a[12] && (b.type = "whitespace"), b;
    }, c.exports;
  }), a.registerDynamic("133", [], !0, function(a, b, c) {
    "use strict";
    var d = (this || self, /[|\\{}()[\]^$+*?.]/g);
    return c.exports = function(a) {
      if ("string" != typeof a)
        throw new TypeError("Expected a string");
      return a.replace(d, "\\$&");
    }, c.exports;
  }), a.registerDynamic("134", [], !0, function(a, b, c) {
    "use strict";
    function d() {
      var a = {
        modifiers: {
          reset: [0, 0],
          bold: [1, 22],
          dim: [2, 22],
          italic: [3, 23],
          underline: [4, 24],
          inverse: [7, 27],
          hidden: [8, 28],
          strikethrough: [9, 29]
        },
        colors: {
          black: [30, 39],
          red: [31, 39],
          green: [32, 39],
          yellow: [33, 39],
          blue: [34, 39],
          magenta: [35, 39],
          cyan: [36, 39],
          white: [37, 39],
          gray: [90, 39]
        },
        bgColors: {
          bgBlack: [40, 49],
          bgRed: [41, 49],
          bgGreen: [42, 49],
          bgYellow: [43, 49],
          bgBlue: [44, 49],
          bgMagenta: [45, 49],
          bgCyan: [46, 49],
          bgWhite: [47, 49]
        }
      };
      return a.colors.grey = a.colors.gray, Object.keys(a).forEach(function(b) {
        var c = a[b];
        Object.keys(c).forEach(function(b) {
          var d = c[b];
          a[b] = c[b] = {
            open: "[" + d[0] + "m",
            close: "[" + d[1] + "m"
          };
        }), Object.defineProperty(a, b, {
          value: c,
          enumerable: !1
        });
      }), a;
    }
    this || self;
    return Object.defineProperty(c, "exports", {
      enumerable: !0,
      get: d
    }), c.exports;
  }), a.registerDynamic("135", ["136"], !0, function(a, b, c) {
    "use strict";
    var d = (this || self, a("136")());
    return c.exports = function(a) {
      return "string" == typeof a ? a.replace(d, "") : a;
    }, c.exports;
  }), a.registerDynamic("136", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return c.exports = function() {
      return /[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;
    }, c.exports;
  }), a.registerDynamic("137", ["136"], !0, function(a, b, c) {
    "use strict";
    var d = (this || self, a("136")),
        e = new RegExp(d().source);
    return c.exports = e.test.bind(e), c.exports;
  }), a.registerDynamic("138", ["3"], !0, function(a, b, c) {
    "use strict";
    var d = a("3"),
        e = (this || self, d.argv),
        f = e.indexOf("--"),
        g = function(a) {
          a = "--" + a;
          var b = e.indexOf(a);
          return b !== -1 && (f === -1 || b < f);
        };
    return c.exports = function() {
      return "FORCE_COLOR" in d.env || !(g("no-color") || g("no-colors") || g("color=false")) && (!!(g("color") || g("colors") || g("color=true") || g("color=always")) || !(d.stdout && !d.stdout.isTTY) && ("win32" === d.platform || ("COLORTERM" in d.env || "dumb" !== d.env.TERM && !!/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(d.env.TERM))));
    }(), c.exports;
  }), a.registerDynamic("139", ["133", "134", "135", "137", "138", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      this.enabled = a && void 0 !== a.enabled ? a.enabled : m;
    }
    function e(a) {
      var b = function() {
        return f.apply(b, arguments);
      };
      return b._styles = a, b.enabled = this.enabled, b.__proto__ = q, b;
    }
    function f() {
      var a = arguments,
          b = a.length,
          c = 0 !== b && String(arguments[0]);
      if (b > 1)
        for (var d = 1; d < b; d++)
          c += " " + a[d];
      if (!this.enabled || !c)
        return c;
      var e = this._styles,
          f = e.length,
          g = j.dim.open;
      for (!o || e.indexOf("gray") === -1 && e.indexOf("grey") === -1 || (j.dim.open = ""); f--; ) {
        var h = j[e[f]];
        c = h.open + c.replace(h.closeRe, h.open) + h.close;
      }
      return j.dim.open = g, c;
    }
    function g() {
      var a = {};
      return Object.keys(p).forEach(function(b) {
        a[b] = {get: function() {
            return e.call(this, [b]);
          }};
      }), a;
    }
    var h = a("3"),
        i = (this || self, a("133")),
        j = a("134"),
        k = a("135"),
        l = a("137"),
        m = a("138"),
        n = Object.defineProperties,
        o = "win32" === h.platform && !/^xterm/i.test(h.env.TERM);
    o && (j.blue.open = "[94m");
    var p = function() {
      var a = {};
      return Object.keys(j).forEach(function(b) {
        j[b].closeRe = new RegExp(i(j[b].close), "g"), a[b] = {get: function() {
            return e.call(this, this._styles.concat(b));
          }};
      }), a;
    }(),
        q = n(function() {}, p);
    return n(d.prototype, g()), c.exports = new d, c.exports.styles = j, c.exports.hasColor = l, c.exports.stripColor = k, c.exports.supportsColor = m, c.exports;
  }), a.registerDynamic("b9", ["132", "13a", "139"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e(a) {
      var b = a.slice(-2),
          c = b[0],
          d = b[1],
          e = h.default.matchToToken(a);
      if ("name" === e.type) {
        if (j.default.keyword.isReservedWordES6(e.value))
          return "keyword";
        if (o.test(e.value) && ("<" === d[c - 1] || "</" == d.substr(c - 2, 2)))
          return "jsx_tag";
        if (e.value[0] !== e.value[0].toLowerCase())
          return "capitalized";
      }
      return "punctuator" === e.type && p.test(e.value) ? "bracket" : e.type;
    }
    function f(a) {
      return a.replace(h.default, function() {
        for (var a = arguments.length,
            b = Array(a),
            c = 0; c < a; c++)
          b[c] = arguments[c];
        var d = e(b),
            f = m[d];
        return f ? b[0].split(n).map(function(a) {
          return f(a);
        }).join("\n") : b[0];
      });
    }
    this || self;
    b.__esModule = !0, b.default = function(a, b, c) {
      var d = arguments.length <= 3 || void 0 === arguments[3] ? {} : arguments[3];
      c = Math.max(c, 0);
      var e = d.highlightCode && l.default.supportsColor,
          g = function(a, b) {
            return e ? a(b) : b;
          };
      e && (a = f(a));
      var h = d.linesAbove || 2,
          i = d.linesBelow || 3,
          j = a.split(n),
          k = Math.max(b - (h + 1), 0),
          o = Math.min(j.length, b + i);
      b || c || (k = 0, o = j.length);
      var p = String(o).length,
          q = j.slice(k, o).map(function(a, d) {
            var e = k + 1 + d,
                f = (" " + e).slice(-p),
                h = " " + f + " | ";
            if (e === b) {
              var i = "";
              if (c) {
                var j = a.slice(0, c - 1).replace(/[^\t]/g, " ");
                i = ["\n ", g(m.gutter, h.replace(/\d/g, " ")), j, g(m.marker, "^")].join("");
              }
              return [g(m.marker, ">"), g(m.gutter, h), a, i].join("");
            }
            return " " + g(m.gutter, h) + a;
          }).join("\n");
      return e ? l.default.reset(q) : q;
    };
    var g = a("132"),
        h = d(g),
        i = a("13a"),
        j = d(i),
        k = a("139"),
        l = d(k),
        m = {
          keyword: l.default.cyan,
          capitalized: l.default.yellow,
          jsx_tag: l.default.yellow,
          punctuator: l.default.yellow,
          number: l.default.magenta,
          string: l.default.green,
          regex: l.default.magenta,
          comment: l.default.grey,
          invalid: l.default.white.bgRed.bold,
          gutter: l.default.grey,
          marker: l.default.red.bold
        },
        n = /\r\n|[\n\r\u2028\u2029]/,
        o = /^[a-z][\w-]*$/i,
        p = /^[()\[\]{}]$/;
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("13b", ["f", "b9", "b4", "12e", "bb", "9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      this.resync(), a = this._verifyNodeList(a), v.inheritLeadingComments(a[0], this.node), v.inheritTrailingComments(a[a.length - 1], this.node), this.node = this.container[this.key] = null, this.insertAfter(a), this.node ? this.requeue() : this.remove();
    }
    function g(a) {
      this.resync();
      try {
        a = "(" + a + ")", a = (0, t.parse)(a);
      } catch (c) {
        var b = c.loc;
        throw b && (c.message += " - make sure this is an expression.", c.message += "\n" + (0, o.default)(a, b.line, b.column + 1)), c;
      }
      return a = a.program.body[0].expression, q.default.removeProperties(a), this.replaceWith(a);
    }
    function h(a) {
      if (this.resync(), this.removed)
        throw new Error("You can't replace this node, we've already removed it");
      if (a instanceof s.default && (a = a.node), !a)
        throw new Error("You passed `path.replaceWith()` a falsy node, use `path.remove()` instead");
      if (this.node !== a) {
        if (this.isProgram() && !v.isProgram(a))
          throw new Error("You can only replace a Program root node with another Program node");
        if (Array.isArray(a))
          throw new Error("Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`");
        if ("string" == typeof a)
          throw new Error("Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`");
        if (this.isNodeType("Statement") && v.isExpression(a) && (this.canHaveVariableDeclarationOrExpression() || this.canSwapBetweenExpressionAndStatement(a) || (a = v.expressionStatement(a))), this.isNodeType("Expression") && v.isStatement(a) && !this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(a))
          return this.replaceExpressionWithStatements([a]);
        var b = this.node;
        b && (v.inheritsComments(a, b), v.removeComments(b)), this._replaceWith(a), this.type = a.type, this.setScope(), this.requeue();
      }
    }
    function i(a) {
      if (!this.container)
        throw new ReferenceError("Container is falsy");
      this.inList ? v.validate(this.parent, this.key, [a]) : v.validate(this.parent, this.key, a), this.debug(function() {
        return "Replace with " + (a && a.type);
      }), this.node = this.container[this.key] = a;
    }
    function j(a) {
      this.resync();
      var b = v.toSequenceExpression(a, this.scope);
      if (v.isSequenceExpression(b)) {
        var c = b.expressions;
        c.length >= 2 && this.parentPath.isExpressionStatement() && this._maybePopFromStatements(c), 1 === c.length ? this.replaceWith(c[0]) : this.replaceWith(b);
      } else {
        if (!b) {
          var d = v.functionExpression(null, [], v.blockStatement(a));
          d.shadow = !0, this.replaceWith(v.callExpression(d, [])), this.traverse(w);
          for (var e = this.get("callee").getCompletionRecords(),
              f = e,
              g = Array.isArray(f),
              h = 0,
              f = g ? f : (0, m.default)(f); ; ) {
            var i;
            if (g) {
              if (h >= f.length)
                break;
              i = f[h++];
            } else {
              if (h = f.next(), h.done)
                break;
              i = h.value;
            }
            var j = i;
            if (j.isExpressionStatement()) {
              var k = j.findParent(function(a) {
                return a.isLoop();
              });
              if (k) {
                var l = this.get("callee"),
                    n = l.scope.generateDeclaredUidIdentifier("ret");
                l.get("body").pushContainer("body", v.returnStatement(n)), j.get("expression").replaceWith(v.assignmentExpression("=", n, j.node.expression));
              } else
                j.replaceWith(v.returnStatement(j.node.expression));
            }
          }
          return this.node;
        }
        this.replaceWith(b);
      }
    }
    function k(a) {
      return this.resync(), Array.isArray(a) ? Array.isArray(this.container) ? (a = this._verifyNodeList(a), this._containerInsertAfter(a), this.remove()) : this.replaceWithMultiple(a) : this.replaceWith(a);
    }
    a("3"), this || self;
    b.__esModule = !0;
    var l = a("f"),
        m = e(l);
    b.replaceWithMultiple = f, b.replaceWithSourceString = g, b.replaceWith = h, b._replaceWith = i, b.replaceExpressionWithStatements = j, b.replaceInline = k;
    var n = a("b9"),
        o = e(n),
        p = a("b4"),
        q = e(p),
        r = a("12e"),
        s = e(r),
        t = a("bb"),
        u = a("9"),
        v = d(u),
        w = {
          Function: function(a) {
            a.skip();
          },
          VariableDeclaration: function(a) {
            if ("var" === a.node.kind) {
              var b = a.getBindingIdentifiers();
              for (var c in b)
                a.scope.push({id: b[c]});
              for (var d = [],
                  e = a.node.declarations,
                  f = Array.isArray(e),
                  g = 0,
                  e = f ? e : (0, m.default)(e); ; ) {
                var h;
                if (f) {
                  if (g >= e.length)
                    break;
                  h = e[g++];
                } else {
                  if (g = e.next(), g.done)
                    break;
                  h = g.value;
                }
                var i = h;
                i.init && d.push(v.expressionStatement(v.assignmentExpression("=", i.id, i.init)));
              }
              a.replaceWithMultiple(d);
            }
          }
        };
    return c.exports;
  }), a.registerDynamic("13c", ["13d", "31", "13e", "13f", "140", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), this || self),
        d = a("13d"),
        e = a("31"),
        f = a("13e"),
        g = a("13f"),
        h = a("140")("species");
    return c.exports = function(a) {
      var b = "function" == typeof e[a] ? e[a] : d[a];
      g && b && !b[h] && f.f(b, h, {
        configurable: !0,
        get: function() {
          return this;
        }
      });
    }, c.exports;
  }), a.registerDynamic("141", ["13e", "142", "143", "e7", "144", "145", "146", "147", "148", "13c", "13f", "149", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), this || self, a("13e").f),
        e = a("142"),
        f = a("143"),
        g = a("e7"),
        h = a("144"),
        i = a("145"),
        j = a("146"),
        k = a("147"),
        l = a("148"),
        m = a("13c"),
        n = a("13f"),
        o = a("149").fastKey,
        p = n ? "_s" : "size",
        q = function(a, b) {
          var c,
              d = o(b);
          if ("F" !== d)
            return a._i[d];
          for (c = a._f; c; c = c.n)
            if (c.k == b)
              return c;
        };
    return c.exports = {
      getConstructor: function(a, b, c, k) {
        var l = a(function(a, d) {
          h(a, l, b, "_i"), a._i = e(null), a._f = void 0, a._l = void 0, a[p] = 0, void 0 != d && j(d, c, a[k], a);
        });
        return f(l.prototype, {
          clear: function() {
            for (var a = this,
                b = a._i,
                c = a._f; c; c = c.n)
              c.r = !0, c.p && (c.p = c.p.n = void 0), delete b[c.i];
            a._f = a._l = void 0, a[p] = 0;
          },
          delete: function(a) {
            var b = this,
                c = q(b, a);
            if (c) {
              var d = c.n,
                  e = c.p;
              delete b._i[c.i], c.r = !0, e && (e.n = d), d && (d.p = e), b._f == c && (b._f = d), b._l == c && (b._l = e), b[p]--;
            }
            return !!c;
          },
          forEach: function(a) {
            h(this, l, "forEach");
            for (var b,
                c = g(a, arguments.length > 1 ? arguments[1] : void 0, 3); b = b ? b.n : this._f; )
              for (c(b.v, b.k, this); b && b.r; )
                b = b.p;
          },
          has: function(a) {
            return !!q(this, a);
          }
        }), n && d(l.prototype, "size", {get: function() {
            return i(this[p]);
          }}), l;
      },
      def: function(a, b, c) {
        var d,
            e,
            f = q(a, b);
        return f ? f.v = c : (a._l = f = {
          i: e = o(b, !0),
          k: b,
          v: c,
          p: d = a._l,
          n: void 0,
          r: !1
        }, a._f || (a._f = f), d && (d.n = f), a[p]++, "F" !== e && (a._i[e] = f)), a;
      },
      getEntry: q,
      setStrong: function(a, b, c) {
        k(a, b, function(a, b) {
          this._t = a, this._k = b, this._l = void 0;
        }, function() {
          for (var a = this,
              b = a._k,
              c = a._l; c && c.r; )
            c = c.p;
          return a._t && (a._l = c = c ? c.n : a._t._f) ? "keys" == b ? l(0, c.k) : "values" == b ? l(0, c.v) : l(0, [c.k, c.v]) : (a._t = void 0, l(1));
        }, c ? "entries" : "values", !c, !0), m(b);
      }
    }, c.exports;
  }), a.registerDynamic("14a", ["141", "2d", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), this || self, a("141"));
    return c.exports = a("2d")("Map", function(a) {
      return function() {
        return a(this, arguments.length > 0 ? arguments[0] : void 0);
      };
    }, {
      get: function(a) {
        var b = d.getEntry(this, a);
        return b && b.v;
      },
      set: function(a, b) {
        return d.def(this, 0 === a ? 0 : a, b);
      }
    }, d, !0), c.exports;
  }), a.registerDynamic("14b", ["146", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("146"));
    return c.exports = function(a, b) {
      var c = [];
      return d(a, !1, c.push, c, b), c;
    }, c.exports;
  }), a.registerDynamic("14c", ["14d", "14b", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("14d")),
        e = a("14b");
    return c.exports = function(a) {
      return function() {
        if (d(this) != a)
          throw TypeError(a + "#toJSON isn't generic");
        return e(this);
      };
    }, c.exports;
  }), a.registerDynamic("14e", ["a8", "14c", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("a8"));
    return d(d.P + d.R, "Map", {toJSON: a("14c")("Map")}), c.exports;
  }), a.registerDynamic("14f", ["2f", "150", "30", "14a", "14e", "31", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return a("2f"), a("150"), a("30"), a("14a"), a("14e"), c.exports = a("31").Map, c.exports;
  }), a.registerDynamic("b3", ["14f"], !0, function(a, b, c) {
    this || self;
    return c.exports = {
      default: a("14f"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("151", ["2a", "f", "b3", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e() {
      var a = this.evaluate();
      if (a.confident)
        return !!a.value;
    }
    function f() {
      function a(a) {
        d && (e = a, d = !1);
      }
      function b(b) {
        var e = b.node;
        if (f.has(e)) {
          var g = f.get(e);
          return g.resolved ? g.value : void a(b);
        }
        var h = {resolved: !1};
        f.set(e, h);
        var i = c(b);
        return d && (h.resolved = !0, h.value = i), i;
      }
      function c(c) {
        if (d) {
          var e = c.node;
          if (c.isSequenceExpression()) {
            var f = c.get("expressions");
            return b(f[f.length - 1]);
          }
          if (c.isStringLiteral() || c.isNumericLiteral() || c.isBooleanLiteral())
            return e.value;
          if (c.isNullLiteral())
            return null;
          if (c.isTemplateLiteral()) {
            for (var h = "",
                j = 0,
                l = c.get("expressions"),
                m = e.quasis,
                p = Array.isArray(m),
                q = 0,
                m = p ? m : (0, k.default)(m); ; ) {
              var r;
              if (p) {
                if (q >= m.length)
                  break;
                r = m[q++];
              } else {
                if (q = m.next(), q.done)
                  break;
                r = q.value;
              }
              var s = r;
              if (!d)
                break;
              h += s.value.cooked;
              var t = l[j++];
              t && (h += String(b(t)));
            }
            if (!d)
              return;
            return h;
          }
          if (c.isConditionalExpression()) {
            var u = b(c.get("test"));
            if (!d)
              return;
            return b(u ? c.get("consequent") : c.get("alternate"));
          }
          if (c.isExpressionWrapper())
            return b(c.get("expression"));
          if (c.isMemberExpression() && !c.parentPath.isCallExpression({callee: e})) {
            var v = c.get("property"),
                w = c.get("object");
            if (w.isLiteral() && v.isIdentifier()) {
              var x = w.node.value,
                  y = "undefined" == typeof x ? "undefined" : (0, i.default)(x);
              if ("number" === y || "string" === y)
                return x[v.node.name];
            }
          }
          if (c.isReferencedIdentifier()) {
            var z = c.scope.getBinding(e.name);
            if (z && z.constantViolations.length > 0)
              return a(z.path);
            if (z && z.hasValue)
              return z.value;
            if ("undefined" === e.name)
              return;
            if ("Infinity" === e.name)
              return 1 / 0;
            if ("NaN" === e.name)
              return NaN;
            var A = c.resolve();
            return A === c ? a(c) : b(A);
          }
          if (c.isUnaryExpression({prefix: !0})) {
            if ("void" === e.operator)
              return;
            var B = c.get("argument");
            if ("typeof" === e.operator && (B.isFunction() || B.isClass()))
              return "function";
            var C = b(B);
            if (!d)
              return;
            switch (e.operator) {
              case "!":
                return !C;
              case "+":
                return +C;
              case "-":
                return -C;
              case "~":
                return ~C;
              case "typeof":
                return "undefined" == typeof C ? "undefined" : (0, i.default)(C);
            }
          }
          if (c.isArrayExpression()) {
            for (var D = [],
                E = c.get("elements"),
                F = E,
                G = Array.isArray(F),
                H = 0,
                F = G ? F : (0, k.default)(F); ; ) {
              var I;
              if (G) {
                if (H >= F.length)
                  break;
                I = F[H++];
              } else {
                if (H = F.next(), H.done)
                  break;
                I = H.value;
              }
              var J = I;
              if (J = J.evaluate(), !J.confident)
                return a(J);
              D.push(J.value);
            }
            return D;
          }
          if (c.isObjectExpression()) {
            for (var K = {},
                L = c.get("properties"),
                M = L,
                N = Array.isArray(M),
                O = 0,
                M = N ? M : (0, k.default)(M); ; ) {
              var P;
              if (N) {
                if (O >= M.length)
                  break;
                P = M[O++];
              } else {
                if (O = M.next(), O.done)
                  break;
                P = O.value;
              }
              var Q = P;
              if (Q.isObjectMethod() || Q.isSpreadProperty())
                return a(Q);
              var R = Q.get("key"),
                  S = R;
              if (Q.node.computed) {
                if (S = S.evaluate(), !S.confident)
                  return a(R);
                S = S.value;
              } else
                S = S.isIdentifier() ? S.node.name : S.node.value;
              var T = Q.get("value"),
                  U = T.evaluate();
              if (!U.confident)
                return a(T);
              U = U.value, K[S] = U;
            }
            return K;
          }
          if (c.isLogicalExpression()) {
            var V = d,
                W = b(c.get("left")),
                X = d;
            d = V;
            var Y = b(c.get("right")),
                Z = d;
            switch (d = X && Z, e.operator) {
              case "||":
                if (W && X)
                  return d = !0, W;
                if (!d)
                  return;
                return W || Y;
              case "&&":
                if ((!W && X || !Y && Z) && (d = !0), !d)
                  return;
                return W && Y;
            }
          }
          if (c.isBinaryExpression()) {
            var $ = b(c.get("left"));
            if (!d)
              return;
            var _ = b(c.get("right"));
            if (!d)
              return;
            switch (e.operator) {
              case "-":
                return $ - _;
              case "+":
                return $ + _;
              case "/":
                return $ / _;
              case "*":
                return $ * _;
              case "%":
                return $ % _;
              case "**":
                return Math.pow($, _);
              case "<":
                return $ < _;
              case ">":
                return $ > _;
              case "<=":
                return $ <= _;
              case ">=":
                return $ >= _;
              case "==":
                return $ == _;
              case "!=":
                return $ != _;
              case "===":
                return $ === _;
              case "!==":
                return $ !== _;
              case "|":
                return $ | _;
              case "&":
                return $ & _;
              case "^":
                return $ ^ _;
              case "<<":
                return $ << _;
              case ">>":
                return $ >> _;
              case ">>>":
                return $ >>> _;
            }
          }
          if (c.isCallExpression()) {
            var aa = c.get("callee"),
                ba = void 0,
                ca = void 0;
            if (aa.isIdentifier() && !c.scope.getBinding(aa.node.name, !0) && n.indexOf(aa.node.name) >= 0 && (ca = g[e.callee.name]), aa.isMemberExpression()) {
              var da = aa.get("object"),
                  ea = aa.get("property");
              if (da.isIdentifier() && ea.isIdentifier() && n.indexOf(da.node.name) >= 0 && o.indexOf(ea.node.name) < 0 && (ba = g[da.node.name], ca = ba[ea.node.name]), da.isLiteral() && ea.isIdentifier()) {
                var fa = (0, i.default)(da.node.value);
                "string" !== fa && "number" !== fa || (ba = da.node.value, ca = ba[ea.node.name]);
              }
            }
            if (ca) {
              var ga = c.get("arguments").map(b);
              if (!d)
                return;
              return ca.apply(ba, ga);
            }
          }
          a(c);
        }
      }
      var d = !0,
          e = void 0,
          f = new m.default,
          h = b(this);
      return d || (h = void 0), {
        confident: d,
        deopt: e,
        value: h
      };
    }
    var g = (a("3"), this || self);
    b.__esModule = !0;
    var h = a("2a"),
        i = d(h),
        j = a("f"),
        k = d(j),
        l = a("b3"),
        m = d(l);
    b.evaluateTruthy = e, b.evaluate = f;
    var n = ["String", "Number", "Math"],
        o = ["random"];
    return c.exports;
  }), a.registerDynamic("152", ["9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e() {
      var a = this.node,
          b = void 0;
      if (this.isMemberExpression())
        b = a.property;
      else {
        if (!this.isProperty() && !this.isMethod())
          throw new ReferenceError("todo");
        b = a.key;
      }
      return a.computed || i.isIdentifier(b) && (b = i.stringLiteral(b.name)), b;
    }
    function f() {
      return i.ensureBlock(this.node);
    }
    function g() {
      if (this.isArrowFunctionExpression()) {
        this.ensureBlock();
        var a = this.node;
        a.expression = !1, a.type = "FunctionExpression", a.shadow = a.shadow || !0;
      }
    }
    a("3"), this || self;
    b.__esModule = !0, b.toComputedKey = e, b.ensureBlock = f, b.arrowFunctionToShadowed = g;
    var h = a("9"),
        i = d(h);
    return c.exports;
  }), a.registerDynamic("153", ["2a", "f", "87", "9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a, b) {
      function c(a) {
        var b = d[f];
        return "*" === b || a === b;
      }
      if (!this.isMemberExpression())
        return !1;
      for (var d = a.split("."),
          e = [this.node],
          f = 0; e.length; ) {
        var g = e.shift();
        if (b && f === d.length)
          return !0;
        if (D.isIdentifier(g)) {
          if (!c(g.name))
            return !1;
        } else if (D.isLiteral(g)) {
          if (!c(g.value))
            return !1;
        } else {
          if (D.isMemberExpression(g)) {
            if (g.computed && !D.isLiteral(g.property))
              return !1;
            e.unshift(g.property), e.unshift(g.object);
            continue;
          }
          if (!D.isThisExpression(g))
            return !1;
          if (!c("this"))
            return !1;
        }
        if (++f > d.length)
          return !1;
      }
      return f === d.length;
    }
    function g(a) {
      var b = this.node && this.node[a];
      return b && Array.isArray(b) ? !!b.length : !!b;
    }
    function h() {
      return this.scope.isStatic(this.node);
    }
    function i(a) {
      return !this.has(a);
    }
    function j(a, b) {
      return this.node[a] === b;
    }
    function k(a) {
      return D.isType(this.type, a);
    }
    function l() {
      return ("init" === this.key || "left" === this.key) && this.parentPath.isFor();
    }
    function m(a) {
      return !("body" !== this.key || !this.parentPath.isArrowFunctionExpression()) && (this.isExpression() ? D.isBlockStatement(a) : !!this.isBlockStatement() && D.isExpression(a));
    }
    function n(a) {
      var b = this,
          c = !0;
      do {
        var d = b.container;
        if (b.isFunction() && !c)
          return !!a;
        if (c = !1, Array.isArray(d) && b.key !== d.length - 1)
          return !1;
      } while ((b = b.parentPath) && !b.isProgram());
      return !0;
    }
    function o() {
      return !this.parentPath.isLabeledStatement() && !D.isBlockStatement(this.container) && (0, B.default)(D.STATEMENT_OR_BLOCK_KEYS, this.key);
    }
    function p(a, b) {
      if (!this.isReferencedIdentifier())
        return !1;
      var c = this.scope.getBinding(this.node.name);
      if (!c || "module" !== c.kind)
        return !1;
      var d = c.path,
          e = d.parentPath;
      return !!e.isImportDeclaration() && (e.node.source.value === a && (!b || (!(!d.isImportDefaultSpecifier() || "default" !== b) || (!(!d.isImportNamespaceSpecifier() || "*" !== b) || !(!d.isImportSpecifier() || d.node.imported.name !== b)))));
    }
    function q() {
      var a = this.node;
      return a.end ? this.hub.file.code.slice(a.start, a.end) : "";
    }
    function r(a) {
      return "after" !== this._guessExecutionStatusRelativeTo(a);
    }
    function s(a) {
      var b = a.scope.getFunctionParent(),
          c = this.scope.getFunctionParent();
      if (b.node !== c.node) {
        var d = this._guessExecutionStatusRelativeToDifferentFunctions(b);
        if (d)
          return d;
        a = b.path;
      }
      var e = a.getAncestry();
      if (e.indexOf(this) >= 0)
        return "after";
      var f = this.getAncestry(),
          g = void 0,
          h = void 0,
          i = void 0;
      for (i = 0; i < f.length; i++) {
        var j = f[i];
        if (h = e.indexOf(j), h >= 0) {
          g = j;
          break;
        }
      }
      if (!g)
        return "before";
      var k = e[h - 1],
          l = f[i - 1];
      if (!k || !l)
        return "before";
      if (k.listKey && k.container === l.container)
        return k.key > l.key ? "before" : "after";
      var m = D.VISITOR_KEYS[k.type].indexOf(k.key),
          n = D.VISITOR_KEYS[l.type].indexOf(l.key);
      return m > n ? "before" : "after";
    }
    function t(a) {
      var b = a.path;
      if (b.isFunctionDeclaration()) {
        var c = b.scope.getBinding(b.node.id.name);
        if (!c.references)
          return "before";
        for (var d = c.referencePaths,
            e = d,
            f = Array.isArray(e),
            g = 0,
            e = f ? e : (0, z.default)(e); ; ) {
          var h;
          if (f) {
            if (g >= e.length)
              break;
            h = e[g++];
          } else {
            if (g = e.next(), g.done)
              break;
            h = g.value;
          }
          var i = h;
          if ("callee" !== i.key || !i.parentPath.isCallExpression())
            return;
        }
        for (var j = void 0,
            k = d,
            l = Array.isArray(k),
            m = 0,
            k = l ? k : (0, z.default)(k); ; ) {
          var n;
          if (l) {
            if (m >= k.length)
              break;
            n = k[m++];
          } else {
            if (m = k.next(), m.done)
              break;
            n = m.value;
          }
          var o = n,
              p = !!o.find(function(a) {
                return a.node === b.node;
              });
          if (!p) {
            var q = this._guessExecutionStatusRelativeTo(o);
            if (j) {
              if (j !== q)
                return;
            } else
              j = q;
          }
        }
        return j;
      }
    }
    function u(a, b) {
      return this._resolve(a, b) || this;
    }
    function v(a, b) {
      var c = this;
      if (!(b && b.indexOf(this) >= 0))
        if (b = b || [], b.push(this), this.isVariableDeclarator()) {
          if (this.get("id").isIdentifier())
            return this.get("init").resolve(a, b);
        } else if (this.isReferencedIdentifier()) {
          var d = this.scope.getBinding(this.node.name);
          if (!d)
            return;
          if (!d.constant)
            return;
          if ("module" === d.kind)
            return;
          if (d.path !== this) {
            var e = function() {
              var e = d.path.resolve(a, b);
              return c.find(function(a) {
                return a.node === e.node;
              }) ? {v: void 0} : {v: e};
            }();
            if ("object" === ("undefined" == typeof e ? "undefined" : (0, x.default)(e)))
              return e.v;
          }
        } else {
          if (this.isTypeCastExpression())
            return this.get("expression").resolve(a, b);
          if (a && this.isMemberExpression()) {
            var f = this.toComputedKey();
            if (!D.isLiteral(f))
              return;
            var g = f.value,
                h = this.get("object").resolve(a, b);
            if (h.isObjectExpression())
              for (var i = h.get("properties"),
                  j = i,
                  k = Array.isArray(j),
                  l = 0,
                  j = k ? j : (0, z.default)(j); ; ) {
                var m;
                if (k) {
                  if (l >= j.length)
                    break;
                  m = j[l++];
                } else {
                  if (l = j.next(), l.done)
                    break;
                  m = l.value;
                }
                var n = m;
                if (n.isProperty()) {
                  var o = n.get("key"),
                      p = n.isnt("computed") && o.isIdentifier({name: g});
                  if (p = p || o.isLiteral({value: g}))
                    return n.get("value").resolve(a, b);
                }
              }
            else if (h.isArrayExpression() && !isNaN(+g)) {
              var q = h.get("elements"),
                  r = q[g];
              if (r)
                return r.resolve(a, b);
            }
          }
        }
    }
    a("3"), this || self;
    b.__esModule = !0, b.is = void 0;
    var w = a("2a"),
        x = e(w),
        y = a("f"),
        z = e(y);
    b.matchesPattern = f, b.has = g, b.isStatic = h, b.isnt = i, b.equals = j, b.isNodeType = k, b.canHaveVariableDeclarationOrExpression = l, b.canSwapBetweenExpressionAndStatement = m, b.isCompletionRecord = n, b.isStatementOrBlock = o, b.referencesImport = p, b.getSource = q, b.willIMaybeExecuteBefore = r, b._guessExecutionStatusRelativeTo = s, b._guessExecutionStatusRelativeToDifferentFunctions = t, b.resolve = u, b._resolve = v;
    var A = a("87"),
        B = e(A),
        C = a("9"),
        D = d(C);
    b.is = g;
    return c.exports;
  }), a.registerDynamic("154", ["f", "b4", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e(a) {
      var b = this.opts;
      return this.debug(function() {
        return a;
      }), !(!this.node || !this._call(b[a])) || !!this.node && this._call(b[this.node.type] && b[this.node.type][a]);
    }
    function f(a) {
      if (!a)
        return !1;
      for (var b = a,
          c = Array.isArray(b),
          d = 0,
          b = c ? b : (0, z.default)(b); ; ) {
        var e;
        if (c) {
          if (d >= b.length)
            break;
          e = b[d++];
        } else {
          if (d = b.next(), d.done)
            break;
          e = d.value;
        }
        var f = e;
        if (f) {
          var g = this.node;
          if (!g)
            return !0;
          var h = f.call(this.state, this, this.state);
          if (h)
            throw new Error("Unexpected return value from visitor method " + f);
          if (this.node !== g)
            return !0;
          if (this.shouldStop || this.shouldSkip || this.removed)
            return !0;
        }
      }
      return !1;
    }
    function g() {
      var a = this.opts.blacklist;
      return a && a.indexOf(this.node.type) > -1;
    }
    function h() {
      return !!this.node && (!this.isBlacklisted() && ((!this.opts.shouldSkip || !this.opts.shouldSkip(this)) && (this.call("enter") || this.shouldSkip ? (this.debug(function() {
        return "Skip...";
      }), this.shouldStop) : (this.debug(function() {
        return "Recursing into...";
      }), B.default.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys), this.call("exit"), this.shouldStop))));
    }
    function i() {
      this.shouldSkip = !0;
    }
    function j(a) {
      this.skipKeys[a] = !0;
    }
    function k() {
      this.shouldStop = !0, this.shouldSkip = !0;
    }
    function l() {
      if (!this.opts || !this.opts.noScope) {
        var a = this.context && this.context.scope;
        if (!a)
          for (var b = this.parentPath; b && !a; ) {
            if (b.opts && b.opts.noScope)
              return;
            a = b.scope, b = b.parentPath;
          }
        this.scope = this.getScope(a), this.scope && this.scope.init();
      }
    }
    function m(a) {
      return this.shouldSkip = !1, this.shouldStop = !1, this.removed = !1, this.skipKeys = {}, a && (this.context = a, this.state = a.state, this.opts = a.opts), this.setScope(), this;
    }
    function n() {
      this.removed || (this._resyncParent(), this._resyncList(), this._resyncKey());
    }
    function o() {
      this.parentPath && (this.parent = this.parentPath.node);
    }
    function p() {
      if (this.container && this.node !== this.container[this.key]) {
        if (Array.isArray(this.container)) {
          for (var a = 0; a < this.container.length; a++)
            if (this.container[a] === this.node)
              return this.setKey(a);
        } else
          for (var b in this.container)
            if (this.container[b] === this.node)
              return this.setKey(b);
        this.key = null;
      }
    }
    function q() {
      if (this.parent && this.inList) {
        var a = this.parent[this.listKey];
        this.container !== a && (this.container = a || null);
      }
    }
    function r() {
      null != this.key && this.container && this.container[this.key] === this.node || this._markRemoved();
    }
    function s() {
      this.contexts.pop(), this.setContext(this.contexts[this.contexts.length - 1]);
    }
    function t(a) {
      this.contexts.push(a), this.setContext(a);
    }
    function u(a, b, c, d) {
      this.inList = !!c, this.listKey = c, this.parentKey = c || d, this.container = b, this.parentPath = a || this.parentPath, this.setKey(d);
    }
    function v(a) {
      this.key = a, this.node = this.container[this.key], this.type = this.node && this.node.type;
    }
    function w() {
      var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this;
      if (!a.removed)
        for (var b = this.contexts,
            c = b,
            d = Array.isArray(c),
            e = 0,
            c = d ? c : (0, z.default)(c); ; ) {
          var f;
          if (d) {
            if (e >= c.length)
              break;
            f = c[e++];
          } else {
            if (e = c.next(), e.done)
              break;
            f = e.value;
          }
          var g = f;
          g.maybeQueue(a);
        }
    }
    function x() {
      for (var a = this,
          b = this.contexts; !b.length; )
        a = a.parentPath, b = a.contexts;
      return b;
    }
    a("3"), this || self;
    b.__esModule = !0;
    var y = a("f"),
        z = d(y);
    b.call = e, b._call = f, b.isBlacklisted = g, b.visit = h, b.skip = i, b.skipKey = j, b.stop = k, b.setScope = l, b.setContext = m, b.resync = n, b._resyncParent = o, b._resyncKey = p, b._resyncList = q, b._resyncRemoved = r, b.popContext = s, b.pushContext = t, b.setup = u, b.setKey = v, b.requeue = w, b._getQueueContexts = x;
    var A = a("b4"),
        B = d(A);
    return c.exports;
  }), a.registerDynamic("155", ["3"], !0, function(a, b, c) {
    "use strict";
    a("3"), this || self;
    b.__esModule = !0;
    b.hooks = [function(a, b) {
      if ("body" === a.key && b.isArrowFunctionExpression())
        return a.replaceWith(a.scope.buildUndefinedNode()), !0;
    }, function(a, b) {
      var c = !1;
      if (c = c || "test" === a.key && (b.isWhile() || b.isSwitchCase()), c = c || "declaration" === a.key && b.isExportDeclaration(), c = c || "body" === a.key && b.isLabeledStatement(), c = c || "declarations" === a.listKey && b.isVariableDeclaration() && 1 === b.node.declarations.length, c = c || "expression" === a.key && b.isExpressionStatement())
        return b.remove(), !0;
    }, function(a, b) {
      if (b.isSequenceExpression() && 1 === b.node.expressions.length)
        return b.replaceWith(b.node.expressions[0]), !0;
    }, function(a, b) {
      if (b.isBinary())
        return "left" === a.key ? b.replaceWith(b.node.right) : b.replaceWith(b.node.left), !0;
    }, function(a, b) {
      if (b.isIfStatement() && ("consequent" === a.key || "alternate" === a.key) || b.isLoop() && "body" === a.key)
        return a.replaceWith({
          type: "BlockStatement",
          body: []
        }), !0;
    }];
    return c.exports;
  }), a.registerDynamic("156", ["f", "155", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e() {
      return this._assertUnremoved(), this.resync(), this._callRemovalHooks() ? void this._markRemoved() : (this.shareCommentsWithSiblings(), this._remove(), void this._markRemoved());
    }
    function f() {
      for (var a = l.hooks,
          b = Array.isArray(a),
          c = 0,
          a = b ? a : (0, k.default)(a); ; ) {
        var d;
        if (b) {
          if (c >= a.length)
            break;
          d = a[c++];
        } else {
          if (c = a.next(), c.done)
            break;
          d = c.value;
        }
        var e = d;
        if (e(this, this.parentPath))
          return !0;
      }
    }
    function g() {
      Array.isArray(this.container) ? (this.container.splice(this.key, 1), this.updateSiblingKeys(this.key, -1)) : this._replaceWith(null);
    }
    function h() {
      this.shouldSkip = !0, this.removed = !0, this.node = null;
    }
    function i() {
      if (this.removed)
        throw this.buildCodeFrameError("NodePath has been removed so is read-only.");
    }
    a("3"), this || self;
    b.__esModule = !0;
    var j = a("f"),
        k = d(j);
    b.remove = e, b._callRemovalHooks = f, b._remove = g, b._markRemoved = h, b._assertUnremoved = i;
    var l = a("155");
    return c.exports;
  }), a.registerDynamic("17", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = function(a, b) {
      if (!(a instanceof b))
        throw new TypeError("Cannot call a class as a function");
    }, c.exports;
  }), a.registerDynamic("157", ["17", "f", "9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    a("3"), this || self;
    b.__esModule = !0;
    var f = a("17"),
        g = e(f),
        h = a("f"),
        i = e(h),
        j = a("9"),
        k = d(j),
        l = {ReferencedIdentifier: function(a, b) {
            if (!a.isJSXIdentifier() || !j.react.isCompatTag(a.node.name)) {
              var c = a.scope.getBinding(a.node.name);
              if (c && c === b.scope.getBinding(a.node.name))
                if (c.constant)
                  b.bindings[a.node.name] = c;
                else
                  for (var d = c.constantViolations,
                      e = Array.isArray(d),
                      f = 0,
                      d = e ? d : (0, i.default)(d); ; ) {
                    var g;
                    if (e) {
                      if (f >= d.length)
                        break;
                      g = d[f++];
                    } else {
                      if (f = d.next(), f.done)
                        break;
                      g = f.value;
                    }
                    var h = g;
                    b.breakOnScopePaths = b.breakOnScopePaths.concat(h.getAncestry());
                  }
            }
          }},
        m = function() {
          function a(b, c) {
            (0, g.default)(this, a), this.breakOnScopePaths = [], this.bindings = {}, this.scopes = [], this.scope = c, this.path = b;
          }
          return a.prototype.isCompatibleScope = function(a) {
            for (var b in this.bindings) {
              var c = this.bindings[b];
              if (!a.bindingIdentifierEquals(b, c.identifier))
                return !1;
            }
            return !0;
          }, a.prototype.getCompatibleScopes = function() {
            var a = this.path.scope;
            do {
              if (!this.isCompatibleScope(a))
                break;
              if (this.scopes.push(a), this.breakOnScopePaths.indexOf(a.path) >= 0)
                break;
            } while (a = a.parent);
          }, a.prototype.getAttachmentPath = function() {
            var a = this._getAttachmentPath();
            if (a) {
              var b = a.scope;
              if (b.path === a && (b = a.scope.parent), b.path.isProgram() || b.path.isFunction())
                for (var c in this.bindings)
                  if (b.hasOwnBinding(c)) {
                    var d = this.bindings[c];
                    if ("param" !== d.kind && d.path.getStatementParent().key > a.key)
                      return;
                  }
              return a;
            }
          }, a.prototype._getAttachmentPath = function() {
            var a = this.scopes,
                b = a.pop();
            if (b) {
              if (b.path.isFunction()) {
                if (this.hasOwnParamBindings(b)) {
                  if (this.scope === b)
                    return;
                  return b.path.get("body").get("body")[0];
                }
                return this.getNextScopeStatementParent();
              }
              return b.path.isProgram() ? this.getNextScopeStatementParent() : void 0;
            }
          }, a.prototype.getNextScopeStatementParent = function() {
            var a = this.scopes.pop();
            if (a)
              return a.path.getStatementParent();
          }, a.prototype.hasOwnParamBindings = function(a) {
            for (var b in this.bindings)
              if (a.hasOwnBinding(b)) {
                var c = this.bindings[b];
                if ("param" === c.kind)
                  return !0;
              }
            return !1;
          }, a.prototype.run = function() {
            var a = this.path.node;
            if (!a._hoisted) {
              a._hoisted = !0, this.path.traverse(l, this), this.getCompatibleScopes();
              var b = this.getAttachmentPath();
              if (b && b.getFunctionParent() !== this.path.getFunctionParent()) {
                var c = b.scope.generateUidIdentifier("ref");
                b.insertBefore([k.variableDeclaration("var", [k.variableDeclarator(c, this.path.node)])]);
                var d = this.path.parentPath;
                d.isJSXElement() && this.path.container === d.node.children && (c = k.JSXExpressionContainer(c)), this.path.replaceWith(c);
              }
            }
          }, a;
        }();
    return b.default = m, c.exports = b.default, c.exports;
  }), a.registerDynamic("158", ["2a", "f", "12c", "157", "12e", "9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      if (this._assertUnremoved(), a = this._verifyNodeList(a), this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement())
        return this.parentPath.insertBefore(a);
      if (this.isNodeType("Expression") || this.parentPath.isForStatement() && "init" === this.key)
        this.node && a.push(this.node), this.replaceExpressionWithStatements(a);
      else {
        if (this._maybePopFromStatements(a), Array.isArray(this.container))
          return this._containerInsertBefore(a);
        if (!this.isStatementOrBlock())
          throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?");
        this.node && a.push(this.node), this._replaceWith(A.blockStatement(a));
      }
      return [this];
    }
    function g(a, b) {
      this.updateSiblingKeys(a, b.length);
      for (var c = [],
          d = 0; d < b.length; d++) {
        var e = a + d,
            f = b[d];
        if (this.container.splice(e, 0, f), this.context) {
          var g = this.context.create(this.parent, this.container, e, this.listKey);
          this.context.queue && g.pushContext(this.context), c.push(g);
        } else
          c.push(y.default.get({
            parentPath: this.parentPath,
            parent: this.parent,
            container: this.container,
            listKey: this.listKey,
            key: e
          }));
      }
      for (var h = this._getQueueContexts(),
          i = c,
          j = Array.isArray(i),
          k = 0,
          i = j ? i : (0, t.default)(i); ; ) {
        var l;
        if (j) {
          if (k >= i.length)
            break;
          l = i[k++];
        } else {
          if (k = i.next(), k.done)
            break;
          l = k.value;
        }
        var m = l;
        m.setScope(), m.debug(function() {
          return "Inserted.";
        });
        for (var n = h,
            o = Array.isArray(n),
            p = 0,
            n = o ? n : (0, t.default)(n); ; ) {
          var q;
          if (o) {
            if (p >= n.length)
              break;
            q = n[p++];
          } else {
            if (p = n.next(), p.done)
              break;
            q = p.value;
          }
          var r = q;
          r.maybeQueue(m, !0);
        }
      }
      return c;
    }
    function h(a) {
      return this._containerInsert(this.key, a);
    }
    function i(a) {
      return this._containerInsert(this.key + 1, a);
    }
    function j(a) {
      var b = a[a.length - 1],
          c = A.isIdentifier(b) || A.isExpressionStatement(b) && A.isIdentifier(b.expression);
      c && !this.isCompletionRecord() && a.pop();
    }
    function k(a) {
      if (this._assertUnremoved(), a = this._verifyNodeList(a), this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement())
        return this.parentPath.insertAfter(a);
      if (this.isNodeType("Expression") || this.parentPath.isForStatement() && "init" === this.key) {
        if (this.node) {
          var b = this.scope.generateDeclaredUidIdentifier();
          a.unshift(A.expressionStatement(A.assignmentExpression("=", b, this.node))), a.push(A.expressionStatement(b));
        }
        this.replaceExpressionWithStatements(a);
      } else {
        if (this._maybePopFromStatements(a), Array.isArray(this.container))
          return this._containerInsertAfter(a);
        if (!this.isStatementOrBlock())
          throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?");
        this.node && a.unshift(this.node), this._replaceWith(A.blockStatement(a));
      }
      return [this];
    }
    function l(a, b) {
      if (this.parent)
        for (var c = u.path.get(this.parent),
            d = 0; d < c.length; d++) {
          var e = c[d];
          e.key >= a && (e.key += b);
        }
    }
    function m(a) {
      if (!a)
        return [];
      a.constructor !== Array && (a = [a]);
      for (var b = 0; b < a.length; b++) {
        var c = a[b],
            d = void 0;
        if (c ? "object" !== ("undefined" == typeof c ? "undefined" : (0, r.default)(c)) ? d = "contains a non-object node" : c.type ? c instanceof y.default && (d = "has a NodePath when it expected a raw object") : d = "without a type" : d = "has falsy node", d) {
          var e = Array.isArray(c) ? "array" : "undefined" == typeof c ? "undefined" : (0, r.default)(c);
          throw new Error("Node list " + d + " with the index of " + b + " and type of " + e);
        }
      }
      return a;
    }
    function n(a, b) {
      this._assertUnremoved(), b = this._verifyNodeList(b);
      var c = y.default.get({
        parentPath: this,
        parent: this.node,
        container: this.node[a],
        listKey: a,
        key: 0
      });
      return c.insertBefore(b);
    }
    function o(a, b) {
      this._assertUnremoved(), b = this._verifyNodeList(b);
      var c = this.node[a],
          d = y.default.get({
            parentPath: this,
            parent: this.node,
            container: c,
            listKey: a,
            key: c.length
          });
      return d.replaceWithMultiple(b);
    }
    function p() {
      var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.scope,
          b = new w.default(this, a);
      return b.run();
    }
    a("3"), this || self;
    b.__esModule = !0;
    var q = a("2a"),
        r = e(q),
        s = a("f"),
        t = e(s);
    b.insertBefore = f, b._containerInsert = g, b._containerInsertBefore = h, b._containerInsertAfter = i, b._maybePopFromStatements = j, b.insertAfter = k, b.updateSiblingKeys = l, b._verifyNodeList = m, b.unshiftContainer = n, b.pushContainer = o, b.hoist = p;
    var u = a("12c"),
        v = a("157"),
        w = e(v),
        x = a("12e"),
        y = e(x),
        z = a("9"),
        A = d(z);
    return c.exports;
  }), a.registerDynamic("159", ["f", "12e", "9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f() {
      var a = this;
      do {
        if (!a.parentPath || Array.isArray(a.container) && a.isStatement())
          break;
        a = a.parentPath;
      } while (a);
      if (a && (a.isProgram() || a.isFile()))
        throw new Error("File/Program node, we can't possibly find a statement parent to this");
      return a;
    }
    function g() {
      return "left" === this.key ? this.getSibling("right") : "right" === this.key ? this.getSibling("left") : void 0;
    }
    function h() {
      var a = [],
          b = function(b) {
            b && (a = a.concat(b.getCompletionRecords()));
          };
      if (this.isIfStatement())
        b(this.get("consequent")), b(this.get("alternate"));
      else if (this.isDoExpression() || this.isFor() || this.isWhile())
        b(this.get("body"));
      else if (this.isProgram() || this.isBlockStatement())
        b(this.get("body").pop());
      else {
        if (this.isFunction())
          return this.get("body").getCompletionRecords();
        this.isTryStatement() ? (b(this.get("block")), b(this.get("handler")), b(this.get("finalizer"))) : a.push(this);
      }
      return a;
    }
    function i(a) {
      return r.default.get({
        parentPath: this.parentPath,
        parent: this.parent,
        container: this.container,
        listKey: this.listKey,
        key: a
      });
    }
    function j(a, b) {
      b === !0 && (b = this.context);
      var c = a.split(".");
      return 1 === c.length ? this._getKey(a, b) : this._getPattern(c, b);
    }
    function k(a, b) {
      var c = this,
          d = this.node,
          e = d[a];
      return Array.isArray(e) ? e.map(function(f, g) {
        return r.default.get({
          listKey: a,
          parentPath: c,
          parent: d,
          container: e,
          key: g
        }).setContext(b);
      }) : r.default.get({
        parentPath: this,
        parent: d,
        container: d,
        key: a
      }).setContext(b);
    }
    function l(a, b) {
      for (var c = this,
          d = a,
          e = Array.isArray(d),
          f = 0,
          d = e ? d : (0, p.default)(d); ; ) {
        var g;
        if (e) {
          if (f >= d.length)
            break;
          g = d[f++];
        } else {
          if (f = d.next(), f.done)
            break;
          g = f.value;
        }
        var h = g;
        c = "." === h ? c.parentPath : Array.isArray(c) ? c[h] : c.get(h, b);
      }
      return c;
    }
    function m(a) {
      return t.getBindingIdentifiers(this.node, a);
    }
    function n(a) {
      return t.getOuterBindingIdentifiers(this.node, a);
    }
    a("3"), this || self;
    b.__esModule = !0;
    var o = a("f"),
        p = e(o);
    b.getStatementParent = f, b.getOpposite = g, b.getCompletionRecords = h, b.getSibling = i, b.get = j, b._getKey = k, b._getPattern = l, b.getBindingIdentifiers = m, b.getOuterBindingIdentifiers = n;
    var q = a("12e"),
        r = e(q),
        s = a("9"),
        t = d(s);
    return c.exports;
  }), a.registerDynamic("15a", ["3"], !0, function(a, b, c) {
    "use strict";
    function d() {
      var a = this.node;
      if (a) {
        var b = a.trailingComments,
            c = a.leadingComments;
        if (b || c) {
          var d = this.getSibling(this.key - 1),
              e = this.getSibling(this.key + 1);
          d.node || (d = e), e.node || (e = d), d.addComments("trailing", c), e.addComments("leading", b);
        }
      }
    }
    function e(a, b, c) {
      this.addComments(a, [{
        type: c ? "CommentLine" : "CommentBlock",
        value: b
      }]);
    }
    function f(a, b) {
      if (b) {
        var c = this.node;
        if (c) {
          var d = a + "Comments";
          c[d] ? c[d] = c[d].concat(b) : c[d] = b;
        }
      }
    }
    a("3"), this || self;
    return b.__esModule = !0, b.shareCommentsWithSiblings = d, b.addComment = e, b.addComments = f, c.exports;
  }), a.registerDynamic("12e", ["f", "17", "15b", "68", "116", "b4", "b5", "12b", "9", "12c", "12d", "131", "13b", "151", "152", "153", "154", "156", "158", "159", "15a", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    a("3"), this || self;
    b.__esModule = !0;
    var f = a("f"),
        g = e(f),
        h = a("17"),
        i = e(h),
        j = a("15b"),
        k = d(j),
        l = a("68"),
        m = e(l),
        n = a("116"),
        o = e(n),
        p = a("b4"),
        q = e(p),
        r = a("b5"),
        s = e(r),
        t = a("12b"),
        u = e(t),
        v = a("9"),
        w = d(v),
        x = a("12c"),
        y = (0, m.default)("babel"),
        z = function() {
          function a(b, c) {
            (0, i.default)(this, a), this.parent = c, this.hub = b, this.contexts = [], this.data = {}, this.shouldSkip = !1, this.shouldStop = !1, this.removed = !1, this.state = null, this.opts = null, this.skipKeys = null, this.parentPath = null, this.context = null, this.container = null, this.listKey = null, this.inList = !1, this.parentKey = null, this.key = null, this.node = null, this.scope = null, this.type = null, this.typeAnnotation = null;
          }
          return a.get = function(b) {
            var c = b.hub,
                d = b.parentPath,
                e = b.parent,
                f = b.container,
                g = b.listKey,
                h = b.key;
            !c && d && (c = d.hub), (0, o.default)(e, "To get a node path the parent needs to exist");
            var i = f[h],
                j = x.path.get(e) || [];
            x.path.has(e) || x.path.set(e, j);
            for (var k = void 0,
                l = 0; l < j.length; l++) {
              var m = j[l];
              if (m.node === i) {
                k = m;
                break;
              }
            }
            return k || (k = new a(c, e), j.push(k)), k.setup(d, f, g, h), k;
          }, a.prototype.getScope = function(a) {
            var b = a;
            return this.isScope() && (b = new u.default(this, a)), b;
          }, a.prototype.setData = function(a, b) {
            return this.data[a] = b;
          }, a.prototype.getData = function(a, b) {
            var c = this.data[a];
            return !c && b && (c = this.data[a] = b), c;
          }, a.prototype.buildCodeFrameError = function(a) {
            var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : SyntaxError;
            return this.hub.file.buildCodeFrameError(this.node, a, b);
          }, a.prototype.traverse = function(a, b) {
            (0, q.default)(this.node, a, this.scope, b, this);
          }, a.prototype.mark = function(a, b) {
            this.hub.file.metadata.marked.push({
              type: a,
              message: b,
              loc: this.node.loc
            });
          }, a.prototype.set = function(a, b) {
            w.validate(this.node, a, b), this.node[a] = b;
          }, a.prototype.getPathLocation = function() {
            var a = [],
                b = this;
            do {
              var c = b.key;
              b.inList && (c = b.listKey + "[" + c + "]"), a.unshift(c);
            } while (b = b.parentPath);
            return a.join(".");
          }, a.prototype.debug = function(a) {
            y.enabled && y(this.getPathLocation() + " " + this.type + ": " + a());
          }, a;
        }();
    b.default = z, (0, s.default)(z.prototype, a("12d")), (0, s.default)(z.prototype, a("131")), (0, s.default)(z.prototype, a("13b")), (0, s.default)(z.prototype, a("151")), (0, s.default)(z.prototype, a("152")), (0, s.default)(z.prototype, a("153")), (0, s.default)(z.prototype, a("154")), (0, s.default)(z.prototype, a("156")), (0, s.default)(z.prototype, a("158")), (0, s.default)(z.prototype, a("159")), (0, s.default)(z.prototype, a("15a"));
    for (var A = function() {
      if (C) {
        if (D >= B.length)
          return "break";
        E = B[D++];
      } else {
        if (D = B.next(), D.done)
          return "break";
        E = D.value;
      }
      var a = E,
          b = "is" + a;
      z.prototype[b] = function(a) {
        return w[b](this.node, a);
      }, z.prototype["assert" + a] = function(c) {
        if (!this[b](c))
          throw new TypeError("Expected node path of type " + a);
      };
    },
        B = w.TYPES,
        C = Array.isArray(B),
        D = 0,
        B = C ? B : (0, g.default)(B); ; ) {
      var E,
          F = A();
      if ("break" === F)
        break;
    }
    var G = function(a) {
      if ("_" === a[0])
        return "continue";
      w.TYPES.indexOf(a) < 0 && w.TYPES.push(a);
      var b = k[a];
      z.prototype["is" + a] = function(a) {
        return b.checkPath(this, a);
      };
    };
    for (var H in k) {
      G(H);
    }
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("15c", ["f", "17", "12e", "9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    a("3"), this || self;
    b.__esModule = !0;
    var f = a("f"),
        g = e(f),
        h = a("17"),
        i = e(h),
        j = a("12e"),
        k = e(j),
        l = a("9"),
        m = d(l),
        n = !1,
        o = function() {
          function a(b, c, d, e) {
            (0, i.default)(this, a), this.queue = null, this.parentPath = e, this.scope = b, this.state = d, this.opts = c;
          }
          return a.prototype.shouldVisit = function(a) {
            var b = this.opts;
            if (b.enter || b.exit)
              return !0;
            if (b[a.type])
              return !0;
            var c = m.VISITOR_KEYS[a.type];
            if (!c || !c.length)
              return !1;
            for (var d = c,
                e = Array.isArray(d),
                f = 0,
                d = e ? d : (0, g.default)(d); ; ) {
              var h;
              if (e) {
                if (f >= d.length)
                  break;
                h = d[f++];
              } else {
                if (f = d.next(), f.done)
                  break;
                h = f.value;
              }
              var i = h;
              if (a[i])
                return !0;
            }
            return !1;
          }, a.prototype.create = function(a, b, c, d) {
            return k.default.get({
              parentPath: this.parentPath,
              parent: a,
              container: b,
              key: c,
              listKey: d
            });
          }, a.prototype.maybeQueue = function(a, b) {
            if (this.trap)
              throw new Error("Infinite cycle detected");
            this.queue && (b ? this.queue.push(a) : this.priorityQueue.push(a));
          }, a.prototype.visitMultiple = function(a, b, c) {
            if (0 === a.length)
              return !1;
            for (var d = [],
                e = 0; e < a.length; e++) {
              var f = a[e];
              f && this.shouldVisit(f) && d.push(this.create(b, a, e, c));
            }
            return this.visitQueue(d);
          }, a.prototype.visitSingle = function(a, b) {
            return !!this.shouldVisit(a[b]) && this.visitQueue([this.create(a, a, b)]);
          }, a.prototype.visitQueue = function(a) {
            this.queue = a, this.priorityQueue = [];
            for (var b = [],
                c = !1,
                d = a,
                e = Array.isArray(d),
                f = 0,
                d = e ? d : (0, g.default)(d); ; ) {
              var h;
              if (e) {
                if (f >= d.length)
                  break;
                h = d[f++];
              } else {
                if (f = d.next(), f.done)
                  break;
                h = f.value;
              }
              var i = h;
              if (i.resync(), 0 !== i.contexts.length && i.contexts[i.contexts.length - 1] === this || i.pushContext(this), null !== i.key && (n && a.length >= 1e4 && (this.trap = !0), !(b.indexOf(i.node) >= 0))) {
                if (b.push(i.node), i.visit()) {
                  c = !0;
                  break;
                }
                if (this.priorityQueue.length && (c = this.visitQueue(this.priorityQueue), this.priorityQueue = [], this.queue = a, c))
                  break;
              }
            }
            for (var j = a,
                k = Array.isArray(j),
                l = 0,
                j = k ? j : (0, g.default)(j); ; ) {
              var m;
              if (k) {
                if (l >= j.length)
                  break;
                m = j[l++];
              } else {
                if (l = j.next(), l.done)
                  break;
                m = l.value;
              }
              var o = m;
              o.popContext();
            }
            return this.queue = null, c;
          }, a.prototype.visit = function(a, b) {
            var c = a[b];
            return !!c && (Array.isArray(c) ? this.visitMultiple(c, a, b) : this.visitSingle(a, b));
          }, a;
        }();
    return b.default = o, c.exports = b.default, c.exports;
  }), a.registerDynamic("15b", ["9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    a("3"), this || self;
    b.__esModule = !0, b.Flow = b.Pure = b.Generated = b.User = b.Var = b.BlockScoped = b.Referenced = b.Scope = b.Expression = b.Statement = b.BindingIdentifier = b.ReferencedMemberExpression = b.ReferencedIdentifier = void 0;
    var e = a("9"),
        f = d(e);
    b.ReferencedIdentifier = {
      types: ["Identifier", "JSXIdentifier"],
      checkPath: function(a, b) {
        var c = a.node,
            d = a.parent;
        if (!f.isIdentifier(c, b) && !f.isJSXMemberExpression(d, b)) {
          if (!f.isJSXIdentifier(c, b))
            return !1;
          if (e.react.isCompatTag(c.name))
            return !1;
        }
        return f.isReferenced(c, d);
      }
    }, b.ReferencedMemberExpression = {
      types: ["MemberExpression"],
      checkPath: function(a) {
        var b = a.node,
            c = a.parent;
        return f.isMemberExpression(b) && f.isReferenced(b, c);
      }
    }, b.BindingIdentifier = {
      types: ["Identifier"],
      checkPath: function(a) {
        var b = a.node,
            c = a.parent;
        return f.isIdentifier(b) && f.isBinding(b, c);
      }
    }, b.Statement = {
      types: ["Statement"],
      checkPath: function(a) {
        var b = a.node,
            c = a.parent;
        if (f.isStatement(b)) {
          if (f.isVariableDeclaration(b)) {
            if (f.isForXStatement(c, {left: b}))
              return !1;
            if (f.isForStatement(c, {init: b}))
              return !1;
          }
          return !0;
        }
        return !1;
      }
    }, b.Expression = {
      types: ["Expression"],
      checkPath: function(a) {
        return a.isIdentifier() ? a.isReferencedIdentifier() : f.isExpression(a.node);
      }
    }, b.Scope = {
      types: ["Scopable"],
      checkPath: function(a) {
        return f.isScope(a.node, a.parent);
      }
    }, b.Referenced = {checkPath: function(a) {
        return f.isReferenced(a.node, a.parent);
      }}, b.BlockScoped = {checkPath: function(a) {
        return f.isBlockScoped(a.node);
      }}, b.Var = {
      types: ["VariableDeclaration"],
      checkPath: function(a) {
        return f.isVar(a.node);
      }
    }, b.User = {checkPath: function(a) {
        return a.node && !!a.node.loc;
      }}, b.Generated = {checkPath: function(a) {
        return !a.isUser();
      }}, b.Pure = {checkPath: function(a, b) {
        return a.scope.isPure(a.node, b);
      }}, b.Flow = {
      types: ["Flow", "ImportDeclaration", "ExportDeclaration"],
      checkPath: function(a) {
        var b = a.node;
        return !!f.isFlow(b) || (f.isImportDeclaration(b) ? "type" === b.importKind || "typeof" === b.importKind : !!f.isExportDeclaration(b) && "type" === b.exportKind);
      }
    };
    return c.exports;
  }), a.registerDynamic("15d", ["2a", "d", "f", "15b", "6", "9", "b2", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      if (a._exploded)
        return a;
      a._exploded = !0;
      for (var b in a)
        if (!n(b)) {
          var c = b.split("|");
          if (1 !== c.length) {
            var d = a[b];
            delete a[b];
            for (var e = c,
                f = Array.isArray(e),
                h = 0,
                e = f ? e : (0, u.default)(e); ; ) {
              var i;
              if (f) {
                if (h >= e.length)
                  break;
                i = e[h++];
              } else {
                if (h = e.next(), h.done)
                  break;
                i = h.value;
              }
              var j = i;
              a[j] = d;
            }
          }
        }
      g(a), delete a.__esModule, k(a), l(a);
      for (var p = (0, s.default)(a),
          q = Array.isArray(p),
          r = 0,
          p = q ? p : (0, u.default)(p); ; ) {
        var t;
        if (q) {
          if (r >= p.length)
            break;
          t = p[r++];
        } else {
          if (r = p.next(), r.done)
            break;
          t = r.value;
        }
        var v = t;
        if (!n(v)) {
          var x = w[v];
          if (x) {
            var y = a[v];
            for (var z in y)
              y[z] = m(x, y[z]);
            if (delete a[v], x.types)
              for (var B = x.types,
                  D = Array.isArray(B),
                  E = 0,
                  B = D ? B : (0, u.default)(B); ; ) {
                var F;
                if (D) {
                  if (E >= B.length)
                    break;
                  F = B[E++];
                } else {
                  if (E = B.next(), E.done)
                    break;
                  F = E.value;
                }
                var G = F;
                a[G] ? o(a[G], y) : a[G] = y;
              }
            else
              o(a, y);
          }
        }
      }
      for (var H in a)
        if (!n(H)) {
          var I = a[H],
              J = A.FLIPPED_ALIAS_KEYS[H],
              K = A.DEPRECATED_KEYS[H];
          if (K && (console.trace("Visitor defined for " + H + " but it has been renamed to " + K), J = [K]), J) {
            delete a[H];
            for (var L = J,
                M = Array.isArray(L),
                N = 0,
                L = M ? L : (0, u.default)(L); ; ) {
              var O;
              if (M) {
                if (N >= L.length)
                  break;
                O = L[N++];
              } else {
                if (N = L.next(), N.done)
                  break;
                O = N.value;
              }
              var P = O,
                  Q = a[P];
              Q ? o(Q, I) : a[P] = (0, C.default)(I);
            }
          }
        }
      for (var R in a)
        n(R) || l(a[R]);
      return a;
    }
    function g(a) {
      if (!a._verified) {
        if ("function" == typeof a)
          throw new Error(y.get("traverseVerifyRootFunction"));
        for (var b in a)
          if ("enter" !== b && "exit" !== b || h(b, a[b]), !n(b)) {
            if (A.TYPES.indexOf(b) < 0)
              throw new Error(y.get("traverseVerifyNodeType", b));
            var c = a[b];
            if ("object" === ("undefined" == typeof c ? "undefined" : (0, q.default)(c)))
              for (var d in c) {
                if ("enter" !== d && "exit" !== d)
                  throw new Error(y.get("traverseVerifyVisitorProperty", b, d));
                h(b + "." + d, c[d]);
              }
          }
        a._verified = !0;
      }
    }
    function h(a, b) {
      for (var c = [].concat(b),
          d = c,
          e = Array.isArray(d),
          f = 0,
          d = e ? d : (0, u.default)(d); ; ) {
        var g;
        if (e) {
          if (f >= d.length)
            break;
          g = d[f++];
        } else {
          if (f = d.next(), f.done)
            break;
          g = f.value;
        }
        var h = g;
        if ("function" != typeof h)
          throw new TypeError("Non-function found defined in " + a + " with type " + ("undefined" == typeof h ? "undefined" : (0, q.default)(h)));
      }
    }
    function i(a) {
      for (var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
          c = arguments[2],
          d = {},
          e = 0; e < a.length; e++) {
        var g = a[e],
            h = b[e];
        f(g);
        for (var i in g) {
          var k = g[i];
          (h || c) && (k = j(k, h, c));
          var l = d[i] = d[i] || {};
          o(l, k);
        }
      }
      return d;
    }
    function j(a, b, c) {
      var d = {},
          e = function(e) {
            var f = a[e];
            return Array.isArray(f) ? (f = f.map(function(a) {
              var d = a;
              return b && (d = function(c) {
                return a.call(b, c, b);
              }), c && (d = c(b.key, e, d)), d;
            }), void(d[e] = f)) : "continue";
          };
      for (var f in a) {
        e(f);
      }
      return d;
    }
    function k(a) {
      for (var b in a)
        if (!n(b)) {
          var c = a[b];
          "function" == typeof c && (a[b] = {enter: c});
        }
    }
    function l(a) {
      a.enter && !Array.isArray(a.enter) && (a.enter = [a.enter]), a.exit && !Array.isArray(a.exit) && (a.exit = [a.exit]);
    }
    function m(a, b) {
      var c = function(c) {
        if (a.checkPath(c))
          return b.apply(this, arguments);
      };
      return c.toString = function() {
        return b.toString();
      }, c;
    }
    function n(a) {
      return "_" === a[0] || ("enter" === a || "exit" === a || "shouldSkip" === a || ("blacklist" === a || "noScope" === a || "skipKeys" === a));
    }
    function o(a, b) {
      for (var c in b)
        a[c] = [].concat(a[c] || [], b[c]);
    }
    a("3"), this || self;
    b.__esModule = !0;
    var p = a("2a"),
        q = e(p),
        r = a("d"),
        s = e(r),
        t = a("f"),
        u = e(t);
    b.explode = f, b.verify = g, b.merge = i;
    var v = a("15b"),
        w = d(v),
        x = a("6"),
        y = d(x),
        z = a("9"),
        A = d(z),
        B = a("b2"),
        C = e(B);
    return c.exports;
  }), a.registerDynamic("6", ["65", "86"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      for (var b = arguments.length,
          c = Array(b > 1 ? b - 1 : 0),
          d = 1; d < b; d++)
        c[d - 1] = arguments[d];
      var e = l[a];
      if (!e)
        throw new ReferenceError("Unknown message " + (0, i.default)(a));
      return c = g(c), e.replace(/\$(\d+)/g, function(a, b) {
        return c[b - 1];
      });
    }
    function g(a) {
      return a.map(function(a) {
        if (null != a && a.inspect)
          return a.inspect();
        try {
          return (0, i.default)(a) || a + "";
        } catch (b) {
          return k.inspect(a);
        }
      });
    }
    this || self;
    b.__esModule = !0, b.MESSAGES = void 0;
    var h = a("65"),
        i = e(h);
    b.get = f, b.parseArgs = g;
    var j = a("86"),
        k = d(j),
        l = b.MESSAGES = {
          tailCallReassignmentDeopt: "Function reference has been reassigned, so it will probably be dereferenced, therefore we can't optimise this with confidence",
          classesIllegalBareSuper: "Illegal use of bare super",
          classesIllegalSuperCall: "Direct super call is illegal in non-constructor, use super.$1() instead",
          scopeDuplicateDeclaration: "Duplicate declaration $1",
          settersNoRest: "Setters aren't allowed to have a rest",
          noAssignmentsInForHead: "No assignments allowed in for-in/of head",
          expectedMemberExpressionOrIdentifier: "Expected type MemberExpression or Identifier",
          invalidParentForThisNode: "We don't know how to handle this node within the current parent - please open an issue",
          readOnly: "$1 is read-only",
          unknownForHead: "Unknown node type $1 in ForStatement",
          didYouMean: "Did you mean $1?",
          codeGeneratorDeopt: "Note: The code generator has deoptimised the styling of $1 as it exceeds the max of $2.",
          missingTemplatesDirectory: "no templates directory - this is most likely the result of a broken `npm publish`. Please report to https://github.com/babel/babel/issues",
          unsupportedOutputType: "Unsupported output type $1",
          illegalMethodName: "Illegal method name $1",
          lostTrackNodePath: "We lost track of this node's position, likely because the AST was directly manipulated",
          modulesIllegalExportName: "Illegal export $1",
          modulesDuplicateDeclarations: "Duplicate module declarations with the same source but in different scopes",
          undeclaredVariable: "Reference to undeclared variable $1",
          undeclaredVariableType: "Referencing a type alias outside of a type annotation",
          undeclaredVariableSuggestion: "Reference to undeclared variable $1 - did you mean $2?",
          traverseNeedsParent: "You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a $1 node without passing scope and parentPath.",
          traverseVerifyRootFunction: "You passed `traverse()` a function when it expected a visitor object, are you sure you didn't mean `{ enter: Function }`?",
          traverseVerifyVisitorProperty: "You passed `traverse()` a visitor object with the property $1 that has the invalid property $2",
          traverseVerifyNodeType: "You gave us a visitor for the node type $1 but it's not a valid type",
          pluginNotObject: "Plugin $2 specified in $1 was expected to return an object when invoked but returned $3",
          pluginNotFunction: "Plugin $2 specified in $1 was expected to return a function but returned $3",
          pluginUnknown: "Unknown plugin $1 specified in $2 at $3, attempted to resolve relative to $4",
          pluginInvalidProperty: "Plugin $2 specified in $1 provided an invalid property of $3"
        };
    return c.exports;
  }), a.registerDynamic("15e", ["9d", "71"], !0, function(a, b, c) {
    function d(a) {
      if ("number" == typeof a)
        return a;
      if (f(a))
        return g;
      if (e(a)) {
        var b = "function" == typeof a.valueOf ? a.valueOf() : a;
        a = e(b) ? b + "" : b;
      }
      if ("string" != typeof a)
        return 0 === a ? a : +a;
      a = a.replace(h, "");
      var c = j.test(a);
      return c || k.test(a) ? l(a.slice(2), c ? 2 : 8) : i.test(a) ? g : +a;
    }
    var e = (this || self, a("9d")),
        f = a("71"),
        g = NaN,
        h = /^\s+|\s+$/g,
        i = /^[-+]0x[0-9a-f]+$/i,
        j = /^0b[01]+$/i,
        k = /^0o[0-7]+$/i,
        l = parseInt;
    return c.exports = d, c.exports;
  }), a.registerDynamic("15f", ["15e"], !0, function(a, b, c) {
    function d(a) {
      if (!a)
        return 0 === a ? a : 0;
      if (a = e(a), a === f || a === -f) {
        var b = a < 0 ? -1 : 1;
        return b * g;
      }
      return a === a ? a : 0;
    }
    var e = (this || self, a("15e")),
        f = 1 / 0,
        g = 1.7976931348623157e308;
    return c.exports = d, c.exports;
  }), a.registerDynamic("36", ["15f"], !0, function(a, b, c) {
    function d(a) {
      var b = e(a),
          c = b % 1;
      return b === b ? c ? b - c : b : 0;
    }
    var e = (this || self, a("15f"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("160", ["51"], !0, function(a, b, c) {
    function d(a, b) {
      return e(b, function(b) {
        return a[b];
      });
    }
    var e = (this || self, a("51"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("161", ["160", "3a"], !0, function(a, b, c) {
    function d(a) {
      return a ? e(a, f(a)) : [];
    }
    var e = (this || self, a("160")),
        f = a("3a");
    return c.exports = d, c.exports;
  }), a.registerDynamic("87", ["41", "39", "88", "36", "161"], !0, function(a, b, c) {
    function d(a, b, c, d) {
      a = f(a) ? a : i(a), c = c && !d ? h(c) : 0;
      var k = a.length;
      return c < 0 && (c = j(k + c, 0)), g(a) ? c <= k && a.indexOf(b, c) > -1 : !!k && e(a, b, c) > -1;
    }
    var e = (this || self, a("41")),
        f = a("39"),
        g = a("88"),
        h = a("36"),
        i = a("161"),
        j = Math.max;
    return c.exports = d, c.exports;
  }), a.registerDynamic("a9", ["162", "163", "164", "165", "166", "167", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), this || self, a("162")),
        e = a("163"),
        f = a("164"),
        g = a("165"),
        h = a("166"),
        i = Object.assign;
    return c.exports = !i || a("167")(function() {
      var a = {},
          b = {},
          c = Symbol(),
          d = "abcdefghijklmnopqrst";
      return a[c] = 7, d.split("").forEach(function(a) {
        b[a] = a;
      }), 7 != i({}, a)[c] || Object.keys(i({}, b)).join("") != d;
    }) ? function(a, b) {
      for (var c = g(a),
          i = arguments.length,
          j = 1,
          k = e.f,
          l = f.f; i > j; )
        for (var m,
            n = h(arguments[j++]),
            o = k ? d(n).concat(k(n)) : d(n),
            p = o.length,
            q = 0; p > q; )
          l.call(n, m = o[q++]) && (c[m] = n[m]);
      return c;
    } : i, c.exports;
  }), a.registerDynamic("2c", ["143", "149", "e6", "e5", "144", "146", "168", "169", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), this || self, a("143")),
        e = a("149").getWeak,
        f = a("e6"),
        g = a("e5"),
        h = a("144"),
        i = a("146"),
        j = a("168"),
        k = a("169"),
        l = j(5),
        m = j(6),
        n = 0,
        o = function(a) {
          return a._l || (a._l = new p);
        },
        p = function() {
          this.a = [];
        },
        q = function(a, b) {
          return l(a.a, function(a) {
            return a[0] === b;
          });
        };
    return p.prototype = {
      get: function(a) {
        var b = q(this, a);
        if (b)
          return b[1];
      },
      has: function(a) {
        return !!q(this, a);
      },
      set: function(a, b) {
        var c = q(this, a);
        c ? c[1] = b : this.a.push([a, b]);
      },
      delete: function(a) {
        var b = m(this.a, function(b) {
          return b[0] === a;
        });
        return ~b && this.a.splice(b, 1), !!~b;
      }
    }, c.exports = {
      getConstructor: function(a, b, c, f) {
        var j = a(function(a, d) {
          h(a, j, b, "_i"), a._i = n++, a._l = void 0, void 0 != d && i(d, c, a[f], a);
        });
        return d(j.prototype, {
          delete: function(a) {
            if (!g(a))
              return !1;
            var b = e(a);
            return b === !0 ? o(this).delete(a) : b && k(b, this._i) && delete b[this._i];
          },
          has: function(a) {
            if (!g(a))
              return !1;
            var b = e(a);
            return b === !0 ? o(this).has(a) : b && k(b, this._i);
          }
        }), j;
      },
      def: function(a, b, c) {
        var d = e(f(b), !0);
        return d === !0 ? o(a).set(b, c) : d[a._i] = c, a;
      },
      ufstore: o
    }, c.exports;
  }), a.registerDynamic("143", ["16a", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("16a"));
    return c.exports = function(a, b, c) {
      for (var e in b)
        c && a[e] ? a[e] = b[e] : d(a, e, b[e]);
      return a;
    }, c.exports;
  }), a.registerDynamic("16b", ["e6", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("e6"));
    return c.exports = function(a, b, c, e) {
      try {
        return e ? b(d(c)[0], c[1]) : b(c);
      } catch (b) {
        var f = a.return;
        throw void 0 !== f && d(f.call(a)), b;
      }
    }, c.exports;
  }), a.registerDynamic("16c", ["16d", "140", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("16d")),
        e = a("140")("iterator"),
        f = Array.prototype;
    return c.exports = function(a) {
      return void 0 !== a && (d.Array === a || f[e] === a);
    }, c.exports;
  }), a.registerDynamic("146", ["e7", "16b", "16c", "e6", "16e", "16f", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("e7")),
        e = a("16b"),
        f = a("16c"),
        g = a("e6"),
        h = a("16e"),
        i = a("16f"),
        j = {},
        k = {},
        b = c.exports = function(a, b, c, l, m) {
          var n,
              o,
              p,
              q,
              r = m ? function() {
                return a;
              } : i(a),
              s = d(c, l, b ? 2 : 1),
              t = 0;
          if ("function" != typeof r)
            throw TypeError(a + " is not iterable!");
          if (f(r)) {
            for (n = h(a.length); n > t; t++)
              if (q = b ? s(g(o = a[t])[0], o[1]) : s(a[t]), q === j || q === k)
                return q;
          } else
            for (p = r.call(a); !(o = p.next()).done; )
              if (q = e(p, s, o.value, b), q === j || q === k)
                return q;
        };
    return b.BREAK = j, b.RETURN = k, c.exports;
  }), a.registerDynamic("144", ["3"], !0, function(a, b, c) {
    a("3"), this || self;
    return c.exports = function(a, b, c, d) {
      if (!(a instanceof b) || void 0 !== d && d in a)
        throw TypeError(c + ": incorrect invocation!");
      return a;
    }, c.exports;
  }), a.registerDynamic("170", ["e5", "171", "140", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("e5")),
        e = a("171"),
        f = a("140")("species");
    return c.exports = function(a) {
      var b;
      return e(a) && (b = a.constructor, "function" != typeof b || b !== Array && !e(b.prototype) || (b = void 0), d(b) && (b = b[f], null === b && (b = void 0))), void 0 === b ? Array : b;
    }, c.exports;
  }), a.registerDynamic("172", ["170", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("170"));
    return c.exports = function(a, b) {
      return new (d(a))(b);
    }, c.exports;
  }), a.registerDynamic("168", ["e7", "166", "165", "16e", "172", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("e7")),
        e = a("166"),
        f = a("165"),
        g = a("16e"),
        h = a("172");
    return c.exports = function(a, b) {
      var c = 1 == a,
          i = 2 == a,
          j = 3 == a,
          k = 4 == a,
          l = 6 == a,
          m = 5 == a || l,
          n = b || h;
      return function(b, h, o) {
        for (var p,
            q,
            r = f(b),
            s = e(r),
            t = d(h, o, 3),
            u = g(s.length),
            v = 0,
            w = c ? n(b, u) : i ? n(b, 0) : void 0; u > v; v++)
          if ((m || v in s) && (p = s[v], q = t(p, v, r), a))
            if (c)
              w[v] = q;
            else if (q)
              switch (a) {
                case 3:
                  return !0;
                case 5:
                  return p;
                case 6:
                  return v;
                case 2:
                  w.push(p);
              }
            else if (k)
              return !1;
        return l ? -1 : j || k ? k : w;
      };
    }, c.exports;
  }), a.registerDynamic("2d", ["13d", "a8", "149", "167", "16a", "143", "146", "144", "e5", "173", "13e", "168", "13f", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), this || self),
        d = a("13d"),
        e = a("a8"),
        f = a("149"),
        g = a("167"),
        h = a("16a"),
        i = a("143"),
        j = a("146"),
        k = a("144"),
        l = a("e5"),
        m = a("173"),
        n = a("13e").f,
        o = a("168")(0),
        p = a("13f");
    return c.exports = function(a, b, c, q, r, s) {
      var t = d[a],
          u = t,
          v = r ? "set" : "add",
          w = u && u.prototype,
          x = {};
      return p && "function" == typeof u && (s || w.forEach && !g(function() {
        (new u).entries().next();
      })) ? (u = b(function(b, c) {
        k(b, u, a, "_c"), b._c = new t, void 0 != c && j(c, r, b[v], b);
      }), o("add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON".split(","), function(a) {
        var b = "add" == a || "set" == a;
        a in w && (!s || "clear" != a) && h(u.prototype, a, function(c, d) {
          if (k(this, u, a), !b && s && !l(c))
            return "get" == a && void 0;
          var e = this._c[a](0 === c ? 0 : c, d);
          return b ? this : e;
        });
      }), "size" in w && n(u.prototype, "size", {get: function() {
          return this._c.size;
        }})) : (u = q.getConstructor(b, a, r, v), i(u.prototype, c), f.NEED = !0), m(u, a), x[a] = u, e(e.G + e.W + e.F, x), s || q.setStrong(u, a, r), u;
    }, c.exports;
  }), a.registerDynamic("174", ["168", "175", "149", "a9", "2c", "e5", "2d", "3"], !0, function(a, b, c) {
    "use strict";
    var d,
        e = (a("3"), this || self, a("168")(0)),
        f = a("175"),
        g = a("149"),
        h = a("a9"),
        i = a("2c"),
        j = a("e5"),
        k = g.getWeak,
        l = Object.isExtensible,
        m = i.ufstore,
        n = {},
        o = function(a) {
          return function() {
            return a(this, arguments.length > 0 ? arguments[0] : void 0);
          };
        },
        p = {
          get: function(a) {
            if (j(a)) {
              var b = k(a);
              return b === !0 ? m(this).get(a) : b ? b[this._i] : void 0;
            }
          },
          set: function(a, b) {
            return i.def(this, a, b);
          }
        },
        q = c.exports = a("2d")("WeakMap", o, p, i, !0, !0);
    return 7 != (new q).set((Object.freeze || Object)(n), 7).get(n) && (d = i.getConstructor(o), h(d.prototype, p), g.NEED = !0, e(["delete", "has", "get", "set"], function(a) {
      var b = q.prototype,
          c = b[a];
      f(b, a, function(b, e) {
        if (j(b) && !l(b)) {
          this._f || (this._f = new d);
          var f = this._f[a](b, e);
          return "set" == a ? this : f;
        }
        return c.call(this, b, e);
      });
    })), c.exports;
  }), a.registerDynamic("176", ["2f", "30", "174", "31", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return a("2f"), a("30"), a("174"), c.exports = a("31").WeakMap, c.exports;
  }), a.registerDynamic("177", ["176"], !0, function(a, b, c) {
    this || self;
    return c.exports = {
      default: a("176"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("12c", ["177", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e() {
      b.path = h = new g.default, b.scope = i = new g.default;
    }
    a("3"), this || self;
    b.__esModule = !0, b.scope = b.path = void 0;
    var f = a("177"),
        g = d(f);
    b.clear = e;
    var h = b.path = new g.default,
        i = b.scope = new g.default;
    return c.exports;
  }), a.registerDynamic("b4", ["f", "12e", "12b", "113", "15c", "15d", "6", "87", "9", "12c", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a, b, c, d, e) {
      if (a) {
        if (b || (b = {}), !b.noScope && !c && "Program" !== a.type && "File" !== a.type)
          throw new Error(r.get("traverseNeedsParent", a.type));
        p.explode(b), f.node(a, b, c, d, e);
      }
    }
    function g(a, b) {
      a.node.type === b.type && (b.has = !0, a.stop());
    }
    a("3"), this || self;
    b.__esModule = !0, b.visitors = b.Hub = b.Scope = b.NodePath = void 0;
    var h = a("f"),
        i = e(h),
        j = a("12e");
    Object.defineProperty(b, "NodePath", {
      enumerable: !0,
      get: function() {
        return e(j).default;
      }
    });
    var k = a("12b");
    Object.defineProperty(b, "Scope", {
      enumerable: !0,
      get: function() {
        return e(k).default;
      }
    });
    var l = a("113");
    Object.defineProperty(b, "Hub", {
      enumerable: !0,
      get: function() {
        return e(l).default;
      }
    }), b.default = f;
    var m = a("15c"),
        n = e(m),
        o = a("15d"),
        p = d(o),
        q = a("6"),
        r = d(q),
        s = a("87"),
        t = e(s),
        u = a("9"),
        v = d(u),
        w = a("12c"),
        x = d(w);
    return b.visitors = p, f.visitors = p, f.verify = p.verify, f.explode = p.explode, f.NodePath = a("12e"), f.Scope = a("12b"), f.Hub = a("113"), f.cheap = function(a, b) {
      return v.traverseFast(a, b);
    }, f.node = function(a, b, c, d, e, f) {
      var g = v.VISITOR_KEYS[a.type];
      if (g)
        for (var h = new n.default(c, b, d, e),
            j = g,
            k = Array.isArray(j),
            l = 0,
            j = k ? j : (0, i.default)(j); ; ) {
          var m;
          if (k) {
            if (l >= j.length)
              break;
            m = j[l++];
          } else {
            if (l = j.next(), l.done)
              break;
            m = l.value;
          }
          var o = m;
          if ((!f || !f[o]) && h.visit(a, o))
            return;
        }
    }, f.clearNode = function(a, b) {
      v.removeProperties(a, b), x.path.delete(a);
    }, f.removeProperties = function(a, b) {
      return v.traverseFast(a, f.clearNode, b), a;
    }, f.hasType = function(a, b, c, d) {
      if ((0, t.default)(d, a.type))
        return !1;
      if (a.type === c)
        return !0;
      var e = {
        has: !1,
        type: c
      };
      return f(a, {
        blacklist: d,
        enter: g
      }, b, e), e.has;
    }, f.clearCache = function() {
      x.clear();
    }, f.copyCache = function(a, b) {
      x.path.has(a) && x.path.set(b, x.path.get(a));
    }, c.exports;
  }), a.registerDynamic("178", ["179", "17a", "17b"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    var e = (this || self, "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(a) {
      return typeof a;
    } : function(a) {
      return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a;
    }),
        f = a("179"),
        g = a("17a"),
        h = d(g),
        i = a("17b"),
        j = h.default.prototype;
    return j.addExtra = function(a, b, c) {
      if (a) {
        var d = a.extra = a.extra || {};
        d[b] = c;
      }
    }, j.isRelational = function(a) {
      return this.match(f.types.relational) && this.state.value === a;
    }, j.expectRelational = function(a) {
      this.isRelational(a) ? this.next() : this.unexpected(null, f.types.relational);
    }, j.isContextual = function(a) {
      return this.match(f.types.name) && this.state.value === a;
    }, j.eatContextual = function(a) {
      return this.state.value === a && this.eat(f.types.name);
    }, j.expectContextual = function(a, b) {
      this.eatContextual(a) || this.unexpected(null, b);
    }, j.canInsertSemicolon = function() {
      return this.match(f.types.eof) || this.match(f.types.braceR) || i.lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));
    }, j.isLineTerminator = function() {
      return this.eat(f.types.semi) || this.canInsertSemicolon();
    }, j.semicolon = function() {
      this.isLineTerminator() || this.unexpected(null, f.types.semi);
    }, j.expect = function(a, b) {
      return this.eat(a) || this.unexpected(b, a);
    }, j.unexpected = function(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "Unexpected token";
      b && "object" === ("undefined" == typeof b ? "undefined" : e(b)) && b.label && (b = "Unexpected token, expected " + b.label), this.raise(null != a ? a : this.state.start, b);
    }, c.exports;
  }), a.registerDynamic("17c", ["179", "17a", "17b"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    var e = (this || self, a("179")),
        f = a("17a"),
        g = d(f),
        h = a("17b"),
        i = g.default.prototype;
    i.parseTopLevel = function(a, b) {
      return b.sourceType = this.options.sourceType, this.parseBlockBody(b, !0, !0, e.types.eof), a.program = this.finishNode(b, "Program"), a.comments = this.state.comments, a.tokens = this.state.tokens, this.finishNode(a, "File");
    };
    var j = {kind: "loop"},
        k = {kind: "switch"};
    i.stmtToDirective = function(a) {
      var b = a.expression,
          c = this.startNodeAt(b.start, b.loc.start),
          d = this.startNodeAt(a.start, a.loc.start),
          e = this.input.slice(b.start, b.end),
          f = c.value = e.slice(1, -1);
      return this.addExtra(c, "raw", e), this.addExtra(c, "rawValue", f), d.value = this.finishNodeAt(c, "DirectiveLiteral", b.end, b.loc.end), this.finishNodeAt(d, "Directive", a.end, a.loc.end);
    }, i.parseStatement = function(a, b) {
      this.match(e.types.at) && this.parseDecorators(!0);
      var c = this.state.type,
          d = this.startNode();
      switch (c) {
        case e.types._break:
        case e.types._continue:
          return this.parseBreakContinueStatement(d, c.keyword);
        case e.types._debugger:
          return this.parseDebuggerStatement(d);
        case e.types._do:
          return this.parseDoStatement(d);
        case e.types._for:
          return this.parseForStatement(d);
        case e.types._function:
          return a || this.unexpected(), this.parseFunctionStatement(d);
        case e.types._class:
          return a || this.unexpected(), this.takeDecorators(d), this.parseClass(d, !0);
        case e.types._if:
          return this.parseIfStatement(d);
        case e.types._return:
          return this.parseReturnStatement(d);
        case e.types._switch:
          return this.parseSwitchStatement(d);
        case e.types._throw:
          return this.parseThrowStatement(d);
        case e.types._try:
          return this.parseTryStatement(d);
        case e.types._let:
        case e.types._const:
          a || this.unexpected();
        case e.types._var:
          return this.parseVarStatement(d, c);
        case e.types._while:
          return this.parseWhileStatement(d);
        case e.types._with:
          return this.parseWithStatement(d);
        case e.types.braceL:
          return this.parseBlock();
        case e.types.semi:
          return this.parseEmptyStatement(d);
        case e.types._export:
        case e.types._import:
          if (this.hasPlugin("dynamicImport") && this.lookahead().type === e.types.parenL)
            break;
          return this.options.allowImportExportEverywhere || (b || this.raise(this.state.start, "'import' and 'export' may only appear at the top level"), this.inModule || this.raise(this.state.start, "'import' and 'export' may appear only with 'sourceType: module'")), c === e.types._import ? this.parseImport(d) : this.parseExport(d);
        case e.types.name:
          if ("async" === this.state.value) {
            var f = this.state.clone();
            if (this.next(), this.match(e.types._function) && !this.canInsertSemicolon())
              return this.expect(e.types._function), this.parseFunction(d, !0, !1, !0);
            this.state = f;
          }
      }
      var g = this.state.value,
          h = this.parseExpression();
      return c === e.types.name && "Identifier" === h.type && this.eat(e.types.colon) ? this.parseLabeledStatement(d, g, h) : this.parseExpressionStatement(d, h);
    }, i.takeDecorators = function(a) {
      this.state.decorators.length && (a.decorators = this.state.decorators, this.state.decorators = []);
    }, i.parseDecorators = function(a) {
      for (; this.match(e.types.at); )
        this.state.decorators.push(this.parseDecorator());
      a && this.match(e.types._export) || this.match(e.types._class) || this.raise(this.state.start, "Leading decorators must be attached to a class declaration");
    }, i.parseDecorator = function() {
      this.hasPlugin("decorators") || this.unexpected();
      var a = this.startNode();
      return this.next(), a.expression = this.parseMaybeAssign(), this.finishNode(a, "Decorator");
    }, i.parseBreakContinueStatement = function(a, b) {
      var c = "break" === b;
      this.next(), this.isLineTerminator() ? a.label = null : this.match(e.types.name) ? (a.label = this.parseIdentifier(), this.semicolon()) : this.unexpected();
      var d = void 0;
      for (d = 0; d < this.state.labels.length; ++d) {
        var f = this.state.labels[d];
        if (null == a.label || f.name === a.label.name) {
          if (null != f.kind && (c || "loop" === f.kind))
            break;
          if (a.label && c)
            break;
        }
      }
      return d === this.state.labels.length && this.raise(a.start, "Unsyntactic " + b), this.finishNode(a, c ? "BreakStatement" : "ContinueStatement");
    }, i.parseDebuggerStatement = function(a) {
      return this.next(), this.semicolon(), this.finishNode(a, "DebuggerStatement");
    }, i.parseDoStatement = function(a) {
      return this.next(), this.state.labels.push(j), a.body = this.parseStatement(!1), this.state.labels.pop(), this.expect(e.types._while), a.test = this.parseParenExpression(), this.eat(e.types.semi), this.finishNode(a, "DoWhileStatement");
    }, i.parseForStatement = function(a) {
      this.next(), this.state.labels.push(j);
      var b = !1;
      if (this.hasPlugin("asyncGenerators") && this.state.inAsync && this.isContextual("await") && (b = !0, this.next()), this.expect(e.types.parenL), this.match(e.types.semi))
        return b && this.unexpected(), this.parseFor(a, null);
      if (this.match(e.types._var) || this.match(e.types._let) || this.match(e.types._const)) {
        var c = this.startNode(),
            d = this.state.type;
        return this.next(), this.parseVar(c, !0, d), this.finishNode(c, "VariableDeclaration"), !this.match(e.types._in) && !this.isContextual("of") || 1 !== c.declarations.length || c.declarations[0].init ? (b && this.unexpected(), this.parseFor(a, c)) : this.parseForIn(a, c, b);
      }
      var f = {start: 0},
          g = this.parseExpression(!0, f);
      if (this.match(e.types._in) || this.isContextual("of")) {
        var h = this.isContextual("of") ? "for-of statement" : "for-in statement";
        return this.toAssignable(g, void 0, h), this.checkLVal(g, void 0, void 0, h), this.parseForIn(a, g, b);
      }
      return f.start && this.unexpected(f.start), b && this.unexpected(), this.parseFor(a, g);
    }, i.parseFunctionStatement = function(a) {
      return this.next(), this.parseFunction(a, !0);
    }, i.parseIfStatement = function(a) {
      return this.next(), a.test = this.parseParenExpression(), a.consequent = this.parseStatement(!1), a.alternate = this.eat(e.types._else) ? this.parseStatement(!1) : null, this.finishNode(a, "IfStatement");
    }, i.parseReturnStatement = function(a) {
      return this.state.inFunction || this.options.allowReturnOutsideFunction || this.raise(this.state.start, "'return' outside of function"), this.next(), this.isLineTerminator() ? a.argument = null : (a.argument = this.parseExpression(), this.semicolon()), this.finishNode(a, "ReturnStatement");
    }, i.parseSwitchStatement = function(a) {
      this.next(), a.discriminant = this.parseParenExpression(), a.cases = [], this.expect(e.types.braceL), this.state.labels.push(k);
      for (var b,
          c = void 0; !this.match(e.types.braceR); )
        if (this.match(e.types._case) || this.match(e.types._default)) {
          var d = this.match(e.types._case);
          c && this.finishNode(c, "SwitchCase"), a.cases.push(c = this.startNode()), c.consequent = [], this.next(), d ? c.test = this.parseExpression() : (b && this.raise(this.state.lastTokStart, "Multiple default clauses"), b = !0, c.test = null), this.expect(e.types.colon);
        } else
          c ? c.consequent.push(this.parseStatement(!0)) : this.unexpected();
      return c && this.finishNode(c, "SwitchCase"), this.next(), this.state.labels.pop(), this.finishNode(a, "SwitchStatement");
    }, i.parseThrowStatement = function(a) {
      return this.next(), h.lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start)) && this.raise(this.state.lastTokEnd, "Illegal newline after throw"), a.argument = this.parseExpression(), this.semicolon(), this.finishNode(a, "ThrowStatement");
    };
    var l = [];
    return i.parseTryStatement = function(a) {
      if (this.next(), a.block = this.parseBlock(), a.handler = null, this.match(e.types._catch)) {
        var b = this.startNode();
        this.next(), this.expect(e.types.parenL), b.param = this.parseBindingAtom(), this.checkLVal(b.param, !0, Object.create(null), "catch clause"), this.expect(e.types.parenR), b.body = this.parseBlock(), a.handler = this.finishNode(b, "CatchClause");
      }
      return a.guardedHandlers = l, a.finalizer = this.eat(e.types._finally) ? this.parseBlock() : null, a.handler || a.finalizer || this.raise(a.start, "Missing catch or finally clause"), this.finishNode(a, "TryStatement");
    }, i.parseVarStatement = function(a, b) {
      return this.next(), this.parseVar(a, !1, b), this.semicolon(), this.finishNode(a, "VariableDeclaration");
    }, i.parseWhileStatement = function(a) {
      return this.next(), a.test = this.parseParenExpression(), this.state.labels.push(j), a.body = this.parseStatement(!1), this.state.labels.pop(), this.finishNode(a, "WhileStatement");
    }, i.parseWithStatement = function(a) {
      return this.state.strict && this.raise(this.state.start, "'with' in strict mode"), this.next(), a.object = this.parseParenExpression(), a.body = this.parseStatement(!1), this.finishNode(a, "WithStatement");
    }, i.parseEmptyStatement = function(a) {
      return this.next(), this.finishNode(a, "EmptyStatement");
    }, i.parseLabeledStatement = function(a, b, c) {
      for (var d = this.state.labels,
          f = Array.isArray(d),
          g = 0,
          d = f ? d : d[Symbol.iterator](); ; ) {
        var h;
        if (f) {
          if (g >= d.length)
            break;
          h = d[g++];
        } else {
          if (g = d.next(), g.done)
            break;
          h = g.value;
        }
        var i = h;
        i.name === b && this.raise(c.start, "Label '" + b + "' is already declared");
      }
      for (var j = this.state.type.isLoop ? "loop" : this.match(e.types._switch) ? "switch" : null,
          k = this.state.labels.length - 1; k >= 0; k--) {
        var l = this.state.labels[k];
        if (l.statementStart !== a.start)
          break;
        l.statementStart = this.state.start, l.kind = j;
      }
      return this.state.labels.push({
        name: b,
        kind: j,
        statementStart: this.state.start
      }), a.body = this.parseStatement(!0), this.state.labels.pop(), a.label = c, this.finishNode(a, "LabeledStatement");
    }, i.parseExpressionStatement = function(a, b) {
      return a.expression = b, this.semicolon(), this.finishNode(a, "ExpressionStatement");
    }, i.parseBlock = function(a) {
      var b = this.startNode();
      return this.expect(e.types.braceL), this.parseBlockBody(b, a, !1, e.types.braceR), this.finishNode(b, "BlockStatement");
    }, i.parseBlockBody = function(a, b, c, d) {
      a.body = [], a.directives = [];
      for (var e = !1,
          f = void 0,
          g = void 0; !this.eat(d); ) {
        e || !this.state.containsOctal || g || (g = this.state.octalPosition);
        var h = this.parseStatement(!0, c);
        if (!b || e || "ExpressionStatement" !== h.type || "StringLiteral" !== h.expression.type || h.expression.extra.parenthesized)
          e = !0, a.body.push(h);
        else {
          var i = this.stmtToDirective(h);
          a.directives.push(i), void 0 === f && "use strict" === i.value.value && (f = this.state.strict, this.setStrict(!0), g && this.raise(g, "Octal literal in strict mode"));
        }
      }
      f === !1 && this.setStrict(!1);
    }, i.parseFor = function(a, b) {
      return a.init = b, this.expect(e.types.semi), a.test = this.match(e.types.semi) ? null : this.parseExpression(), this.expect(e.types.semi), a.update = this.match(e.types.parenR) ? null : this.parseExpression(), this.expect(e.types.parenR), a.body = this.parseStatement(!1), this.state.labels.pop(), this.finishNode(a, "ForStatement");
    }, i.parseForIn = function(a, b, c) {
      var d = void 0;
      return c ? (this.eatContextual("of"), d = "ForAwaitStatement") : (d = this.match(e.types._in) ? "ForInStatement" : "ForOfStatement", this.next()), a.left = b, a.right = this.parseExpression(), this.expect(e.types.parenR), a.body = this.parseStatement(!1), this.state.labels.pop(), this.finishNode(a, d);
    }, i.parseVar = function(a, b, c) {
      for (a.declarations = [], a.kind = c.keyword; ; ) {
        var d = this.startNode();
        if (this.parseVarHead(d), this.eat(e.types.eq) ? d.init = this.parseMaybeAssign(b) : c !== e.types._const || this.match(e.types._in) || this.isContextual("of") ? "Identifier" === d.id.type || b && (this.match(e.types._in) || this.isContextual("of")) ? d.init = null : this.raise(this.state.lastTokEnd, "Complex binding patterns require an initialization value") : this.unexpected(), a.declarations.push(this.finishNode(d, "VariableDeclarator")), !this.eat(e.types.comma))
          break;
      }
      return a;
    }, i.parseVarHead = function(a) {
      a.id = this.parseBindingAtom(), this.checkLVal(a.id, !0, void 0, "variable declaration");
    }, i.parseFunction = function(a, b, c, d, f) {
      var g = this.state.inMethod;
      return this.state.inMethod = !1, this.initFunction(a, d), this.match(e.types.star) && (a.async && !this.hasPlugin("asyncGenerators") ? this.unexpected() : (a.generator = !0, this.next())), !b || f || this.match(e.types.name) || this.match(e.types._yield) || this.unexpected(), (this.match(e.types.name) || this.match(e.types._yield)) && (a.id = this.parseBindingIdentifier()), this.parseFunctionParams(a), this.parseFunctionBody(a, c), this.state.inMethod = g, this.finishNode(a, b ? "FunctionDeclaration" : "FunctionExpression");
    }, i.parseFunctionParams = function(a) {
      this.expect(e.types.parenL), a.params = this.parseBindingList(e.types.parenR);
    }, i.parseClass = function(a, b, c) {
      return this.next(), this.parseClassId(a, b, c), this.parseClassSuper(a), this.parseClassBody(a), this.finishNode(a, b ? "ClassDeclaration" : "ClassExpression");
    }, i.isClassProperty = function() {
      return this.match(e.types.eq) || this.isLineTerminator();
    }, i.isClassMutatorStarter = function() {
      return !1;
    }, i.parseClassBody = function(a) {
      var b = this.state.strict;
      this.state.strict = !0;
      var c = !1,
          d = !1,
          f = [],
          g = this.startNode();
      for (g.body = [], this.expect(e.types.braceL); !this.eat(e.types.braceR); )
        if (!this.eat(e.types.semi))
          if (this.match(e.types.at))
            f.push(this.parseDecorator());
          else {
            var h = this.startNode();
            f.length && (h.decorators = f, f = []);
            var i = !1,
                j = this.match(e.types.name) && "static" === this.state.value,
                k = this.eat(e.types.star),
                l = !1,
                m = !1;
            if (this.parsePropertyName(h), h.static = j && !this.match(e.types.parenL), h.static && (k = this.eat(e.types.star), this.parsePropertyName(h)), !k) {
              if (this.isClassProperty()) {
                g.body.push(this.parseClassProperty(h));
                continue;
              }
              "Identifier" === h.key.type && !h.computed && this.hasPlugin("classConstructorCall") && "call" === h.key.name && this.match(e.types.name) && "constructor" === this.state.value && (i = !0, this.parsePropertyName(h));
            }
            var n = !this.match(e.types.parenL) && !h.computed && "Identifier" === h.key.type && "async" === h.key.name;
            if (n && (this.hasPlugin("asyncGenerators") && this.eat(e.types.star) && (k = !0), m = !0, this.parsePropertyName(h)), h.kind = "method", !h.computed) {
              var o = h.key;
              m || k || this.isClassMutatorStarter() || "Identifier" !== o.type || this.match(e.types.parenL) || "get" !== o.name && "set" !== o.name || (l = !0, h.kind = o.name, o = this.parsePropertyName(h));
              var p = !i && !h.static && ("Identifier" === o.type && "constructor" === o.name || "StringLiteral" === o.type && "constructor" === o.value);
              p && (d && this.raise(o.start, "Duplicate constructor in the same class"), l && this.raise(o.start, "Constructor can't have get/set modifier"), k && this.raise(o.start, "Constructor can't be a generator"), m && this.raise(o.start, "Constructor can't be an async function"), h.kind = "constructor", d = !0);
              var q = h.static && ("Identifier" === o.type && "prototype" === o.name || "StringLiteral" === o.type && "prototype" === o.value);
              q && this.raise(o.start, "Classes may not have static property named prototype");
            }
            if (i && (c && this.raise(h.start, "Duplicate constructor call in the same class"), h.kind = "constructorCall", c = !0), "constructor" !== h.kind && "constructorCall" !== h.kind || !h.decorators || this.raise(h.start, "You can't attach decorators to a class constructor"), this.parseClassMethod(g, h, k, m), l) {
              var r = "get" === h.kind ? 0 : 1;
              if (h.params.length !== r) {
                var s = h.start;
                "get" === h.kind ? this.raise(s, "getter should have no params") : this.raise(s, "setter should have exactly one param");
              }
            }
          }
      f.length && this.raise(this.state.start, "You have trailing decorators with no method"), a.body = this.finishNode(g, "ClassBody"), this.state.strict = b;
    }, i.parseClassProperty = function(a) {
      return this.match(e.types.eq) ? (this.hasPlugin("classProperties") || this.unexpected(), this.next(), a.value = this.parseMaybeAssign()) : a.value = null, this.semicolon(), this.finishNode(a, "ClassProperty");
    }, i.parseClassMethod = function(a, b, c, d) {
      this.parseMethod(b, c, d), a.body.push(this.finishNode(b, "ClassMethod"));
    }, i.parseClassId = function(a, b, c) {
      this.match(e.types.name) ? a.id = this.parseIdentifier() : c || !b ? a.id = null : this.unexpected();
    }, i.parseClassSuper = function(a) {
      a.superClass = this.eat(e.types._extends) ? this.parseExprSubscripts() : null;
    }, i.parseExport = function(a) {
      if (this.next(), this.match(e.types.star)) {
        var b = this.startNode();
        if (this.next(), !this.hasPlugin("exportExtensions") || !this.eatContextual("as"))
          return this.parseExportFrom(a, !0), this.finishNode(a, "ExportAllDeclaration");
        b.exported = this.parseIdentifier(), a.specifiers = [this.finishNode(b, "ExportNamespaceSpecifier")], this.parseExportSpecifiersMaybe(a), this.parseExportFrom(a, !0);
      } else if (this.hasPlugin("exportExtensions") && this.isExportDefaultSpecifier()) {
        var c = this.startNode();
        if (c.exported = this.parseIdentifier(!0), a.specifiers = [this.finishNode(c, "ExportDefaultSpecifier")], this.match(e.types.comma) && this.lookahead().type === e.types.star) {
          this.expect(e.types.comma);
          var d = this.startNode();
          this.expect(e.types.star), this.expectContextual("as"), d.exported = this.parseIdentifier(), a.specifiers.push(this.finishNode(d, "ExportNamespaceSpecifier"));
        } else
          this.parseExportSpecifiersMaybe(a);
        this.parseExportFrom(a, !0);
      } else {
        if (this.eat(e.types._default)) {
          var f = this.startNode(),
              g = !1;
          return this.eat(e.types._function) ? f = this.parseFunction(f, !0, !1, !1, !0) : this.match(e.types._class) ? f = this.parseClass(f, !0, !0) : (g = !0, f = this.parseMaybeAssign()), a.declaration = f, g && this.semicolon(), this.checkExport(a, !0, !0), this.finishNode(a, "ExportDefaultDeclaration");
        }
        this.state.type.keyword || this.shouldParseExportDeclaration() ? (a.specifiers = [], a.source = null, a.declaration = this.parseExportDeclaration(a)) : (a.declaration = null, a.specifiers = this.parseExportSpecifiers(), this.parseExportFrom(a));
      }
      return this.checkExport(a, !0), this.finishNode(a, "ExportNamedDeclaration");
    }, i.parseExportDeclaration = function() {
      return this.parseStatement(!0);
    }, i.isExportDefaultSpecifier = function() {
      if (this.match(e.types.name))
        return "type" !== this.state.value && "async" !== this.state.value && "interface" !== this.state.value;
      if (!this.match(e.types._default))
        return !1;
      var a = this.lookahead();
      return a.type === e.types.comma || a.type === e.types.name && "from" === a.value;
    }, i.parseExportSpecifiersMaybe = function(a) {
      this.eat(e.types.comma) && (a.specifiers = a.specifiers.concat(this.parseExportSpecifiers()));
    }, i.parseExportFrom = function(a, b) {
      this.eatContextual("from") ? (a.source = this.match(e.types.string) ? this.parseExprAtom() : this.unexpected(), this.checkExport(a)) : b ? this.unexpected() : a.source = null, this.semicolon();
    }, i.shouldParseExportDeclaration = function() {
      return this.isContextual("async");
    }, i.checkExport = function(a, b, c) {
      if (b)
        if (c)
          this.checkDuplicateExports(a, "default");
        else if (a.specifiers && a.specifiers.length)
          for (var d = a.specifiers,
              e = Array.isArray(d),
              f = 0,
              d = e ? d : d[Symbol.iterator](); ; ) {
            var g;
            if (e) {
              if (f >= d.length)
                break;
              g = d[f++];
            } else {
              if (f = d.next(), f.done)
                break;
              g = f.value;
            }
            var h = g;
            this.checkDuplicateExports(h, h.exported.name);
          }
        else if (a.declaration)
          if ("FunctionDeclaration" === a.declaration.type || "ClassDeclaration" === a.declaration.type)
            this.checkDuplicateExports(a, a.declaration.id.name);
          else if ("VariableDeclaration" === a.declaration.type)
            for (var i = a.declaration.declarations,
                j = Array.isArray(i),
                k = 0,
                i = j ? i : i[Symbol.iterator](); ; ) {
              var l;
              if (j) {
                if (k >= i.length)
                  break;
                l = i[k++];
              } else {
                if (k = i.next(), k.done)
                  break;
                l = k.value;
              }
              var m = l;
              this.checkDeclaration(m.id);
            }
      if (this.state.decorators.length) {
        var n = a.declaration && ("ClassDeclaration" === a.declaration.type || "ClassExpression" === a.declaration.type);
        a.declaration && n || this.raise(a.start, "You can only use decorators on an export when exporting a class"), this.takeDecorators(a.declaration);
      }
    }, i.checkDeclaration = function(a) {
      if ("ObjectPattern" === a.type)
        for (var b = a.properties,
            c = Array.isArray(b),
            d = 0,
            b = c ? b : b[Symbol.iterator](); ; ) {
          var e;
          if (c) {
            if (d >= b.length)
              break;
            e = b[d++];
          } else {
            if (d = b.next(), d.done)
              break;
            e = d.value;
          }
          var f = e;
          this.checkDeclaration(f);
        }
      else if ("ArrayPattern" === a.type)
        for (var g = a.elements,
            h = Array.isArray(g),
            i = 0,
            g = h ? g : g[Symbol.iterator](); ; ) {
          var j;
          if (h) {
            if (i >= g.length)
              break;
            j = g[i++];
          } else {
            if (i = g.next(), i.done)
              break;
            j = i.value;
          }
          var k = j;
          k && this.checkDeclaration(k);
        }
      else
        "ObjectProperty" === a.type ? this.checkDeclaration(a.value) : "RestElement" === a.type || "RestProperty" === a.type ? this.checkDeclaration(a.argument) : "Identifier" === a.type && this.checkDuplicateExports(a, a.name);
    }, i.checkDuplicateExports = function(a, b) {
      this.state.exportedIdentifiers.indexOf(b) > -1 && this.raiseDuplicateExportError(a, b), this.state.exportedIdentifiers.push(b);
    }, i.raiseDuplicateExportError = function(a, b) {
      this.raise(a.start, "default" === b ? "Only one default export allowed per module." : "`" + b + "` has already been exported. Exported identifiers must be unique.");
    }, i.parseExportSpecifiers = function() {
      var a = [],
          b = !0,
          c = void 0;
      for (this.expect(e.types.braceL); !this.eat(e.types.braceR); ) {
        if (b)
          b = !1;
        else if (this.expect(e.types.comma), this.eat(e.types.braceR))
          break;
        var d = this.match(e.types._default);
        d && !c && (c = !0);
        var f = this.startNode();
        f.local = this.parseIdentifier(d), f.exported = this.eatContextual("as") ? this.parseIdentifier(!0) : f.local.__clone(), a.push(this.finishNode(f, "ExportSpecifier"));
      }
      return c && !this.isContextual("from") && this.unexpected(), a;
    }, i.parseImport = function(a) {
      return this.next(), this.match(e.types.string) ? (a.specifiers = [], a.source = this.parseExprAtom()) : (a.specifiers = [], this.parseImportSpecifiers(a), this.expectContextual("from"), a.source = this.match(e.types.string) ? this.parseExprAtom() : this.unexpected()), this.semicolon(), this.finishNode(a, "ImportDeclaration");
    }, i.parseImportSpecifiers = function(a) {
      var b = !0;
      if (this.match(e.types.name)) {
        var c = this.state.start,
            d = this.state.startLoc;
        if (a.specifiers.push(this.parseImportSpecifierDefault(this.parseIdentifier(), c, d)), !this.eat(e.types.comma))
          return;
      }
      if (this.match(e.types.star)) {
        var f = this.startNode();
        return this.next(), this.expectContextual("as"), f.local = this.parseIdentifier(), this.checkLVal(f.local, !0, void 0, "import namespace specifier"), void a.specifiers.push(this.finishNode(f, "ImportNamespaceSpecifier"));
      }
      for (this.expect(e.types.braceL); !this.eat(e.types.braceR); ) {
        if (b)
          b = !1;
        else if (this.expect(e.types.comma), this.eat(e.types.braceR))
          break;
        var g = this.startNode();
        g.imported = this.parseIdentifier(!0), g.local = this.eatContextual("as") ? this.parseIdentifier() : g.imported.__clone(), this.checkLVal(g.local, !0, void 0, "import specifier"), a.specifiers.push(this.finishNode(g, "ImportSpecifier"));
      }
    }, i.parseImportSpecifierDefault = function(a, b, c) {
      var d = this.startNodeAt(b, c);
      return d.local = a, this.checkLVal(d.local, !0, void 0, "default import specifier"), this.finishNode(d, "ImportDefaultSpecifier");
    }, c.exports;
  }), a.registerDynamic("17d", ["179", "17a", "17e"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    var e = (this || self, a("179")),
        f = a("17a"),
        g = d(f),
        h = a("17e"),
        i = g.default.prototype;
    return i.toAssignable = function(a, b, c) {
      if (a)
        switch (a.type) {
          case "Identifier":
          case "ObjectPattern":
          case "ArrayPattern":
          case "AssignmentPattern":
            break;
          case "ObjectExpression":
            a.type = "ObjectPattern";
            for (var d = a.properties,
                e = Array.isArray(d),
                f = 0,
                d = e ? d : d[Symbol.iterator](); ; ) {
              var g;
              if (e) {
                if (f >= d.length)
                  break;
                g = d[f++];
              } else {
                if (f = d.next(), f.done)
                  break;
                g = f.value;
              }
              var h = g;
              "ObjectMethod" === h.type ? "get" === h.kind || "set" === h.kind ? this.raise(h.key.start, "Object pattern can't contain getter or setter") : this.raise(h.key.start, "Object pattern can't contain methods") : this.toAssignable(h, b, "object destructuring pattern");
            }
            break;
          case "ObjectProperty":
            this.toAssignable(a.value, b, c);
            break;
          case "SpreadProperty":
            a.type = "RestProperty";
            break;
          case "ArrayExpression":
            a.type = "ArrayPattern", this.toAssignableList(a.elements, b, c);
            break;
          case "AssignmentExpression":
            "=" === a.operator ? (a.type = "AssignmentPattern", delete a.operator) : this.raise(a.left.end, "Only '=' operator can be used for specifying default value.");
            break;
          case "MemberExpression":
            if (!b)
              break;
          default:
            var i = "Invalid left-hand side" + (c ? " in " + c : "expression");
            this.raise(a.start, i);
        }
      return a;
    }, i.toAssignableList = function(a, b, c) {
      var d = a.length;
      if (d) {
        var e = a[d - 1];
        if (e && "RestElement" === e.type)
          --d;
        else if (e && "SpreadElement" === e.type) {
          e.type = "RestElement";
          var f = e.argument;
          this.toAssignable(f, b, c), "Identifier" !== f.type && "MemberExpression" !== f.type && "ArrayPattern" !== f.type && this.unexpected(f.start), --d;
        }
      }
      for (var g = 0; g < d; g++) {
        var h = a[g];
        h && this.toAssignable(h, b, c);
      }
      return a;
    }, i.toReferencedList = function(a) {
      return a;
    }, i.parseSpread = function(a) {
      var b = this.startNode();
      return this.next(), b.argument = this.parseMaybeAssign(!1, a), this.finishNode(b, "SpreadElement");
    }, i.parseRest = function() {
      var a = this.startNode();
      return this.next(), a.argument = this.parseBindingIdentifier(), this.finishNode(a, "RestElement");
    }, i.shouldAllowYieldIdentifier = function() {
      return this.match(e.types._yield) && !this.state.strict && !this.state.inGenerator;
    }, i.parseBindingIdentifier = function() {
      return this.parseIdentifier(this.shouldAllowYieldIdentifier());
    }, i.parseBindingAtom = function() {
      switch (this.state.type) {
        case e.types._yield:
          (this.state.strict || this.state.inGenerator) && this.unexpected();
        case e.types.name:
          return this.parseIdentifier(!0);
        case e.types.bracketL:
          var a = this.startNode();
          return this.next(), a.elements = this.parseBindingList(e.types.bracketR, !0), this.finishNode(a, "ArrayPattern");
        case e.types.braceL:
          return this.parseObj(!0);
        default:
          this.unexpected();
      }
    }, i.parseBindingList = function(a, b) {
      for (var c = [],
          d = !0; !this.eat(a); )
        if (d ? d = !1 : this.expect(e.types.comma), b && this.match(e.types.comma))
          c.push(null);
        else {
          if (this.eat(a))
            break;
          if (this.match(e.types.ellipsis)) {
            c.push(this.parseAssignableListItemTypes(this.parseRest())), this.expect(a);
            break;
          }
          for (var f = []; this.match(e.types.at); )
            f.push(this.parseDecorator());
          var g = this.parseMaybeDefault();
          f.length && (g.decorators = f), this.parseAssignableListItemTypes(g), c.push(this.parseMaybeDefault(g.start, g.loc.start, g));
        }
      return c;
    }, i.parseAssignableListItemTypes = function(a) {
      return a;
    }, i.parseMaybeDefault = function(a, b, c) {
      if (b = b || this.state.startLoc, a = a || this.state.start, c = c || this.parseBindingAtom(), !this.eat(e.types.eq))
        return c;
      var d = this.startNodeAt(a, b);
      return d.left = c, d.right = this.parseMaybeAssign(), this.finishNode(d, "AssignmentPattern");
    }, i.checkLVal = function(a, b, c, d) {
      switch (a.type) {
        case "Identifier":
          if (this.state.strict && (h.reservedWords.strictBind(a.name) || h.reservedWords.strict(a.name)) && this.raise(a.start, (b ? "Binding " : "Assigning to ") + a.name + " in strict mode"), c) {
            var e = "_" + a.name;
            c[e] ? this.raise(a.start, "Argument name clash in strict mode") : c[e] = !0;
          }
          break;
        case "MemberExpression":
          b && this.raise(a.start, (b ? "Binding" : "Assigning to") + " member expression");
          break;
        case "ObjectPattern":
          for (var f = a.properties,
              g = Array.isArray(f),
              i = 0,
              f = g ? f : f[Symbol.iterator](); ; ) {
            var j;
            if (g) {
              if (i >= f.length)
                break;
              j = f[i++];
            } else {
              if (i = f.next(), i.done)
                break;
              j = i.value;
            }
            var k = j;
            "ObjectProperty" === k.type && (k = k.value), this.checkLVal(k, b, c, "object destructuring pattern");
          }
          break;
        case "ArrayPattern":
          for (var l = a.elements,
              m = Array.isArray(l),
              n = 0,
              l = m ? l : l[Symbol.iterator](); ; ) {
            var o;
            if (m) {
              if (n >= l.length)
                break;
              o = l[n++];
            } else {
              if (n = l.next(), n.done)
                break;
              o = n.value;
            }
            var p = o;
            p && this.checkLVal(p, b, c, "array destructuring pattern");
          }
          break;
        case "AssignmentPattern":
          this.checkLVal(a.left, b, c, "assignment pattern");
          break;
        case "RestProperty":
          this.checkLVal(a.argument, b, c, "rest property");
          break;
        case "RestElement":
          this.checkLVal(a.argument, b, c, "rest element");
          break;
        default:
          var q = (b ? "Binding invalid" : "Invalid") + " left-hand side" + (d ? " in " + d : "expression");
          this.raise(a.start, q);
      }
    }, c.exports;
  }), a.registerDynamic("17f", ["179", "17a", "17e"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    var e = (this || self, a("179")),
        f = a("17a"),
        g = d(f),
        h = a("17e"),
        i = g.default.prototype;
    return i.checkPropClash = function(a, b) {
      if (!a.computed) {
        var c = a.key,
            d = void 0;
        switch (c.type) {
          case "Identifier":
            d = c.name;
            break;
          case "StringLiteral":
          case "NumericLiteral":
            d = String(c.value);
            break;
          default:
            return;
        }
        "__proto__" !== d || a.kind || (b.proto && this.raise(c.start, "Redefinition of __proto__ property"), b.proto = !0);
      }
    }, i.parseExpression = function(a, b) {
      var c = this.state.start,
          d = this.state.startLoc,
          f = this.parseMaybeAssign(a, b);
      if (this.match(e.types.comma)) {
        var g = this.startNodeAt(c, d);
        for (g.expressions = [f]; this.eat(e.types.comma); )
          g.expressions.push(this.parseMaybeAssign(a, b));
        return this.toReferencedList(g.expressions), this.finishNode(g, "SequenceExpression");
      }
      return f;
    }, i.parseMaybeAssign = function(a, b, c, d) {
      var f = this.state.start,
          g = this.state.startLoc;
      if (this.match(e.types._yield) && this.state.inGenerator) {
        var h = this.parseYield();
        return c && (h = c.call(this, h, f, g)), h;
      }
      var i = void 0;
      b ? i = !1 : (b = {start: 0}, i = !0), (this.match(e.types.parenL) || this.match(e.types.name)) && (this.state.potentialArrowAt = this.state.start);
      var j = this.parseMaybeConditional(a, b, d);
      if (c && (j = c.call(this, j, f, g)), this.state.type.isAssign) {
        var k = this.startNodeAt(f, g);
        if (k.operator = this.state.value, k.left = this.match(e.types.eq) ? this.toAssignable(j, void 0, "assignment expression") : j, b.start = 0, this.checkLVal(j, void 0, void 0, "assignment expression"), j.extra && j.extra.parenthesized) {
          var l = void 0;
          "ObjectPattern" === j.type ? l = "`({a}) = 0` use `({a} = 0)`" : "ArrayPattern" === j.type && (l = "`([a]) = 0` use `([a] = 0)`"), l && this.raise(j.start, "You're trying to assign to a parenthesized expression, eg. instead of " + l);
        }
        return this.next(), k.right = this.parseMaybeAssign(a), this.finishNode(k, "AssignmentExpression");
      }
      return i && b.start && this.unexpected(b.start), j;
    }, i.parseMaybeConditional = function(a, b, c) {
      var d = this.state.start,
          e = this.state.startLoc,
          f = this.parseExprOps(a, b);
      return b && b.start ? f : this.parseConditional(f, a, d, e, c);
    }, i.parseConditional = function(a, b, c, d) {
      if (this.eat(e.types.question)) {
        var f = this.startNodeAt(c, d);
        return f.test = a, f.consequent = this.parseMaybeAssign(), this.expect(e.types.colon), f.alternate = this.parseMaybeAssign(b), this.finishNode(f, "ConditionalExpression");
      }
      return a;
    }, i.parseExprOps = function(a, b) {
      var c = this.state.start,
          d = this.state.startLoc,
          e = this.parseMaybeUnary(b);
      return b && b.start ? e : this.parseExprOp(e, c, d, -1, a);
    }, i.parseExprOp = function(a, b, c, d, f) {
      var g = this.state.type.binop;
      if (!(null == g || f && this.match(e.types._in)) && g > d) {
        var h = this.startNodeAt(b, c);
        h.left = a, h.operator = this.state.value, "**" !== h.operator || "UnaryExpression" !== a.type || !a.extra || a.extra.parenthesizedArgument || a.extra.parenthesized || this.raise(a.argument.start, "Illegal expression. Wrap left hand side or entire exponentiation in parentheses.");
        var i = this.state.type;
        this.next();
        var j = this.state.start,
            k = this.state.startLoc;
        return h.right = this.parseExprOp(this.parseMaybeUnary(), j, k, i.rightAssociative ? g - 1 : g, f), this.finishNode(h, i === e.types.logicalOR || i === e.types.logicalAND ? "LogicalExpression" : "BinaryExpression"), this.parseExprOp(h, b, c, d, f);
      }
      return a;
    }, i.parseMaybeUnary = function(a) {
      if (this.state.type.prefix) {
        var b = this.startNode(),
            c = this.match(e.types.incDec);
        b.operator = this.state.value, b.prefix = !0, this.next();
        var d = this.state.type;
        return b.argument = this.parseMaybeUnary(), this.addExtra(b, "parenthesizedArgument", !(d !== e.types.parenL || b.argument.extra && b.argument.extra.parenthesized)), a && a.start && this.unexpected(a.start), c ? this.checkLVal(b.argument, void 0, void 0, "prefix operation") : this.state.strict && "delete" === b.operator && "Identifier" === b.argument.type && this.raise(b.start, "Deleting local variable in strict mode"), this.finishNode(b, c ? "UpdateExpression" : "UnaryExpression");
      }
      var f = this.state.start,
          g = this.state.startLoc,
          h = this.parseExprSubscripts(a);
      if (a && a.start)
        return h;
      for (; this.state.type.postfix && !this.canInsertSemicolon(); ) {
        var i = this.startNodeAt(f, g);
        i.operator = this.state.value, i.prefix = !1, i.argument = h, this.checkLVal(h, void 0, void 0, "postfix operation"), this.next(), h = this.finishNode(i, "UpdateExpression");
      }
      return h;
    }, i.parseExprSubscripts = function(a) {
      var b = this.state.start,
          c = this.state.startLoc,
          d = this.state.potentialArrowAt,
          e = this.parseExprAtom(a);
      return "ArrowFunctionExpression" === e.type && e.start === d ? e : a && a.start ? e : this.parseSubscripts(e, b, c);
    }, i.parseSubscripts = function(a, b, c, d) {
      for (; ; ) {
        if (!d && this.eat(e.types.doubleColon)) {
          var f = this.startNodeAt(b, c);
          return f.object = a, f.callee = this.parseNoCallExpr(), this.parseSubscripts(this.finishNode(f, "BindExpression"), b, c, d);
        }
        if (this.eat(e.types.dot)) {
          var g = this.startNodeAt(b, c);
          g.object = a, g.property = this.parseIdentifier(!0), g.computed = !1, a = this.finishNode(g, "MemberExpression");
        } else if (this.eat(e.types.bracketL)) {
          var h = this.startNodeAt(b, c);
          h.object = a, h.property = this.parseExpression(), h.computed = !0, this.expect(e.types.bracketR), a = this.finishNode(h, "MemberExpression");
        } else if (!d && this.match(e.types.parenL)) {
          var i = this.state.potentialArrowAt === a.start && "Identifier" === a.type && "async" === a.name && !this.canInsertSemicolon();
          this.next();
          var j = this.startNodeAt(b, c);
          if (j.callee = a, j.arguments = this.parseCallExpressionArguments(e.types.parenR, i), "Import" === j.callee.type && 1 !== j.arguments.length && this.raise(j.start, "import() requires exactly one argument"), a = this.finishNode(j, "CallExpression"), i && this.shouldParseAsyncArrow())
            return this.parseAsyncArrowFromCallExpression(this.startNodeAt(b, c), j);
          this.toReferencedList(j.arguments);
        } else {
          if (!this.match(e.types.backQuote))
            return a;
          var k = this.startNodeAt(b, c);
          k.tag = a, k.quasi = this.parseTemplate(), a = this.finishNode(k, "TaggedTemplateExpression");
        }
      }
    }, i.parseCallExpressionArguments = function(a, b) {
      for (var c = void 0,
          d = [],
          f = !0; !this.eat(a); ) {
        if (f)
          f = !1;
        else if (this.expect(e.types.comma), this.eat(a))
          break;
        this.match(e.types.parenL) && !c && (c = this.state.start), d.push(this.parseExprListItem(void 0, b ? {start: 0} : void 0));
      }
      return b && c && this.shouldParseAsyncArrow() && this.unexpected(), d;
    }, i.shouldParseAsyncArrow = function() {
      return this.match(e.types.arrow);
    }, i.parseAsyncArrowFromCallExpression = function(a, b) {
      return this.expect(e.types.arrow), this.parseArrowExpression(a, b.arguments, !0);
    }, i.parseNoCallExpr = function() {
      var a = this.state.start,
          b = this.state.startLoc;
      return this.parseSubscripts(this.parseExprAtom(), a, b, !0);
    }, i.parseExprAtom = function(a) {
      var b = void 0,
          c = this.state.potentialArrowAt === this.state.start;
      switch (this.state.type) {
        case e.types._super:
          return this.state.inMethod || this.options.allowSuperOutsideMethod || this.raise(this.state.start, "'super' outside of function or class"), b = this.startNode(), this.next(), this.match(e.types.parenL) || this.match(e.types.bracketL) || this.match(e.types.dot) || this.unexpected(), this.match(e.types.parenL) && "constructor" !== this.state.inMethod && !this.options.allowSuperOutsideMethod && this.raise(b.start, "super() outside of class constructor"), this.finishNode(b, "Super");
        case e.types._import:
          return this.hasPlugin("dynamicImport") || this.unexpected(), b = this.startNode(), this.next(), this.match(e.types.parenL) || this.unexpected(null, e.types.parenL), this.finishNode(b, "Import");
        case e.types._this:
          return b = this.startNode(), this.next(), this.finishNode(b, "ThisExpression");
        case e.types._yield:
          this.state.inGenerator && this.unexpected();
        case e.types.name:
          b = this.startNode();
          var d = "await" === this.state.value && this.state.inAsync,
              f = this.shouldAllowYieldIdentifier(),
              g = this.parseIdentifier(d || f);
          if ("await" === g.name) {
            if (this.state.inAsync || this.inModule)
              return this.parseAwait(b);
          } else {
            if ("async" === g.name && this.match(e.types._function) && !this.canInsertSemicolon())
              return this.next(), this.parseFunction(b, !1, !1, !0);
            if (c && "async" === g.name && this.match(e.types.name)) {
              var h = [this.parseIdentifier()];
              return this.expect(e.types.arrow), this.parseArrowExpression(b, h, !0);
            }
          }
          return c && !this.canInsertSemicolon() && this.eat(e.types.arrow) ? this.parseArrowExpression(b, [g]) : g;
        case e.types._do:
          if (this.hasPlugin("doExpressions")) {
            var i = this.startNode();
            this.next();
            var j = this.state.inFunction,
                k = this.state.labels;
            return this.state.labels = [], this.state.inFunction = !1, i.body = this.parseBlock(!1, !0), this.state.inFunction = j, this.state.labels = k, this.finishNode(i, "DoExpression");
          }
        case e.types.regexp:
          var l = this.state.value;
          return b = this.parseLiteral(l.value, "RegExpLiteral"), b.pattern = l.pattern, b.flags = l.flags, b;
        case e.types.num:
          return this.parseLiteral(this.state.value, "NumericLiteral");
        case e.types.string:
          return this.parseLiteral(this.state.value, "StringLiteral");
        case e.types._null:
          return b = this.startNode(), this.next(), this.finishNode(b, "NullLiteral");
        case e.types._true:
        case e.types._false:
          return b = this.startNode(), b.value = this.match(e.types._true), this.next(), this.finishNode(b, "BooleanLiteral");
        case e.types.parenL:
          return this.parseParenAndDistinguishExpression(null, null, c);
        case e.types.bracketL:
          return b = this.startNode(), this.next(), b.elements = this.parseExprList(e.types.bracketR, !0, a), this.toReferencedList(b.elements), this.finishNode(b, "ArrayExpression");
        case e.types.braceL:
          return this.parseObj(!1, a);
        case e.types._function:
          return this.parseFunctionExpression();
        case e.types.at:
          this.parseDecorators();
        case e.types._class:
          return b = this.startNode(), this.takeDecorators(b), this.parseClass(b, !1);
        case e.types._new:
          return this.parseNew();
        case e.types.backQuote:
          return this.parseTemplate();
        case e.types.doubleColon:
          b = this.startNode(), this.next(), b.object = null;
          var m = b.callee = this.parseNoCallExpr();
          if ("MemberExpression" === m.type)
            return this.finishNode(b, "BindExpression");
          this.raise(m.start, "Binding should be performed on object property.");
        default:
          this.unexpected();
      }
    }, i.parseFunctionExpression = function() {
      var a = this.startNode(),
          b = this.parseIdentifier(!0);
      return this.state.inGenerator && this.eat(e.types.dot) && this.hasPlugin("functionSent") ? this.parseMetaProperty(a, b, "sent") : this.parseFunction(a, !1);
    }, i.parseMetaProperty = function(a, b, c) {
      return a.meta = b, a.property = this.parseIdentifier(!0), a.property.name !== c && this.raise(a.property.start, "The only valid meta property for new is " + b.name + "." + c), this.finishNode(a, "MetaProperty");
    }, i.parseLiteral = function(a, b) {
      var c = this.startNode();
      return this.addExtra(c, "rawValue", a), this.addExtra(c, "raw", this.input.slice(this.state.start, this.state.end)), c.value = a, this.next(), this.finishNode(c, b);
    }, i.parseParenExpression = function() {
      this.expect(e.types.parenL);
      var a = this.parseExpression();
      return this.expect(e.types.parenR), a;
    }, i.parseParenAndDistinguishExpression = function(a, b, c) {
      a = a || this.state.start, b = b || this.state.startLoc;
      var d = void 0;
      this.expect(e.types.parenL);
      for (var f = this.state.start,
          g = this.state.startLoc,
          h = [],
          i = !0,
          j = {start: 0},
          k = void 0,
          l = void 0,
          m = {start: 0}; !this.match(e.types.parenR); ) {
        if (i)
          i = !1;
        else if (this.expect(e.types.comma, m.start || null), this.match(e.types.parenR)) {
          l = this.state.start;
          break;
        }
        if (this.match(e.types.ellipsis)) {
          var n = this.state.start,
              o = this.state.startLoc;
          k = this.state.start, h.push(this.parseParenItem(this.parseRest(), o, n));
          break;
        }
        h.push(this.parseMaybeAssign(!1, j, this.parseParenItem, m));
      }
      var p = this.state.start,
          q = this.state.startLoc;
      this.expect(e.types.parenR);
      var r = this.startNodeAt(a, b);
      if (c && this.shouldParseArrow() && (r = this.parseArrow(r))) {
        for (var s = h,
            t = Array.isArray(s),
            u = 0,
            s = t ? s : s[Symbol.iterator](); ; ) {
          var v;
          if (t) {
            if (u >= s.length)
              break;
            v = s[u++];
          } else {
            if (u = s.next(), u.done)
              break;
            v = u.value;
          }
          var w = v;
          w.extra && w.extra.parenthesized && this.unexpected(w.extra.parenStart);
        }
        return this.parseArrowExpression(r, h);
      }
      return h.length || this.unexpected(this.state.lastTokStart), l && this.unexpected(l), k && this.unexpected(k), j.start && this.unexpected(j.start), m.start && this.unexpected(m.start), h.length > 1 ? (d = this.startNodeAt(f, g), d.expressions = h, this.toReferencedList(d.expressions), this.finishNodeAt(d, "SequenceExpression", p, q)) : d = h[0], this.addExtra(d, "parenthesized", !0), this.addExtra(d, "parenStart", a), d;
    }, i.shouldParseArrow = function() {
      return !this.canInsertSemicolon();
    }, i.parseArrow = function(a) {
      if (this.eat(e.types.arrow))
        return a;
    }, i.parseParenItem = function(a) {
      return a;
    }, i.parseNew = function() {
      var a = this.startNode(),
          b = this.parseIdentifier(!0);
      return this.eat(e.types.dot) ? this.parseMetaProperty(a, b, "target") : (a.callee = this.parseNoCallExpr(), this.eat(e.types.parenL) ? (a.arguments = this.parseExprList(e.types.parenR), this.toReferencedList(a.arguments)) : a.arguments = [], this.finishNode(a, "NewExpression"));
    }, i.parseTemplateElement = function() {
      var a = this.startNode();
      return a.value = {
        raw: this.input.slice(this.state.start, this.state.end).replace(/\r\n?/g, "\n"),
        cooked: this.state.value
      }, this.next(), a.tail = this.match(e.types.backQuote), this.finishNode(a, "TemplateElement");
    }, i.parseTemplate = function() {
      var a = this.startNode();
      this.next(), a.expressions = [];
      var b = this.parseTemplateElement();
      for (a.quasis = [b]; !b.tail; )
        this.expect(e.types.dollarBraceL), a.expressions.push(this.parseExpression()), this.expect(e.types.braceR), a.quasis.push(b = this.parseTemplateElement());
      return this.next(), this.finishNode(a, "TemplateLiteral");
    }, i.parseObj = function(a, b) {
      var c = [],
          d = Object.create(null),
          f = !0,
          g = this.startNode();
      g.properties = [], this.next();
      for (var h = null; !this.eat(e.types.braceR); ) {
        if (f)
          f = !1;
        else if (this.expect(e.types.comma), this.eat(e.types.braceR))
          break;
        for (; this.match(e.types.at); )
          c.push(this.parseDecorator());
        var i = this.startNode(),
            j = !1,
            k = !1,
            l = void 0,
            m = void 0;
        if (c.length && (i.decorators = c, c = []), this.hasPlugin("objectRestSpread") && this.match(e.types.ellipsis)) {
          if (i = this.parseSpread(), i.type = a ? "RestProperty" : "SpreadProperty", g.properties.push(i), !a)
            continue;
          var n = this.state.start;
          if (null === h) {
            if (this.eat(e.types.braceR))
              break;
            if (this.match(e.types.comma) && this.lookahead().type === e.types.braceR)
              continue;
            h = n;
            continue;
          }
          this.unexpected(h, "Cannot have multiple rest elements when destructuring");
        }
        if (i.method = !1, i.shorthand = !1, (a || b) && (l = this.state.start, m = this.state.startLoc), a || (j = this.eat(e.types.star)), !a && this.isContextual("async")) {
          j && this.unexpected();
          var o = this.parseIdentifier();
          this.match(e.types.colon) || this.match(e.types.parenL) || this.match(e.types.braceR) || this.match(e.types.eq) || this.match(e.types.comma) ? i.key = o : (k = !0, this.hasPlugin("asyncGenerators") && (j = this.eat(e.types.star)), this.parsePropertyName(i));
        } else
          this.parsePropertyName(i);
        this.parseObjPropValue(i, l, m, j, k, a, b), this.checkPropClash(i, d), i.shorthand && this.addExtra(i, "shorthand", !0), g.properties.push(i);
      }
      return null !== h && this.unexpected(h, "The rest element has to be the last element when destructuring"), c.length && this.raise(this.state.start, "You have trailing decorators with no property"), this.finishNode(g, a ? "ObjectPattern" : "ObjectExpression");
    }, i.parseObjPropValue = function(a, b, c, d, f, g, i) {
      if (f || d || this.match(e.types.parenL))
        return g && this.unexpected(), a.kind = "method", a.method = !0, this.parseMethod(a, d, f), this.finishNode(a, "ObjectMethod");
      if (this.eat(e.types.colon))
        return a.value = g ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssign(!1, i), this.finishNode(a, "ObjectProperty");
      if (!(g || a.computed || "Identifier" !== a.key.type || "get" !== a.key.name && "set" !== a.key.name || this.match(e.types.comma) || this.match(e.types.braceR))) {
        (d || f) && this.unexpected(), a.kind = a.key.name, this.parsePropertyName(a), this.parseMethod(a, !1);
        var j = "get" === a.kind ? 0 : 1;
        if (a.params.length !== j) {
          var k = a.start;
          "get" === a.kind ? this.raise(k, "getter should have no params") : this.raise(k, "setter should have exactly one param");
        }
        return this.finishNode(a, "ObjectMethod");
      }
      if (!a.computed && "Identifier" === a.key.type) {
        if (g) {
          var l = this.isKeyword(a.key.name);
          !l && this.state.strict && (l = h.reservedWords.strictBind(a.key.name) || h.reservedWords.strict(a.key.name)), l && this.raise(a.key.start, "Binding " + a.key.name), a.value = this.parseMaybeDefault(b, c, a.key.__clone());
        } else
          this.match(e.types.eq) && i ? (i.start || (i.start = this.state.start), a.value = this.parseMaybeDefault(b, c, a.key.__clone())) : a.value = a.key.__clone();
        return a.shorthand = !0, this.finishNode(a, "ObjectProperty");
      }
      this.unexpected();
    }, i.parsePropertyName = function(a) {
      return this.eat(e.types.bracketL) ? (a.computed = !0, a.key = this.parseMaybeAssign(), this.expect(e.types.bracketR), a.key) : (a.computed = !1, a.key = this.match(e.types.num) || this.match(e.types.string) ? this.parseExprAtom() : this.parseIdentifier(!0));
    }, i.initFunction = function(a, b) {
      a.id = null, a.generator = !1, a.expression = !1, a.async = !!b;
    }, i.parseMethod = function(a, b, c) {
      var d = this.state.inMethod;
      return this.state.inMethod = a.kind || !0, this.initFunction(a, c), this.expect(e.types.parenL), a.params = this.parseBindingList(e.types.parenR), a.generator = b, this.parseFunctionBody(a), this.state.inMethod = d, a;
    }, i.parseArrowExpression = function(a, b, c) {
      return this.initFunction(a, c), a.params = this.toAssignableList(b, !0, "arrow function parameters"), this.parseFunctionBody(a, !0), this.finishNode(a, "ArrowFunctionExpression");
    }, i.parseFunctionBody = function(a, b) {
      var c = b && !this.match(e.types.braceL),
          d = this.state.inAsync;
      if (this.state.inAsync = a.async, c)
        a.body = this.parseMaybeAssign(), a.expression = !0;
      else {
        var f = this.state.inFunction,
            g = this.state.inGenerator,
            h = this.state.labels;
        this.state.inFunction = !0, this.state.inGenerator = a.generator, this.state.labels = [], a.body = this.parseBlock(!0), a.expression = !1, this.state.inFunction = f, this.state.inGenerator = g, this.state.labels = h;
      }
      this.state.inAsync = d;
      var i = this.state.strict,
          j = !1;
      if (b && (i = !0), !c && a.body.directives.length)
        for (var k = a.body.directives,
            l = Array.isArray(k),
            m = 0,
            k = l ? k : k[Symbol.iterator](); ; ) {
          var n;
          if (l) {
            if (m >= k.length)
              break;
            n = k[m++];
          } else {
            if (m = k.next(), m.done)
              break;
            n = m.value;
          }
          var o = n;
          if ("use strict" === o.value.value) {
            j = !0, i = !0;
            break;
          }
        }
      if (j && a.id && "Identifier" === a.id.type && "yield" === a.id.name && this.raise(a.id.start, "Binding yield in strict mode"), i) {
        var p = Object.create(null),
            q = this.state.strict;
        j && (this.state.strict = !0), a.id && this.checkLVal(a.id, !0, void 0, "function name");
        for (var r = a.params,
            s = Array.isArray(r),
            t = 0,
            r = s ? r : r[Symbol.iterator](); ; ) {
          var u;
          if (s) {
            if (t >= r.length)
              break;
            u = r[t++];
          } else {
            if (t = r.next(), t.done)
              break;
            u = t.value;
          }
          var v = u;
          j && "Identifier" !== v.type && this.raise(v.start, "Non-simple parameter in strict mode"), this.checkLVal(v, !0, p, "function parameter list");
        }
        this.state.strict = q;
      }
    }, i.parseExprList = function(a, b, c) {
      for (var d = [],
          f = !0; !this.eat(a); ) {
        if (f)
          f = !1;
        else if (this.expect(e.types.comma), this.eat(a))
          break;
        d.push(this.parseExprListItem(b, c));
      }
      return d;
    }, i.parseExprListItem = function(a, b) {
      var c = void 0;
      return c = a && this.match(e.types.comma) ? null : this.match(e.types.ellipsis) ? this.parseSpread(b) : this.parseMaybeAssign(!1, b, this.parseParenItem);
    }, i.parseIdentifier = function(a) {
      var b = this.startNode();
      return this.match(e.types.name) ? (!a && this.state.strict && h.reservedWords.strict(this.state.value) && this.raise(this.state.start, "The keyword '" + this.state.value + "' is reserved"), b.name = this.state.value) : a && this.state.type.keyword ? b.name = this.state.type.keyword : this.unexpected(), !a && "await" === b.name && this.state.inAsync && this.raise(b.start, "invalid use of await inside of an async function"), b.loc.identifierName = b.name, this.next(), this.finishNode(b, "Identifier");
    }, i.parseAwait = function(a) {
      return this.state.inAsync || this.unexpected(), this.match(e.types.star) && this.raise(a.start, "await* has been removed from the async functions proposal. Use Promise.all() instead."), a.argument = this.parseMaybeUnary(), this.finishNode(a, "AwaitExpression");
    }, i.parseYield = function() {
      var a = this.startNode();
      return this.next(), this.match(e.types.semi) || this.canInsertSemicolon() || !this.match(e.types.star) && !this.state.type.startsExpr ? (a.delegate = !1, a.argument = null) : (a.delegate = this.eat(e.types.star), a.argument = this.parseMaybeAssign()), this.finishNode(a, "YieldExpression");
    }, c.exports;
  }), a.registerDynamic("180", ["17a", "181"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e(a, b) {
      if (!(a instanceof b))
        throw new TypeError("Cannot call a class as a function");
    }
    function f(a, b, c, d) {
      return a.type = b, a.end = c, a.loc.end = d, this.processComment(a), a;
    }
    var g = (this || self, a("17a")),
        h = d(g),
        i = a("181"),
        j = h.default.prototype,
        k = ["leadingComments", "trailingComments", "innerComments"],
        l = function() {
          function a(b, c, d) {
            e(this, a), this.type = "", this.start = b, this.end = 0, this.loc = new i.SourceLocation(c), d && (this.loc.filename = d);
          }
          return a.prototype.__clone = function() {
            var b = new a;
            for (var c in this)
              k.indexOf(c) < 0 && (b[c] = this[c]);
            return b;
          }, a;
        }();
    return j.startNode = function() {
      return new l(this.state.start, this.state.startLoc, this.filename);
    }, j.startNodeAt = function(a, b) {
      return new l(a, b, this.filename);
    }, j.finishNode = function(a, b) {
      return f.call(this, a, b, this.state.lastTokEnd, this.state.lastTokEndLoc);
    }, j.finishNodeAt = function(a, b, c, d) {
      return f.call(this, a, b, c, d);
    }, c.exports;
  }), a.registerDynamic("182", ["181", "17a"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    var e = (this || self, a("181")),
        f = a("17a"),
        g = d(f),
        h = g.default.prototype;
    return h.raise = function(a, b) {
      var c = (0, e.getLineInfo)(this.input, a);
      b += " (" + c.line + ":" + c.column + ")";
      var d = new SyntaxError(b);
      throw d.pos = a, d.loc = c, d;
    }, c.exports;
  }), a.registerDynamic("183", ["17a"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e(a) {
      return a[a.length - 1];
    }
    var f = (this || self, a("17a")),
        g = d(f),
        h = g.default.prototype;
    return h.addComment = function(a) {
      this.filename && (a.loc.filename = this.filename), this.state.trailingComments.push(a), this.state.leadingComments.push(a);
    }, h.processComment = function(a) {
      if (!("Program" === a.type && a.body.length > 0)) {
        var b = this.state.commentStack,
            c = void 0,
            d = void 0,
            f = void 0,
            g = void 0;
        if (this.state.trailingComments.length > 0)
          this.state.trailingComments[0].start >= a.end ? (d = this.state.trailingComments, this.state.trailingComments = []) : this.state.trailingComments.length = 0;
        else {
          var h = e(b);
          b.length > 0 && h.trailingComments && h.trailingComments[0].start >= a.end && (d = h.trailingComments, h.trailingComments = null);
        }
        for (; b.length > 0 && e(b).start >= a.start; )
          c = b.pop();
        if (c) {
          if (c.leadingComments)
            if (c !== a && e(c.leadingComments).end <= a.start)
              a.leadingComments = c.leadingComments, c.leadingComments = null;
            else
              for (f = c.leadingComments.length - 2; f >= 0; --f)
                if (c.leadingComments[f].end <= a.start) {
                  a.leadingComments = c.leadingComments.splice(0, f + 1);
                  break;
                }
        } else if (this.state.leadingComments.length > 0)
          if (e(this.state.leadingComments).end <= a.start) {
            if (this.state.commentPreviousNode)
              for (g = 0; g < this.state.leadingComments.length; g++)
                this.state.leadingComments[g].end < this.state.commentPreviousNode.end && (this.state.leadingComments.splice(g, 1), g--);
            this.state.leadingComments.length > 0 && (a.leadingComments = this.state.leadingComments, this.state.leadingComments = []);
          } else {
            for (f = 0; f < this.state.leadingComments.length && !(this.state.leadingComments[f].end > a.start); f++)
              ;
            a.leadingComments = this.state.leadingComments.slice(0, f), 0 === a.leadingComments.length && (a.leadingComments = null), d = this.state.leadingComments.slice(f), 0 === d.length && (d = null);
          }
        this.state.commentPreviousNode = a, d && (d.length && d[0].start >= a.start && e(d).end <= a.end ? a.innerComments = d : a.trailingComments = d), b.push(a);
      }
    }, c.exports;
  }), a.registerDynamic("184", ["179", "185", "17a"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0, b.default = function(a) {
      a.extend("parseFunctionBody", function(a) {
        return function(b, c) {
          return this.match(e.types.colon) && !c && (b.returnType = this.flowParseTypeAnnotation()), a.call(this, b, c);
        };
      }), a.extend("parseStatement", function(a) {
        return function(b, c) {
          if (this.state.strict && this.match(e.types.name) && "interface" === this.state.value) {
            var d = this.startNode();
            return this.next(), this.flowParseInterface(d);
          }
          return a.call(this, b, c);
        };
      }), a.extend("parseExpressionStatement", function(a) {
        return function(b, c) {
          if ("Identifier" === c.type)
            if ("declare" === c.name) {
              if (this.match(e.types._class) || this.match(e.types.name) || this.match(e.types._function) || this.match(e.types._var))
                return this.flowParseDeclare(b);
            } else if (this.match(e.types.name)) {
              if ("interface" === c.name)
                return this.flowParseInterface(b);
              if ("type" === c.name)
                return this.flowParseTypeAlias(b);
            }
          return a.call(this, b, c);
        };
      }), a.extend("shouldParseExportDeclaration", function(a) {
        return function() {
          return this.isContextual("type") || this.isContextual("interface") || a.call(this);
        };
      }), a.extend("parseConditional", function(a) {
        return function(b, c, d, f, g) {
          if (g && this.match(e.types.question)) {
            var h = this.state.clone();
            try {
              return a.call(this, b, c, d, f);
            } catch (a) {
              if (a instanceof SyntaxError)
                return this.state = h, g.start = a.pos || this.state.start, b;
              throw a;
            }
          }
          return a.call(this, b, c, d, f);
        };
      }), a.extend("parseParenItem", function(a) {
        return function(b, c, d) {
          if (b = a.call(this, b, c, d), this.eat(e.types.question) && (b.optional = !0), this.match(e.types.colon)) {
            var f = this.startNodeAt(c, d);
            return f.expression = b, f.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(f, "TypeCastExpression");
          }
          return b;
        };
      }), a.extend("parseExport", function(a) {
        return function(b) {
          return b = a.call(this, b), "ExportNamedDeclaration" === b.type && (b.exportKind = b.exportKind || "value"), b;
        };
      }), a.extend("parseExportDeclaration", function(a) {
        return function(b) {
          if (this.isContextual("type")) {
            b.exportKind = "type";
            var c = this.startNode();
            return this.next(), this.match(e.types.braceL) ? (b.specifiers = this.parseExportSpecifiers(), this.parseExportFrom(b), null) : this.flowParseTypeAlias(c);
          }
          if (this.isContextual("interface")) {
            b.exportKind = "type";
            var d = this.startNode();
            return this.next(), this.flowParseInterface(d);
          }
          return a.call(this, b);
        };
      }), a.extend("parseClassId", function(a) {
        return function(b) {
          a.apply(this, arguments), this.isRelational("<") && (b.typeParameters = this.flowParseTypeParameterDeclaration());
        };
      }), a.extend("isKeyword", function(a) {
        return function(b) {
          return (!this.state.inType || "void" !== b) && a.call(this, b);
        };
      }), a.extend("parsePropertyName", function(a) {
        return function(b) {
          var c = this.state.inType;
          this.state.inType = !0;
          var d = a.call(this, b);
          return this.state.inType = c, d;
        };
      }), a.extend("readToken", function(a) {
        return function(b) {
          return !this.state.inType || 62 !== b && 60 !== b ? a.call(this, b) : this.finishOp(e.types.relational, 1);
        };
      }), a.extend("jsx_readToken", function(a) {
        return function() {
          if (!this.state.inType)
            return a.call(this);
        };
      }), a.extend("toAssignable", function(a) {
        return function(b, c, d) {
          return "TypeCastExpression" === b.type ? a.call(this, this.typeCastToParameter(b), c, d) : a.call(this, b, c, d);
        };
      }), a.extend("toAssignableList", function(a) {
        return function(b, c, d) {
          for (var e = 0; e < b.length; e++) {
            var f = b[e];
            f && "TypeCastExpression" === f.type && (b[e] = this.typeCastToParameter(f));
          }
          return a.call(this, b, c, d);
        };
      }), a.extend("toReferencedList", function() {
        return function(a) {
          for (var b = 0; b < a.length; b++) {
            var c = a[b];
            c && c._exprListItem && "TypeCastExpression" === c.type && this.raise(c.start, "Unexpected type cast");
          }
          return a;
        };
      }), a.extend("parseExprListItem", function(a) {
        return function(b, c) {
          var d = this.startNode(),
              f = a.call(this, b, c);
          return this.match(e.types.colon) ? (d._exprListItem = !0, d.expression = f, d.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(d, "TypeCastExpression")) : f;
        };
      }), a.extend("checkLVal", function(a) {
        return function(b) {
          if ("TypeCastExpression" !== b.type)
            return a.apply(this, arguments);
        };
      }), a.extend("parseClassProperty", function(a) {
        return function(b) {
          return delete b.variancePos, this.match(e.types.colon) && (b.typeAnnotation = this.flowParseTypeAnnotation()), a.call(this, b);
        };
      }), a.extend("isClassProperty", function(a) {
        return function() {
          return this.match(e.types.colon) || a.call(this);
        };
      }), a.extend("parseClassMethod", function() {
        return function(a, b, c, d) {
          b.variance && this.unexpected(b.variancePos), delete b.variance, delete b.variancePos, this.isRelational("<") && (b.typeParameters = this.flowParseTypeParameterDeclaration()), this.parseMethod(b, c, d), a.body.push(this.finishNode(b, "ClassMethod"));
        };
      }), a.extend("parseClassSuper", function(a) {
        return function(b, c) {
          if (a.call(this, b, c), b.superClass && this.isRelational("<") && (b.superTypeParameters = this.flowParseTypeParameterInstantiation()), this.isContextual("implements")) {
            this.next();
            var d = b.implements = [];
            do {
              var f = this.startNode();
              f.id = this.parseIdentifier(), this.isRelational("<") ? f.typeParameters = this.flowParseTypeParameterInstantiation() : f.typeParameters = null, d.push(this.finishNode(f, "ClassImplements"));
            } while (this.eat(e.types.comma));
          }
        };
      }), a.extend("parsePropertyName", function(a) {
        return function(b) {
          var c = this.state.start,
              d = this.flowParseVariance(),
              e = a.call(this, b);
          return b.variance = d, b.variancePos = c, e;
        };
      }), a.extend("parseObjPropValue", function(a) {
        return function(b) {
          b.variance && this.unexpected(b.variancePos), delete b.variance, delete b.variancePos;
          var c = void 0;
          this.isRelational("<") && (c = this.flowParseTypeParameterDeclaration(), this.match(e.types.parenL) || this.unexpected()), a.apply(this, arguments), c && ((b.value || b).typeParameters = c);
        };
      }), a.extend("parseAssignableListItemTypes", function() {
        return function(a) {
          return this.eat(e.types.question) && (a.optional = !0), this.match(e.types.colon) && (a.typeAnnotation = this.flowParseTypeAnnotation()), this.finishNode(a, a.type), a;
        };
      }), a.extend("parseMaybeDefault", function(a) {
        return function() {
          for (var b = arguments.length,
              c = Array(b),
              d = 0; d < b; d++)
            c[d] = arguments[d];
          var e = a.apply(this, c);
          return "AssignmentPattern" === e.type && e.typeAnnotation && e.right.start < e.typeAnnotation.start && this.raise(e.typeAnnotation.start, "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`"), e;
        };
      }), a.extend("parseImportSpecifiers", function(a) {
        return function(b) {
          b.importKind = "value";
          var c = null;
          if (this.match(e.types._typeof) ? c = "typeof" : this.isContextual("type") && (c = "type"), c) {
            var d = this.lookahead();
            (d.type === e.types.name && "from" !== d.value || d.type === e.types.braceL || d.type === e.types.star) && (this.next(), b.importKind = c);
          }
          a.call(this, b);
        };
      }), a.extend("parseFunctionParams", function(a) {
        return function(b) {
          this.isRelational("<") && (b.typeParameters = this.flowParseTypeParameterDeclaration()), a.call(this, b);
        };
      }), a.extend("parseVarHead", function(a) {
        return function(b) {
          a.call(this, b), this.match(e.types.colon) && (b.id.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(b.id, b.id.type));
        };
      }), a.extend("parseAsyncArrowFromCallExpression", function(a) {
        return function(b, c) {
          return this.match(e.types.colon) && (b.returnType = this.flowParseTypeAnnotation()), a.call(this, b, c);
        };
      }), a.extend("shouldParseAsyncArrow", function(a) {
        return function() {
          return this.match(e.types.colon) || a.call(this);
        };
      }), a.extend("parseMaybeAssign", function(a) {
        return function() {
          for (var b = null,
              c = arguments.length,
              d = Array(c),
              g = 0; g < c; g++)
            d[g] = arguments[g];
          if (e.types.jsxTagStart && this.match(e.types.jsxTagStart)) {
            var h = this.state.clone();
            try {
              return a.apply(this, d);
            } catch (a) {
              if (!(a instanceof SyntaxError))
                throw a;
              this.state = h, b = a;
            }
          }
          if (this.state.context.push(f.types.parenExpression), null != b || this.isRelational("<")) {
            var i = void 0,
                j = void 0;
            try {
              j = this.flowParseTypeParameterDeclaration(), i = a.apply(this, d), i.typeParameters = j, i.start = j.start, i.loc.start = j.loc.start;
            } catch (a) {
              throw b || a;
            }
            if ("ArrowFunctionExpression" === i.type)
              return i;
            if (null != b)
              throw b;
            this.raise(j.start, "Expected an arrow function after this type parameter declaration");
          }
          return this.state.context.pop(), a.apply(this, d);
        };
      }), a.extend("parseArrow", function(a) {
        return function(b) {
          if (this.match(e.types.colon)) {
            var c = this.state.clone();
            try {
              var d = this.flowParseTypeAnnotation();
              this.canInsertSemicolon() && this.unexpected(), this.match(e.types.arrow) || this.unexpected(), b.returnType = d;
            } catch (a) {
              if (!(a instanceof SyntaxError))
                throw a;
              this.state = c;
            }
          }
          return a.call(this, b);
        };
      }), a.extend("shouldParseArrow", function(a) {
        return function() {
          return this.match(e.types.colon) || a.call(this);
        };
      }), a.extend("isClassMutatorStarter", function(a) {
        return function() {
          return !!this.isRelational("<") || a.call(this);
        };
      });
    };
    var e = a("179"),
        f = a("185"),
        g = a("17a"),
        h = d(g),
        i = h.default.prototype;
    return i.flowParseTypeInitialiser = function(a, b) {
      var c = this.state.inType;
      this.state.inType = !0, this.expect(a || e.types.colon), b && (this.match(e.types.bitwiseAND) || this.match(e.types.bitwiseOR)) && this.next();
      var d = this.flowParseType();
      return this.state.inType = c, d;
    }, i.flowParseDeclareClass = function(a) {
      return this.next(), this.flowParseInterfaceish(a, !0), this.finishNode(a, "DeclareClass");
    }, i.flowParseDeclareFunction = function(a) {
      this.next();
      var b = a.id = this.parseIdentifier(),
          c = this.startNode(),
          d = this.startNode();
      this.isRelational("<") ? c.typeParameters = this.flowParseTypeParameterDeclaration() : c.typeParameters = null, this.expect(e.types.parenL);
      var f = this.flowParseFunctionTypeParams();
      return c.params = f.params, c.rest = f.rest, this.expect(e.types.parenR), c.returnType = this.flowParseTypeInitialiser(), d.typeAnnotation = this.finishNode(c, "FunctionTypeAnnotation"), b.typeAnnotation = this.finishNode(d, "TypeAnnotation"), this.finishNode(b, b.type), this.semicolon(), this.finishNode(a, "DeclareFunction");
    }, i.flowParseDeclare = function(a) {
      return this.match(e.types._class) ? this.flowParseDeclareClass(a) : this.match(e.types._function) ? this.flowParseDeclareFunction(a) : this.match(e.types._var) ? this.flowParseDeclareVariable(a) : this.isContextual("module") ? this.lookahead().type === e.types.dot ? this.flowParseDeclareModuleExports(a) : this.flowParseDeclareModule(a) : this.isContextual("type") ? this.flowParseDeclareTypeAlias(a) : this.isContextual("interface") ? this.flowParseDeclareInterface(a) : void this.unexpected();
    }, i.flowParseDeclareVariable = function(a) {
      return this.next(), a.id = this.flowParseTypeAnnotatableIdentifier(), this.semicolon(), this.finishNode(a, "DeclareVariable");
    }, i.flowParseDeclareModule = function(a) {
      this.next(), this.match(e.types.string) ? a.id = this.parseExprAtom() : a.id = this.parseIdentifier();
      var b = a.body = this.startNode(),
          c = b.body = [];
      for (this.expect(e.types.braceL); !this.match(e.types.braceR); ) {
        var d = this.startNode();
        this.expectContextual("declare", "Unexpected token. Only declares are allowed inside declare module"), c.push(this.flowParseDeclare(d));
      }
      return this.expect(e.types.braceR), this.finishNode(b, "BlockStatement"), this.finishNode(a, "DeclareModule");
    }, i.flowParseDeclareModuleExports = function(a) {
      return this.expectContextual("module"), this.expect(e.types.dot), this.expectContextual("exports"), a.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(a, "DeclareModuleExports");
    }, i.flowParseDeclareTypeAlias = function(a) {
      return this.next(), this.flowParseTypeAlias(a), this.finishNode(a, "DeclareTypeAlias");
    }, i.flowParseDeclareInterface = function(a) {
      return this.next(), this.flowParseInterfaceish(a), this.finishNode(a, "DeclareInterface");
    }, i.flowParseInterfaceish = function(a, b) {
      if (a.id = this.parseIdentifier(), this.isRelational("<") ? a.typeParameters = this.flowParseTypeParameterDeclaration() : a.typeParameters = null, a.extends = [], a.mixins = [], this.eat(e.types._extends))
        do
          a.extends.push(this.flowParseInterfaceExtends());
 while (this.eat(e.types.comma));
      if (this.isContextual("mixins")) {
        this.next();
        do
          a.mixins.push(this.flowParseInterfaceExtends());
 while (this.eat(e.types.comma));
      }
      a.body = this.flowParseObjectType(b);
    }, i.flowParseInterfaceExtends = function() {
      var a = this.startNode();
      return a.id = this.flowParseQualifiedTypeIdentifier(), this.isRelational("<") ? a.typeParameters = this.flowParseTypeParameterInstantiation() : a.typeParameters = null, this.finishNode(a, "InterfaceExtends");
    }, i.flowParseInterface = function(a) {
      return this.flowParseInterfaceish(a, !1), this.finishNode(a, "InterfaceDeclaration");
    }, i.flowParseTypeAlias = function(a) {
      return a.id = this.parseIdentifier(), this.isRelational("<") ? a.typeParameters = this.flowParseTypeParameterDeclaration() : a.typeParameters = null, a.right = this.flowParseTypeInitialiser(e.types.eq, !0), this.semicolon(), this.finishNode(a, "TypeAlias");
    }, i.flowParseTypeParameter = function() {
      var a = this.startNode(),
          b = this.flowParseVariance(),
          c = this.flowParseTypeAnnotatableIdentifier();
      return a.name = c.name, a.variance = b, a.bound = c.typeAnnotation, this.match(e.types.eq) && (this.eat(e.types.eq), a.default = this.flowParseType()), this.finishNode(a, "TypeParameter");
    }, i.flowParseTypeParameterDeclaration = function() {
      var a = this.state.inType,
          b = this.startNode();
      b.params = [], this.state.inType = !0, this.isRelational("<") || this.match(e.types.jsxTagStart) ? this.next() : this.unexpected();
      do
        b.params.push(this.flowParseTypeParameter()), this.isRelational(">") || this.expect(e.types.comma);
 while (!this.isRelational(">"));
      return this.expectRelational(">"), this.state.inType = a, this.finishNode(b, "TypeParameterDeclaration");
    }, i.flowParseTypeParameterInstantiation = function() {
      var a = this.startNode(),
          b = this.state.inType;
      for (a.params = [], this.state.inType = !0, this.expectRelational("<"); !this.isRelational(">"); )
        a.params.push(this.flowParseType()), this.isRelational(">") || this.expect(e.types.comma);
      return this.expectRelational(">"), this.state.inType = b, this.finishNode(a, "TypeParameterInstantiation");
    }, i.flowParseObjectPropertyKey = function() {
      return this.match(e.types.num) || this.match(e.types.string) ? this.parseExprAtom() : this.parseIdentifier(!0);
    }, i.flowParseObjectTypeIndexer = function(a, b, c) {
      return a.static = b, this.expect(e.types.bracketL), a.id = this.flowParseObjectPropertyKey(), a.key = this.flowParseTypeInitialiser(), this.expect(e.types.bracketR), a.value = this.flowParseTypeInitialiser(), a.variance = c, this.flowObjectTypeSemicolon(), this.finishNode(a, "ObjectTypeIndexer");
    }, i.flowParseObjectTypeMethodish = function(a) {
      for (a.params = [], a.rest = null, a.typeParameters = null, this.isRelational("<") && (a.typeParameters = this.flowParseTypeParameterDeclaration()), this.expect(e.types.parenL); this.match(e.types.name); )
        a.params.push(this.flowParseFunctionTypeParam()), this.match(e.types.parenR) || this.expect(e.types.comma);
      return this.eat(e.types.ellipsis) && (a.rest = this.flowParseFunctionTypeParam()), this.expect(e.types.parenR), a.returnType = this.flowParseTypeInitialiser(), this.finishNode(a, "FunctionTypeAnnotation");
    }, i.flowParseObjectTypeMethod = function(a, b, c, d) {
      var e = this.startNodeAt(a, b);
      return e.value = this.flowParseObjectTypeMethodish(this.startNodeAt(a, b)), e.static = c, e.key = d, e.optional = !1, this.flowObjectTypeSemicolon(), this.finishNode(e, "ObjectTypeProperty");
    }, i.flowParseObjectTypeCallProperty = function(a, b) {
      var c = this.startNode();
      return a.static = b, a.value = this.flowParseObjectTypeMethodish(c), this.flowObjectTypeSemicolon(), this.finishNode(a, "ObjectTypeCallProperty");
    }, i.flowParseObjectType = function(a, b) {
      var c = this.state.inType;
      this.state.inType = !0;
      var d = this.startNode(),
          f = void 0,
          g = void 0,
          h = !1;
      d.callProperties = [], d.properties = [], d.indexers = [];
      var i = void 0,
          j = void 0;
      for (b && this.match(e.types.braceBarL) ? (this.expect(e.types.braceBarL), i = e.types.braceBarR, j = !0) : (this.expect(e.types.braceL), i = e.types.braceR, j = !1), d.exact = j; !this.match(i); ) {
        var k = !1,
            l = this.state.start,
            m = this.state.startLoc;
        f = this.startNode(), a && this.isContextual("static") && this.lookahead().type !== e.types.colon && (this.next(), h = !0);
        var n = this.state.start,
            o = this.flowParseVariance();
        this.match(e.types.bracketL) ? d.indexers.push(this.flowParseObjectTypeIndexer(f, h, o)) : this.match(e.types.parenL) || this.isRelational("<") ? (o && this.unexpected(n), d.callProperties.push(this.flowParseObjectTypeCallProperty(f, a))) : (g = this.flowParseObjectPropertyKey(), this.isRelational("<") || this.match(e.types.parenL) ? (o && this.unexpected(n), d.properties.push(this.flowParseObjectTypeMethod(l, m, h, g))) : (this.eat(e.types.question) && (k = !0), f.key = g, f.value = this.flowParseTypeInitialiser(), f.optional = k, f.static = h, f.variance = o, this.flowObjectTypeSemicolon(), d.properties.push(this.finishNode(f, "ObjectTypeProperty")))), h = !1;
      }
      this.expect(i);
      var p = this.finishNode(d, "ObjectTypeAnnotation");
      return this.state.inType = c, p;
    }, i.flowObjectTypeSemicolon = function() {
      this.eat(e.types.semi) || this.eat(e.types.comma) || this.match(e.types.braceR) || this.match(e.types.braceBarR) || this.unexpected();
    }, i.flowParseQualifiedTypeIdentifier = function(a, b, c) {
      a = a || this.state.start, b = b || this.state.startLoc;
      for (var d = c || this.parseIdentifier(); this.eat(e.types.dot); ) {
        var f = this.startNodeAt(a, b);
        f.qualification = d, f.id = this.parseIdentifier(), d = this.finishNode(f, "QualifiedTypeIdentifier");
      }
      return d;
    }, i.flowParseGenericType = function(a, b, c) {
      var d = this.startNodeAt(a, b);
      return d.typeParameters = null, d.id = this.flowParseQualifiedTypeIdentifier(a, b, c), this.isRelational("<") && (d.typeParameters = this.flowParseTypeParameterInstantiation()), this.finishNode(d, "GenericTypeAnnotation");
    }, i.flowParseTypeofType = function() {
      var a = this.startNode();
      return this.expect(e.types._typeof), a.argument = this.flowParsePrimaryType(), this.finishNode(a, "TypeofTypeAnnotation");
    }, i.flowParseTupleType = function() {
      var a = this.startNode();
      for (a.types = [], this.expect(e.types.bracketL); this.state.pos < this.input.length && !this.match(e.types.bracketR) && (a.types.push(this.flowParseType()), !this.match(e.types.bracketR)); )
        this.expect(e.types.comma);
      return this.expect(e.types.bracketR), this.finishNode(a, "TupleTypeAnnotation");
    }, i.flowParseFunctionTypeParam = function() {
      var a = !1,
          b = this.startNode();
      return b.name = this.parseIdentifier(), this.eat(e.types.question) && (a = !0), b.optional = a, b.typeAnnotation = this.flowParseTypeInitialiser(), this.finishNode(b, "FunctionTypeParam");
    }, i.flowParseFunctionTypeParams = function() {
      for (var a = {
        params: [],
        rest: null
      }; this.match(e.types.name); )
        a.params.push(this.flowParseFunctionTypeParam()), this.match(e.types.parenR) || this.expect(e.types.comma);
      return this.eat(e.types.ellipsis) && (a.rest = this.flowParseFunctionTypeParam()), a;
    }, i.flowIdentToTypeAnnotation = function(a, b, c, d) {
      switch (d.name) {
        case "any":
          return this.finishNode(c, "AnyTypeAnnotation");
        case "void":
          return this.finishNode(c, "VoidTypeAnnotation");
        case "bool":
        case "boolean":
          return this.finishNode(c, "BooleanTypeAnnotation");
        case "mixed":
          return this.finishNode(c, "MixedTypeAnnotation");
        case "empty":
          return this.finishNode(c, "EmptyTypeAnnotation");
        case "number":
          return this.finishNode(c, "NumberTypeAnnotation");
        case "string":
          return this.finishNode(c, "StringTypeAnnotation");
        default:
          return this.flowParseGenericType(a, b, d);
      }
    }, i.flowParsePrimaryType = function() {
      var a = this.state.start,
          b = this.state.startLoc,
          c = this.startNode(),
          d = void 0,
          f = void 0,
          g = !1;
      switch (this.state.type) {
        case e.types.name:
          return this.flowIdentToTypeAnnotation(a, b, c, this.parseIdentifier());
        case e.types.braceL:
          return this.flowParseObjectType(!1, !1);
        case e.types.braceBarL:
          return this.flowParseObjectType(!1, !0);
        case e.types.bracketL:
          return this.flowParseTupleType();
        case e.types.relational:
          if ("<" === this.state.value)
            return c.typeParameters = this.flowParseTypeParameterDeclaration(), this.expect(e.types.parenL), d = this.flowParseFunctionTypeParams(), c.params = d.params, c.rest = d.rest, this.expect(e.types.parenR), this.expect(e.types.arrow), c.returnType = this.flowParseType(), this.finishNode(c, "FunctionTypeAnnotation");
          break;
        case e.types.parenL:
          if (this.next(), !this.match(e.types.parenR) && !this.match(e.types.ellipsis))
            if (this.match(e.types.name)) {
              var h = this.lookahead().type;
              g = h !== e.types.question && h !== e.types.colon;
            } else
              g = !0;
          return g ? (f = this.flowParseType(), this.expect(e.types.parenR), f) : (d = this.flowParseFunctionTypeParams(), c.params = d.params, c.rest = d.rest, this.expect(e.types.parenR), this.expect(e.types.arrow), c.returnType = this.flowParseType(), c.typeParameters = null, this.finishNode(c, "FunctionTypeAnnotation"));
        case e.types.string:
          return c.value = this.state.value, this.addExtra(c, "rawValue", c.value), this.addExtra(c, "raw", this.input.slice(this.state.start, this.state.end)), this.next(), this.finishNode(c, "StringLiteralTypeAnnotation");
        case e.types._true:
        case e.types._false:
          return c.value = this.match(e.types._true), this.next(), this.finishNode(c, "BooleanLiteralTypeAnnotation");
        case e.types.plusMin:
          if ("-" === this.state.value)
            return this.next(), this.match(e.types.num) || this.unexpected(), c.value = -this.state.value, this.addExtra(c, "rawValue", c.value), this.addExtra(c, "raw", this.input.slice(this.state.start, this.state.end)), this.next(), this.finishNode(c, "NumericLiteralTypeAnnotation");
        case e.types.num:
          return c.value = this.state.value, this.addExtra(c, "rawValue", c.value), this.addExtra(c, "raw", this.input.slice(this.state.start, this.state.end)), this.next(), this.finishNode(c, "NumericLiteralTypeAnnotation");
        case e.types._null:
          return c.value = this.match(e.types._null), this.next(), this.finishNode(c, "NullLiteralTypeAnnotation");
        case e.types._this:
          return c.value = this.match(e.types._this), this.next(), this.finishNode(c, "ThisTypeAnnotation");
        case e.types.star:
          return this.next(), this.finishNode(c, "ExistentialTypeParam");
        default:
          if ("typeof" === this.state.type.keyword)
            return this.flowParseTypeofType();
      }
      this.unexpected();
    }, i.flowParsePostfixType = function() {
      var a = this.startNode(),
          b = a.elementType = this.flowParsePrimaryType();
      return this.match(e.types.bracketL) ? (this.expect(e.types.bracketL), this.expect(e.types.bracketR), this.finishNode(a, "ArrayTypeAnnotation")) : b;
    }, i.flowParsePrefixType = function() {
      var a = this.startNode();
      return this.eat(e.types.question) ? (a.typeAnnotation = this.flowParsePrefixType(), this.finishNode(a, "NullableTypeAnnotation")) : this.flowParsePostfixType();
    }, i.flowParseIntersectionType = function() {
      var a = this.startNode(),
          b = this.flowParsePrefixType();
      for (a.types = [b]; this.eat(e.types.bitwiseAND); )
        a.types.push(this.flowParsePrefixType());
      return 1 === a.types.length ? b : this.finishNode(a, "IntersectionTypeAnnotation");
    }, i.flowParseUnionType = function() {
      var a = this.startNode(),
          b = this.flowParseIntersectionType();
      for (a.types = [b]; this.eat(e.types.bitwiseOR); )
        a.types.push(this.flowParseIntersectionType());
      return 1 === a.types.length ? b : this.finishNode(a, "UnionTypeAnnotation");
    }, i.flowParseType = function() {
      var a = this.state.inType;
      this.state.inType = !0;
      var b = this.flowParseUnionType();
      return this.state.inType = a, b;
    }, i.flowParseTypeAnnotation = function() {
      var a = this.startNode();
      return a.typeAnnotation = this.flowParseTypeInitialiser(), this.finishNode(a, "TypeAnnotation");
    }, i.flowParseTypeAnnotatableIdentifier = function() {
      var a = this.parseIdentifier();
      return this.match(e.types.colon) && (a.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(a, a.type)), a;
    }, i.typeCastToParameter = function(a) {
      return a.expression.typeAnnotation = a.typeAnnotation, this.finishNodeAt(a.expression, a.expression.type, a.typeAnnotation.end, a.typeAnnotation.loc.end);
    }, i.flowParseVariance = function() {
      var a = null;
      return this.match(e.types.plusMin) && ("+" === this.state.value ? a = "plus" : "-" === this.state.value && (a = "minus"), this.next()), a;
    }, c.exports;
  }), a.registerDynamic("186", [], !0, function(a, b, c) {
    "use strict";
    this || self;
    return b.__esModule = !0, b.default = {
      quot: '"',
      amp: "&",
      apos: "'",
      lt: "<",
      gt: ">",
      nbsp: " ",
      iexcl: "¡",
      cent: "¢",
      pound: "£",
      curren: "¤",
      yen: "¥",
      brvbar: "¦",
      sect: "§",
      uml: "¨",
      copy: "©",
      ordf: "ª",
      laquo: "«",
      not: "¬",
      shy: "­",
      reg: "®",
      macr: "¯",
      deg: "°",
      plusmn: "±",
      sup2: "²",
      sup3: "³",
      acute: "´",
      micro: "µ",
      para: "¶",
      middot: "·",
      cedil: "¸",
      sup1: "¹",
      ordm: "º",
      raquo: "»",
      frac14: "¼",
      frac12: "½",
      frac34: "¾",
      iquest: "¿",
      Agrave: "À",
      Aacute: "Á",
      Acirc: "Â",
      Atilde: "Ã",
      Auml: "Ä",
      Aring: "Å",
      AElig: "Æ",
      Ccedil: "Ç",
      Egrave: "È",
      Eacute: "É",
      Ecirc: "Ê",
      Euml: "Ë",
      Igrave: "Ì",
      Iacute: "Í",
      Icirc: "Î",
      Iuml: "Ï",
      ETH: "Ð",
      Ntilde: "Ñ",
      Ograve: "Ò",
      Oacute: "Ó",
      Ocirc: "Ô",
      Otilde: "Õ",
      Ouml: "Ö",
      times: "×",
      Oslash: "Ø",
      Ugrave: "Ù",
      Uacute: "Ú",
      Ucirc: "Û",
      Uuml: "Ü",
      Yacute: "Ý",
      THORN: "Þ",
      szlig: "ß",
      agrave: "à",
      aacute: "á",
      acirc: "â",
      atilde: "ã",
      auml: "ä",
      aring: "å",
      aelig: "æ",
      ccedil: "ç",
      egrave: "è",
      eacute: "é",
      ecirc: "ê",
      euml: "ë",
      igrave: "ì",
      iacute: "í",
      icirc: "î",
      iuml: "ï",
      eth: "ð",
      ntilde: "ñ",
      ograve: "ò",
      oacute: "ó",
      ocirc: "ô",
      otilde: "õ",
      ouml: "ö",
      divide: "÷",
      oslash: "ø",
      ugrave: "ù",
      uacute: "ú",
      ucirc: "û",
      uuml: "ü",
      yacute: "ý",
      thorn: "þ",
      yuml: "ÿ",
      OElig: "Œ",
      oelig: "œ",
      Scaron: "Š",
      scaron: "š",
      Yuml: "Ÿ",
      fnof: "ƒ",
      circ: "ˆ",
      tilde: "˜",
      Alpha: "Α",
      Beta: "Β",
      Gamma: "Γ",
      Delta: "Δ",
      Epsilon: "Ε",
      Zeta: "Ζ",
      Eta: "Η",
      Theta: "Θ",
      Iota: "Ι",
      Kappa: "Κ",
      Lambda: "Λ",
      Mu: "Μ",
      Nu: "Ν",
      Xi: "Ξ",
      Omicron: "Ο",
      Pi: "Π",
      Rho: "Ρ",
      Sigma: "Σ",
      Tau: "Τ",
      Upsilon: "Υ",
      Phi: "Φ",
      Chi: "Χ",
      Psi: "Ψ",
      Omega: "Ω",
      alpha: "α",
      beta: "β",
      gamma: "γ",
      delta: "δ",
      epsilon: "ε",
      zeta: "ζ",
      eta: "η",
      theta: "θ",
      iota: "ι",
      kappa: "κ",
      lambda: "λ",
      mu: "μ",
      nu: "ν",
      xi: "ξ",
      omicron: "ο",
      pi: "π",
      rho: "ρ",
      sigmaf: "ς",
      sigma: "σ",
      tau: "τ",
      upsilon: "υ",
      phi: "φ",
      chi: "χ",
      psi: "ψ",
      omega: "ω",
      thetasym: "ϑ",
      upsih: "ϒ",
      piv: "ϖ",
      ensp: " ",
      emsp: " ",
      thinsp: " ",
      zwnj: "‌",
      zwj: "‍",
      lrm: "‎",
      rlm: "‏",
      ndash: "–",
      mdash: "—",
      lsquo: "‘",
      rsquo: "’",
      sbquo: "‚",
      ldquo: "“",
      rdquo: "”",
      bdquo: "„",
      dagger: "†",
      Dagger: "‡",
      bull: "•",
      hellip: "…",
      permil: "‰",
      prime: "′",
      Prime: "″",
      lsaquo: "‹",
      rsaquo: "›",
      oline: "‾",
      frasl: "⁄",
      euro: "€",
      image: "ℑ",
      weierp: "℘",
      real: "ℜ",
      trade: "™",
      alefsym: "ℵ",
      larr: "←",
      uarr: "↑",
      rarr: "→",
      darr: "↓",
      harr: "↔",
      crarr: "↵",
      lArr: "⇐",
      uArr: "⇑",
      rArr: "⇒",
      dArr: "⇓",
      hArr: "⇔",
      forall: "∀",
      part: "∂",
      exist: "∃",
      empty: "∅",
      nabla: "∇",
      isin: "∈",
      notin: "∉",
      ni: "∋",
      prod: "∏",
      sum: "∑",
      minus: "−",
      lowast: "∗",
      radic: "√",
      prop: "∝",
      infin: "∞",
      ang: "∠",
      and: "∧",
      or: "∨",
      cap: "∩",
      cup: "∪",
      int: "∫",
      there4: "∴",
      sim: "∼",
      cong: "≅",
      asymp: "≈",
      ne: "≠",
      equiv: "≡",
      le: "≤",
      ge: "≥",
      sub: "⊂",
      sup: "⊃",
      nsub: "⊄",
      sube: "⊆",
      supe: "⊇",
      oplus: "⊕",
      otimes: "⊗",
      perp: "⊥",
      sdot: "⋅",
      lceil: "⌈",
      rceil: "⌉",
      lfloor: "⌊",
      rfloor: "⌋",
      lang: "〈",
      rang: "〉",
      loz: "◊",
      spades: "♠",
      clubs: "♣",
      hearts: "♥",
      diams: "♦"
    }, c.exports;
  }), a.registerDynamic("187", [], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      var b = {};
      for (var c in e)
        b[c] = a && c in a ? a[c] : e[c];
      return b;
    }
    this || self;
    b.__esModule = !0, b.getOptions = d;
    var e = b.defaultOptions = {
      sourceType: "script",
      sourceFilename: void 0,
      allowReturnOutsideFunction: !1,
      allowImportExportEverywhere: !1,
      allowSuperOutsideMethod: !1,
      plugins: [],
      strictMode: null
    };
    return c.exports;
  }), a.registerDynamic("181", ["17b"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      if (!(a instanceof b))
        throw new TypeError("Cannot call a class as a function");
    }
    function e(a, b) {
      for (var c = 1,
          d = 0; ; ) {
        f.lineBreakG.lastIndex = d;
        var e = f.lineBreakG.exec(a);
        if (!(e && e.index < b))
          return new g(c, b - d);
        ++c, d = e.index + e[0].length;
      }
    }
    this || self;
    b.__esModule = !0, b.SourceLocation = b.Position = void 0, b.getLineInfo = e;
    var f = a("17b"),
        g = b.Position = function a(b, c) {
          d(this, a), this.line = b, this.column = c;
        };
    b.SourceLocation = function a(b, c) {
      d(this, a), this.start = b, this.end = c;
    };
    return c.exports;
  }), a.registerDynamic("185", ["179", "17b"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      if (!(a instanceof b))
        throw new TypeError("Cannot call a class as a function");
    }
    this || self;
    b.__esModule = !0, b.types = b.TokContext = void 0;
    var e = a("179"),
        f = a("17b"),
        g = b.TokContext = function a(b, c, e, f) {
          d(this, a), this.token = b, this.isExpr = !!c, this.preserveSpace = !!e, this.override = f;
        },
        h = b.types = {
          braceStatement: new g("{", !1),
          braceExpression: new g("{", !0),
          templateQuasi: new g("${", !0),
          parenStatement: new g("(", !1),
          parenExpression: new g("(", !0),
          template: new g("`", !0, !0, function(a) {
            return a.readTmplToken();
          }),
          functionExpression: new g("function", !0)
        };
    return e.types.parenR.updateContext = e.types.braceR.updateContext = function() {
      if (1 === this.state.context.length)
        return void(this.state.exprAllowed = !0);
      var a = this.state.context.pop();
      a === h.braceStatement && this.curContext() === h.functionExpression ? (this.state.context.pop(), this.state.exprAllowed = !1) : a === h.templateQuasi ? this.state.exprAllowed = !0 : this.state.exprAllowed = !a.isExpr;
    }, e.types.name.updateContext = function(a) {
      this.state.exprAllowed = !1, a !== e.types._let && a !== e.types._const && a !== e.types._var || f.lineBreak.test(this.input.slice(this.state.end)) && (this.state.exprAllowed = !0);
    }, e.types.braceL.updateContext = function(a) {
      this.state.context.push(this.braceIsBlock(a) ? h.braceStatement : h.braceExpression), this.state.exprAllowed = !0;
    }, e.types.dollarBraceL.updateContext = function() {
      this.state.context.push(h.templateQuasi), this.state.exprAllowed = !0;
    }, e.types.parenL.updateContext = function(a) {
      var b = a === e.types._if || a === e.types._for || a === e.types._with || a === e.types._while;
      this.state.context.push(b ? h.parenStatement : h.parenExpression), this.state.exprAllowed = !0;
    }, e.types.incDec.updateContext = function() {}, e.types._function.updateContext = function() {
      this.curContext() !== h.braceStatement && this.state.context.push(h.functionExpression), this.state.exprAllowed = !1;
    }, e.types.backQuote.updateContext = function() {
      this.curContext() === h.template ? this.state.context.pop() : this.state.context.push(h.template), this.state.exprAllowed = !1;
    }, c.exports;
  }), a.registerDynamic("179", [], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      if (!(a instanceof b))
        throw new TypeError("Cannot call a class as a function");
    }
    function e(a, b) {
      return new g(a, {
        beforeExpr: !0,
        binop: b
      });
    }
    function f(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      b.keyword = a, k[a] = j["_" + a] = new g(a, b);
    }
    this || self;
    b.__esModule = !0;
    var g = b.TokenType = function a(b) {
      var c = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      d(this, a), this.label = b, this.keyword = c.keyword, this.beforeExpr = !!c.beforeExpr, this.startsExpr = !!c.startsExpr, this.rightAssociative = !!c.rightAssociative, this.isLoop = !!c.isLoop, this.isAssign = !!c.isAssign, this.prefix = !!c.prefix, this.postfix = !!c.postfix, this.binop = c.binop || null, this.updateContext = null;
    },
        h = {beforeExpr: !0},
        i = {startsExpr: !0},
        j = b.types = {
          num: new g("num", i),
          regexp: new g("regexp", i),
          string: new g("string", i),
          name: new g("name", i),
          eof: new g("eof"),
          bracketL: new g("[", {
            beforeExpr: !0,
            startsExpr: !0
          }),
          bracketR: new g("]"),
          braceL: new g("{", {
            beforeExpr: !0,
            startsExpr: !0
          }),
          braceBarL: new g("{|", {
            beforeExpr: !0,
            startsExpr: !0
          }),
          braceR: new g("}"),
          braceBarR: new g("|}"),
          parenL: new g("(", {
            beforeExpr: !0,
            startsExpr: !0
          }),
          parenR: new g(")"),
          comma: new g(",", h),
          semi: new g(";", h),
          colon: new g(":", h),
          doubleColon: new g("::", h),
          dot: new g("."),
          question: new g("?", h),
          arrow: new g("=>", h),
          template: new g("template"),
          ellipsis: new g("...", h),
          backQuote: new g("`", i),
          dollarBraceL: new g("${", {
            beforeExpr: !0,
            startsExpr: !0
          }),
          at: new g("@"),
          eq: new g("=", {
            beforeExpr: !0,
            isAssign: !0
          }),
          assign: new g("_=", {
            beforeExpr: !0,
            isAssign: !0
          }),
          incDec: new g("++/--", {
            prefix: !0,
            postfix: !0,
            startsExpr: !0
          }),
          prefix: new g("prefix", {
            beforeExpr: !0,
            prefix: !0,
            startsExpr: !0
          }),
          logicalOR: e("||", 1),
          logicalAND: e("&&", 2),
          bitwiseOR: e("|", 3),
          bitwiseXOR: e("^", 4),
          bitwiseAND: e("&", 5),
          equality: e("==/!=", 6),
          relational: e("</>", 7),
          bitShift: e("<</>>", 8),
          plusMin: new g("+/-", {
            beforeExpr: !0,
            binop: 9,
            prefix: !0,
            startsExpr: !0
          }),
          modulo: e("%", 10),
          star: e("*", 10),
          slash: e("/", 10),
          exponent: new g("**", {
            beforeExpr: !0,
            binop: 11,
            rightAssociative: !0
          })
        },
        k = b.keywords = {};
    return f("break"), f("case", h), f("catch"), f("continue"), f("debugger"), f("default", h), f("do", {
      isLoop: !0,
      beforeExpr: !0
    }), f("else", h), f("finally"), f("for", {isLoop: !0}), f("function", i), f("if"), f("return", h), f("switch"), f("throw", h), f("try"), f("var"), f("let"), f("const"), f("while", {isLoop: !0}), f("with"), f("new", {
      beforeExpr: !0,
      startsExpr: !0
    }), f("this", i), f("super", i), f("class"), f("extends", h), f("export"), f("import"), f("yield", {
      beforeExpr: !0,
      startsExpr: !0
    }), f("null", i), f("true", i), f("false", i), f("in", {
      beforeExpr: !0,
      binop: 7
    }), f("instanceof", {
      beforeExpr: !0,
      binop: 7
    }), f("typeof", {
      beforeExpr: !0,
      prefix: !0,
      startsExpr: !0
    }), f("void", {
      beforeExpr: !0,
      prefix: !0,
      startsExpr: !0
    }), f("delete", {
      beforeExpr: !0,
      prefix: !0,
      startsExpr: !0
    }), c.exports;
  }), a.registerDynamic("188", ["181", "185", "179"], !0, function(a, b, c) {
    "use strict";
    function d(a, b) {
      if (!(a instanceof b))
        throw new TypeError("Cannot call a class as a function");
    }
    this || self;
    b.__esModule = !0;
    var e = a("181"),
        f = a("185"),
        g = a("179"),
        h = function() {
          function a() {
            d(this, a);
          }
          return a.prototype.init = function(a, b) {
            return this.strict = a.strictMode !== !1 && "module" === a.sourceType, this.input = b, this.potentialArrowAt = -1, this.inMethod = this.inFunction = this.inGenerator = this.inAsync = this.inType = !1, this.labels = [], this.decorators = [], this.tokens = [], this.comments = [], this.trailingComments = [], this.leadingComments = [], this.commentStack = [], this.pos = this.lineStart = 0, this.curLine = 1, this.type = g.types.eof, this.value = null, this.start = this.end = this.pos, this.startLoc = this.endLoc = this.curPosition(), this.lastTokEndLoc = this.lastTokStartLoc = null, this.lastTokStart = this.lastTokEnd = this.pos, this.context = [f.types.braceStatement], this.exprAllowed = !0, this.containsEsc = this.containsOctal = !1, this.octalPosition = null, this.exportedIdentifiers = [], this;
          }, a.prototype.curPosition = function() {
            return new e.Position(this.curLine, this.pos - this.lineStart);
          }, a.prototype.clone = function(b) {
            var c = new a;
            for (var d in this) {
              var e = this[d];
              b && "context" !== d || !Array.isArray(e) || (e = e.slice()), c[d] = e;
            }
            return c;
          }, a;
        }();
    return b.default = h, c.exports;
  }), a.registerDynamic("189", ["17e", "179", "185", "181", "17b", "188"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e(a, b) {
      if (!(a instanceof b))
        throw new TypeError("Cannot call a class as a function");
    }
    function f(a) {
      return a <= 65535 ? String.fromCharCode(a) : String.fromCharCode((a - 65536 >> 10) + 55296, (a - 65536 & 1023) + 56320);
    }
    this || self;
    b.__esModule = !0, b.Token = void 0;
    var g = a("17e"),
        h = a("179"),
        i = a("185"),
        j = a("181"),
        k = a("17b"),
        l = a("188"),
        m = d(l),
        n = b.Token = function a(b) {
          e(this, a), this.type = b.type, this.value = b.value, this.start = b.start, this.end = b.end, this.loc = new j.SourceLocation(b.startLoc, b.endLoc);
        },
        o = function() {
          function a(b, c) {
            e(this, a), this.state = new m.default, this.state.init(b, c);
          }
          return a.prototype.next = function() {
            this.isLookahead || this.state.tokens.push(new n(this.state)), this.state.lastTokEnd = this.state.end, this.state.lastTokStart = this.state.start, this.state.lastTokEndLoc = this.state.endLoc, this.state.lastTokStartLoc = this.state.startLoc, this.nextToken();
          }, a.prototype.eat = function(a) {
            return !!this.match(a) && (this.next(), !0);
          }, a.prototype.match = function(a) {
            return this.state.type === a;
          }, a.prototype.isKeyword = function(a) {
            return (0, g.isKeyword)(a);
          }, a.prototype.lookahead = function() {
            var a = this.state;
            this.state = a.clone(!0), this.isLookahead = !0, this.next(), this.isLookahead = !1;
            var b = this.state.clone(!0);
            return this.state = a, b;
          }, a.prototype.setStrict = function(a) {
            if (this.state.strict = a, this.match(h.types.num) || this.match(h.types.string)) {
              for (this.state.pos = this.state.start; this.state.pos < this.state.lineStart; )
                this.state.lineStart = this.input.lastIndexOf("\n", this.state.lineStart - 2) + 1, --this.state.curLine;
              this.nextToken();
            }
          }, a.prototype.curContext = function() {
            return this.state.context[this.state.context.length - 1];
          }, a.prototype.nextToken = function() {
            var a = this.curContext();
            return a && a.preserveSpace || this.skipSpace(), this.state.containsOctal = !1, this.state.octalPosition = null, this.state.start = this.state.pos, this.state.startLoc = this.state.curPosition(), this.state.pos >= this.input.length ? this.finishToken(h.types.eof) : a.override ? a.override(this) : this.readToken(this.fullCharCodeAtPos());
          }, a.prototype.readToken = function(a) {
            return (0, g.isIdentifierStart)(a) || 92 === a ? this.readWord() : this.getTokenFromCode(a);
          }, a.prototype.fullCharCodeAtPos = function() {
            var a = this.input.charCodeAt(this.state.pos);
            if (a <= 55295 || a >= 57344)
              return a;
            var b = this.input.charCodeAt(this.state.pos + 1);
            return (a << 10) + b - 56613888;
          }, a.prototype.pushComment = function(a, b, c, d, e, f) {
            var g = {
              type: a ? "CommentBlock" : "CommentLine",
              value: b,
              start: c,
              end: d,
              loc: new j.SourceLocation(e, f)
            };
            this.isLookahead || (this.state.tokens.push(g), this.state.comments.push(g), this.addComment(g));
          }, a.prototype.skipBlockComment = function() {
            var a = this.state.curPosition(),
                b = this.state.pos,
                c = this.input.indexOf("*/", this.state.pos += 2);
            c === -1 && this.raise(this.state.pos - 2, "Unterminated comment"), this.state.pos = c + 2, k.lineBreakG.lastIndex = b;
            for (var d = void 0; (d = k.lineBreakG.exec(this.input)) && d.index < this.state.pos; )
              ++this.state.curLine, this.state.lineStart = d.index + d[0].length;
            this.pushComment(!0, this.input.slice(b + 2, c), b, this.state.pos, a, this.state.curPosition());
          }, a.prototype.skipLineComment = function(a) {
            for (var b = this.state.pos,
                c = this.state.curPosition(),
                d = this.input.charCodeAt(this.state.pos += a); this.state.pos < this.input.length && 10 !== d && 13 !== d && 8232 !== d && 8233 !== d; )
              ++this.state.pos, d = this.input.charCodeAt(this.state.pos);
            this.pushComment(!1, this.input.slice(b + a, this.state.pos), b, this.state.pos, c, this.state.curPosition());
          }, a.prototype.skipSpace = function() {
            a: for (; this.state.pos < this.input.length; ) {
              var a = this.input.charCodeAt(this.state.pos);
              switch (a) {
                case 32:
                case 160:
                  ++this.state.pos;
                  break;
                case 13:
                  10 === this.input.charCodeAt(this.state.pos + 1) && ++this.state.pos;
                case 10:
                case 8232:
                case 8233:
                  ++this.state.pos, ++this.state.curLine, this.state.lineStart = this.state.pos;
                  break;
                case 47:
                  switch (this.input.charCodeAt(this.state.pos + 1)) {
                    case 42:
                      this.skipBlockComment();
                      break;
                    case 47:
                      this.skipLineComment(2);
                      break;
                    default:
                      break a;
                  }
                  break;
                default:
                  if (!(a > 8 && a < 14 || a >= 5760 && k.nonASCIIwhitespace.test(String.fromCharCode(a))))
                    break a;
                  ++this.state.pos;
              }
            }
          }, a.prototype.finishToken = function(a, b) {
            this.state.end = this.state.pos, this.state.endLoc = this.state.curPosition();
            var c = this.state.type;
            this.state.type = a, this.state.value = b, this.updateContext(c);
          }, a.prototype.readToken_dot = function() {
            var a = this.input.charCodeAt(this.state.pos + 1);
            if (a >= 48 && a <= 57)
              return this.readNumber(!0);
            var b = this.input.charCodeAt(this.state.pos + 2);
            return 46 === a && 46 === b ? (this.state.pos += 3, this.finishToken(h.types.ellipsis)) : (++this.state.pos, this.finishToken(h.types.dot));
          }, a.prototype.readToken_slash = function() {
            if (this.state.exprAllowed)
              return ++this.state.pos, this.readRegexp();
            var a = this.input.charCodeAt(this.state.pos + 1);
            return 61 === a ? this.finishOp(h.types.assign, 2) : this.finishOp(h.types.slash, 1);
          }, a.prototype.readToken_mult_modulo = function(a) {
            var b = 42 === a ? h.types.star : h.types.modulo,
                c = 1,
                d = this.input.charCodeAt(this.state.pos + 1);
            return 42 === d && (c++, d = this.input.charCodeAt(this.state.pos + 2), b = h.types.exponent), 61 === d && (c++, b = h.types.assign), this.finishOp(b, c);
          }, a.prototype.readToken_pipe_amp = function(a) {
            var b = this.input.charCodeAt(this.state.pos + 1);
            return b === a ? this.finishOp(124 === a ? h.types.logicalOR : h.types.logicalAND, 2) : 61 === b ? this.finishOp(h.types.assign, 2) : 124 === a && 125 === b && this.hasPlugin("flow") ? this.finishOp(h.types.braceBarR, 2) : this.finishOp(124 === a ? h.types.bitwiseOR : h.types.bitwiseAND, 1);
          }, a.prototype.readToken_caret = function() {
            var a = this.input.charCodeAt(this.state.pos + 1);
            return 61 === a ? this.finishOp(h.types.assign, 2) : this.finishOp(h.types.bitwiseXOR, 1);
          }, a.prototype.readToken_plus_min = function(a) {
            var b = this.input.charCodeAt(this.state.pos + 1);
            return b === a ? 45 === b && 62 === this.input.charCodeAt(this.state.pos + 2) && k.lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.pos)) ? (this.skipLineComment(3), this.skipSpace(), this.nextToken()) : this.finishOp(h.types.incDec, 2) : 61 === b ? this.finishOp(h.types.assign, 2) : this.finishOp(h.types.plusMin, 1);
          }, a.prototype.readToken_lt_gt = function(a) {
            var b = this.input.charCodeAt(this.state.pos + 1),
                c = 1;
            return b === a ? (c = 62 === a && 62 === this.input.charCodeAt(this.state.pos + 2) ? 3 : 2, 61 === this.input.charCodeAt(this.state.pos + c) ? this.finishOp(h.types.assign, c + 1) : this.finishOp(h.types.bitShift, c)) : 33 === b && 60 === a && 45 === this.input.charCodeAt(this.state.pos + 2) && 45 === this.input.charCodeAt(this.state.pos + 3) ? (this.inModule && this.unexpected(), this.skipLineComment(4), this.skipSpace(), this.nextToken()) : (61 === b && (c = 2), this.finishOp(h.types.relational, c));
          }, a.prototype.readToken_eq_excl = function(a) {
            var b = this.input.charCodeAt(this.state.pos + 1);
            return 61 === b ? this.finishOp(h.types.equality, 61 === this.input.charCodeAt(this.state.pos + 2) ? 3 : 2) : 61 === a && 62 === b ? (this.state.pos += 2, this.finishToken(h.types.arrow)) : this.finishOp(61 === a ? h.types.eq : h.types.prefix, 1);
          }, a.prototype.getTokenFromCode = function(a) {
            switch (a) {
              case 46:
                return this.readToken_dot();
              case 40:
                return ++this.state.pos, this.finishToken(h.types.parenL);
              case 41:
                return ++this.state.pos, this.finishToken(h.types.parenR);
              case 59:
                return ++this.state.pos, this.finishToken(h.types.semi);
              case 44:
                return ++this.state.pos, this.finishToken(h.types.comma);
              case 91:
                return ++this.state.pos, this.finishToken(h.types.bracketL);
              case 93:
                return ++this.state.pos, this.finishToken(h.types.bracketR);
              case 123:
                return this.hasPlugin("flow") && 124 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(h.types.braceBarL, 2) : (++this.state.pos, this.finishToken(h.types.braceL));
              case 125:
                return ++this.state.pos, this.finishToken(h.types.braceR);
              case 58:
                return this.hasPlugin("functionBind") && 58 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(h.types.doubleColon, 2) : (++this.state.pos, this.finishToken(h.types.colon));
              case 63:
                return ++this.state.pos, this.finishToken(h.types.question);
              case 64:
                return ++this.state.pos, this.finishToken(h.types.at);
              case 96:
                return ++this.state.pos, this.finishToken(h.types.backQuote);
              case 48:
                var b = this.input.charCodeAt(this.state.pos + 1);
                if (120 === b || 88 === b)
                  return this.readRadixNumber(16);
                if (111 === b || 79 === b)
                  return this.readRadixNumber(8);
                if (98 === b || 66 === b)
                  return this.readRadixNumber(2);
              case 49:
              case 50:
              case 51:
              case 52:
              case 53:
              case 54:
              case 55:
              case 56:
              case 57:
                return this.readNumber(!1);
              case 34:
              case 39:
                return this.readString(a);
              case 47:
                return this.readToken_slash();
              case 37:
              case 42:
                return this.readToken_mult_modulo(a);
              case 124:
              case 38:
                return this.readToken_pipe_amp(a);
              case 94:
                return this.readToken_caret();
              case 43:
              case 45:
                return this.readToken_plus_min(a);
              case 60:
              case 62:
                return this.readToken_lt_gt(a);
              case 61:
              case 33:
                return this.readToken_eq_excl(a);
              case 126:
                return this.finishOp(h.types.prefix, 1);
            }
            this.raise(this.state.pos, "Unexpected character '" + f(a) + "'");
          }, a.prototype.finishOp = function(a, b) {
            var c = this.input.slice(this.state.pos, this.state.pos + b);
            return this.state.pos += b, this.finishToken(a, c);
          }, a.prototype.readRegexp = function() {
            for (var a = void 0,
                b = void 0,
                c = this.state.pos; ; ) {
              this.state.pos >= this.input.length && this.raise(c, "Unterminated regular expression");
              var d = this.input.charAt(this.state.pos);
              if (k.lineBreak.test(d) && this.raise(c, "Unterminated regular expression"), a)
                a = !1;
              else {
                if ("[" === d)
                  b = !0;
                else if ("]" === d && b)
                  b = !1;
                else if ("/" === d && !b)
                  break;
                a = "\\" === d;
              }
              ++this.state.pos;
            }
            var e = this.input.slice(c, this.state.pos);
            ++this.state.pos;
            var f = this.readWord1();
            if (f) {
              var g = /^[gmsiyu]*$/;
              g.test(f) || this.raise(c, "Invalid regular expression flag");
            }
            return this.finishToken(h.types.regexp, {
              pattern: e,
              flags: f
            });
          }, a.prototype.readInt = function(a, b) {
            for (var c = this.state.pos,
                d = 0,
                e = 0,
                f = null == b ? 1 / 0 : b; e < f; ++e) {
              var g = this.input.charCodeAt(this.state.pos),
                  h = void 0;
              if (h = g >= 97 ? g - 97 + 10 : g >= 65 ? g - 65 + 10 : g >= 48 && g <= 57 ? g - 48 : 1 / 0, h >= a)
                break;
              ++this.state.pos, d = d * a + h;
            }
            return this.state.pos === c || null != b && this.state.pos - c !== b ? null : d;
          }, a.prototype.readRadixNumber = function(a) {
            this.state.pos += 2;
            var b = this.readInt(a);
            return null == b && this.raise(this.state.start + 2, "Expected number in radix " + a), (0, g.isIdentifierStart)(this.fullCharCodeAtPos()) && this.raise(this.state.pos, "Identifier directly after number"), this.finishToken(h.types.num, b);
          }, a.prototype.readNumber = function(a) {
            var b = this.state.pos,
                c = !1,
                d = 48 === this.input.charCodeAt(this.state.pos);
            a || null !== this.readInt(10) || this.raise(b, "Invalid number");
            var e = this.input.charCodeAt(this.state.pos);
            46 === e && (++this.state.pos, this.readInt(10), c = !0, e = this.input.charCodeAt(this.state.pos)), 69 !== e && 101 !== e || (e = this.input.charCodeAt(++this.state.pos), 43 !== e && 45 !== e || ++this.state.pos, null === this.readInt(10) && this.raise(b, "Invalid number"), c = !0), (0, g.isIdentifierStart)(this.fullCharCodeAtPos()) && this.raise(this.state.pos, "Identifier directly after number");
            var f = this.input.slice(b, this.state.pos),
                i = void 0;
            return c ? i = parseFloat(f) : d && 1 !== f.length ? /[89]/.test(f) || this.state.strict ? this.raise(b, "Invalid number") : i = parseInt(f, 8) : i = parseInt(f, 10), this.finishToken(h.types.num, i);
          }, a.prototype.readCodePoint = function() {
            var a = this.input.charCodeAt(this.state.pos),
                b = void 0;
            if (123 === a) {
              var c = ++this.state.pos;
              b = this.readHexChar(this.input.indexOf("}", this.state.pos) - this.state.pos), ++this.state.pos, b > 1114111 && this.raise(c, "Code point out of bounds");
            } else
              b = this.readHexChar(4);
            return b;
          }, a.prototype.readString = function(a) {
            for (var b = "",
                c = ++this.state.pos; ; ) {
              this.state.pos >= this.input.length && this.raise(this.state.start, "Unterminated string constant");
              var d = this.input.charCodeAt(this.state.pos);
              if (d === a)
                break;
              92 === d ? (b += this.input.slice(c, this.state.pos), b += this.readEscapedChar(!1), c = this.state.pos) : ((0, k.isNewLine)(d) && this.raise(this.state.start, "Unterminated string constant"), ++this.state.pos);
            }
            return b += this.input.slice(c, this.state.pos++), this.finishToken(h.types.string, b);
          }, a.prototype.readTmplToken = function() {
            for (var a = "",
                b = this.state.pos; ; ) {
              this.state.pos >= this.input.length && this.raise(this.state.start, "Unterminated template");
              var c = this.input.charCodeAt(this.state.pos);
              if (96 === c || 36 === c && 123 === this.input.charCodeAt(this.state.pos + 1))
                return this.state.pos === this.state.start && this.match(h.types.template) ? 36 === c ? (this.state.pos += 2, this.finishToken(h.types.dollarBraceL)) : (++this.state.pos, this.finishToken(h.types.backQuote)) : (a += this.input.slice(b, this.state.pos), this.finishToken(h.types.template, a));
              if (92 === c)
                a += this.input.slice(b, this.state.pos), a += this.readEscapedChar(!0), b = this.state.pos;
              else if ((0, k.isNewLine)(c)) {
                switch (a += this.input.slice(b, this.state.pos), ++this.state.pos, c) {
                  case 13:
                    10 === this.input.charCodeAt(this.state.pos) && ++this.state.pos;
                  case 10:
                    a += "\n";
                    break;
                  default:
                    a += String.fromCharCode(c);
                }
                ++this.state.curLine, this.state.lineStart = this.state.pos, b = this.state.pos;
              } else
                ++this.state.pos;
            }
          }, a.prototype.readEscapedChar = function(a) {
            var b = this.input.charCodeAt(++this.state.pos);
            switch (++this.state.pos, b) {
              case 110:
                return "\n";
              case 114:
                return "\r";
              case 120:
                return String.fromCharCode(this.readHexChar(2));
              case 117:
                return f(this.readCodePoint());
              case 116:
                return "\t";
              case 98:
                return "\b";
              case 118:
                return "\v";
              case 102:
                return "\f";
              case 13:
                10 === this.input.charCodeAt(this.state.pos) && ++this.state.pos;
              case 10:
                return this.state.lineStart = this.state.pos, ++this.state.curLine, "";
              default:
                if (b >= 48 && b <= 55) {
                  var c = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/)[0],
                      d = parseInt(c, 8);
                  return d > 255 && (c = c.slice(0, -1), d = parseInt(c, 8)), d > 0 && (this.state.containsOctal || (this.state.containsOctal = !0, this.state.octalPosition = this.state.pos - 2), (this.state.strict || a) && this.raise(this.state.pos - 2, "Octal literal in strict mode")), this.state.pos += c.length - 1, String.fromCharCode(d);
                }
                return String.fromCharCode(b);
            }
          }, a.prototype.readHexChar = function(a) {
            var b = this.state.pos,
                c = this.readInt(16, a);
            return null === c && this.raise(b, "Bad character escape sequence"), c;
          }, a.prototype.readWord1 = function() {
            this.state.containsEsc = !1;
            for (var a = "",
                b = !0,
                c = this.state.pos; this.state.pos < this.input.length; ) {
              var d = this.fullCharCodeAtPos();
              if ((0, g.isIdentifierChar)(d))
                this.state.pos += d <= 65535 ? 1 : 2;
              else {
                if (92 !== d)
                  break;
                this.state.containsEsc = !0, a += this.input.slice(c, this.state.pos);
                var e = this.state.pos;
                117 !== this.input.charCodeAt(++this.state.pos) && this.raise(this.state.pos, "Expecting Unicode escape sequence \\uXXXX"), ++this.state.pos;
                var h = this.readCodePoint();
                (b ? g.isIdentifierStart : g.isIdentifierChar)(h, !0) || this.raise(e, "Invalid Unicode escape"), a += f(h), c = this.state.pos;
              }
              b = !1;
            }
            return a + this.input.slice(c, this.state.pos);
          }, a.prototype.readWord = function() {
            var a = this.readWord1(),
                b = h.types.name;
            return !this.state.containsEsc && this.isKeyword(a) && (b = h.keywords[a]), this.finishToken(b, a);
          }, a.prototype.braceIsBlock = function(a) {
            if (a === h.types.colon) {
              var b = this.curContext();
              if (b === i.types.braceStatement || b === i.types.braceExpression)
                return !b.isExpr;
            }
            return a === h.types._return ? k.lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start)) : a === h.types._else || a === h.types.semi || a === h.types.eof || a === h.types.parenR || (a === h.types.braceL ? this.curContext() === i.types.braceStatement : !this.state.exprAllowed);
          }, a.prototype.updateContext = function(a) {
            var b = void 0,
                c = this.state.type;
            c.keyword && a === h.types.dot ? this.state.exprAllowed = !1 : (b = c.updateContext) ? b.call(this, a) : this.state.exprAllowed = c.beforeExpr;
          }, a;
        }();
    return b.default = o, c.exports;
  }), a.registerDynamic("17a", ["17e", "187", "189"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e(a, b) {
      if (!(a instanceof b))
        throw new TypeError("Cannot call a class as a function");
    }
    function f(a, b) {
      if (!a)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return !b || "object" != typeof b && "function" != typeof b ? a : b;
    }
    function g(a, b) {
      if ("function" != typeof b && null !== b)
        throw new TypeError("Super expression must either be null or a function, not " + typeof b);
      a.prototype = Object.create(b && b.prototype, {constructor: {
          value: a,
          enumerable: !1,
          writable: !0,
          configurable: !0
        }}), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b);
    }
    this || self;
    b.__esModule = !0, b.plugins = void 0;
    var h = a("17e"),
        i = a("187"),
        j = a("189"),
        k = d(j),
        l = (b.plugins = {}, function(a) {
          function c(b, d) {
            e(this, c), b = (0, i.getOptions)(b);
            var g = f(this, a.call(this, b, d));
            return g.options = b, g.inModule = "module" === g.options.sourceType, g.isReservedWord = h.reservedWords[6], g.input = d, g.plugins = g.loadPlugins(g.options.plugins), g.filename = b.sourceFilename, 0 === g.state.pos && "#" === g.input[0] && "!" === g.input[1] && g.skipLineComment(2), g;
          }
          return g(c, a), c.prototype.hasPlugin = function(a) {
            return !(!this.plugins["*"] && !this.plugins[a]);
          }, c.prototype.extend = function(a, b) {
            this[a] = b(this[a]);
          }, c.prototype.loadPlugins = function(a) {
            var c = {};
            a.indexOf("flow") >= 0 && (a = a.filter(function(a) {
              return "flow" !== a;
            }), a.push("flow"));
            for (var d = a,
                e = Array.isArray(d),
                f = 0,
                d = e ? d : d[Symbol.iterator](); ; ) {
              var g;
              if (e) {
                if (f >= d.length)
                  break;
                g = d[f++];
              } else {
                if (f = d.next(), f.done)
                  break;
                g = f.value;
              }
              var h = g;
              if (!c[h]) {
                c[h] = !0;
                var i = b.plugins[h];
                i && i(this);
              }
            }
            return c;
          }, c.prototype.parse = function() {
            var a = this.startNode(),
                b = this.startNode();
            return this.nextToken(), this.parseTopLevel(a, b);
          }, c;
        }(k.default));
    return b.default = l, c.exports;
  }), a.registerDynamic("17e", [], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a = a.split(" "), function(b) {
        return a.indexOf(b) >= 0;
      };
    }
    function e(a, b) {
      for (var c = 65536,
          d = 0; d < b.length; d += 2) {
        if (c += b[d], c > a)
          return !1;
        if (c += b[d + 1], c >= a)
          return !0;
      }
    }
    function f(a) {
      return a < 65 ? 36 === a : a < 91 || (a < 97 ? 95 === a : a < 123 || (a <= 65535 ? a >= 170 && j.test(String.fromCharCode(a)) : e(a, l)));
    }
    function g(a) {
      return a < 48 ? 36 === a : a < 58 || !(a < 65) && (a < 91 || (a < 97 ? 95 === a : a < 123 || (a <= 65535 ? a >= 170 && k.test(String.fromCharCode(a)) : e(a, l) || e(a, m))));
    }
    this || self;
    b.__esModule = !0, b.isIdentifierStart = f, b.isIdentifierChar = g;
    var h = (b.reservedWords = {
      6: d("enum await"),
      strict: d("implements interface let package private protected public static yield"),
      strictBind: d("eval arguments")
    }, b.isKeyword = d("break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this let const class extends export import yield super"), "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿕ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞮꞰ-ꞷꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ"),
        i = "‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࣔ-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఃా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഁ-ഃാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ංඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ູົຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭ᳲ-᳴᳸᳹᷀-᷵᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱꤀-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿",
        j = new RegExp("[" + h + "]"),
        k = new RegExp("[" + h + i + "]");
    h = i = null;
    var l = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 17, 26, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 26, 45, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 785, 52, 76, 44, 33, 24, 27, 35, 42, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 54, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 86, 25, 391, 63, 32, 0, 449, 56, 264, 8, 2, 36, 18, 0, 50, 29, 881, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 881, 68, 12, 0, 67, 12, 65, 0, 32, 6124, 20, 754, 9486, 1, 3071, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 4149, 196, 60, 67, 1213, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 10591, 541],
        m = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 1306, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 52, 0, 13, 2, 49, 13, 10, 2, 4, 9, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 57, 0, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 87, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 423, 9, 838, 7, 2, 7, 17, 9, 57, 21, 2, 13, 19882, 9, 135, 4, 60, 6, 26, 9, 1016, 45, 17, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 2214, 6, 110, 6, 6, 9, 792487, 239];
    return c.exports;
  }), a.registerDynamic("17b", [], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return 10 === a || 13 === a || 8232 === a || 8233 === a;
    }
    this || self;
    b.__esModule = !0, b.isNewLine = d;
    var e = b.lineBreak = /\r\n?|\n|\u2028|\u2029/;
    b.lineBreakG = new RegExp(e.source, "g"), b.nonASCIIwhitespace = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/;
    return c.exports;
  }), a.registerDynamic("18a", ["186", "179", "185", "17a", "17e", "17b"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e(a) {
      return "JSXIdentifier" === a.type ? a.name : "JSXNamespacedName" === a.type ? a.namespace.name + ":" + a.name.name : "JSXMemberExpression" === a.type ? e(a.object) + "." + e(a.property) : void 0;
    }
    this || self;
    b.__esModule = !0, b.default = function(a) {
      a.extend("parseExprAtom", function(a) {
        return function(b) {
          if (this.match(h.types.jsxText)) {
            var c = this.parseLiteral(this.state.value, "JSXText");
            return c.extra = null, c;
          }
          return this.match(h.types.jsxTagStart) ? this.jsxParseElement() : a.call(this, b);
        };
      }), a.extend("readToken", function(a) {
        return function(b) {
          var c = this.curContext();
          if (c === i.types.j_expr)
            return this.jsxReadToken();
          if (c === i.types.j_oTag || c === i.types.j_cTag) {
            if ((0, l.isIdentifierStart)(b))
              return this.jsxReadWord();
            if (62 === b)
              return ++this.state.pos, this.finishToken(h.types.jsxTagEnd);
            if ((34 === b || 39 === b) && c === i.types.j_oTag)
              return this.jsxReadString(b);
          }
          return 60 === b && this.state.exprAllowed ? (++this.state.pos, this.finishToken(h.types.jsxTagStart)) : a.call(this, b);
        };
      }), a.extend("updateContext", function(a) {
        return function(b) {
          if (this.match(h.types.braceL)) {
            var c = this.curContext();
            c === i.types.j_oTag ? this.state.context.push(i.types.braceExpression) : c === i.types.j_expr ? this.state.context.push(i.types.templateQuasi) : a.call(this, b), this.state.exprAllowed = !0;
          } else {
            if (!this.match(h.types.slash) || b !== h.types.jsxTagStart)
              return a.call(this, b);
            this.state.context.length -= 2, this.state.context.push(i.types.j_cTag), this.state.exprAllowed = !1;
          }
        };
      });
    };
    var f = a("186"),
        g = d(f),
        h = a("179"),
        i = a("185"),
        j = a("17a"),
        k = d(j),
        l = a("17e"),
        m = a("17b"),
        n = /^[\da-fA-F]+$/,
        o = /^\d+$/;
    i.types.j_oTag = new i.TokContext("<tag", !1), i.types.j_cTag = new i.TokContext("</tag", !1), i.types.j_expr = new i.TokContext("<tag>...</tag>", !0, !0), h.types.jsxName = new h.TokenType("jsxName"), h.types.jsxText = new h.TokenType("jsxText", {beforeExpr: !0}), h.types.jsxTagStart = new h.TokenType("jsxTagStart", {startsExpr: !0}), h.types.jsxTagEnd = new h.TokenType("jsxTagEnd"), h.types.jsxTagStart.updateContext = function() {
      this.state.context.push(i.types.j_expr), this.state.context.push(i.types.j_oTag), this.state.exprAllowed = !1;
    }, h.types.jsxTagEnd.updateContext = function(a) {
      var b = this.state.context.pop();
      b === i.types.j_oTag && a === h.types.slash || b === i.types.j_cTag ? (this.state.context.pop(), this.state.exprAllowed = this.curContext() === i.types.j_expr) : this.state.exprAllowed = !0;
    };
    var p = k.default.prototype;
    return p.jsxReadToken = function() {
      for (var a = "",
          b = this.state.pos; ; ) {
        this.state.pos >= this.input.length && this.raise(this.state.start, "Unterminated JSX contents");
        var c = this.input.charCodeAt(this.state.pos);
        switch (c) {
          case 60:
          case 123:
            return this.state.pos === this.state.start ? 60 === c && this.state.exprAllowed ? (++this.state.pos, this.finishToken(h.types.jsxTagStart)) : this.getTokenFromCode(c) : (a += this.input.slice(b, this.state.pos), this.finishToken(h.types.jsxText, a));
          case 38:
            a += this.input.slice(b, this.state.pos), a += this.jsxReadEntity(), b = this.state.pos;
            break;
          default:
            (0, m.isNewLine)(c) ? (a += this.input.slice(b, this.state.pos), a += this.jsxReadNewLine(!0), b = this.state.pos) : ++this.state.pos;
        }
      }
    }, p.jsxReadNewLine = function(a) {
      var b = this.input.charCodeAt(this.state.pos),
          c = void 0;
      return ++this.state.pos, 13 === b && 10 === this.input.charCodeAt(this.state.pos) ? (++this.state.pos, c = a ? "\n" : "\r\n") : c = String.fromCharCode(b), ++this.state.curLine, this.state.lineStart = this.state.pos, c;
    }, p.jsxReadString = function(a) {
      for (var b = "",
          c = ++this.state.pos; ; ) {
        this.state.pos >= this.input.length && this.raise(this.state.start, "Unterminated string constant");
        var d = this.input.charCodeAt(this.state.pos);
        if (d === a)
          break;
        38 === d ? (b += this.input.slice(c, this.state.pos), b += this.jsxReadEntity(), c = this.state.pos) : (0, m.isNewLine)(d) ? (b += this.input.slice(c, this.state.pos), b += this.jsxReadNewLine(!1), c = this.state.pos) : ++this.state.pos;
      }
      return b += this.input.slice(c, this.state.pos++), this.finishToken(h.types.string, b);
    }, p.jsxReadEntity = function() {
      for (var a = "",
          b = 0,
          c = void 0,
          d = this.input[this.state.pos],
          e = ++this.state.pos; this.state.pos < this.input.length && b++ < 10; ) {
        if (d = this.input[this.state.pos++], ";" === d) {
          "#" === a[0] ? "x" === a[1] ? (a = a.substr(2), n.test(a) && (c = String.fromCharCode(parseInt(a, 16)))) : (a = a.substr(1), o.test(a) && (c = String.fromCharCode(parseInt(a, 10)))) : c = g.default[a];
          break;
        }
        a += d;
      }
      return c ? c : (this.state.pos = e, "&");
    }, p.jsxReadWord = function() {
      var a = void 0,
          b = this.state.pos;
      do
        a = this.input.charCodeAt(++this.state.pos);
 while ((0, l.isIdentifierChar)(a) || 45 === a);
      return this.finishToken(h.types.jsxName, this.input.slice(b, this.state.pos));
    }, p.jsxParseIdentifier = function() {
      var a = this.startNode();
      return this.match(h.types.jsxName) ? a.name = this.state.value : this.state.type.keyword ? a.name = this.state.type.keyword : this.unexpected(), this.next(), this.finishNode(a, "JSXIdentifier");
    }, p.jsxParseNamespacedName = function() {
      var a = this.state.start,
          b = this.state.startLoc,
          c = this.jsxParseIdentifier();
      if (!this.eat(h.types.colon))
        return c;
      var d = this.startNodeAt(a, b);
      return d.namespace = c, d.name = this.jsxParseIdentifier(), this.finishNode(d, "JSXNamespacedName");
    }, p.jsxParseElementName = function() {
      for (var a = this.state.start,
          b = this.state.startLoc,
          c = this.jsxParseNamespacedName(); this.eat(h.types.dot); ) {
        var d = this.startNodeAt(a, b);
        d.object = c, d.property = this.jsxParseIdentifier(), c = this.finishNode(d, "JSXMemberExpression");
      }
      return c;
    }, p.jsxParseAttributeValue = function() {
      var a = void 0;
      switch (this.state.type) {
        case h.types.braceL:
          if (a = this.jsxParseExpressionContainer(), "JSXEmptyExpression" !== a.expression.type)
            return a;
          this.raise(a.start, "JSX attributes must only be assigned a non-empty expression");
        case h.types.jsxTagStart:
        case h.types.string:
          return a = this.parseExprAtom(), a.extra = null, a;
        default:
          this.raise(this.state.start, "JSX value should be either an expression or a quoted JSX text");
      }
    }, p.jsxParseEmptyExpression = function() {
      var a = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);
      return this.finishNodeAt(a, "JSXEmptyExpression", this.start, this.startLoc);
    }, p.jsxParseSpreadChild = function() {
      var a = this.startNode();
      return this.expect(h.types.braceL), this.expect(h.types.ellipsis), a.expression = this.parseExpression(), this.expect(h.types.braceR), this.finishNode(a, "JSXSpreadChild");
    }, p.jsxParseExpressionContainer = function() {
      var a = this.startNode();
      return this.next(), this.match(h.types.braceR) ? a.expression = this.jsxParseEmptyExpression() : a.expression = this.parseExpression(), this.expect(h.types.braceR), this.finishNode(a, "JSXExpressionContainer");
    }, p.jsxParseAttribute = function() {
      var a = this.startNode();
      return this.eat(h.types.braceL) ? (this.expect(h.types.ellipsis), a.argument = this.parseMaybeAssign(), this.expect(h.types.braceR), this.finishNode(a, "JSXSpreadAttribute")) : (a.name = this.jsxParseNamespacedName(), a.value = this.eat(h.types.eq) ? this.jsxParseAttributeValue() : null, this.finishNode(a, "JSXAttribute"));
    }, p.jsxParseOpeningElementAt = function(a, b) {
      var c = this.startNodeAt(a, b);
      for (c.attributes = [], c.name = this.jsxParseElementName(); !this.match(h.types.slash) && !this.match(h.types.jsxTagEnd); )
        c.attributes.push(this.jsxParseAttribute());
      return c.selfClosing = this.eat(h.types.slash), this.expect(h.types.jsxTagEnd), this.finishNode(c, "JSXOpeningElement");
    }, p.jsxParseClosingElementAt = function(a, b) {
      var c = this.startNodeAt(a, b);
      return c.name = this.jsxParseElementName(), this.expect(h.types.jsxTagEnd), this.finishNode(c, "JSXClosingElement");
    }, p.jsxParseElementAt = function(a, b) {
      var c = this.startNodeAt(a, b),
          d = [],
          f = this.jsxParseOpeningElementAt(a, b),
          g = null;
      if (!f.selfClosing) {
        a: for (; ; )
          switch (this.state.type) {
            case h.types.jsxTagStart:
              if (a = this.state.start, b = this.state.startLoc, this.next(), this.eat(h.types.slash)) {
                g = this.jsxParseClosingElementAt(a, b);
                break a;
              }
              d.push(this.jsxParseElementAt(a, b));
              break;
            case h.types.jsxText:
              d.push(this.parseExprAtom());
              break;
            case h.types.braceL:
              this.lookahead().type === h.types.ellipsis ? d.push(this.jsxParseSpreadChild()) : d.push(this.jsxParseExpressionContainer());
              break;
            default:
              this.unexpected();
          }
        e(g.name) !== e(f.name) && this.raise(g.start, "Expected corresponding JSX closing tag for <" + e(f.name) + ">");
      }
      return c.openingElement = f, c.closingElement = g, c.children = d, this.match(h.types.relational) && "<" === this.state.value && this.raise(this.state.start, "Adjacent JSX elements must be wrapped in an enclosing tag"), this.finishNode(c, "JSXElement");
    }, p.jsxParseElement = function() {
      var a = this.state.start,
          b = this.state.startLoc;
      return this.next(), this.jsxParseElementAt(a, b);
    }, c.exports;
  }), a.registerDynamic("bb", ["17a", "178", "17c", "17d", "17f", "180", "182", "183", "179", "189", "185", "184", "18a"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e(a, b) {
      return new g.default(b, a).parse();
    }
    this || self;
    b.__esModule = !0, b.tokTypes = void 0, b.parse = e;
    var f = a("17a"),
        g = d(f);
    a("178"), a("17c"), a("17d"), a("17f"), a("180"), a("182"), a("183");
    var h = a("179");
    a("189"), a("185");
    var i = a("184"),
        j = d(i),
        k = a("18a"),
        l = d(k);
    return f.plugins.flow = j.default, f.plugins.jsx = l.default, b.tokTypes = h.types, c.exports;
  }), a.registerDynamic("7", ["b7", "110", "b5", "ef", "b4", "bb", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a, b) {
      a = (0, j.default)(a);
      var c = a,
          d = c.program;
      return b.length && (0, p.default)(a, w, null, b), d.body.length > 1 ? d.body : d.body[0];
    }
    this || self;
    b.__esModule = !0;
    var g = a("b7"),
        h = e(g);
    b.default = function(a, b) {
      var c = void 0;
      try {
        throw new Error;
      } catch (a) {
        a.stack && (c = a.stack.split("\n").slice(1).join("\n"));
      }
      b = (0, l.default)({
        allowReturnOutsideFunction: !0,
        allowSuperOutsideMethod: !0,
        preserveComments: !1
      }, b);
      var d = function() {
        var e = void 0;
        try {
          e = r.parse(a, b), e = p.default.removeProperties(e, {preserveComments: b.preserveComments}), p.default.cheap(e, function(a) {
            a[u] = !0;
          });
        } catch (a) {
          throw a.stack = a.stack + "from\n" + c, a;
        }
        return d = function() {
          return e;
        }, e;
      };
      return function() {
        for (var a = arguments.length,
            b = Array(a),
            c = 0; c < a; c++)
          b[c] = arguments[c];
        return f(d(), b);
      };
    };
    var i = a("110"),
        j = e(i),
        k = a("b5"),
        l = e(k),
        m = a("ef"),
        n = e(m),
        o = a("b4"),
        p = e(o),
        q = a("bb"),
        r = d(q),
        s = a("9"),
        t = d(s),
        u = "_fromTemplate",
        v = (0, h.default)(),
        w = {
          noScope: !0,
          enter: function(a, b) {
            var c = a.node;
            if (c[v])
              return a.skip();
            t.isExpressionStatement(c) && (c = c.expression);
            var d = void 0;
            if (t.isIdentifier(c) && c[u])
              if ((0, n.default)(b[0], c.name))
                d = b[0][c.name];
              else if ("$" === c.name[0]) {
                var e = +c.name.slice(1);
                b[e] && (d = b[e]);
              }
            null === d && a.remove(), d && (d[v] = !0, a.replaceInline(d));
          },
          exit: function(a) {
            var b = a.node;
            b.loc || p.default.clearNode(b);
          }
        };
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("18b", ["b7", "b8", "17", "b4", "10d", "9", "161", "10f", "7"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      return u.isLoop(a.parent) || u.isCatchClause(a.parent);
    }
    function g(a) {
      return !!u.isVariableDeclaration(a) && (!!a[u.BLOCK_SCOPED_SYMBOL] || ("let" === a.kind || "const" === a.kind));
    }
    function h(a, b, c, d) {
      var e = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
      if (b || (b = a.node), !u.isFor(c))
        for (var f = 0; f < b.declarations.length; f++) {
          var g = b.declarations[f];
          g.init = g.init || d.buildUndefinedNode();
        }
      if (b[u.BLOCK_SCOPED_SYMBOL] = !0, b.kind = "var", e) {
        var h = d.getFunctionParent(),
            i = a.getBindingIdentifiers();
        for (var j in i) {
          var k = d.getOwnBinding(j);
          k && (k.kind = "var"), d.moveBindingTo(j, h);
        }
      }
    }
    function i(a) {
      return u.isVariableDeclaration(a, {kind: "var"}) && !g(a);
    }
    function j(a) {
      return u.isBreakStatement(a) ? "break" : u.isContinueStatement(a) ? "continue" : void 0;
    }
    this || self;
    b.__esModule = !0;
    var k = a("b7"),
        l = e(k),
        m = a("b8"),
        n = e(m),
        o = a("17"),
        p = e(o);
    b.default = function() {
      return {visitor: {
          VariableDeclaration: function(a, b) {
            var c = a.node,
                d = a.parent,
                e = a.scope;
            if (g(c) && (h(a, null, d, e, !0), c._tdzThis)) {
              for (var f = [c],
                  i = 0; i < c.declarations.length; i++) {
                var j = c.declarations[i];
                if (j.init) {
                  var k = u.assignmentExpression("=", j.id, j.init);
                  k._ignoreBlockScopingTDZ = !0, f.push(u.expressionStatement(k));
                }
                j.init = b.addHelper("temporalUndefined");
              }
              c._blockHoist = 2, a.isCompletionRecord() && f.push(u.expressionStatement(e.buildUndefinedNode())), a.replaceWithMultiple(f);
            }
          },
          Loop: function(a, b) {
            var c = a.node,
                d = a.parent,
                e = a.scope;
            u.ensureBlock(c);
            var f = new I(a, a.get("body"), d, e, b),
                g = f.run();
            g && a.replaceWith(g);
          },
          CatchClause: function(a, b) {
            var c = a.parent,
                d = a.scope,
                e = new I(null, a.get("body"), c, d, b);
            e.run();
          },
          "BlockStatement|SwitchStatement|Program": function(a, b) {
            if (!f(a)) {
              var c = new I(null, a, a.parent, a.scope, b);
              c.run();
            }
          }
        }};
    };
    var q = a("b4"),
        r = e(q),
        s = a("10d"),
        t = a("9"),
        u = d(t),
        v = a("161"),
        w = e(v),
        x = a("10f"),
        y = e(x),
        z = a("7"),
        A = e(z),
        B = (0, A.default)('\n  if (typeof RETURN === "object") return RETURN.v;\n'),
        C = r.default.visitors.merge([{Function: function(a, b) {
            return a.traverse(D, b), a.skip();
          }}, s.visitor]),
        D = r.default.visitors.merge([{ReferencedIdentifier: function(a, b) {
            var c = b.letReferences[a.node.name];
            if (c) {
              var d = a.scope.getBindingIdentifier(a.node.name);
              d && d !== c || (b.closurify = !0);
            }
          }}, s.visitor]),
        E = {enter: function(a, b) {
            var c = a.node,
                d = a.parent;
            if (a.isForStatement()) {
              if (i(c.init, c)) {
                var e = b.pushDeclar(c.init);
                1 === e.length ? c.init = e[0] : c.init = u.sequenceExpression(e);
              }
            } else if (a.isFor())
              i(c.left, c) && (b.pushDeclar(c.left), c.left = c.left.declarations[0].id);
            else if (i(c, d))
              a.replaceWithMultiple(b.pushDeclar(c).map(function(a) {
                return u.expressionStatement(a);
              }));
            else if (a.isFunction())
              return a.skip();
          }},
        F = {LabeledStatement: function(a, b) {
            var c = a.node;
            b.innerLabels.push(c.label.name);
          }},
        G = {enter: function(a, b) {
            if (a.isAssignmentExpression() || a.isUpdateExpression()) {
              var c = a.getBindingIdentifiers();
              for (var d in c)
                b.outsideReferences[d] === a.scope.getBindingIdentifier(d) && (b.reassignments[d] = !0);
            }
          }},
        H = {
          Loop: function(a, b) {
            var c = b.ignoreLabeless;
            b.ignoreLabeless = !0, a.traverse(H, b), b.ignoreLabeless = c, a.skip();
          },
          Function: function(a) {
            a.skip();
          },
          SwitchCase: function(a, b) {
            var c = b.inSwitchCase;
            b.inSwitchCase = !0, a.traverse(H, b), b.inSwitchCase = c, a.skip();
          },
          "BreakStatement|ContinueStatement|ReturnStatement": function(a, b) {
            var c = a.node,
                d = a.parent,
                e = a.scope;
            if (!c[this.LOOP_IGNORE]) {
              var f = void 0,
                  g = j(c);
              if (g) {
                if (c.label) {
                  if (b.innerLabels.indexOf(c.label.name) >= 0)
                    return;
                  g = g + "|" + c.label.name;
                } else {
                  if (b.ignoreLabeless)
                    return;
                  if (b.inSwitchCase)
                    return;
                  if (u.isBreakStatement(c) && u.isSwitchCase(d))
                    return;
                }
                b.hasBreakContinue = !0, b.map[g] = c, f = u.stringLiteral(g);
              }
              a.isReturnStatement() && (b.hasReturn = !0, f = u.objectExpression([u.objectProperty(u.identifier("v"), c.argument || e.buildUndefinedNode())])), f && (f = u.returnStatement(f), f[this.LOOP_IGNORE] = !0, a.skip(), a.replaceWith(u.inherits(f, c)));
            }
          }
        },
        I = function() {
          function a(b, c, d, e, f) {
            (0, p.default)(this, a), this.parent = d, this.scope = e, this.file = f, this.blockPath = c, this.block = c.node, this.outsideLetReferences = (0, n.default)(null), this.hasLetReferences = !1, this.letReferences = (0, n.default)(null), this.body = [], b && (this.loopParent = b.parent, this.loopLabel = u.isLabeledStatement(this.loopParent) && this.loopParent.label, this.loopPath = b, this.loop = b.node);
          }
          return a.prototype.run = function() {
            var a = this.block;
            if (!a._letDone) {
              a._letDone = !0;
              var b = this.getLetReferences();
              if (u.isFunction(this.parent) || u.isProgram(this.block))
                return void this.updateScopeInfo();
              if (this.hasLetReferences)
                return b ? this.wrapClosure() : this.remap(), this.updateScopeInfo(), this.loopLabel && !u.isLabeledStatement(this.loopParent) ? u.labeledStatement(this.loopLabel, this.loop) : void 0;
            }
          }, a.prototype.updateScopeInfo = function() {
            var a = this.scope,
                b = a.getFunctionParent(),
                c = this.letReferences;
            for (var d in c) {
              var e = c[d],
                  f = a.getBinding(e.name);
              f && ("let" !== f.kind && "const" !== f.kind || (f.kind = "var", a.moveBindingTo(e.name, b)));
            }
          }, a.prototype.remap = function() {
            var a = this.letReferences,
                b = this.scope;
            for (var c in a) {
              var d = a[c];
              (b.parentHasBinding(c) || b.hasGlobal(c)) && (b.hasOwnBinding(c) && b.rename(d.name), this.blockPath.scope.hasOwnBinding(c) && this.blockPath.scope.rename(d.name));
            }
          }, a.prototype.wrapClosure = function() {
            var a = this.block,
                b = this.outsideLetReferences;
            if (this.loop)
              for (var c in b) {
                var d = b[c];
                (this.scope.hasGlobal(d.name) || this.scope.parentHasBinding(d.name)) && (delete b[d.name], delete this.letReferences[d.name], this.scope.rename(d.name), this.letReferences[d.name] = d, b[d.name] = d);
              }
            this.has = this.checkLoop(), this.hoistVarDeclarations();
            var e = (0, w.default)(b),
                f = (0, w.default)(b),
                g = this.blockPath.isSwitchStatement(),
                h = u.functionExpression(null, e, u.blockStatement(g ? [a] : a.body));
            h.shadow = !0, this.addContinuations(h);
            var i = h;
            this.loop && (i = this.scope.generateUidIdentifier("loop"), this.loopPath.insertBefore(u.variableDeclaration("var", [u.variableDeclarator(i, h)])));
            var j = u.callExpression(i, f),
                k = this.scope.generateUidIdentifier("ret"),
                l = r.default.hasType(h.body, this.scope, "YieldExpression", u.FUNCTION_TYPES);
            l && (h.generator = !0, j = u.yieldExpression(j, !0));
            var m = r.default.hasType(h.body, this.scope, "AwaitExpression", u.FUNCTION_TYPES);
            m && (h.async = !0, j = u.awaitExpression(j)), this.buildClosure(k, j), g ? this.blockPath.replaceWithMultiple(this.body) : a.body = this.body;
          }, a.prototype.buildClosure = function(a, b) {
            var c = this.has;
            c.hasReturn || c.hasBreakContinue ? this.buildHas(a, b) : this.body.push(u.expressionStatement(b));
          }, a.prototype.addContinuations = function(a) {
            var b = {
              reassignments: {},
              outsideReferences: this.outsideLetReferences
            };
            this.scope.traverse(a, G, b);
            for (var c = 0; c < a.params.length; c++) {
              var d = a.params[c];
              if (b.reassignments[d.name]) {
                var e = this.scope.generateUidIdentifier(d.name);
                a.params[c] = e, this.scope.rename(d.name, e.name, a), a.body.body.push(u.expressionStatement(u.assignmentExpression("=", d, e)));
              }
            }
          }, a.prototype.getLetReferences = function() {
            var a = this,
                b = this.block,
                c = [];
            if (this.loop) {
              var d = this.loop.left || this.loop.init;
              g(d) && (c.push(d), (0, y.default)(this.outsideLetReferences, u.getBindingIdentifiers(d)));
            }
            var e = function d(e, f) {
              f = f || e.node, (u.isClassDeclaration(f) || u.isFunctionDeclaration(f) || g(f)) && (g(f) && h(e, f, b, a.scope), c = c.concat(f.declarations || f)), u.isLabeledStatement(f) && d(e.get("body"), f.body);
            };
            if (b.body)
              for (var f = 0; f < b.body.length; f++) {
                var i = this.blockPath.get("body")[f];
                e(i);
              }
            if (b.cases)
              for (var j = 0; j < b.cases.length; j++)
                for (var k = b.cases[j].consequent,
                    l = 0; l < k.length; l++) {
                  var m = this.blockPath.get("cases")[j],
                      n = k[l];
                  e(m, n);
                }
            for (var o = 0; o < c.length; o++) {
              var p = c[o],
                  q = u.getBindingIdentifiers(p);
              (0, y.default)(this.letReferences, q), this.hasLetReferences = !0;
            }
            if (this.hasLetReferences) {
              var r = {
                letReferences: this.letReferences,
                closurify: !1,
                file: this.file
              };
              return this.blockPath.traverse(C, r), r.closurify;
            }
          }, a.prototype.checkLoop = function() {
            var a = {
              hasBreakContinue: !1,
              ignoreLabeless: !1,
              inSwitchCase: !1,
              innerLabels: [],
              hasReturn: !1,
              isLoop: !!this.loop,
              map: {},
              LOOP_IGNORE: (0, l.default)()
            };
            return this.blockPath.traverse(F, a), this.blockPath.traverse(H, a), a;
          }, a.prototype.hoistVarDeclarations = function() {
            this.blockPath.traverse(E, this);
          }, a.prototype.pushDeclar = function(a) {
            var b = [],
                c = u.getBindingIdentifiers(a);
            for (var d in c)
              b.push(u.variableDeclarator(c[d]));
            this.body.push(u.variableDeclaration(a.kind, b));
            for (var e = [],
                f = 0; f < a.declarations.length; f++) {
              var g = a.declarations[f];
              if (g.init) {
                var h = u.assignmentExpression("=", g.id, g.init);
                e.push(u.inherits(h, g));
              }
            }
            return e;
          }, a.prototype.buildHas = function(a, b) {
            var c = this.body;
            c.push(u.variableDeclaration("var", [u.variableDeclarator(a, b)]));
            var d = void 0,
                e = this.has,
                f = [];
            if (e.hasReturn && (d = B({RETURN: a})), e.hasBreakContinue) {
              for (var g in e.map)
                f.push(u.switchCase(u.stringLiteral(g), [e.map[g]]));
              if (e.hasReturn && f.push(u.switchCase(null, [d])), 1 === f.length) {
                var h = f[0];
                c.push(u.ifStatement(u.binaryExpression("===", a, h.test), h.consequent[0]));
              } else {
                if (this.loop)
                  for (var i = 0; i < f.length; i++) {
                    var j = f[i].consequent[0];
                    u.isBreakStatement(j) && !j.label && (j.label = this.loopLabel = this.loopLabel || this.scope.generateUidIdentifier("loop"));
                  }
                c.push(u.switchStatement(a, f));
              }
            } else
              e.hasReturn && c.push(d);
          }, a;
        }();
    return c.exports = b.default, c.exports;
  }), a.registerDynamic("18c", ["d", "9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    var f = (a("3"), this || self, a("d")),
        g = e(f),
        h = a("9"),
        i = d(h),
        j = Object.prototype.hasOwnProperty;
    return b.hoist = function(a) {
      function b(a, b) {
        i.assertVariableDeclaration(a);
        var d = [];
        return a.declarations.forEach(function(a) {
          c[a.id.name] = i.identifier(a.id.name), a.init ? d.push(i.assignmentExpression("=", a.id, a.init)) : b && d.push(a.id);
        }), 0 === d.length ? null : 1 === d.length ? d[0] : i.sequenceExpression(d);
      }
      i.assertFunction(a.node);
      var c = {};
      a.get("body").traverse({
        VariableDeclaration: {exit: function(a) {
            var c = b(a.node, !1);
            null === c ? a.remove() : a.replaceWith(i.expressionStatement(c)), a.skip();
          }},
        ForStatement: function(a) {
          var c = a.node.init;
          i.isVariableDeclaration(c) && a.get("init").replaceWith(b(c, !1));
        },
        ForXStatement: function(a) {
          var c = a.get("left");
          c.isVariableDeclaration() && c.replaceWith(b(c.node, !0));
        },
        FunctionDeclaration: function(a) {
          var b = a.node;
          c[b.id.name] = b.id;
          var d = i.expressionStatement(i.assignmentExpression("=", b.id, i.functionExpression(b.id, b.params, b.body, b.generator, b.expression)));
          a.parentPath.isBlockStatement() ? (a.parentPath.unshiftContainer("body", d), a.remove()) : a.replaceWith(d), a.skip();
        },
        FunctionExpression: function(a) {
          a.skip();
        }
      });
      var d = {};
      a.get("params").forEach(function(a) {
        var b = a.node;
        i.isIdentifier(b) && (d[b.name] = b);
      });
      var e = [];
      return (0, g.default)(c).forEach(function(a) {
        j.call(d, a) || e.push(i.variableDeclarator(c[a], null));
      }), 0 === e.length ? null : i.variableDeclaration("var", e);
    }, c.exports;
  }), a.registerDynamic("18d", ["18e", "9", "86", "18f", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f() {
      p.default.ok(this instanceof f);
    }
    function g(a) {
      f.call(this), r.assertLiteral(a), this.returnLoc = a;
    }
    function h(a, b, c) {
      f.call(this), r.assertLiteral(a), r.assertLiteral(b), c ? r.assertIdentifier(c) : c = null, this.breakLoc = a, this.continueLoc = b, this.label = c;
    }
    function i(a) {
      f.call(this), r.assertLiteral(a), this.breakLoc = a;
    }
    function j(a, b, c) {
      f.call(this), r.assertLiteral(a), b ? p.default.ok(b instanceof k) : b = null, c ? p.default.ok(c instanceof l) : c = null, p.default.ok(b || c), this.firstLoc = a, this.catchEntry = b, this.finallyEntry = c;
    }
    function k(a, b) {
      f.call(this), r.assertLiteral(a), r.assertIdentifier(b), this.firstLoc = a, this.paramId = b;
    }
    function l(a, b) {
      f.call(this), r.assertLiteral(a), r.assertLiteral(b), this.firstLoc = a, this.afterLoc = b;
    }
    function m(a, b) {
      f.call(this), r.assertLiteral(a), r.assertIdentifier(b), this.breakLoc = a, this.label = b;
    }
    function n(b) {
      p.default.ok(this instanceof n);
      var c = a("18f").Emitter;
      p.default.ok(b instanceof c), this.emitter = b, this.entryStack = [new g(b.finalLoc)];
    }
    var o = (a("3"), this || self, a("18e")),
        p = e(o),
        q = a("9"),
        r = d(q),
        s = a("86");
    (0, s.inherits)(g, f), b.FunctionEntry = g, (0, s.inherits)(h, f), b.LoopEntry = h, (0, s.inherits)(i, f), b.SwitchEntry = i, (0, s.inherits)(j, f), b.TryEntry = j, (0, s.inherits)(k, f), b.CatchEntry = k, (0, s.inherits)(l, f), b.FinallyEntry = l, (0, s.inherits)(m, f), b.LabeledEntry = m;
    var t = n.prototype;
    return b.LeapManager = n, t.withEntry = function(a, b) {
      p.default.ok(a instanceof f), this.entryStack.push(a);
      try {
        b.call(this.emitter);
      } finally {
        var c = this.entryStack.pop();
        p.default.strictEqual(c, a);
      }
    }, t._findLeapLocation = function(a, b) {
      for (var c = this.entryStack.length - 1; c >= 0; --c) {
        var d = this.entryStack[c],
            e = d[a];
        if (e)
          if (b) {
            if (d.label && d.label.name === b.name)
              return e;
          } else if (!(d instanceof m))
            return e;
      }
      return null;
    }, t.getBreakLoc = function(a) {
      return this._findLeapLocation("breakLoc", a);
    }, t.getContinueLoc = function(a) {
      return this._findLeapLocation("continueLoc", a);
    }, c.exports;
  }), a.registerDynamic("190", [], !0, function(a, b, c) {
    this || self;
    return c.exports = function(a) {
      return a && "object" == typeof a && "function" == typeof a.copy && "function" == typeof a.fill && "function" == typeof a.readUInt8;
    }, c.exports;
  }), a.registerDynamic("86", ["3", "190"], !0, function(a, b, c) {
    function d(a, c) {
      var d = {
        seen: [],
        stylize: f
      };
      return arguments.length >= 3 && (d.depth = arguments[2]), arguments.length >= 4 && (d.colors = arguments[3]), o(c) ? d.showHidden = c : c && b._extend(d, c), u(d.showHidden) && (d.showHidden = !1), u(d.depth) && (d.depth = 2), u(d.colors) && (d.colors = !1), u(d.customInspect) && (d.customInspect = !0), d.colors && (d.stylize = e), h(d, a, d.depth);
    }
    function e(a, b) {
      var c = d.styles[b];
      return c ? "[" + d.colors[c][0] + "m" + a + "[" + d.colors[c][1] + "m" : a;
    }
    function f(a, b) {
      return a;
    }
    function g(a) {
      var b = {};
      return a.forEach(function(a, c) {
        b[a] = !0;
      }), b;
    }
    function h(a, c, d) {
      if (a.customInspect && c && z(c.inspect) && c.inspect !== b.inspect && (!c.constructor || c.constructor.prototype !== c)) {
        var e = c.inspect(d, a);
        return s(e) || (e = h(a, e, d)), e;
      }
      var f = i(a, c);
      if (f)
        return f;
      var o = Object.keys(c),
          p = g(o);
      if (a.showHidden && (o = Object.getOwnPropertyNames(c)), y(c) && (o.indexOf("message") >= 0 || o.indexOf("description") >= 0))
        return j(c);
      if (0 === o.length) {
        if (z(c)) {
          var q = c.name ? ": " + c.name : "";
          return a.stylize("[Function" + q + "]", "special");
        }
        if (v(c))
          return a.stylize(RegExp.prototype.toString.call(c), "regexp");
        if (x(c))
          return a.stylize(Date.prototype.toString.call(c), "date");
        if (y(c))
          return j(c);
      }
      var r = "",
          t = !1,
          u = ["{", "}"];
      if (n(c) && (t = !0, u = ["[", "]"]), z(c)) {
        var w = c.name ? ": " + c.name : "";
        r = " [Function" + w + "]";
      }
      if (v(c) && (r = " " + RegExp.prototype.toString.call(c)), x(c) && (r = " " + Date.prototype.toUTCString.call(c)), y(c) && (r = " " + j(c)), 0 === o.length && (!t || 0 == c.length))
        return u[0] + r + u[1];
      if (d < 0)
        return v(c) ? a.stylize(RegExp.prototype.toString.call(c), "regexp") : a.stylize("[Object]", "special");
      a.seen.push(c);
      var A;
      return A = t ? k(a, c, d, p, o) : o.map(function(b) {
        return l(a, c, d, p, b, t);
      }), a.seen.pop(), m(A, r, u);
    }
    function i(a, b) {
      if (u(b))
        return a.stylize("undefined", "undefined");
      if (s(b)) {
        var c = "'" + JSON.stringify(b).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
        return a.stylize(c, "string");
      }
      return r(b) ? a.stylize("" + b, "number") : o(b) ? a.stylize("" + b, "boolean") : p(b) ? a.stylize("null", "null") : void 0;
    }
    function j(a) {
      return "[" + Error.prototype.toString.call(a) + "]";
    }
    function k(a, b, c, d, e) {
      for (var f = [],
          g = 0,
          h = b.length; g < h; ++g)
        E(b, String(g)) ? f.push(l(a, b, c, d, String(g), !0)) : f.push("");
      return e.forEach(function(e) {
        e.match(/^\d+$/) || f.push(l(a, b, c, d, e, !0));
      }), f;
    }
    function l(a, b, c, d, e, f) {
      var g,
          i,
          j;
      if (j = Object.getOwnPropertyDescriptor(b, e) || {value: b[e]}, j.get ? i = j.set ? a.stylize("[Getter/Setter]", "special") : a.stylize("[Getter]", "special") : j.set && (i = a.stylize("[Setter]", "special")), E(d, e) || (g = "[" + e + "]"), i || (a.seen.indexOf(j.value) < 0 ? (i = p(c) ? h(a, j.value, null) : h(a, j.value, c - 1), i.indexOf("\n") > -1 && (i = f ? i.split("\n").map(function(a) {
        return "  " + a;
      }).join("\n").substr(2) : "\n" + i.split("\n").map(function(a) {
        return "   " + a;
      }).join("\n"))) : i = a.stylize("[Circular]", "special")), u(g)) {
        if (f && e.match(/^\d+$/))
          return i;
        g = JSON.stringify("" + e), g.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (g = g.substr(1, g.length - 2), g = a.stylize(g, "name")) : (g = g.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), g = a.stylize(g, "string"));
      }
      return g + ": " + i;
    }
    function m(a, b, c) {
      var d = 0,
          e = a.reduce(function(a, b) {
            return d++, b.indexOf("\n") >= 0 && d++, a + b.replace(/\u001b\[\d\d?m/g, "").length + 1;
          }, 0);
      return e > 60 ? c[0] + ("" === b ? "" : b + "\n ") + " " + a.join(",\n  ") + " " + c[1] : c[0] + b + " " + a.join(", ") + " " + c[1];
    }
    function n(a) {
      return Array.isArray(a);
    }
    function o(a) {
      return "boolean" == typeof a;
    }
    function p(a) {
      return null === a;
    }
    function q(a) {
      return null == a;
    }
    function r(a) {
      return "number" == typeof a;
    }
    function s(a) {
      return "string" == typeof a;
    }
    function t(a) {
      return "symbol" == typeof a;
    }
    function u(a) {
      return void 0 === a;
    }
    function v(a) {
      return w(a) && "[object RegExp]" === B(a);
    }
    function w(a) {
      return "object" == typeof a && null !== a;
    }
    function x(a) {
      return w(a) && "[object Date]" === B(a);
    }
    function y(a) {
      return w(a) && ("[object Error]" === B(a) || a instanceof Error);
    }
    function z(a) {
      return "function" == typeof a;
    }
    function A(a) {
      return null === a || "boolean" == typeof a || "number" == typeof a || "string" == typeof a || "symbol" == typeof a || "undefined" == typeof a;
    }
    function B(a) {
      return Object.prototype.toString.call(a);
    }
    function C(a) {
      return a < 10 ? "0" + a.toString(10) : a.toString(10);
    }
    function D() {
      var a = new Date,
          b = [C(a.getHours()), C(a.getMinutes()), C(a.getSeconds())].join(":");
      return [a.getDate(), K[a.getMonth()], b].join(" ");
    }
    function E(a, b) {
      return Object.prototype.hasOwnProperty.call(a, b);
    }
    var F = this || self,
        G = a("3"),
        H = /%[sdj%]/g;
    b.format = function(a) {
      if (!s(a)) {
        for (var b = [],
            c = 0; c < arguments.length; c++)
          b.push(d(arguments[c]));
        return b.join(" ");
      }
      for (var c = 1,
          e = arguments,
          f = e.length,
          g = String(a).replace(H, function(a) {
            if ("%%" === a)
              return "%";
            if (c >= f)
              return a;
            switch (a) {
              case "%s":
                return String(e[c++]);
              case "%d":
                return Number(e[c++]);
              case "%j":
                try {
                  return JSON.stringify(e[c++]);
                } catch (a) {
                  return "[Circular]";
                }
              default:
                return a;
            }
          }),
          h = e[c]; c < f; h = e[++c])
        g += p(h) || !w(h) ? " " + h : " " + d(h);
      return g;
    }, b.deprecate = function(a, c) {
      function d() {
        if (!e) {
          if (G.throwDeprecation)
            throw new Error(c);
          G.traceDeprecation ? console.trace(c) : console.error(c), e = !0;
        }
        return a.apply(this, arguments);
      }
      if (u(F.process))
        return function() {
          return b.deprecate(a, c).apply(this, arguments);
        };
      if (G.noDeprecation === !0)
        return a;
      var e = !1;
      return d;
    };
    var I,
        J = {};
    b.debuglog = function(a) {
      if (u(I) && (I = G.env.NODE_DEBUG || ""), a = a.toUpperCase(), !J[a])
        if (new RegExp("\\b" + a + "\\b", "i").test(I)) {
          var c = G.pid;
          J[a] = function() {
            var d = b.format.apply(b, arguments);
            console.error("%s %d: %s", a, c, d);
          };
        } else
          J[a] = function() {};
      return J[a];
    }, b.inspect = d, d.colors = {
      bold: [1, 22],
      italic: [3, 23],
      underline: [4, 24],
      inverse: [7, 27],
      white: [37, 39],
      grey: [90, 39],
      black: [30, 39],
      blue: [34, 39],
      cyan: [36, 39],
      green: [32, 39],
      magenta: [35, 39],
      red: [31, 39],
      yellow: [33, 39]
    }, d.styles = {
      special: "cyan",
      number: "yellow",
      boolean: "yellow",
      undefined: "grey",
      null: "bold",
      string: "green",
      date: "magenta",
      regexp: "red"
    }, b.isArray = n, b.isBoolean = o, b.isNull = p, b.isNullOrUndefined = q, b.isNumber = r, b.isString = s, b.isSymbol = t, b.isUndefined = u, b.isRegExp = v, b.isObject = w, b.isDate = x, b.isError = y, b.isFunction = z, b.isPrimitive = A, b.isBuffer = a("190");
    var K = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    return b.log = function() {
      console.log("%s - %s", D(), b.format.apply(b, arguments));
    }, "function" == typeof Object.create ? b.inherits = function(a, b) {
      a.super_ = b, a.prototype = Object.create(b.prototype, {constructor: {
          value: a,
          enumerable: !1,
          writable: !0,
          configurable: !0
        }});
    } : b.inherits = function(a, b) {
      a.super_ = b;
      var c = function() {};
      c.prototype = b.prototype, a.prototype = new c, a.prototype.constructor = a;
    }, b._extend = function(a, b) {
      if (!b || !w(b))
        return a;
      for (var c = Object.keys(b),
          d = c.length; d--; )
        a[c[d]] = b[c[d]];
      return a;
    }, c.exports;
  }), a.registerDynamic("18e", ["86"], !0, function(a, b, c) {
    function d(a, b) {
      return n.isUndefined(b) ? "" + b : n.isNumber(b) && !isFinite(b) ? b.toString() : n.isFunction(b) || n.isRegExp(b) ? b.toString() : b;
    }
    function e(a, b) {
      return n.isString(a) ? a.length < b ? a : a.slice(0, b) : a;
    }
    function f(a) {
      return e(JSON.stringify(a.actual, d), 128) + " " + a.operator + " " + e(JSON.stringify(a.expected, d), 128);
    }
    function g(a, b, c, d, e) {
      throw new q.AssertionError({
        message: c,
        actual: a,
        expected: b,
        operator: d,
        stackStartFunction: e
      });
    }
    function h(a, b) {
      a || g(a, !0, b, "==", q.ok);
    }
    function i(a, b) {
      if (a === b)
        return !0;
      if (n.isBuffer(a) && n.isBuffer(b)) {
        if (a.length != b.length)
          return !1;
        for (var c = 0; c < a.length; c++)
          if (a[c] !== b[c])
            return !1;
        return !0;
      }
      return n.isDate(a) && n.isDate(b) ? a.getTime() === b.getTime() : n.isRegExp(a) && n.isRegExp(b) ? a.source === b.source && a.global === b.global && a.multiline === b.multiline && a.lastIndex === b.lastIndex && a.ignoreCase === b.ignoreCase : n.isObject(a) || n.isObject(b) ? k(a, b) : a == b;
    }
    function j(a) {
      return "[object Arguments]" == Object.prototype.toString.call(a);
    }
    function k(a, b) {
      if (n.isNullOrUndefined(a) || n.isNullOrUndefined(b))
        return !1;
      if (a.prototype !== b.prototype)
        return !1;
      if (n.isPrimitive(a) || n.isPrimitive(b))
        return a === b;
      var c = j(a),
          d = j(b);
      if (c && !d || !c && d)
        return !1;
      if (c)
        return a = o.call(a), b = o.call(b), i(a, b);
      var e,
          f,
          g = r(a),
          h = r(b);
      if (g.length != h.length)
        return !1;
      for (g.sort(), h.sort(), f = g.length - 1; f >= 0; f--)
        if (g[f] != h[f])
          return !1;
      for (f = g.length - 1; f >= 0; f--)
        if (e = g[f], !i(a[e], b[e]))
          return !1;
      return !0;
    }
    function l(a, b) {
      return !(!a || !b) && ("[object RegExp]" == Object.prototype.toString.call(b) ? b.test(a) : a instanceof b || b.call({}, a) === !0);
    }
    function m(a, b, c, d) {
      var e;
      n.isString(c) && (d = c, c = null);
      try {
        b();
      } catch (a) {
        e = a;
      }
      if (d = (c && c.name ? " (" + c.name + ")." : ".") + (d ? " " + d : "."), a && !e && g(e, c, "Missing expected exception" + d), !a && l(e, c) && g(e, c, "Got unwanted exception" + d), a && e && c && !l(e, c) || !a && e)
        throw e;
    }
    var n = (this || self, a("86")),
        o = Array.prototype.slice,
        p = Object.prototype.hasOwnProperty,
        q = c.exports = h;
    q.AssertionError = function(a) {
      this.name = "AssertionError", this.actual = a.actual, this.expected = a.expected, this.operator = a.operator, a.message ? (this.message = a.message, this.generatedMessage = !1) : (this.message = f(this), this.generatedMessage = !0);
      var b = a.stackStartFunction || g;
      if (Error.captureStackTrace)
        Error.captureStackTrace(this, b);
      else {
        var c = new Error;
        if (c.stack) {
          var d = c.stack,
              e = b.name,
              h = d.indexOf("\n" + e);
          if (h >= 0) {
            var i = d.indexOf("\n", h + 1);
            d = d.substring(i + 1);
          }
          this.stack = d;
        }
      }
    }, n.inherits(q.AssertionError, Error), q.fail = g, q.ok = h, q.equal = function(a, b, c) {
      a != b && g(a, b, c, "==", q.equal);
    }, q.notEqual = function(a, b, c) {
      a == b && g(a, b, c, "!=", q.notEqual);
    }, q.deepEqual = function(a, b, c) {
      i(a, b) || g(a, b, c, "deepEqual", q.deepEqual);
    }, q.notDeepEqual = function(a, b, c) {
      i(a, b) && g(a, b, c, "notDeepEqual", q.notDeepEqual);
    }, q.strictEqual = function(a, b, c) {
      a !== b && g(a, b, c, "===", q.strictEqual);
    }, q.notStrictEqual = function(a, b, c) {
      a === b && g(a, b, c, "!==", q.notStrictEqual);
    }, q.throws = function(a, b, c) {
      m.apply(this, [!0].concat(o.call(arguments)));
    }, q.doesNotThrow = function(a, b) {
      m.apply(this, [!1].concat(o.call(arguments)));
    }, q.ifError = function(a) {
      if (a)
        throw a;
    };
    var r = Object.keys || function(a) {
      var b = [];
      for (var c in a)
        p.call(a, c) && b.push(c);
      return b;
    };
    return c.exports;
  }), a.registerDynamic("191", ["18e", "9", "192", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a, b) {
      function c(a) {
        function b(a) {
          return c || (Array.isArray(a) ? a.some(b) : j.isNode(a) && (h.default.strictEqual(c, !1), c = d(a))), c;
        }
        j.assertNode(a);
        var c = !1,
            e = j.VISITOR_KEYS[a.type];
        if (e)
          for (var f = 0; f < e.length; f++) {
            var g = e[f],
                i = a[g];
            b(i);
          }
        return c;
      }
      function d(d) {
        j.assertNode(d);
        var e = k(d);
        return l.call(e, a) ? e[a] : l.call(m, d.type) ? e[a] = !1 : l.call(b, d.type) ? e[a] = !0 : e[a] = c(d);
      }
      return d.onlyChildren = c, d;
    }
    var g = (a("3"), this || self, a("18e")),
        h = e(g),
        i = a("9"),
        j = d(i),
        k = a("192").makeAccessor(),
        l = Object.prototype.hasOwnProperty,
        m = {FunctionExpression: !0},
        n = {
          CallExpression: !0,
          ForInStatement: !0,
          UnaryExpression: !0,
          BinaryExpression: !0,
          AssignmentExpression: !0,
          UpdateExpression: !0,
          NewExpression: !0
        },
        o = {
          YieldExpression: !0,
          BreakStatement: !0,
          ContinueStatement: !0,
          ReturnStatement: !0,
          ThrowStatement: !0
        };
    for (var p in o)
      l.call(o, p) && (n[p] = o[p]);
    return b.hasSideEffects = f("hasSideEffects", n), b.containsLeap = f("containsLeap", o), c.exports;
  }), a.registerDynamic("18f", ["2a", "65", "18e", "9", "18d", "191", "193", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      o.default.ok(this instanceof f), q.assertIdentifier(a), this.nextTempId = 0, this.contextId = a, this.listing = [], this.marked = [!0], this.finalLoc = g(), this.tryEntries = [], this.leapManager = new s.LeapManager(this);
    }
    function g() {
      return q.numericLiteral(-1);
    }
    function h(a) {
      return new Error("all declarations should have been transformed into assignments before the Exploder began its work: " + (0, m.default)(a));
    }
    function i(a) {
      var b = a.type;
      return "normal" === b ? !x.call(a, "target") : "break" === b || "continue" === b ? !x.call(a, "value") && q.isLiteral(a.target) : ("return" === b || "throw" === b) && (x.call(a, "value") && !x.call(a, "target"));
    }
    var j = (a("3"), this || self, a("2a")),
        k = e(j),
        l = a("65"),
        m = e(l),
        n = a("18e"),
        o = e(n),
        p = a("9"),
        q = d(p),
        r = a("18d"),
        s = d(r),
        t = a("191"),
        u = d(t),
        v = a("193"),
        w = d(v),
        x = Object.prototype.hasOwnProperty,
        y = f.prototype;
    b.Emitter = f, y.mark = function(a) {
      q.assertLiteral(a);
      var b = this.listing.length;
      return a.value === -1 ? a.value = b : o.default.strictEqual(a.value, b), this.marked[b] = !0, a;
    }, y.emit = function(a) {
      q.isExpression(a) && (a = q.expressionStatement(a)), q.assertStatement(a), this.listing.push(a);
    }, y.emitAssign = function(a, b) {
      return this.emit(this.assign(a, b)), a;
    }, y.assign = function(a, b) {
      return q.expressionStatement(q.assignmentExpression("=", a, b));
    }, y.contextProperty = function(a, b) {
      return q.memberExpression(this.contextId, b ? q.stringLiteral(a) : q.identifier(a), !!b);
    }, y.stop = function(a) {
      a && this.setReturnValue(a), this.jump(this.finalLoc);
    }, y.setReturnValue = function(a) {
      q.assertExpression(a.value), this.emitAssign(this.contextProperty("rval"), this.explodeExpression(a));
    }, y.clearPendingException = function(a, b) {
      q.assertLiteral(a);
      var c = q.callExpression(this.contextProperty("catch", !0), [a]);
      b ? this.emitAssign(b, c) : this.emit(c);
    }, y.jump = function(a) {
      this.emitAssign(this.contextProperty("next"), a), this.emit(q.breakStatement());
    }, y.jumpIf = function(a, b) {
      q.assertExpression(a), q.assertLiteral(b), this.emit(q.ifStatement(a, q.blockStatement([this.assign(this.contextProperty("next"), b), q.breakStatement()])));
    }, y.jumpIfNot = function(a, b) {
      q.assertExpression(a), q.assertLiteral(b);
      var c = void 0;
      c = q.isUnaryExpression(a) && "!" === a.operator ? a.argument : q.unaryExpression("!", a), this.emit(q.ifStatement(c, q.blockStatement([this.assign(this.contextProperty("next"), b), q.breakStatement()])));
    }, y.makeTempVar = function() {
      return this.contextProperty("t" + this.nextTempId++);
    }, y.getContextFunction = function(a) {
      return q.functionExpression(a || null, [this.contextId], q.blockStatement([this.getDispatchLoop()]), !1, !1);
    }, y.getDispatchLoop = function() {
      var a = this,
          b = [],
          c = void 0,
          d = !1;
      return a.listing.forEach(function(e, f) {
        a.marked.hasOwnProperty(f) && (b.push(q.switchCase(q.numericLiteral(f), c = [])), d = !1), d || (c.push(e), q.isCompletionStatement(e) && (d = !0));
      }), this.finalLoc.value = this.listing.length, b.push(q.switchCase(this.finalLoc, []), q.switchCase(q.stringLiteral("end"), [q.returnStatement(q.callExpression(this.contextProperty("stop"), []))])), q.whileStatement(q.numericLiteral(1), q.switchStatement(q.assignmentExpression("=", this.contextProperty("prev"), this.contextProperty("next")), b));
    }, y.getTryLocsList = function() {
      if (0 === this.tryEntries.length)
        return null;
      var a = 0;
      return q.arrayExpression(this.tryEntries.map(function(b) {
        var c = b.firstLoc.value;
        o.default.ok(c >= a, "try entries out of order"), a = c;
        var d = b.catchEntry,
            e = b.finallyEntry,
            f = [b.firstLoc, d ? d.firstLoc : null];
        return e && (f[2] = e.firstLoc, f[3] = e.afterLoc), q.arrayExpression(f);
      }));
    }, y.explode = function(a, b) {
      var c = a.node,
          d = this;
      if (q.assertNode(c), q.isDeclaration(c))
        throw h(c);
      if (q.isStatement(c))
        return d.explodeStatement(a);
      if (q.isExpression(c))
        return d.explodeExpression(a, b);
      switch (c.type) {
        case "Program":
          return a.get("body").map(d.explodeStatement, d);
        case "VariableDeclarator":
          throw h(c);
        case "Property":
        case "SwitchCase":
        case "CatchClause":
          throw new Error(c.type + " nodes should be handled by their parents");
        default:
          throw new Error("unknown Node of type " + (0, m.default)(c.type));
      }
    }, y.explodeStatement = function(a, b) {
      var c = a.node,
          d = this,
          e = void 0,
          f = void 0,
          h = void 0;
      if (q.assertStatement(c), b ? q.assertIdentifier(b) : b = null, q.isBlockStatement(c))
        return void a.get("body").forEach(function(a) {
          d.explodeStatement(a);
        });
      if (!u.containsLeap(c))
        return void d.emit(c);
      var i = function() {
        switch (c.type) {
          case "ExpressionStatement":
            d.explodeExpression(a.get("expression"), !0);
            break;
          case "LabeledStatement":
            f = g(), d.leapManager.withEntry(new s.LabeledEntry(f, c.label), function() {
              d.explodeStatement(a.get("body"), c.label);
            }), d.mark(f);
            break;
          case "WhileStatement":
            e = g(), f = g(), d.mark(e), d.jumpIfNot(d.explodeExpression(a.get("test")), f), d.leapManager.withEntry(new s.LoopEntry(f, e, b), function() {
              d.explodeStatement(a.get("body"));
            }), d.jump(e), d.mark(f);
            break;
          case "DoWhileStatement":
            var i = g(),
                j = g();
            f = g(), d.mark(i), d.leapManager.withEntry(new s.LoopEntry(f, j, b), function() {
              d.explode(a.get("body"));
            }), d.mark(j), d.jumpIf(d.explodeExpression(a.get("test")), i), d.mark(f);
            break;
          case "ForStatement":
            h = g();
            var k = g();
            f = g(), c.init && d.explode(a.get("init"), !0), d.mark(h), c.test && d.jumpIfNot(d.explodeExpression(a.get("test")), f), d.leapManager.withEntry(new s.LoopEntry(f, k, b), function() {
              d.explodeStatement(a.get("body"));
            }), d.mark(k), c.update && d.explode(a.get("update"), !0), d.jump(h), d.mark(f);
            break;
          case "TypeCastExpression":
            return {v: d.explodeExpression(a.get("expression"))};
          case "ForInStatement":
            h = g(), f = g();
            var l = d.makeTempVar();
            d.emitAssign(l, q.callExpression(w.runtimeProperty("keys"), [d.explodeExpression(a.get("right"))])), d.mark(h);
            var n = d.makeTempVar();
            d.jumpIf(q.memberExpression(q.assignmentExpression("=", n, q.callExpression(l, [])), q.identifier("done"), !1), f), d.emitAssign(c.left, q.memberExpression(n, q.identifier("value"), !1)), d.leapManager.withEntry(new s.LoopEntry(f, h, b), function() {
              d.explodeStatement(a.get("body"));
            }), d.jump(h), d.mark(f);
            break;
          case "BreakStatement":
            d.emitAbruptCompletion({
              type: "break",
              target: d.leapManager.getBreakLoc(c.label)
            });
            break;
          case "ContinueStatement":
            d.emitAbruptCompletion({
              type: "continue",
              target: d.leapManager.getContinueLoc(c.label)
            });
            break;
          case "SwitchStatement":
            var p = d.emitAssign(d.makeTempVar(), d.explodeExpression(a.get("discriminant")));
            f = g();
            for (var r = g(),
                t = r,
                u = [],
                v = c.cases || [],
                x = v.length - 1; x >= 0; --x) {
              var y = v[x];
              q.assertSwitchCase(y), y.test ? t = q.conditionalExpression(q.binaryExpression("===", p, y.test), u[x] = g(), t) : u[x] = r;
            }
            var A = a.get("discriminant");
            A.replaceWith(t), d.jump(d.explodeExpression(A)), d.leapManager.withEntry(new s.SwitchEntry(f), function() {
              a.get("cases").forEach(function(a) {
                var b = a.key;
                d.mark(u[b]), a.get("consequent").forEach(function(a) {
                  d.explodeStatement(a);
                });
              });
            }), d.mark(f), r.value === -1 && (d.mark(r), o.default.strictEqual(f.value, r.value));
            break;
          case "IfStatement":
            var B = c.alternate && g();
            f = g(), d.jumpIfNot(d.explodeExpression(a.get("test")), B || f), d.explodeStatement(a.get("consequent")), B && (d.jump(f), d.mark(B), d.explodeStatement(a.get("alternate"))), d.mark(f);
            break;
          case "ReturnStatement":
            d.emitAbruptCompletion({
              type: "return",
              value: d.explodeExpression(a.get("argument"))
            });
            break;
          case "WithStatement":
            throw new Error("WithStatement not supported in generator functions.");
          case "TryStatement":
            f = g();
            var C = c.handler,
                D = C && g(),
                E = D && new s.CatchEntry(D, C.param),
                F = c.finalizer && g(),
                G = F && new s.FinallyEntry(F, f),
                H = new s.TryEntry(d.getUnmarkedCurrentLoc(), E, G);
            d.tryEntries.push(H), d.updateContextPrevLoc(H.firstLoc), d.leapManager.withEntry(H, function() {
              d.explodeStatement(a.get("block")), D && !function() {
                F ? d.jump(F) : d.jump(f), d.updateContextPrevLoc(d.mark(D));
                var b = a.get("handler.body"),
                    c = d.makeTempVar();
                d.clearPendingException(H.firstLoc, c), b.traverse(z, {
                  safeParam: c,
                  catchParamName: C.param.name
                }), d.leapManager.withEntry(E, function() {
                  d.explodeStatement(b);
                });
              }(), F && (d.updateContextPrevLoc(d.mark(F)), d.leapManager.withEntry(G, function() {
                d.explodeStatement(a.get("finalizer"));
              }), d.emit(q.returnStatement(q.callExpression(d.contextProperty("finish"), [G.firstLoc]))));
            }), d.mark(f);
            break;
          case "ThrowStatement":
            d.emit(q.throwStatement(d.explodeExpression(a.get("argument"))));
            break;
          default:
            throw new Error("unknown Statement of type " + (0, m.default)(c.type));
        }
      }();
      return "object" === ("undefined" == typeof i ? "undefined" : (0, k.default)(i)) ? i.v : void 0;
    };
    var z = {
      Identifier: function(a, b) {
        a.node.name === b.catchParamName && w.isReference(a) && a.replaceWith(b.safeParam);
      },
      Scope: function(a, b) {
        a.scope.hasOwnBinding(b.catchParamName) && a.skip();
      }
    };
    return y.emitAbruptCompletion = function(a) {
      i(a) || o.default.ok(!1, "invalid completion record: " + (0, m.default)(a)), o.default.notStrictEqual(a.type, "normal", "normal completions are not abrupt");
      var b = [q.stringLiteral(a.type)];
      "break" === a.type || "continue" === a.type ? (q.assertLiteral(a.target), b[1] = a.target) : "return" !== a.type && "throw" !== a.type || a.value && (q.assertExpression(a.value), b[1] = a.value), this.emit(q.returnStatement(q.callExpression(this.contextProperty("abrupt"), b)));
    }, y.getUnmarkedCurrentLoc = function() {
      return q.numericLiteral(this.listing.length);
    }, y.updateContextPrevLoc = function(a) {
      a ? (q.assertLiteral(a), a.value === -1 ? a.value = this.listing.length : o.default.strictEqual(a.value, this.listing.length)) : a = this.getUnmarkedCurrentLoc(), this.emitAssign(this.contextProperty("prev"), a);
    }, y.explodeExpression = function(a, b) {
      function c(a) {
        return q.assertExpression(a), b ? void f.emit(a) : a;
      }
      function d(a, b, c) {
        o.default.ok(!c || !a, "Ignoring the result of a child expression but forcing it to be assigned to a temporary variable?");
        var d = f.explodeExpression(b, c);
        return c || (a || j && !q.isLiteral(d)) && (d = f.emitAssign(a || f.makeTempVar(), d)), d;
      }
      var e = a.node;
      if (!e)
        return e;
      q.assertExpression(e);
      var f = this,
          h = void 0,
          i = void 0;
      if (!u.containsLeap(e))
        return c(e);
      var j = u.containsLeap.onlyChildren(e),
          l = function() {
            switch (e.type) {
              case "MemberExpression":
                return {v: c(q.memberExpression(f.explodeExpression(a.get("object")), e.computed ? d(null, a.get("property")) : e.property, e.computed))};
              case "CallExpression":
                var j = a.get("callee"),
                    k = a.get("arguments"),
                    l = void 0,
                    n = [],
                    p = !1;
                if (k.forEach(function(a) {
                  p = p || u.containsLeap(a.node);
                }), q.isMemberExpression(j.node))
                  if (p) {
                    var r = d(f.makeTempVar(), j.get("object")),
                        s = j.node.computed ? d(null, j.get("property")) : j.node.property;
                    n.unshift(r), l = q.memberExpression(q.memberExpression(r, s, j.node.computed), q.identifier("call"), !1);
                  } else
                    l = f.explodeExpression(j);
                else
                  l = f.explodeExpression(j), q.isMemberExpression(l) && (l = q.sequenceExpression([q.numericLiteral(0), l]));
                return k.forEach(function(a) {
                  n.push(d(null, a));
                }), {v: c(q.callExpression(l, n))};
              case "NewExpression":
                return {v: c(q.newExpression(d(null, a.get("callee")), a.get("arguments").map(function(a) {
                    return d(null, a);
                  })))};
              case "ObjectExpression":
                return {v: c(q.objectExpression(a.get("properties").map(function(a) {
                    return a.isObjectProperty() ? q.objectProperty(a.node.key, d(null, a.get("value")), a.node.computed) : a.node;
                  })))};
              case "ArrayExpression":
                return {v: c(q.arrayExpression(a.get("elements").map(function(a) {
                    return d(null, a);
                  })))};
              case "SequenceExpression":
                var t = e.expressions.length - 1;
                return a.get("expressions").forEach(function(a) {
                  a.key === t ? h = f.explodeExpression(a, b) : f.explodeExpression(a, !0);
                }), {v: h};
              case "LogicalExpression":
                i = g(), b || (h = f.makeTempVar());
                var v = d(h, a.get("left"));
                return "&&" === e.operator ? f.jumpIfNot(v, i) : (o.default.strictEqual(e.operator, "||"), f.jumpIf(v, i)), d(h, a.get("right"), b), f.mark(i), {v: h};
              case "ConditionalExpression":
                var w = g();
                i = g();
                var x = f.explodeExpression(a.get("test"));
                return f.jumpIfNot(x, w), b || (h = f.makeTempVar()), d(h, a.get("consequent"), b), f.jump(i), f.mark(w), d(h, a.get("alternate"), b), f.mark(i), {v: h};
              case "UnaryExpression":
                return {v: c(q.unaryExpression(e.operator, f.explodeExpression(a.get("argument")), !!e.prefix))};
              case "BinaryExpression":
                return {v: c(q.binaryExpression(e.operator, d(null, a.get("left")), d(null, a.get("right"))))};
              case "AssignmentExpression":
                return {v: c(q.assignmentExpression(e.operator, f.explodeExpression(a.get("left")), f.explodeExpression(a.get("right"))))};
              case "UpdateExpression":
                return {v: c(q.updateExpression(e.operator, f.explodeExpression(a.get("argument")), e.prefix))};
              case "YieldExpression":
                i = g();
                var y = e.argument && f.explodeExpression(a.get("argument"));
                if (y && e.delegate) {
                  var z = f.makeTempVar();
                  return f.emit(q.returnStatement(q.callExpression(f.contextProperty("delegateYield"), [y, q.stringLiteral(z.property.name), i]))), f.mark(i), {v: z};
                }
                return f.emitAssign(f.contextProperty("next"), i), f.emit(q.returnStatement(y || null)), f.mark(i), {v: f.contextProperty("sent")};
              default:
                throw new Error("unknown Expression of type " + (0, m.default)(e.type));
            }
          }();
      return "object" === ("undefined" == typeof l ? "undefined" : (0, k.default)(l)) ? l.v : void 0;
    }, c.exports;
  }), a.registerDynamic("194", ["195", "31", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return a("195"), c.exports = a("31").Object.getOwnPropertySymbols, c.exports;
  }), a.registerDynamic("196", ["194"], !0, function(a, b, c) {
    this || self;
    return c.exports = {
      default: a("194"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("197", ["a8", "31", "167", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("a8")),
        e = a("31"),
        f = a("167");
    return c.exports = function(a, b) {
      var c = (e.Object || {})[a] || Object[a],
          g = {};
      g[a] = b(c), d(d.S + d.F * f(function() {
        c(1);
      }), "Object", g);
    }, c.exports;
  }), a.registerDynamic("198", ["165", "162", "197", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("165")),
        e = a("162");
    return a("197")("keys", function() {
      return function(a) {
        return e(d(a));
      };
    }), c.exports;
  }), a.registerDynamic("199", ["198", "31", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return a("198"), c.exports = a("31").Object.keys, c.exports;
  }), a.registerDynamic("d", ["199"], !0, function(a, b, c) {
    this || self;
    return c.exports = {
      default: a("199"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("19a", ["a8", "142", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("a8"));
    return d(d.S, "Object", {create: a("142")}), c.exports;
  }), a.registerDynamic("19b", ["19a", "31", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    a("19a");
    var d = a("31").Object;
    return c.exports = function(a, b) {
      return d.create(a, b);
    }, c.exports;
  }), a.registerDynamic("b8", ["19b"], !0, function(a, b, c) {
    this || self;
    return c.exports = {
      default: a("19b"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("19c", ["b8", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a, b, c) {
      for (var d = [].concat(a),
          e = (0, i.default)(null); d.length; ) {
        var f = d.shift();
        if (f) {
          var g = k.getBindingIdentifiers.keys[f.type];
          if (k.isIdentifier(f))
            if (b) {
              var h = e[f.name] = e[f.name] || [];
              h.push(f);
            } else
              e[f.name] = f;
          else if (k.isExportDeclaration(f))
            k.isDeclaration(a.declaration) && d.push(a.declaration);
          else {
            if (c) {
              if (k.isFunctionDeclaration(f)) {
                d.push(f.id);
                continue;
              }
              if (k.isFunctionExpression(f))
                continue;
            }
            if (g)
              for (var j = 0; j < g.length; j++) {
                var l = g[j];
                f[l] && (d = d.concat(f[l]));
              }
          }
        }
      }
      return e;
    }
    function g(a, b) {
      return f(a, b, !0);
    }
    this || self;
    b.__esModule = !0;
    var h = a("b8"),
        i = e(h);
    b.getBindingIdentifiers = f, b.getOuterBindingIdentifiers = g;
    var j = a("9"),
        k = d(j);
    return f.keys = {
      DeclareClass: ["id"],
      DeclareFunction: ["id"],
      DeclareModule: ["id"],
      DeclareVariable: ["id"],
      InterfaceDeclaration: ["id"],
      TypeAlias: ["id"],
      CatchClause: ["param"],
      LabeledStatement: ["label"],
      UnaryExpression: ["argument"],
      AssignmentExpression: ["left"],
      ImportSpecifier: ["local"],
      ImportNamespaceSpecifier: ["local"],
      ImportDefaultSpecifier: ["local"],
      ImportDeclaration: ["specifiers"],
      ExportSpecifier: ["exported"],
      ExportNamespaceSpecifier: ["exported"],
      ExportDefaultSpecifier: ["exported"],
      FunctionDeclaration: ["id", "params"],
      FunctionExpression: ["id", "params"],
      ClassDeclaration: ["id"],
      ClassExpression: ["id"],
      RestElement: ["argument"],
      UpdateExpression: ["argument"],
      RestProperty: ["argument"],
      ObjectProperty: ["value"],
      AssignmentPattern: ["left"],
      ArrayPattern: ["elements"],
      ObjectPattern: ["properties"],
      VariableDeclaration: ["declarations"],
      VariableDeclarator: ["id"]
    }, c.exports;
  }), a.registerDynamic("19d", [], !0, function(a, b, c) {
    this || self;
    return function() {
      "use strict";
      function a(a) {
        if (null == a)
          return !1;
        switch (a.type) {
          case "ArrayExpression":
          case "AssignmentExpression":
          case "BinaryExpression":
          case "CallExpression":
          case "ConditionalExpression":
          case "FunctionExpression":
          case "Identifier":
          case "Literal":
          case "LogicalExpression":
          case "MemberExpression":
          case "NewExpression":
          case "ObjectExpression":
          case "SequenceExpression":
          case "ThisExpression":
          case "UnaryExpression":
          case "UpdateExpression":
            return !0;
        }
        return !1;
      }
      function b(a) {
        if (null == a)
          return !1;
        switch (a.type) {
          case "DoWhileStatement":
          case "ForInStatement":
          case "ForStatement":
          case "WhileStatement":
            return !0;
        }
        return !1;
      }
      function d(a) {
        if (null == a)
          return !1;
        switch (a.type) {
          case "BlockStatement":
          case "BreakStatement":
          case "ContinueStatement":
          case "DebuggerStatement":
          case "DoWhileStatement":
          case "EmptyStatement":
          case "ExpressionStatement":
          case "ForInStatement":
          case "ForStatement":
          case "IfStatement":
          case "LabeledStatement":
          case "ReturnStatement":
          case "SwitchStatement":
          case "ThrowStatement":
          case "TryStatement":
          case "VariableDeclaration":
          case "WhileStatement":
          case "WithStatement":
            return !0;
        }
        return !1;
      }
      function e(a) {
        return d(a) || null != a && "FunctionDeclaration" === a.type;
      }
      function f(a) {
        switch (a.type) {
          case "IfStatement":
            return null != a.alternate ? a.alternate : a.consequent;
          case "LabeledStatement":
          case "ForStatement":
          case "ForInStatement":
          case "WhileStatement":
          case "WithStatement":
            return a.body;
        }
        return null;
      }
      function g(a) {
        var b;
        if ("IfStatement" !== a.type)
          return !1;
        if (null == a.alternate)
          return !1;
        b = a.consequent;
        do {
          if ("IfStatement" === b.type && null == b.alternate)
            return !0;
          b = f(b);
        } while (b);
        return !1;
      }
      c.exports = {
        isExpression: a,
        isStatement: d,
        isIterationStatement: b,
        isSourceElement: e,
        isProblematicIfStatement: g,
        trailingStatement: f
      };
    }(), c.exports;
  }), a.registerDynamic("19e", [], !0, function(a, b, c) {
    this || self;
    return function() {
      "use strict";
      function a(a) {
        return 48 <= a && a <= 57;
      }
      function b(a) {
        return 48 <= a && a <= 57 || 97 <= a && a <= 102 || 65 <= a && a <= 70;
      }
      function d(a) {
        return a >= 48 && a <= 55;
      }
      function e(a) {
        return 32 === a || 9 === a || 11 === a || 12 === a || 160 === a || a >= 5760 && n.indexOf(a) >= 0;
      }
      function f(a) {
        return 10 === a || 13 === a || 8232 === a || 8233 === a;
      }
      function g(a) {
        if (a <= 65535)
          return String.fromCharCode(a);
        var b = String.fromCharCode(Math.floor((a - 65536) / 1024) + 55296),
            c = String.fromCharCode((a - 65536) % 1024 + 56320);
        return b + c;
      }
      function h(a) {
        return a < 128 ? o[a] : m.NonAsciiIdentifierStart.test(g(a));
      }
      function i(a) {
        return a < 128 ? p[a] : m.NonAsciiIdentifierPart.test(g(a));
      }
      function j(a) {
        return a < 128 ? o[a] : l.NonAsciiIdentifierStart.test(g(a));
      }
      function k(a) {
        return a < 128 ? p[a] : l.NonAsciiIdentifierPart.test(g(a));
      }
      var l,
          m,
          n,
          o,
          p,
          q;
      for (m = {
        NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
        NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/
      }, l = {
        NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDE00-\uDE11\uDE13-\uDE2B\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDE00-\uDE2F\uDE44\uDE80-\uDEAA]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/,
        NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDD0-\uDDDA\uDE00-\uDE11\uDE13-\uDE37\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF01-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
      }, n = [5760, 6158, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8239, 8287, 12288, 65279], o = new Array(128), q = 0; q < 128; ++q)
        o[q] = q >= 97 && q <= 122 || q >= 65 && q <= 90 || 36 === q || 95 === q;
      for (p = new Array(128), q = 0; q < 128; ++q)
        p[q] = q >= 97 && q <= 122 || q >= 65 && q <= 90 || q >= 48 && q <= 57 || 36 === q || 95 === q;
      c.exports = {
        isDecimalDigit: a,
        isHexDigit: b,
        isOctalDigit: d,
        isWhiteSpace: e,
        isLineTerminator: f,
        isIdentifierStartES5: h,
        isIdentifierPartES5: i,
        isIdentifierStartES6: j,
        isIdentifierPartES6: k
      };
    }(), c.exports;
  }), a.registerDynamic("19f", ["19e"], !0, function(a, b, c) {
    this || self;
    return function() {
      "use strict";
      function b(a) {
        switch (a) {
          case "implements":
          case "interface":
          case "package":
          case "private":
          case "protected":
          case "public":
          case "static":
          case "let":
            return !0;
          default:
            return !1;
        }
      }
      function d(a, b) {
        return !(!b && "yield" === a) && e(a, b);
      }
      function e(a, c) {
        if (c && b(a))
          return !0;
        switch (a.length) {
          case 2:
            return "if" === a || "in" === a || "do" === a;
          case 3:
            return "var" === a || "for" === a || "new" === a || "try" === a;
          case 4:
            return "this" === a || "else" === a || "case" === a || "void" === a || "with" === a || "enum" === a;
          case 5:
            return "while" === a || "break" === a || "catch" === a || "throw" === a || "const" === a || "yield" === a || "class" === a || "super" === a;
          case 6:
            return "return" === a || "typeof" === a || "delete" === a || "switch" === a || "export" === a || "import" === a;
          case 7:
            return "default" === a || "finally" === a || "extends" === a;
          case 8:
            return "function" === a || "continue" === a || "debugger" === a;
          case 10:
            return "instanceof" === a;
          default:
            return !1;
        }
      }
      function f(a, b) {
        return "null" === a || "true" === a || "false" === a || d(a, b);
      }
      function g(a, b) {
        return "null" === a || "true" === a || "false" === a || e(a, b);
      }
      function h(a) {
        return "eval" === a || "arguments" === a;
      }
      function i(a) {
        var b,
            c,
            d;
        if (0 === a.length)
          return !1;
        if (d = a.charCodeAt(0), !n.isIdentifierStartES5(d))
          return !1;
        for (b = 1, c = a.length; b < c; ++b)
          if (d = a.charCodeAt(b), !n.isIdentifierPartES5(d))
            return !1;
        return !0;
      }
      function j(a, b) {
        return 1024 * (a - 55296) + (b - 56320) + 65536;
      }
      function k(a) {
        var b,
            c,
            d,
            e,
            f;
        if (0 === a.length)
          return !1;
        for (f = n.isIdentifierStartES6, b = 0, c = a.length; b < c; ++b) {
          if (d = a.charCodeAt(b), 55296 <= d && d <= 56319) {
            if (++b, b >= c)
              return !1;
            if (e = a.charCodeAt(b), !(56320 <= e && e <= 57343))
              return !1;
            d = j(d, e);
          }
          if (!f(d))
            return !1;
          f = n.isIdentifierPartES6;
        }
        return !0;
      }
      function l(a, b) {
        return i(a) && !f(a, b);
      }
      function m(a, b) {
        return k(a) && !g(a, b);
      }
      var n = a("19e");
      c.exports = {
        isKeywordES5: d,
        isKeywordES6: e,
        isReservedWordES5: f,
        isReservedWordES6: g,
        isRestrictedWord: h,
        isIdentifierNameES5: i,
        isIdentifierNameES6: k,
        isIdentifierES5: l,
        isIdentifierES6: m
      };
    }(), c.exports;
  }), a.registerDynamic("13a", ["19d", "19e", "19f"], !0, function(a, b, c) {
    this || self;
    return function() {
      "use strict";
      b.ast = a("19d"), b.code = a("19e"), b.keyword = a("19f");
    }(), c.exports;
  }), a.registerDynamic("1a0", ["f", "19c", "13a", "9", "1a1"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a, b) {
      var c = q.getBindingIdentifiers.keys[b.type];
      if (c)
        for (var d = 0; d < c.length; d++) {
          var e = c[d],
              f = b[e];
          if (Array.isArray(f)) {
            if (f.indexOf(a) >= 0)
              return !0;
          } else if (f === a)
            return !0;
        }
      return !1;
    }
    function g(a, b) {
      switch (b.type) {
        case "BindExpression":
          return b.object === a || b.callee === a;
        case "MemberExpression":
        case "JSXMemberExpression":
          return !(b.property !== a || !b.computed) || b.object === a;
        case "MetaProperty":
          return !1;
        case "ObjectProperty":
          if (b.key === a)
            return b.computed;
        case "VariableDeclarator":
          return b.id !== a;
        case "ArrowFunctionExpression":
        case "FunctionDeclaration":
        case "FunctionExpression":
          for (var c = b.params,
              d = Array.isArray(c),
              e = 0,
              c = d ? c : (0, p.default)(c); ; ) {
            var f;
            if (d) {
              if (e >= c.length)
                break;
              f = c[e++];
            } else {
              if (e = c.next(), e.done)
                break;
              f = e.value;
            }
            var g = f;
            if (g === a)
              return !1;
          }
          return b.id !== a;
        case "ExportSpecifier":
          return !b.source && b.local === a;
        case "ExportNamespaceSpecifier":
        case "ExportDefaultSpecifier":
          return !1;
        case "JSXAttribute":
          return b.name !== a;
        case "ClassProperty":
          return b.key === a ? b.computed : b.value === a;
        case "ImportDefaultSpecifier":
        case "ImportNamespaceSpecifier":
        case "ImportSpecifier":
          return !1;
        case "ClassDeclaration":
        case "ClassExpression":
          return b.id !== a;
        case "ClassMethod":
        case "ObjectMethod":
          return b.key === a && b.computed;
        case "LabeledStatement":
          return !1;
        case "CatchClause":
          return b.param !== a;
        case "RestElement":
          return !1;
        case "AssignmentExpression":
          return b.right === a;
        case "AssignmentPattern":
          return b.right === a;
        case "ObjectPattern":
        case "ArrayPattern":
          return !1;
      }
      return !0;
    }
    function h(a) {
      return "string" == typeof a && !s.default.keyword.isReservedWordES6(a, !0) && s.default.keyword.isIdentifierNameES6(a);
    }
    function i(a) {
      return u.isVariableDeclaration(a) && ("var" !== a.kind || a[v.BLOCK_SCOPED_SYMBOL]);
    }
    function j(a) {
      return u.isFunctionDeclaration(a) || u.isClassDeclaration(a) || u.isLet(a);
    }
    function k(a) {
      return u.isVariableDeclaration(a, {kind: "var"}) && !a[v.BLOCK_SCOPED_SYMBOL];
    }
    function l(a) {
      return u.isImportDefaultSpecifier(a) || u.isIdentifier(a.imported || a.exported, {name: "default"});
    }
    function m(a, b) {
      return (!u.isBlockStatement(a) || !u.isFunction(b, {body: a})) && u.isScopable(a);
    }
    function n(a) {
      return !!u.isType(a.type, "Immutable") || !!u.isIdentifier(a) && "undefined" === a.name;
    }
    this || self;
    b.__esModule = !0;
    var o = a("f"),
        p = e(o);
    b.isBinding = f, b.isReferenced = g, b.isValidIdentifier = h, b.isLet = i, b.isBlockScoped = j, b.isVar = k, b.isSpecifierDefault = l, b.isScope = m, b.isImmutable = n;
    var q = a("19c"),
        r = a("13a"),
        s = e(r),
        t = a("9"),
        u = d(t),
        v = a("1a1");
    return c.exports;
  }), a.registerDynamic("1a2", ["a8", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("a8"));
    return d(d.S, "Number", {MAX_SAFE_INTEGER: 9007199254740991}), c.exports;
  }), a.registerDynamic("1a3", ["1a2", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return a("1a2"), c.exports = 9007199254740991, c.exports;
  }), a.registerDynamic("1a4", ["1a3"], !0, function(a, b, c) {
    this || self;
    return c.exports = {
      default: a("1a3"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("9e", ["1a5", "7f"], !0, function(a, b, c) {
    function d(a) {
      if (!f(a) || m.call(a) != g)
        return !1;
      var b = e(a);
      if (null === b)
        return !0;
      var c = k.call(b, "constructor") && b.constructor;
      return "function" == typeof c && c instanceof c && j.call(c) == l;
    }
    var e = (this || self, a("1a5")),
        f = a("7f"),
        g = "[object Object]",
        h = Function.prototype,
        i = Object.prototype,
        j = h.toString,
        k = i.hasOwnProperty,
        l = j.call(Object),
        m = i.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("59", ["7f"], !0, function(a, b, c) {
    function d(a) {
      return "number" == typeof a || e(a) && h.call(a) == f;
    }
    var e = (this || self, a("7f")),
        f = "[object Number]",
        g = Object.prototype,
        h = g.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1a6", ["9d"], !0, function(a, b, c) {
    function d(a) {
      return e(a) && h.call(a) == f;
    }
    var e = (this || self, a("9d")),
        f = "[object RegExp]",
        g = Object.prototype,
        h = g.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("89", ["1a6", "74", "1a7"], !0, function(a, b, c) {
    var d = (this || self, a("1a6")),
        e = a("74"),
        f = a("1a7"),
        g = f && f.isRegExp,
        h = g ? e(g) : d;
    return c.exports = h, c.exports;
  }), a.registerDynamic("88", ["53", "7f"], !0, function(a, b, c) {
    function d(a) {
      return "string" == typeof a || !e(a) && f(a) && i.call(a) == g;
    }
    var e = (this || self, a("53")),
        f = a("7f"),
        g = "[object String]",
        h = Object.prototype,
        i = h.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1a8", ["1a4", "65", "f", "9e", "59", "89", "88", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : a.key || a.property;
      return a.computed || D.isIdentifier(b) && (b = D.stringLiteral(b.name)), b;
    }
    function g(a, b) {
      function c(a) {
        for (var f = !1,
            g = [],
            h = a,
            i = Array.isArray(h),
            j = 0,
            h = i ? h : (0, t.default)(h); ; ) {
          var k;
          if (i) {
            if (j >= h.length)
              break;
            k = h[j++];
          } else {
            if (j = h.next(), j.done)
              break;
            k = j.value;
          }
          var l = k;
          if (D.isExpression(l))
            g.push(l);
          else if (D.isExpressionStatement(l))
            g.push(l.expression);
          else {
            if (D.isVariableDeclaration(l)) {
              if ("var" !== l.kind)
                return e = !0;
              for (var m = l.declarations,
                  n = Array.isArray(m),
                  o = 0,
                  m = n ? m : (0, t.default)(m); ; ) {
                var p;
                if (n) {
                  if (o >= m.length)
                    break;
                  p = m[o++];
                } else {
                  if (o = m.next(), o.done)
                    break;
                  p = o.value;
                }
                var q = p,
                    r = D.getBindingIdentifiers(q);
                for (var s in r)
                  d.push({
                    kind: l.kind,
                    id: r[s]
                  });
                q.init && g.push(D.assignmentExpression("=", q.id, q.init));
              }
              f = !0;
              continue;
            }
            if (D.isIfStatement(l)) {
              var u = l.consequent ? c([l.consequent]) : b.buildUndefinedNode(),
                  v = l.alternate ? c([l.alternate]) : b.buildUndefinedNode();
              if (!u || !v)
                return e = !0;
              g.push(D.conditionalExpression(l.test, u, v));
            } else {
              if (!D.isBlockStatement(l)) {
                if (D.isEmptyStatement(l)) {
                  f = !0;
                  continue;
                }
                return e = !0;
              }
              g.push(c(l.body));
            }
          }
          f = !1;
        }
        return (f || 0 === g.length) && g.push(b.buildUndefinedNode()), 1 === g.length ? g[0] : D.sequenceExpression(g);
      }
      if (a && a.length) {
        var d = [],
            e = !1,
            f = c(a);
        if (!e) {
          for (var g = 0; g < d.length; g++)
            b.push(d[g]);
          return f;
        }
      }
    }
    function h(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : a.key,
          c = void 0;
      return "method" === a.kind ? h.increment() + "" : (c = D.isIdentifier(b) ? b.name : D.isStringLiteral(b) ? (0, r.default)(b.value) : (0, r.default)(D.removePropertiesDeep(D.cloneDeep(b))), a.computed && (c = "[" + c + "]"), a.static && (c = "static:" + c), c);
    }
    function i(a) {
      return a += "", a = a.replace(/[^a-zA-Z0-9$_]/g, "-"), a = a.replace(/^[-0-9]+/, ""), a = a.replace(/[-\s]+(.)?/g, function(a, b) {
        return b ? b.toUpperCase() : "";
      }), D.isValidIdentifier(a) || (a = "_" + a), a || "_";
    }
    function j(a) {
      return a = i(a), "eval" !== a && "arguments" !== a || (a = "_" + a), a;
    }
    function k(a, b) {
      if (D.isStatement(a))
        return a;
      var c = !1,
          d = void 0;
      if (D.isClass(a))
        c = !0, d = "ClassDeclaration";
      else if (D.isFunction(a))
        c = !0, d = "FunctionDeclaration";
      else if (D.isAssignmentExpression(a))
        return D.expressionStatement(a);
      if (c && !a.id && (d = !1), !d) {
        if (b)
          return !1;
        throw new Error("cannot turn " + a.type + " to a statement");
      }
      return a.type = d, a;
    }
    function l(a) {
      if (D.isExpressionStatement(a) && (a = a.expression), D.isExpression(a))
        return a;
      if (D.isClass(a) ? a.type = "ClassExpression" : D.isFunction(a) && (a.type = "FunctionExpression"), !D.isExpression(a))
        throw new Error("cannot turn " + a.type + " to an expression");
      return a;
    }
    function m(a, b) {
      return D.isBlockStatement(a) ? a : (D.isEmptyStatement(a) && (a = []), Array.isArray(a) || (D.isStatement(a) || (a = D.isFunction(b) ? D.returnStatement(a) : D.expressionStatement(a)), a = [a]), D.blockStatement(a));
    }
    function n(a) {
      if (void 0 === a)
        return D.identifier("undefined");
      if (a === !0 || a === !1)
        return D.booleanLiteral(a);
      if (null === a)
        return D.nullLiteral();
      if ((0, B.default)(a))
        return D.stringLiteral(a);
      if ((0, x.default)(a))
        return D.numericLiteral(a);
      if ((0, z.default)(a)) {
        var b = a.source,
            c = a.toString().match(/\/([a-z]+|)$/)[1];
        return D.regExpLiteral(b, c);
      }
      if (Array.isArray(a))
        return D.arrayExpression(a.map(D.valueToNode));
      if ((0, v.default)(a)) {
        var d = [];
        for (var e in a) {
          var f = void 0;
          f = D.isValidIdentifier(e) ? D.identifier(e) : D.stringLiteral(e), d.push(D.objectProperty(f, D.valueToNode(a[e])));
        }
        return D.objectExpression(d);
      }
      throw new Error("don't know how to turn this value into a node");
    }
    this || self;
    b.__esModule = !0;
    var o = a("1a4"),
        p = e(o),
        q = a("65"),
        r = e(q),
        s = a("f"),
        t = e(s);
    b.toComputedKey = f, b.toSequenceExpression = g, b.toKeyAlias = h, b.toIdentifier = i, b.toBindingIdentifierName = j, b.toStatement = k, b.toExpression = l, b.toBlock = m, b.valueToNode = n;
    var u = a("9e"),
        v = e(u),
        w = a("59"),
        x = e(w),
        y = a("89"),
        z = e(y),
        A = a("88"),
        B = e(A),
        C = a("9"),
        D = d(C);
    return h.uid = 0, h.increment = function() {
      return h.uid >= p.default ? h.uid = 0 : h.uid++;
    }, c.exports;
  }), a.registerDynamic("1a9", ["9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      var b = f(a);
      return 1 === b.length ? b[0] : i.unionTypeAnnotation(b);
    }
    function f(a) {
      for (var b = {},
          c = {},
          d = [],
          e = [],
          g = 0; g < a.length; g++) {
        var h = a[g];
        if (h && !(e.indexOf(h) >= 0)) {
          if (i.isAnyTypeAnnotation(h))
            return [h];
          if (i.isFlowBaseAnnotation(h))
            c[h.type] = h;
          else if (i.isUnionTypeAnnotation(h))
            d.indexOf(h.types) < 0 && (a = a.concat(h.types), d.push(h.types));
          else if (i.isGenericTypeAnnotation(h)) {
            var j = h.id.name;
            if (b[j]) {
              var k = b[j];
              k.typeParameters ? h.typeParameters && (k.typeParameters.params = f(k.typeParameters.params.concat(h.typeParameters.params))) : k = h.typeParameters;
            } else
              b[j] = h;
          } else
            e.push(h);
        }
      }
      for (var l in c)
        e.push(c[l]);
      for (var m in b)
        e.push(b[m]);
      return e;
    }
    function g(a) {
      if ("string" === a)
        return i.stringTypeAnnotation();
      if ("number" === a)
        return i.numberTypeAnnotation();
      if ("undefined" === a)
        return i.voidTypeAnnotation();
      if ("boolean" === a)
        return i.booleanTypeAnnotation();
      if ("function" === a)
        return i.genericTypeAnnotation(i.identifier("Function"));
      if ("object" === a)
        return i.genericTypeAnnotation(i.identifier("Object"));
      if ("symbol" === a)
        return i.genericTypeAnnotation(i.identifier("Symbol"));
      throw new Error("Invalid typeof value");
    }
    this || self;
    b.__esModule = !0, b.createUnionTypeAnnotation = e, b.removeTypeDuplicates = f, b.createTypeAnnotationBasedOnTypeof = g;
    var h = a("9"),
        i = d(h);
    return c.exports;
  }), a.registerDynamic("1aa", [], !0, function(a, b, c) {
    "use strict";
    var d,
        e = this || self,
        f = e;
    return c.exports = function a(b) {
      function c() {}
      c.prototype = b, new c;
    }, c.exports;
  }), a.registerDynamic("1ab", [], !0, function(a, b, c) {
    function d(a) {
      for (var b = -1,
          c = a ? a.length : 0,
          d = 0,
          e = []; ++b < c; ) {
        var f = a[b];
        f && (e[d++] = f);
      }
      return e;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1ac", ["94", "3a"], !0, function(a, b, c) {
    function d(a, b) {
      return a && e(b, f(b), a);
    }
    var e = (this || self, a("94")),
        f = a("3a");
    return c.exports = d, c.exports;
  }), a.registerDynamic("97", ["1ad"], !0, function(a, b, c) {
    function d(a, b) {
      if (b)
        return a.slice();
      var c = a.length,
          d = j ? j(c) : new a.constructor(c);
      return a.copy(d), d;
    }
    var e = (this || self, a("1ad")),
        f = "object" == typeof b && b && !b.nodeType && b,
        g = f && "object" == typeof c && c && !c.nodeType && c,
        h = g && g.exports === f,
        i = h ? e.Buffer : void 0,
        j = i ? i.allocUnsafe : void 0;
    return c.exports = d, c.exports;
  }), a.registerDynamic("99", [], !0, function(a, b, c) {
    function d(a, b) {
      var c = -1,
          d = a.length;
      for (b || (b = Array(d)); ++c < d; )
        b[c] = a[c];
      return b;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("117", ["90", "91"], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = a[b];
      h.call(a, b) && f(d, c) && (void 0 !== c || b in a) || e(a, b, c);
    }
    var e = (this || self, a("90")),
        f = a("91"),
        g = Object.prototype,
        h = g.hasOwnProperty;
    return c.exports = d, c.exports;
  }), a.registerDynamic("126", ["1ae"], !0, function(a, b, c) {
    var d = (this || self, a("1ae")),
        e = function() {
          try {
            var a = d(Object, "defineProperty");
            return a({}, "", {}), a;
          } catch (a) {}
        }();
    return c.exports = e, c.exports;
  }), a.registerDynamic("90", ["126"], !0, function(a, b, c) {
    function d(a, b, c) {
      "__proto__" == b && e ? e(a, b, {
        configurable: !0,
        enumerable: !0,
        value: c,
        writable: !0
      }) : a[b] = c;
    }
    var e = (this || self, a("126"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("94", ["117", "90"], !0, function(a, b, c) {
    function d(a, b, c, d) {
      var g = !c;
      c || (c = {});
      for (var h = -1,
          i = b.length; ++h < i; ) {
        var j = b[h],
            k = d ? d(c[j], a[j], j, c, a) : void 0;
        void 0 === k && (k = a[j]), g ? f(c, j, k) : e(c, j, k);
      }
      return c;
    }
    var e = (this || self, a("117")),
        f = a("90");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1af", ["94", "1b0"], !0, function(a, b, c) {
    function d(a, b) {
      return e(a, f(a), b);
    }
    var e = (this || self, a("94")),
        f = a("1b0");
    return c.exports = d, c.exports;
  }), a.registerDynamic("6d", [], !0, function(a, b, c) {
    function d(a, b) {
      for (var c = -1,
          d = b.length,
          e = a.length; ++c < d; )
        a[e + c] = b[c];
      return a;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1b1", ["6d", "53"], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = b(a);
      return f(a) ? d : e(d, c(a));
    }
    var e = (this || self, a("6d")),
        f = a("53");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1b2", [], !0, function(a, b, c) {
    function d() {
      return [];
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1b0", ["1b3", "1b2"], !0, function(a, b, c) {
    var d = (this || self, a("1b3")),
        e = a("1b2"),
        f = Object.getOwnPropertySymbols,
        g = f ? d(f, Object) : e;
    return c.exports = g, c.exports;
  }), a.registerDynamic("1b4", ["1b1", "1b0", "3a"], !0, function(a, b, c) {
    function d(a) {
      return e(a, g, f);
    }
    var e = (this || self, a("1b1")),
        f = a("1b0"),
        g = a("3a");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1b5", [], !0, function(a, b, c) {
    function d(a) {
      var b = a.length,
          c = a.constructor(b);
      return b && "string" == typeof a[0] && f.call(a, "index") && (c.index = a.index, c.input = a.input), c;
    }
    var e = (this || self, Object.prototype),
        f = e.hasOwnProperty;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1b6", ["1b7"], !0, function(a, b, c) {
    function d(a, b) {
      var c = b ? e(a.buffer) : a.buffer;
      return new a.constructor(c, a.byteOffset, a.byteLength);
    }
    var e = (this || self, a("1b7"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("1b8", [], !0, function(a, b, c) {
    function d(a, b) {
      return a.set(b[0], b[1]), a;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1b9", ["1b8", "1ba", "1bb"], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = b ? c(g(a), !0) : g(a);
      return f(d, e, new a.constructor);
    }
    var e = (this || self, a("1b8")),
        f = a("1ba"),
        g = a("1bb");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1bc", [], !0, function(a, b, c) {
    function d(a) {
      var b = new a.constructor(a.source, e.exec(a));
      return b.lastIndex = a.lastIndex, b;
    }
    var e = (this || self, /\w*$/);
    return c.exports = d, c.exports;
  }), a.registerDynamic("1bd", [], !0, function(a, b, c) {
    function d(a, b) {
      return a.add(b), a;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1ba", [], !0, function(a, b, c) {
    function d(a, b, c, d) {
      var e = -1,
          f = a ? a.length : 0;
      for (d && f && (c = a[++e]); ++e < f; )
        c = b(c, a[e], e, a);
      return c;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1be", ["1bd", "1ba", "1bf"], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = b ? c(g(a), !0) : g(a);
      return f(d, e, new a.constructor);
    }
    var e = (this || self, a("1bd")),
        f = a("1ba"),
        g = a("1bf");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1c0", ["6a"], !0, function(a, b, c) {
    function d(a) {
      return g ? Object(g.call(a)) : {};
    }
    var e = (this || self, a("6a")),
        f = e ? e.prototype : void 0,
        g = f ? f.valueOf : void 0;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1b7", ["1c1"], !0, function(a, b, c) {
    function d(a) {
      var b = new a.constructor(a.byteLength);
      return new e(b).set(new e(a)), b;
    }
    var e = (this || self, a("1c1"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("98", ["1b7"], !0, function(a, b, c) {
    function d(a, b) {
      var c = b ? e(a.buffer) : a.buffer;
      return new a.constructor(c, a.byteOffset, a.length);
    }
    var e = (this || self, a("1b7"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("1c2", ["1b7", "1b6", "1b9", "1bc", "1be", "1c0", "98"], !0, function(a, b, c) {
    function d(a, b, c, d) {
      var E = a.constructor;
      switch (b) {
        case t:
          return e(a);
        case l:
        case m:
          return new E(+a);
        case u:
          return f(a, d);
        case v:
        case w:
        case x:
        case y:
        case z:
        case A:
        case B:
        case C:
        case D:
          return k(a, d);
        case n:
          return g(a, d, c);
        case o:
        case r:
          return new E(a);
        case p:
          return h(a);
        case q:
          return i(a, d, c);
        case s:
          return j(a);
      }
    }
    var e = (this || self, a("1b7")),
        f = a("1b6"),
        g = a("1b9"),
        h = a("1bc"),
        i = a("1be"),
        j = a("1c0"),
        k = a("98"),
        l = "[object Boolean]",
        m = "[object Date]",
        n = "[object Map]",
        o = "[object Number]",
        p = "[object RegExp]",
        q = "[object Set]",
        r = "[object String]",
        s = "[object Symbol]",
        t = "[object ArrayBuffer]",
        u = "[object DataView]",
        v = "[object Float32Array]",
        w = "[object Float64Array]",
        x = "[object Int8Array]",
        y = "[object Int16Array]",
        z = "[object Int32Array]",
        A = "[object Uint8Array]",
        B = "[object Uint8ClampedArray]",
        C = "[object Uint16Array]",
        D = "[object Uint32Array]";
    return c.exports = d, c.exports;
  }), a.registerDynamic("1c3", ["9d"], !0, function(a, b, c) {
    var d = (this || self, a("9d")),
        e = Object.create,
        f = function() {
          function a() {}
          return function(b) {
            if (!d(b))
              return {};
            if (e)
              return e(b);
            a.prototype = b;
            var c = new a;
            return a.prototype = void 0, c;
          };
        }();
    return c.exports = f, c.exports;
  }), a.registerDynamic("1a5", ["1b3"], !0, function(a, b, c) {
    var d = (this || self, a("1b3")),
        e = d(Object.getPrototypeOf, Object);
    return c.exports = e, c.exports;
  }), a.registerDynamic("9a", ["1c3", "1a5", "118"], !0, function(a, b, c) {
    function d(a) {
      return "function" != typeof a.constructor || g(a) ? {} : e(f(a));
    }
    var e = (this || self, a("1c3")),
        f = a("1a5"),
        g = a("118");
    return c.exports = d, c.exports;
  }), a.registerDynamic("8e", ["a1", "1c4", "117", "1ac", "97", "99", "1af", "1b4", "1c5", "1b5", "1c2", "9a", "53", "9b", "9d", "3a"], !0, function(a, b, c) {
    function d(a, b, c, v, w, x, y) {
      var B;
      if (v && (B = x ? v(a, w, x, y) : v(a)), void 0 !== B)
        return B;
      if (!s(a))
        return a;
      var C = q(a);
      if (C) {
        if (B = n(a), !b)
          return j(a, B);
      } else {
        var E = m(a),
            F = E == z || E == A;
        if (r(a))
          return i(a, b);
        if (E == D || E == u || F && !x) {
          if (B = p(F ? {} : a), !b)
            return k(a, h(B, a));
        } else {
          if (!U[E])
            return x ? a : {};
          B = o(a, E, d, b);
        }
      }
      y || (y = new e);
      var G = y.get(a);
      if (G)
        return G;
      y.set(a, B);
      var H = C ? void 0 : (c ? l : t)(a);
      return f(H || a, function(e, f) {
        H && (f = e, e = a[f]), g(B, f, d(e, b, c, v, f, a, y));
      }), B;
    }
    var e = (this || self, a("a1")),
        f = a("1c4"),
        g = a("117"),
        h = a("1ac"),
        i = a("97"),
        j = a("99"),
        k = a("1af"),
        l = a("1b4"),
        m = a("1c5"),
        n = a("1b5"),
        o = a("1c2"),
        p = a("9a"),
        q = a("53"),
        r = a("9b"),
        s = a("9d"),
        t = a("3a"),
        u = "[object Arguments]",
        v = "[object Array]",
        w = "[object Boolean]",
        x = "[object Date]",
        y = "[object Error]",
        z = "[object Function]",
        A = "[object GeneratorFunction]",
        B = "[object Map]",
        C = "[object Number]",
        D = "[object Object]",
        E = "[object RegExp]",
        F = "[object Set]",
        G = "[object String]",
        H = "[object Symbol]",
        I = "[object WeakMap]",
        J = "[object ArrayBuffer]",
        K = "[object DataView]",
        L = "[object Float32Array]",
        M = "[object Float64Array]",
        N = "[object Int8Array]",
        O = "[object Int16Array]",
        P = "[object Int32Array]",
        Q = "[object Uint8Array]",
        R = "[object Uint8ClampedArray]",
        S = "[object Uint16Array]",
        T = "[object Uint32Array]",
        U = {};
    return U[u] = U[v] = U[J] = U[K] = U[w] = U[x] = U[L] = U[M] = U[N] = U[O] = U[P] = U[B] = U[C] = U[D] = U[E] = U[F] = U[G] = U[H] = U[Q] = U[R] = U[S] = U[T] = !0, U[y] = U[z] = U[I] = !1, c.exports = d, c.exports;
  }), a.registerDynamic("b2", ["8e"], !0, function(a, b, c) {
    function d(a) {
      return e(a, !1, !0);
    }
    var e = (this || self, a("8e"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("1c4", [], !0, function(a, b, c) {
    function d(a, b) {
      for (var c = -1,
          d = a ? a.length : 0; ++c < d && b(a[c], c, a) !== !1; )
        ;
      return a;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1c6", [], !0, function(a, b, c) {
    function d(a) {
      return function(b, c, d) {
        for (var e = -1,
            f = Object(b),
            g = d(b),
            h = g.length; h--; ) {
          var i = g[a ? h : ++e];
          if (c(f[i], i, f) === !1)
            break;
        }
        return b;
      };
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("a2", ["1c6"], !0, function(a, b, c) {
    var d = (this || self, a("1c6")),
        e = d();
    return c.exports = e, c.exports;
  }), a.registerDynamic("1c7", ["a2", "3a"], !0, function(a, b, c) {
    function d(a, b) {
      return a && e(a, b, f);
    }
    var e = (this || self, a("a2")),
        f = a("3a");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1c8", ["39"], !0, function(a, b, c) {
    function d(a, b) {
      return function(c, d) {
        if (null == c)
          return c;
        if (!e(c))
          return a(c, d);
        for (var f = c.length,
            g = b ? f : -1,
            h = Object(c); (b ? g-- : ++g < f) && d(h[g], g, h) !== !1; )
          ;
        return c;
      };
    }
    var e = (this || self, a("39"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("6e", ["1c7", "1c8"], !0, function(a, b, c) {
    var d = (this || self, a("1c7")),
        e = a("1c8"),
        f = e(d);
    return c.exports = f, c.exports;
  }), a.registerDynamic("1c9", ["a1", "1ca"], !0, function(a, b, c) {
    function d(a, b, c, d) {
      var i = c.length,
          j = i,
          k = !d;
      if (null == a)
        return !j;
      for (a = Object(a); i--; ) {
        var l = c[i];
        if (k && l[2] ? l[1] !== a[l[0]] : !(l[0] in a))
          return !1;
      }
      for (; ++i < j; ) {
        l = c[i];
        var m = l[0],
            n = a[m],
            o = l[1];
        if (k && l[2]) {
          if (void 0 === n && !(m in a))
            return !1;
        } else {
          var p = new e;
          if (d)
            var q = d(n, o, m, a, b, p);
          if (!(void 0 === q ? f(o, n, d, g | h, p) : q))
            return !1;
        }
      }
      return !0;
    }
    var e = (this || self, a("a1")),
        f = a("1ca"),
        g = 1,
        h = 2;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1cb", ["1cc", "3a"], !0, function(a, b, c) {
    function d(a) {
      for (var b = f(a),
          c = b.length; c--; ) {
        var d = b[c],
            g = a[d];
        b[c] = [d, g, e(g)];
      }
      return b;
    }
    var e = (this || self, a("1cc")),
        f = a("3a");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1cd", ["1c9", "1cb", "1ce"], !0, function(a, b, c) {
    function d(a) {
      var b = f(a);
      return 1 == b.length && b[0][2] ? g(b[0][0], b[0][1]) : function(c) {
        return c === a || e(c, a, b);
      };
    }
    var e = (this || self, a("1c9")),
        f = a("1cb"),
        g = a("1ce");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1cf", ["1d0"], !0, function(a, b, c) {
    function d() {
      this.__data__ = new e, this.size = 0;
    }
    var e = (this || self, a("1d0"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("1d1", [], !0, function(a, b, c) {
    function d(a) {
      var b = this.__data__,
          c = b.delete(a);
      return this.size = b.size, c;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1d2", [], !0, function(a, b, c) {
    function d(a) {
      return this.__data__.get(a);
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1d3", [], !0, function(a, b, c) {
    function d(a) {
      return this.__data__.has(a);
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1d4", ["1d0", "1d5", "1d6"], !0, function(a, b, c) {
    function d(a, b) {
      var c = this.__data__;
      if (c instanceof e) {
        var d = c.__data__;
        if (!f || d.length < h - 1)
          return d.push([a, b]), this.size = ++c.size, this;
        c = this.__data__ = new g(d);
      }
      return c.set(a, b), this.size = c.size, this;
    }
    var e = (this || self, a("1d0")),
        f = a("1d5"),
        g = a("1d6"),
        h = 200;
    return c.exports = d, c.exports;
  }), a.registerDynamic("a1", ["1d0", "1cf", "1d1", "1d2", "1d3", "1d4"], !0, function(a, b, c) {
    function d(a) {
      var b = this.__data__ = new e(a);
      this.size = b.size;
    }
    var e = (this || self, a("1d0")),
        f = a("1cf"),
        g = a("1d1"),
        h = a("1d2"),
        i = a("1d3"),
        j = a("1d4");
    return d.prototype.clear = f, d.prototype.delete = g, d.prototype.get = h, d.prototype.has = i, d.prototype.set = j, c.exports = d, c.exports;
  }), a.registerDynamic("1c1", ["1ad"], !0, function(a, b, c) {
    var d = (this || self, a("1ad")),
        e = d.Uint8Array;
    return c.exports = e, c.exports;
  }), a.registerDynamic("1d7", [], !0, function(a, b, c) {
    function d(a, b) {
      for (var c = -1,
          d = a ? a.length : 0; ++c < d; )
        if (b(a[c], c, a))
          return !0;
      return !1;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1d8", ["1d9", "1d7", "1da"], !0, function(a, b, c) {
    function d(a, b, c, d, j, k) {
      var l = j & i,
          m = a.length,
          n = b.length;
      if (m != n && !(l && n > m))
        return !1;
      var o = k.get(a);
      if (o && k.get(b))
        return o == b;
      var p = -1,
          q = !0,
          r = j & h ? new e : void 0;
      for (k.set(a, b), k.set(b, a); ++p < m; ) {
        var s = a[p],
            t = b[p];
        if (d)
          var u = l ? d(t, s, p, b, a, k) : d(s, t, p, a, b, k);
        if (void 0 !== u) {
          if (u)
            continue;
          q = !1;
          break;
        }
        if (r) {
          if (!f(b, function(a, b) {
            if (!g(r, b) && (s === a || c(s, a, d, j, k)))
              return r.push(b);
          })) {
            q = !1;
            break;
          }
        } else if (s !== t && !c(s, t, d, j, k)) {
          q = !1;
          break;
        }
      }
      return k.delete(a), k.delete(b), q;
    }
    var e = (this || self, a("1d9")),
        f = a("1d7"),
        g = a("1da"),
        h = 1,
        i = 2;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1bb", [], !0, function(a, b, c) {
    function d(a) {
      var b = -1,
          c = Array(a.size);
      return a.forEach(function(a, d) {
        c[++b] = [d, a];
      }), c;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1db", ["6a", "1c1", "91", "1d8", "1bb", "1bf"], !0, function(a, b, c) {
    function d(a, b, c, d, e, x, z) {
      switch (c) {
        case w:
          if (a.byteLength != b.byteLength || a.byteOffset != b.byteOffset)
            return !1;
          a = a.buffer, b = b.buffer;
        case v:
          return !(a.byteLength != b.byteLength || !d(new f(a), new f(b)));
        case m:
        case n:
        case q:
          return g(+a, +b);
        case o:
          return a.name == b.name && a.message == b.message;
        case r:
        case t:
          return a == b + "";
        case p:
          var A = i;
        case s:
          var B = x & l;
          if (A || (A = j), a.size != b.size && !B)
            return !1;
          var C = z.get(a);
          if (C)
            return C == b;
          x |= k, z.set(a, b);
          var D = h(A(a), A(b), d, e, x, z);
          return z.delete(a), D;
        case u:
          if (y)
            return y.call(a) == y.call(b);
      }
      return !1;
    }
    var e = (this || self, a("6a")),
        f = a("1c1"),
        g = a("91"),
        h = a("1d8"),
        i = a("1bb"),
        j = a("1bf"),
        k = 1,
        l = 2,
        m = "[object Boolean]",
        n = "[object Date]",
        o = "[object Error]",
        p = "[object Map]",
        q = "[object Number]",
        r = "[object RegExp]",
        s = "[object Set]",
        t = "[object String]",
        u = "[object Symbol]",
        v = "[object ArrayBuffer]",
        w = "[object DataView]",
        x = e ? e.prototype : void 0,
        y = x ? x.valueOf : void 0;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1dc", [], !0, function(a, b, c) {
    function d(a, b) {
      for (var c = -1,
          d = Array(a); ++c < a; )
        d[c] = b(c);
      return d;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("120", ["1dc", "6b", "53", "9b", "11d", "9f"], !0, function(a, b, c) {
    function d(a, b) {
      var c = g(a),
          d = !c && f(a),
          k = !c && !d && h(a),
          m = !c && !d && !k && j(a),
          n = c || d || k || m,
          o = n ? e(a.length, String) : [],
          p = o.length;
      for (var q in a)
        !b && !l.call(a, q) || n && ("length" == q || k && ("offset" == q || "parent" == q) || m && ("buffer" == q || "byteLength" == q || "byteOffset" == q) || i(q, p)) || o.push(q);
      return o;
    }
    var e = (this || self, a("1dc")),
        f = a("6b"),
        g = a("53"),
        h = a("9b"),
        i = a("11d"),
        j = a("9f"),
        k = Object.prototype,
        l = k.hasOwnProperty;
    return c.exports = d, c.exports;
  }), a.registerDynamic("118", [], !0, function(a, b, c) {
    function d(a) {
      var b = a && a.constructor,
          c = "function" == typeof b && b.prototype || e;
      return a === c;
    }
    var e = (this || self, Object.prototype);
    return c.exports = d, c.exports;
  }), a.registerDynamic("1b3", [], !0, function(a, b, c) {
    function d(a, b) {
      return function(c) {
        return a(b(c));
      };
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1dd", ["1b3"], !0, function(a, b, c) {
    var d = (this || self, a("1b3")),
        e = d(Object.keys, Object);
    return c.exports = e, c.exports;
  }), a.registerDynamic("1de", ["118", "1dd"], !0, function(a, b, c) {
    function d(a) {
      if (!e(a))
        return f(a);
      var b = [];
      for (var c in Object(a))
        h.call(a, c) && "constructor" != c && b.push(c);
      return b;
    }
    var e = (this || self, a("118")),
        f = a("1dd"),
        g = Object.prototype,
        h = g.hasOwnProperty;
    return c.exports = d, c.exports;
  }), a.registerDynamic("39", ["9c", "1df"], !0, function(a, b, c) {
    function d(a) {
      return null != a && f(a.length) && !e(a);
    }
    var e = (this || self, a("9c")),
        f = a("1df");
    return c.exports = d, c.exports;
  }), a.registerDynamic("3a", ["120", "1de", "39"], !0, function(a, b, c) {
    function d(a) {
      return g(a) ? e(a) : f(a);
    }
    var e = (this || self, a("120")),
        f = a("1de"),
        g = a("39");
    return c.exports = d, c.exports;
  });
  a.registerDynamic("1e0", ["3a"], !0, function(a, b, c) {
    function d(a, b, c, d, g, i) {
      var j = g & f,
          k = e(a),
          l = k.length,
          m = e(b),
          n = m.length;
      if (l != n && !j)
        return !1;
      for (var o = l; o--; ) {
        var p = k[o];
        if (!(j ? p in b : h.call(b, p)))
          return !1;
      }
      var q = i.get(a);
      if (q && i.get(b))
        return q == b;
      var r = !0;
      i.set(a, b), i.set(b, a);
      for (var s = j; ++o < l; ) {
        p = k[o];
        var t = a[p],
            u = b[p];
        if (d)
          var v = j ? d(u, t, p, b, a, i) : d(t, u, p, a, b, i);
        if (!(void 0 === v ? t === u || c(t, u, d, g, i) : v)) {
          r = !1;
          break;
        }
        s || (s = "constructor" == p);
      }
      if (r && !s) {
        var w = a.constructor,
            x = b.constructor;
        w != x && "constructor" in a && "constructor" in b && !("function" == typeof w && w instanceof w && "function" == typeof x && x instanceof x) && (r = !1);
      }
      return i.delete(a), i.delete(b), r;
    }
    var e = (this || self, a("3a")),
        f = 2,
        g = Object.prototype,
        h = g.hasOwnProperty;
    return c.exports = d, c.exports;
  });
  a.registerDynamic("1e1", ["1ae", "1ad"], !0, function(a, b, c) {
    var d = (this || self, a("1ae")),
        e = a("1ad"),
        f = d(e, "DataView");
    return c.exports = f, c.exports;
  }), a.registerDynamic("1e2", ["1ae", "1ad"], !0, function(a, b, c) {
    var d = (this || self, a("1ae")),
        e = a("1ad"),
        f = d(e, "Promise");
    return c.exports = f, c.exports;
  }), a.registerDynamic("1e3", ["1ae", "1ad"], !0, function(a, b, c) {
    var d = (this || self, a("1ae")),
        e = a("1ad"),
        f = d(e, "WeakMap");
    return c.exports = f, c.exports;
  }), a.registerDynamic("1e4", [], !0, function(a, b, c) {
    function d(a) {
      return f.call(a);
    }
    var e = (this || self, Object.prototype),
        f = e.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1c5", ["1e1", "1d5", "1e2", "1e5", "1e3", "1e4", "1e6"], !0, function(a, b, c) {
    var d = (this || self, a("1e1")),
        e = a("1d5"),
        f = a("1e2"),
        g = a("1e5"),
        h = a("1e3"),
        i = a("1e4"),
        j = a("1e6"),
        k = "[object Map]",
        l = "[object Object]",
        m = "[object Promise]",
        n = "[object Set]",
        o = "[object WeakMap]",
        p = "[object DataView]",
        q = Object.prototype,
        r = q.toString,
        s = j(d),
        t = j(e),
        u = j(f),
        v = j(g),
        w = j(h),
        x = i;
    return (d && x(new d(new ArrayBuffer(1))) != p || e && x(new e) != k || f && x(f.resolve()) != m || g && x(new g) != n || h && x(new h) != o) && (x = function(a) {
      var b = r.call(a),
          c = b == l ? a.constructor : void 0,
          d = c ? j(c) : void 0;
      if (d)
        switch (d) {
          case s:
            return p;
          case t:
            return k;
          case u:
            return m;
          case v:
            return n;
          case w:
            return o;
        }
      return b;
    }), c.exports = x, c.exports;
  }), a.registerDynamic("1e7", [], !0, function(a, b, c) {
    function d() {
      return !1;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("9b", ["1ad", "1e7"], !0, function(a, b, c) {
    var d = (this || self, a("1ad")),
        e = a("1e7"),
        f = "object" == typeof b && b && !b.nodeType && b,
        g = f && "object" == typeof c && c && !c.nodeType && c,
        h = g && g.exports === f,
        i = h ? d.Buffer : void 0,
        j = i ? i.isBuffer : void 0,
        k = j || e;
    return c.exports = k, c.exports;
  }), a.registerDynamic("1e8", ["1df", "7f"], !0, function(a, b, c) {
    function d(a) {
      return f(a) && e(a.length) && !!E[G.call(a)];
    }
    var e = (this || self, a("1df")),
        f = a("7f"),
        g = "[object Arguments]",
        h = "[object Array]",
        i = "[object Boolean]",
        j = "[object Date]",
        k = "[object Error]",
        l = "[object Function]",
        m = "[object Map]",
        n = "[object Number]",
        o = "[object Object]",
        p = "[object RegExp]",
        q = "[object Set]",
        r = "[object String]",
        s = "[object WeakMap]",
        t = "[object ArrayBuffer]",
        u = "[object DataView]",
        v = "[object Float32Array]",
        w = "[object Float64Array]",
        x = "[object Int8Array]",
        y = "[object Int16Array]",
        z = "[object Int32Array]",
        A = "[object Uint8Array]",
        B = "[object Uint8ClampedArray]",
        C = "[object Uint16Array]",
        D = "[object Uint32Array]",
        E = {};
    E[v] = E[w] = E[x] = E[y] = E[z] = E[A] = E[B] = E[C] = E[D] = !0, E[g] = E[h] = E[t] = E[i] = E[u] = E[j] = E[k] = E[l] = E[m] = E[n] = E[o] = E[p] = E[q] = E[r] = E[s] = !1;
    var F = Object.prototype,
        G = F.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("74", [], !0, function(a, b, c) {
    function d(a) {
      return function(b) {
        return a(b);
      };
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1a7", ["1e9"], !0, function(a, b, c) {
    var d = (this || self, a("1e9")),
        e = "object" == typeof b && b && !b.nodeType && b,
        f = e && "object" == typeof c && c && !c.nodeType && c,
        g = f && f.exports === e,
        h = g && d.process,
        i = function() {
          try {
            return h && h.binding("util");
          } catch (a) {}
        }();
    return c.exports = i, c.exports;
  }), a.registerDynamic("9f", ["1e8", "74", "1a7"], !0, function(a, b, c) {
    var d = (this || self, a("1e8")),
        e = a("74"),
        f = a("1a7"),
        g = f && f.isTypedArray,
        h = g ? e(g) : d;
    return c.exports = h, c.exports;
  }), a.registerDynamic("1ea", ["a1", "1d8", "1db", "1e0", "1c5", "53", "9b", "9f"], !0, function(a, b, c) {
    function d(a, b, c, d, q, s) {
      var t = j(a),
          u = j(b),
          v = o,
          w = o;
      t || (v = i(a), v = v == n ? p : v), u || (w = i(b), w = w == n ? p : w);
      var x = v == p,
          y = w == p,
          z = v == w;
      if (z && k(a)) {
        if (!k(b))
          return !1;
        t = !0, x = !1;
      }
      if (z && !x)
        return s || (s = new e), t || l(a) ? f(a, b, c, d, q, s) : g(a, b, v, c, d, q, s);
      if (!(q & m)) {
        var A = x && r.call(a, "__wrapped__"),
            B = y && r.call(b, "__wrapped__");
        if (A || B) {
          var C = A ? a.value() : a,
              D = B ? b.value() : b;
          return s || (s = new e), c(C, D, d, q, s);
        }
      }
      return !!z && (s || (s = new e), h(a, b, c, d, q, s));
    }
    var e = (this || self, a("a1")),
        f = a("1d8"),
        g = a("1db"),
        h = a("1e0"),
        i = a("1c5"),
        j = a("53"),
        k = a("9b"),
        l = a("9f"),
        m = 2,
        n = "[object Arguments]",
        o = "[object Array]",
        p = "[object Object]",
        q = Object.prototype,
        r = q.hasOwnProperty;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1ca", ["1ea", "9d", "7f"], !0, function(a, b, c) {
    function d(a, b, c, h, i) {
      return a === b || (null == a || null == b || !f(a) && !g(b) ? a !== a && b !== b : e(a, b, d, c, h, i));
    }
    var e = (this || self, a("1ea")),
        f = a("9d"),
        g = a("7f");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1eb", ["1ec"], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = null == a ? void 0 : e(a, b);
      return void 0 === d ? c : d;
    }
    var e = (this || self, a("1ec"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("1ed", [], !0, function(a, b, c) {
    function d(a, b) {
      return null != a && b in Object(a);
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1ee", ["7f"], !0, function(a, b, c) {
    function d(a) {
      return e(a) && h.call(a) == f;
    }
    var e = (this || self, a("7f")),
        f = "[object Arguments]",
        g = Object.prototype,
        h = g.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("6b", ["1ee", "7f"], !0, function(a, b, c) {
    var d = (this || self, a("1ee")),
        e = a("7f"),
        f = Object.prototype,
        g = f.hasOwnProperty,
        h = f.propertyIsEnumerable,
        i = d(function() {
          return arguments;
        }()) ? d : function(a) {
          return e(a) && g.call(a, "callee") && !h.call(a, "callee");
        };
    return c.exports = i, c.exports;
  }), a.registerDynamic("11d", [], !0, function(a, b, c) {
    function d(a, b) {
      return b = null == b ? e : b, !!b && ("number" == typeof a || f.test(a)) && a > -1 && a % 1 == 0 && a < b;
    }
    var e = (this || self, 9007199254740991),
        f = /^(?:0|[1-9]\d*)$/;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1df", [], !0, function(a, b, c) {
    function d(a) {
      return "number" == typeof a && a > -1 && a % 1 == 0 && a <= e;
    }
    var e = (this || self, 9007199254740991);
    return c.exports = d, c.exports;
  }), a.registerDynamic("112", ["1ef", "6b", "53", "11d", "1f0", "1df", "1f1"], !0, function(a, b, c) {
    function d(a, b, c) {
      b = i(b, a) ? [b] : e(b);
      for (var d = -1,
          l = b.length,
          m = !1; ++d < l; ) {
        var n = k(b[d]);
        if (!(m = null != a && c(a, n)))
          break;
        a = a[n];
      }
      return m || ++d != l ? m : (l = a ? a.length : 0, !!l && j(l) && h(n, l) && (g(a) || f(a)));
    }
    var e = (this || self, a("1ef")),
        f = a("6b"),
        g = a("53"),
        h = a("11d"),
        i = a("1f0"),
        j = a("1df"),
        k = a("1f1");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1f2", ["1ed", "112"], !0, function(a, b, c) {
    function d(a, b) {
      return null != a && f(a, b, e);
    }
    var e = (this || self, a("1ed")),
        f = a("112");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1cc", ["9d"], !0, function(a, b, c) {
    function d(a) {
      return a === a && !e(a);
    }
    var e = (this || self, a("9d"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("1ce", [], !0, function(a, b, c) {
    function d(a, b) {
      return function(c) {
        return null != c && (c[a] === b && (void 0 !== b || a in Object(c)));
      };
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1f3", ["1ca", "1eb", "1f2", "1f0", "1cc", "1ce", "1f1"], !0, function(a, b, c) {
    function d(a, b) {
      return h(a) && i(b) ? j(k(a), b) : function(c) {
        var d = f(c, a);
        return void 0 === d && d === b ? g(c, a) : e(b, d, void 0, l | m);
      };
    }
    var e = (this || self, a("1ca")),
        f = a("1eb"),
        g = a("1f2"),
        h = a("1f0"),
        i = a("1cc"),
        j = a("1ce"),
        k = a("1f1"),
        l = 1,
        m = 2;
    return c.exports = d, c.exports;
  }), a.registerDynamic("75", [], !0, function(a, b, c) {
    function d(a) {
      return a;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1f4", [], !0, function(a, b, c) {
    function d(a) {
      return function(b) {
        return null == b ? void 0 : b[a];
      };
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1f5", ["1d6"], !0, function(a, b, c) {
    function d(a, b) {
      if ("function" != typeof a || b && "function" != typeof b)
        throw new TypeError(f);
      var c = function() {
        var d = arguments,
            e = b ? b.apply(this, d) : d[0],
            f = c.cache;
        if (f.has(e))
          return f.get(e);
        var g = a.apply(this, d);
        return c.cache = f.set(e, g) || f, g;
      };
      return c.cache = new (d.Cache || e), c;
    }
    var e = (this || self, a("1d6")),
        f = "Expected a function";
    return d.Cache = e, c.exports = d, c.exports;
  }), a.registerDynamic("1f6", ["1f5"], !0, function(a, b, c) {
    function d(a) {
      var b = e(a, function(a) {
        return c.size === f && c.clear(), a;
      }),
          c = b.cache;
      return b;
    }
    var e = (this || self, a("1f5")),
        f = 500;
    return c.exports = d, c.exports;
  }), a.registerDynamic("6a", ["1ad"], !0, function(a, b, c) {
    var d = (this || self, a("1ad")),
        e = d.Symbol;
    return c.exports = e, c.exports;
  }), a.registerDynamic("51", [], !0, function(a, b, c) {
    function d(a, b) {
      for (var c = -1,
          d = a ? a.length : 0,
          e = Array(d); ++c < d; )
        e[c] = b(a[c], c, a);
      return e;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("47", ["6a", "51", "53", "71"], !0, function(a, b, c) {
    function d(a) {
      if ("string" == typeof a)
        return a;
      if (g(a))
        return f(a, d) + "";
      if (h(a))
        return k ? k.call(a) : "";
      var b = a + "";
      return "0" == b && 1 / a == -i ? "-0" : b;
    }
    var e = (this || self, a("6a")),
        f = a("51"),
        g = a("53"),
        h = a("71"),
        i = 1 / 0,
        j = e ? e.prototype : void 0,
        k = j ? j.toString : void 0;
    return c.exports = d, c.exports;
  }), a.registerDynamic("48", ["47"], !0, function(a, b, c) {
    function d(a) {
      return null == a ? "" : e(a);
    }
    var e = (this || self, a("47"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("1f7", ["1f6", "48"], !0, function(a, b, c) {
    var d = (this || self, a("1f6")),
        e = a("48"),
        f = /^\./,
        g = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
        h = /\\(\\)?/g,
        i = d(function(a) {
          a = e(a);
          var b = [];
          return f.test(a) && b.push(""), a.replace(g, function(a, c, d, e) {
            b.push(d ? e.replace(h, "$1") : c || a);
          }), b;
        });
    return c.exports = i, c.exports;
  }), a.registerDynamic("1ef", ["53", "1f7"], !0, function(a, b, c) {
    function d(a) {
      return e(a) ? a : f(a);
    }
    var e = (this || self, a("53")),
        f = a("1f7");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1ec", ["1ef", "1f0", "1f1"], !0, function(a, b, c) {
    function d(a, b) {
      b = f(b, a) ? [b] : e(b);
      for (var c = 0,
          d = b.length; null != a && c < d; )
        a = a[g(b[c++])];
      return c && c == d ? a : void 0;
    }
    var e = (this || self, a("1ef")),
        f = a("1f0"),
        g = a("1f1");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1f8", ["1ec"], !0, function(a, b, c) {
    function d(a) {
      return function(b) {
        return e(b, a);
      };
    }
    var e = (this || self, a("1ec"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("1f0", ["53", "71"], !0, function(a, b, c) {
    function d(a, b) {
      if (e(a))
        return !1;
      var c = typeof a;
      return !("number" != c && "symbol" != c && "boolean" != c && null != a && !f(a)) || (h.test(a) || !g.test(a) || null != b && a in Object(b));
    }
    var e = (this || self, a("53")),
        f = a("71"),
        g = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
        h = /^\w*$/;
    return c.exports = d, c.exports;
  }), a.registerDynamic("7f", [], !0, function(a, b, c) {
    function d(a) {
      return null != a && "object" == typeof a;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("71", ["7f"], !0, function(a, b, c) {
    function d(a) {
      return "symbol" == typeof a || e(a) && h.call(a) == f;
    }
    var e = (this || self, a("7f")),
        f = "[object Symbol]",
        g = Object.prototype,
        h = g.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1f1", ["71"], !0, function(a, b, c) {
    function d(a) {
      if ("string" == typeof a || e(a))
        return a;
      var b = a + "";
      return "0" == b && 1 / a == -f ? "-0" : b;
    }
    var e = (this || self, a("71")),
        f = 1 / 0;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1f9", ["1f4", "1f8", "1f0", "1f1"], !0, function(a, b, c) {
    function d(a) {
      return g(a) ? e(h(a)) : f(a);
    }
    var e = (this || self, a("1f4")),
        f = a("1f8"),
        g = a("1f0"),
        h = a("1f1");
    return c.exports = d, c.exports;
  }), a.registerDynamic("35", ["1cd", "1f3", "75", "53", "1f9"], !0, function(a, b, c) {
    function d(a) {
      return "function" == typeof a ? a : null == a ? g : "object" == typeof a ? h(a) ? f(a[0], a[1]) : e(a) : i(a);
    }
    var e = (this || self, a("1cd")),
        f = a("1f3"),
        g = a("75"),
        h = a("53"),
        i = a("1f9");
    return c.exports = d, c.exports;
  }), a.registerDynamic("53", [], !0, function(a, b, c) {
    var d = (this || self, Array.isArray);
    return c.exports = d, c.exports;
  }), a.registerDynamic("1fa", ["1c4", "6e", "35", "53"], !0, function(a, b, c) {
    function d(a, b) {
      var c = h(a) ? e : f;
      return c(a, g(b, 3));
    }
    var e = (this || self, a("1c4")),
        f = a("6e"),
        g = a("35"),
        h = a("53");
    return c.exports = d, c.exports;
  }), a.registerDynamic("8", ["1fa"], !0, function(a, b, c) {
    this || self;
    return c.exports = a("1fa"), c.exports;
  }), a.registerDynamic("1fb", ["1fc"], !0, function(a, b, c) {
    function d() {
      this.__data__ = e ? e(null) : {}, this.size = 0;
    }
    var e = (this || self, a("1fc"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("1fd", [], !0, function(a, b, c) {
    function d(a) {
      var b = this.has(a) && delete this.__data__[a];
      return this.size -= b ? 1 : 0, b;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1fe", ["1fc"], !0, function(a, b, c) {
    function d(a) {
      var b = this.__data__;
      if (e) {
        var c = b[a];
        return c === f ? void 0 : c;
      }
      return h.call(b, a) ? b[a] : void 0;
    }
    var e = (this || self, a("1fc")),
        f = "__lodash_hash_undefined__",
        g = Object.prototype,
        h = g.hasOwnProperty;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1ff", ["1fc"], !0, function(a, b, c) {
    function d(a) {
      var b = this.__data__;
      return e ? void 0 !== b[a] : g.call(b, a);
    }
    var e = (this || self, a("1fc")),
        f = Object.prototype,
        g = f.hasOwnProperty;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1fc", ["1ae"], !0, function(a, b, c) {
    var d = (this || self, a("1ae")),
        e = d(Object, "create");
    return c.exports = e, c.exports;
  }), a.registerDynamic("200", ["1fc"], !0, function(a, b, c) {
    function d(a, b) {
      var c = this.__data__;
      return this.size += this.has(a) ? 0 : 1, c[a] = e && void 0 === b ? f : b, this;
    }
    var e = (this || self, a("1fc")),
        f = "__lodash_hash_undefined__";
    return c.exports = d, c.exports;
  }), a.registerDynamic("201", ["1fb", "1fd", "1fe", "1ff", "200"], !0, function(a, b, c) {
    function d(a) {
      var b = -1,
          c = a ? a.length : 0;
      for (this.clear(); ++b < c; ) {
        var d = a[b];
        this.set(d[0], d[1]);
      }
    }
    var e = (this || self, a("1fb")),
        f = a("1fd"),
        g = a("1fe"),
        h = a("1ff"),
        i = a("200");
    return d.prototype.clear = e, d.prototype.delete = f, d.prototype.get = g, d.prototype.has = h, d.prototype.set = i, c.exports = d, c.exports;
  }), a.registerDynamic("202", [], !0, function(a, b, c) {
    function d() {
      this.__data__ = [], this.size = 0;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("203", ["204"], !0, function(a, b, c) {
    function d(a) {
      var b = this.__data__,
          c = e(b, a);
      if (c < 0)
        return !1;
      var d = b.length - 1;
      return c == d ? b.pop() : g.call(b, c, 1), --this.size, !0;
    }
    var e = (this || self, a("204")),
        f = Array.prototype,
        g = f.splice;
    return c.exports = d, c.exports;
  }), a.registerDynamic("205", ["204"], !0, function(a, b, c) {
    function d(a) {
      var b = this.__data__,
          c = e(b, a);
      return c < 0 ? void 0 : b[c][1];
    }
    var e = (this || self, a("204"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("206", ["204"], !0, function(a, b, c) {
    function d(a) {
      return e(this.__data__, a) > -1;
    }
    var e = (this || self, a("204"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("91", [], !0, function(a, b, c) {
    function d(a, b) {
      return a === b || a !== a && b !== b;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("204", ["91"], !0, function(a, b, c) {
    function d(a, b) {
      for (var c = a.length; c--; )
        if (e(a[c][0], b))
          return c;
      return -1;
    }
    var e = (this || self, a("91"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("207", ["204"], !0, function(a, b, c) {
    function d(a, b) {
      var c = this.__data__,
          d = e(c, a);
      return d < 0 ? (++this.size, c.push([a, b])) : c[d][1] = b, this;
    }
    var e = (this || self, a("204"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("1d0", ["202", "203", "205", "206", "207"], !0, function(a, b, c) {
    function d(a) {
      var b = -1,
          c = a ? a.length : 0;
      for (this.clear(); ++b < c; ) {
        var d = a[b];
        this.set(d[0], d[1]);
      }
    }
    var e = (this || self, a("202")),
        f = a("203"),
        g = a("205"),
        h = a("206"),
        i = a("207");
    return d.prototype.clear = e, d.prototype.delete = f, d.prototype.get = g, d.prototype.has = h, d.prototype.set = i, c.exports = d, c.exports;
  }), a.registerDynamic("1d5", ["1ae", "1ad"], !0, function(a, b, c) {
    var d = (this || self, a("1ae")),
        e = a("1ad"),
        f = d(e, "Map");
    return c.exports = f, c.exports;
  }), a.registerDynamic("208", ["201", "1d0", "1d5"], !0, function(a, b, c) {
    function d() {
      this.size = 0, this.__data__ = {
        hash: new e,
        map: new (g || f),
        string: new e
      };
    }
    var e = (this || self, a("201")),
        f = a("1d0"),
        g = a("1d5");
    return c.exports = d, c.exports;
  }), a.registerDynamic("209", ["20a"], !0, function(a, b, c) {
    function d(a) {
      var b = e(this, a).delete(a);
      return this.size -= b ? 1 : 0, b;
    }
    var e = (this || self, a("20a"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("20b", ["20a"], !0, function(a, b, c) {
    function d(a) {
      return e(this, a).get(a);
    }
    var e = (this || self, a("20a"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("20c", ["20a"], !0, function(a, b, c) {
    function d(a) {
      return e(this, a).has(a);
    }
    var e = (this || self, a("20a"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("20d", [], !0, function(a, b, c) {
    function d(a) {
      var b = typeof a;
      return "string" == b || "number" == b || "symbol" == b || "boolean" == b ? "__proto__" !== a : null === a;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("20a", ["20d"], !0, function(a, b, c) {
    function d(a, b) {
      var c = a.__data__;
      return e(b) ? c["string" == typeof b ? "string" : "hash"] : c.map;
    }
    var e = (this || self, a("20d"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("20e", ["20a"], !0, function(a, b, c) {
    function d(a, b) {
      var c = e(this, a),
          d = c.size;
      return c.set(a, b), this.size += c.size == d ? 0 : 1, this;
    }
    var e = (this || self, a("20a"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("1d6", ["208", "209", "20b", "20c", "20e"], !0, function(a, b, c) {
    function d(a) {
      var b = -1,
          c = a ? a.length : 0;
      for (this.clear(); ++b < c; ) {
        var d = a[b];
        this.set(d[0], d[1]);
      }
    }
    var e = (this || self, a("208")),
        f = a("209"),
        g = a("20b"),
        h = a("20c"),
        i = a("20e");
    return d.prototype.clear = e, d.prototype.delete = f, d.prototype.get = g, d.prototype.has = h, d.prototype.set = i, c.exports = d, c.exports;
  }), a.registerDynamic("20f", [], !0, function(a, b, c) {
    function d(a) {
      return this.__data__.set(a, e), this;
    }
    var e = (this || self, "__lodash_hash_undefined__");
    return c.exports = d, c.exports;
  }), a.registerDynamic("210", [], !0, function(a, b, c) {
    function d(a) {
      return this.__data__.has(a);
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1d9", ["1d6", "20f", "210"], !0, function(a, b, c) {
    function d(a) {
      var b = -1,
          c = a ? a.length : 0;
      for (this.__data__ = new e; ++b < c; )
        this.add(a[b]);
    }
    var e = (this || self, a("1d6")),
        f = a("20f"),
        g = a("210");
    return d.prototype.add = d.prototype.push = f, d.prototype.has = g, c.exports = d, c.exports;
  }), a.registerDynamic("34", [], !0, function(a, b, c) {
    function d(a, b, c, d) {
      for (var e = a.length,
          f = c + (d ? 1 : -1); d ? f-- : ++f < e; )
        if (b(a[f], f, a))
          return f;
      return -1;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("211", [], !0, function(a, b, c) {
    function d(a) {
      return a !== a;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("212", [], !0, function(a, b, c) {
    function d(a, b, c) {
      for (var d = c - 1,
          e = a.length; ++d < e; )
        if (a[d] === b)
          return d;
      return -1;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("41", ["34", "211", "212"], !0, function(a, b, c) {
    function d(a, b, c) {
      return b === b ? g(a, b, c) : e(a, f, c);
    }
    var e = (this || self, a("34")),
        f = a("211"),
        g = a("212");
    return c.exports = d, c.exports;
  }), a.registerDynamic("213", ["41"], !0, function(a, b, c) {
    function d(a, b) {
      var c = a ? a.length : 0;
      return !!c && e(a, b, 0) > -1;
    }
    var e = (this || self, a("41"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("214", [], !0, function(a, b, c) {
    function d(a, b, c) {
      for (var d = -1,
          e = a ? a.length : 0; ++d < e; )
        if (c(b, a[d]))
          return !0;
      return !1;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1da", [], !0, function(a, b, c) {
    function d(a, b) {
      return a.has(b);
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("9c", ["9d"], !0, function(a, b, c) {
    function d(a) {
      var b = e(a) ? j.call(a) : "";
      return b == f || b == g || b == h;
    }
    var e = (this || self, a("9d")),
        f = "[object Function]",
        g = "[object GeneratorFunction]",
        h = "[object Proxy]",
        i = Object.prototype,
        j = i.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("215", ["1ad"], !0, function(a, b, c) {
    var d = (this || self, a("1ad")),
        e = d["__core-js_shared__"];
    return c.exports = e, c.exports;
  }), a.registerDynamic("216", ["215"], !0, function(a, b, c) {
    function d(a) {
      return !!f && f in a;
    }
    var e = (this || self, a("215")),
        f = function() {
          var a = /[^.]+$/.exec(e && e.keys && e.keys.IE_PROTO || "");
          return a ? "Symbol(src)_1." + a : "";
        }();
    return c.exports = d, c.exports;
  }), a.registerDynamic("9d", [], !0, function(a, b, c) {
    function d(a) {
      var b = typeof a;
      return null != a && ("object" == b || "function" == b);
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1e6", [], !0, function(a, b, c) {
    function d(a) {
      if (null != a) {
        try {
          return f.call(a);
        } catch (a) {}
        try {
          return a + "";
        } catch (a) {}
      }
      return "";
    }
    var e = (this || self, Function.prototype),
        f = e.toString;
    return c.exports = d, c.exports;
  }), a.registerDynamic("217", ["9c", "216", "9d", "1e6"], !0, function(a, b, c) {
    function d(a) {
      if (!g(a) || f(a))
        return !1;
      var b = e(a) ? o : j;
      return b.test(h(a));
    }
    var e = (this || self, a("9c")),
        f = a("216"),
        g = a("9d"),
        h = a("1e6"),
        i = /[\\^$.*+?()[\]{}|]/g,
        j = /^\[object .+?Constructor\]$/,
        k = Function.prototype,
        l = Object.prototype,
        m = k.toString,
        n = l.hasOwnProperty,
        o = RegExp("^" + m.call(n).replace(i, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
    return c.exports = d, c.exports;
  }), a.registerDynamic("218", [], !0, function(a, b, c) {
    function d(a, b) {
      return null == a ? void 0 : a[b];
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("1ae", ["217", "218"], !0, function(a, b, c) {
    function d(a, b) {
      var c = f(a, b);
      return e(c) ? c : void 0;
    }
    var e = (this || self, a("217")),
        f = a("218");
    return c.exports = d, c.exports;
  }), a.registerDynamic("1e9", [], !0, function(a, b, c) {
    var d = this || self,
        e = "object" == typeof d && d && d.Object === Object && d;
    return c.exports = e, c.exports;
  }), a.registerDynamic("1ad", ["1e9"], !0, function(a, b, c) {
    var d = (this || self, a("1e9")),
        e = "object" == typeof self && self && self.Object === Object && self,
        f = d || e || Function("return this")();
    return c.exports = f, c.exports;
  }), a.registerDynamic("1e5", ["1ae", "1ad"], !0, function(a, b, c) {
    var d = (this || self, a("1ae")),
        e = a("1ad"),
        f = d(e, "Set");
    return c.exports = f, c.exports;
  }), a.registerDynamic("219", [], !0, function(a, b, c) {
    function d() {}
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("21a", ["1e5", "219", "1bf"], !0, function(a, b, c) {
    var d = (this || self, a("1e5")),
        e = a("219"),
        f = a("1bf"),
        g = 1 / 0,
        h = d && 1 / f(new d([, -0]))[1] == g ? function(a) {
          return new d(a);
        } : e;
    return c.exports = h, c.exports;
  }), a.registerDynamic("1bf", [], !0, function(a, b, c) {
    function d(a) {
      var b = -1,
          c = Array(a.size);
      return a.forEach(function(a) {
        c[++b] = a;
      }), c;
    }
    this || self;
    return c.exports = d, c.exports;
  }), a.registerDynamic("21b", ["1d9", "213", "214", "1da", "21a", "1bf"], !0, function(a, b, c) {
    function d(a, b, c) {
      var d = -1,
          l = f,
          m = a.length,
          n = !0,
          o = [],
          p = o;
      if (c)
        n = !1, l = g;
      else if (m >= k) {
        var q = b ? null : i(a);
        if (q)
          return j(q);
        n = !1, l = h, p = new e;
      } else
        p = b ? [] : o;
      a: for (; ++d < m; ) {
        var r = a[d],
            s = b ? b(r) : r;
        if (r = c || 0 !== r ? r : 0, n && s === s) {
          for (var t = p.length; t--; )
            if (p[t] === s)
              continue a;
          b && p.push(s), o.push(r);
        } else
          l(p, s, c) || (p !== o && p.push(s), o.push(r));
      }
      return o;
    }
    var e = (this || self, a("1d9")),
        f = a("213"),
        g = a("214"),
        h = a("1da"),
        i = a("21a"),
        j = a("1bf"),
        k = 200;
    return c.exports = d, c.exports;
  }), a.registerDynamic("21c", ["21b"], !0, function(a, b, c) {
    function d(a) {
      return a && a.length ? e(a) : [];
    }
    var e = (this || self, a("21b"));
    return c.exports = d, c.exports;
  }), a.registerDynamic("21d", ["195", "31", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return a("195"), c.exports = a("31").Symbol.for, c.exports;
  }), a.registerDynamic("21e", ["21d"], !0, function(a, b, c) {
    this || self;
    return c.exports = {
      default: a("21d"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("1a1", ["21e"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0, b.NOT_LOCAL_BINDING = b.BLOCK_SCOPED_SYMBOL = b.INHERIT_KEYS = b.UNARY_OPERATORS = b.STRING_UNARY_OPERATORS = b.NUMBER_UNARY_OPERATORS = b.BOOLEAN_UNARY_OPERATORS = b.BINARY_OPERATORS = b.NUMBER_BINARY_OPERATORS = b.BOOLEAN_BINARY_OPERATORS = b.COMPARISON_BINARY_OPERATORS = b.EQUALITY_BINARY_OPERATORS = b.BOOLEAN_NUMBER_BINARY_OPERATORS = b.UPDATE_OPERATORS = b.LOGICAL_OPERATORS = b.COMMENT_KEYS = b.FOR_INIT_KEYS = b.FLATTENABLE_KEYS = b.STATEMENT_OR_BLOCK_KEYS = void 0;
    var e = a("21e"),
        f = d(e),
        g = (b.STATEMENT_OR_BLOCK_KEYS = ["consequent", "body", "alternate"], b.FLATTENABLE_KEYS = ["body", "expressions"], b.FOR_INIT_KEYS = ["left", "init"], b.COMMENT_KEYS = ["leadingComments", "trailingComments", "innerComments"], b.LOGICAL_OPERATORS = ["||", "&&"], b.UPDATE_OPERATORS = ["++", "--"], b.BOOLEAN_NUMBER_BINARY_OPERATORS = [">", "<", ">=", "<="]),
        h = b.EQUALITY_BINARY_OPERATORS = ["==", "===", "!=", "!=="],
        i = b.COMPARISON_BINARY_OPERATORS = [].concat(h, ["in", "instanceof"]),
        j = b.BOOLEAN_BINARY_OPERATORS = [].concat(i, g),
        k = b.NUMBER_BINARY_OPERATORS = ["-", "/", "%", "*", "**", "&", "|", ">>", ">>>", "<<", "^"],
        l = (b.BINARY_OPERATORS = ["+"].concat(k, j), b.BOOLEAN_UNARY_OPERATORS = ["delete", "!"]),
        m = b.NUMBER_UNARY_OPERATORS = ["+", "-", "++", "--", "~"],
        n = b.STRING_UNARY_OPERATORS = ["typeof"];
    b.UNARY_OPERATORS = ["void"].concat(l, m, n), b.INHERIT_KEYS = {
      optional: ["typeAnnotation", "typeParameters", "returnType"],
      force: ["start", "loc", "end"]
    }, b.BLOCK_SCOPED_SYMBOL = (0, f.default)("var used to be block scoped"), b.NOT_LOCAL_BINDING = (0, f.default)("should not be considered a local binding");
    return c.exports;
  }), a.registerDynamic("21f", ["9", "1a1", "220"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function e(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    var f = (this || self, a("9")),
        g = e(f),
        h = a("1a1"),
        i = a("220"),
        j = d(i);
    return (0, j.default)("ArrayExpression", {
      fields: {elements: {
          validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeOrValueType)("null", "Expression", "SpreadElement"))),
          default: []
        }},
      visitor: ["elements"],
      aliases: ["Expression"]
    }), (0, j.default)("AssignmentExpression", {
      fields: {
        operator: {validate: (0, i.assertValueType)("string")},
        left: {validate: (0, i.assertNodeType)("LVal")},
        right: {validate: (0, i.assertNodeType)("Expression")}
      },
      builder: ["operator", "left", "right"],
      visitor: ["left", "right"],
      aliases: ["Expression"]
    }), (0, j.default)("BinaryExpression", {
      builder: ["operator", "left", "right"],
      fields: {
        operator: {validate: i.assertOneOf.apply(void 0, h.BINARY_OPERATORS)},
        left: {validate: (0, i.assertNodeType)("Expression")},
        right: {validate: (0, i.assertNodeType)("Expression")}
      },
      visitor: ["left", "right"],
      aliases: ["Binary", "Expression"]
    }), (0, j.default)("Directive", {
      visitor: ["value"],
      fields: {value: {validate: (0, i.assertNodeType)("DirectiveLiteral")}}
    }), (0, j.default)("DirectiveLiteral", {
      builder: ["value"],
      fields: {value: {validate: (0, i.assertValueType)("string")}}
    }), (0, j.default)("BlockStatement", {
      builder: ["body", "directives"],
      visitor: ["directives", "body"],
      fields: {
        directives: {
          validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Directive"))),
          default: []
        },
        body: {validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Statement")))}
      },
      aliases: ["Scopable", "BlockParent", "Block", "Statement"]
    }), (0, j.default)("BreakStatement", {
      visitor: ["label"],
      fields: {label: {
          validate: (0, i.assertNodeType)("Identifier"),
          optional: !0
        }},
      aliases: ["Statement", "Terminatorless", "CompletionStatement"]
    }), (0, j.default)("CallExpression", {
      visitor: ["callee", "arguments"],
      fields: {
        callee: {validate: (0, i.assertNodeType)("Expression")},
        arguments: {validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Expression", "SpreadElement")))}
      },
      aliases: ["Expression"]
    }), (0, j.default)("CatchClause", {
      visitor: ["param", "body"],
      fields: {
        param: {validate: (0, i.assertNodeType)("Identifier")},
        body: {validate: (0, i.assertNodeType)("BlockStatement")}
      },
      aliases: ["Scopable"]
    }), (0, j.default)("ConditionalExpression", {
      visitor: ["test", "consequent", "alternate"],
      fields: {
        test: {validate: (0, i.assertNodeType)("Expression")},
        consequent: {validate: (0, i.assertNodeType)("Expression")},
        alternate: {validate: (0, i.assertNodeType)("Expression")}
      },
      aliases: ["Expression", "Conditional"]
    }), (0, j.default)("ContinueStatement", {
      visitor: ["label"],
      fields: {label: {
          validate: (0, i.assertNodeType)("Identifier"),
          optional: !0
        }},
      aliases: ["Statement", "Terminatorless", "CompletionStatement"]
    }), (0, j.default)("DebuggerStatement", {aliases: ["Statement"]}), (0, j.default)("DoWhileStatement", {
      visitor: ["test", "body"],
      fields: {
        test: {validate: (0, i.assertNodeType)("Expression")},
        body: {validate: (0, i.assertNodeType)("Statement")}
      },
      aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"]
    }), (0, j.default)("EmptyStatement", {aliases: ["Statement"]}), (0, j.default)("ExpressionStatement", {
      visitor: ["expression"],
      fields: {expression: {validate: (0, i.assertNodeType)("Expression")}},
      aliases: ["Statement", "ExpressionWrapper"]
    }), (0, j.default)("File", {
      builder: ["program", "comments", "tokens"],
      visitor: ["program"],
      fields: {program: {validate: (0, i.assertNodeType)("Program")}}
    }), (0, j.default)("ForInStatement", {
      visitor: ["left", "right", "body"],
      aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],
      fields: {
        left: {validate: (0, i.assertNodeType)("VariableDeclaration", "LVal")},
        right: {validate: (0, i.assertNodeType)("Expression")},
        body: {validate: (0, i.assertNodeType)("Statement")}
      }
    }), (0, j.default)("ForStatement", {
      visitor: ["init", "test", "update", "body"],
      aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop"],
      fields: {
        init: {
          validate: (0, i.assertNodeType)("VariableDeclaration", "Expression"),
          optional: !0
        },
        test: {
          validate: (0, i.assertNodeType)("Expression"),
          optional: !0
        },
        update: {
          validate: (0, i.assertNodeType)("Expression"),
          optional: !0
        },
        body: {validate: (0, i.assertNodeType)("Statement")}
      }
    }), (0, j.default)("FunctionDeclaration", {
      builder: ["id", "params", "body", "generator", "async"],
      visitor: ["id", "params", "body", "returnType", "typeParameters"],
      fields: {
        id: {validate: (0, i.assertNodeType)("Identifier")},
        params: {validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("LVal")))},
        body: {validate: (0, i.assertNodeType)("BlockStatement")},
        generator: {
          default: !1,
          validate: (0, i.assertValueType)("boolean")
        },
        async: {
          default: !1,
          validate: (0, i.assertValueType)("boolean")
        }
      },
      aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Statement", "Pureish", "Declaration"]
    }), (0, j.default)("FunctionExpression", {
      inherits: "FunctionDeclaration",
      aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"],
      fields: {
        id: {
          validate: (0, i.assertNodeType)("Identifier"),
          optional: !0
        },
        params: {validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("LVal")))},
        body: {validate: (0, i.assertNodeType)("BlockStatement")},
        generator: {
          default: !1,
          validate: (0, i.assertValueType)("boolean")
        },
        async: {
          default: !1,
          validate: (0, i.assertValueType)("boolean")
        }
      }
    }), (0, j.default)("Identifier", {
      builder: ["name"],
      visitor: ["typeAnnotation"],
      aliases: ["Expression", "LVal"],
      fields: {
        name: {validate: function(a, b, c) {
            !g.isValidIdentifier(c);
          }},
        decorators: {validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Decorator")))}
      }
    }), (0, j.default)("IfStatement", {
      visitor: ["test", "consequent", "alternate"],
      aliases: ["Statement", "Conditional"],
      fields: {
        test: {validate: (0, i.assertNodeType)("Expression")},
        consequent: {validate: (0, i.assertNodeType)("Statement")},
        alternate: {
          optional: !0,
          validate: (0, i.assertNodeType)("Statement")
        }
      }
    }), (0, j.default)("LabeledStatement", {
      visitor: ["label", "body"],
      aliases: ["Statement"],
      fields: {
        label: {validate: (0, i.assertNodeType)("Identifier")},
        body: {validate: (0, i.assertNodeType)("Statement")}
      }
    }), (0, j.default)("StringLiteral", {
      builder: ["value"],
      fields: {value: {validate: (0, i.assertValueType)("string")}},
      aliases: ["Expression", "Pureish", "Literal", "Immutable"]
    }), (0, j.default)("NumericLiteral", {
      builder: ["value"],
      deprecatedAlias: "NumberLiteral",
      fields: {value: {validate: (0, i.assertValueType)("number")}},
      aliases: ["Expression", "Pureish", "Literal", "Immutable"]
    }), (0, j.default)("NullLiteral", {aliases: ["Expression", "Pureish", "Literal", "Immutable"]}), (0, j.default)("BooleanLiteral", {
      builder: ["value"],
      fields: {value: {validate: (0, i.assertValueType)("boolean")}},
      aliases: ["Expression", "Pureish", "Literal", "Immutable"]
    }), (0, j.default)("RegExpLiteral", {
      builder: ["pattern", "flags"],
      deprecatedAlias: "RegexLiteral",
      aliases: ["Expression", "Literal"],
      fields: {
        pattern: {validate: (0, i.assertValueType)("string")},
        flags: {
          validate: (0, i.assertValueType)("string"),
          default: ""
        }
      }
    }), (0, j.default)("LogicalExpression", {
      builder: ["operator", "left", "right"],
      visitor: ["left", "right"],
      aliases: ["Binary", "Expression"],
      fields: {
        operator: {validate: i.assertOneOf.apply(void 0, h.LOGICAL_OPERATORS)},
        left: {validate: (0, i.assertNodeType)("Expression")},
        right: {validate: (0, i.assertNodeType)("Expression")}
      }
    }), (0, j.default)("MemberExpression", {
      builder: ["object", "property", "computed"],
      visitor: ["object", "property"],
      aliases: ["Expression", "LVal"],
      fields: {
        object: {validate: (0, i.assertNodeType)("Expression")},
        property: {validate: function(a, b, c) {
            var d = a.computed ? "Expression" : "Identifier";
            (0, i.assertNodeType)(d)(a, b, c);
          }},
        computed: {default: !1}
      }
    }), (0, j.default)("NewExpression", {
      visitor: ["callee", "arguments"],
      aliases: ["Expression"],
      fields: {
        callee: {validate: (0, i.assertNodeType)("Expression")},
        arguments: {validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Expression", "SpreadElement")))}
      }
    }), (0, j.default)("Program", {
      visitor: ["directives", "body"],
      builder: ["body", "directives"],
      fields: {
        directives: {
          validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Directive"))),
          default: []
        },
        body: {validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Statement")))}
      },
      aliases: ["Scopable", "BlockParent", "Block", "FunctionParent"]
    }), (0, j.default)("ObjectExpression", {
      visitor: ["properties"],
      aliases: ["Expression"],
      fields: {properties: {validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("ObjectMethod", "ObjectProperty", "SpreadProperty")))}}
    }), (0, j.default)("ObjectMethod", {
      builder: ["kind", "key", "params", "body", "computed"],
      fields: {
        kind: {
          validate: (0, i.chain)((0, i.assertValueType)("string"), (0, i.assertOneOf)("method", "get", "set")),
          default: "method"
        },
        computed: {
          validate: (0, i.assertValueType)("boolean"),
          default: !1
        },
        key: {validate: function(a, b, c) {
            var d = a.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];
            i.assertNodeType.apply(void 0, d)(a, b, c);
          }},
        decorators: {validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Decorator")))},
        body: {validate: (0, i.assertNodeType)("BlockStatement")},
        generator: {
          default: !1,
          validate: (0, i.assertValueType)("boolean")
        },
        async: {
          default: !1,
          validate: (0, i.assertValueType)("boolean")
        }
      },
      visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],
      aliases: ["UserWhitespacable", "Function", "Scopable", "BlockParent", "FunctionParent", "Method", "ObjectMember"]
    }), (0, j.default)("ObjectProperty", {
      builder: ["key", "value", "computed", "shorthand", "decorators"],
      fields: {
        computed: {
          validate: (0, i.assertValueType)("boolean"),
          default: !1
        },
        key: {validate: function(a, b, c) {
            var d = a.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];
            i.assertNodeType.apply(void 0, d)(a, b, c);
          }},
        value: {validate: (0, i.assertNodeType)("Expression")},
        shorthand: {
          validate: (0, i.assertValueType)("boolean"),
          default: !1
        },
        decorators: {
          validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Decorator"))),
          optional: !0
        }
      },
      visitor: ["key", "value", "decorators"],
      aliases: ["UserWhitespacable", "Property", "ObjectMember"]
    }), (0, j.default)("RestElement", {
      visitor: ["argument", "typeAnnotation"],
      aliases: ["LVal"],
      fields: {
        argument: {validate: (0, i.assertNodeType)("LVal")},
        decorators: {validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Decorator")))}
      }
    }), (0, j.default)("ReturnStatement", {
      visitor: ["argument"],
      aliases: ["Statement", "Terminatorless", "CompletionStatement"],
      fields: {argument: {
          validate: (0, i.assertNodeType)("Expression"),
          optional: !0
        }}
    }), (0, j.default)("SequenceExpression", {
      visitor: ["expressions"],
      fields: {expressions: {validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Expression")))}},
      aliases: ["Expression"]
    }), (0, j.default)("SwitchCase", {
      visitor: ["test", "consequent"],
      fields: {
        test: {
          validate: (0, i.assertNodeType)("Expression"),
          optional: !0
        },
        consequent: {validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Statement")))}
      }
    }), (0, j.default)("SwitchStatement", {
      visitor: ["discriminant", "cases"],
      aliases: ["Statement", "BlockParent", "Scopable"],
      fields: {
        discriminant: {validate: (0, i.assertNodeType)("Expression")},
        cases: {validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("SwitchCase")))}
      }
    }), (0, j.default)("ThisExpression", {aliases: ["Expression"]}), (0, j.default)("ThrowStatement", {
      visitor: ["argument"],
      aliases: ["Statement", "Terminatorless", "CompletionStatement"],
      fields: {argument: {validate: (0, i.assertNodeType)("Expression")}}
    }), (0, j.default)("TryStatement", {
      visitor: ["block", "handler", "finalizer"],
      aliases: ["Statement"],
      fields: {
        body: {validate: (0, i.assertNodeType)("BlockStatement")},
        handler: {
          optional: !0,
          handler: (0, i.assertNodeType)("BlockStatement")
        },
        finalizer: {
          optional: !0,
          validate: (0, i.assertNodeType)("BlockStatement")
        }
      }
    }), (0, j.default)("UnaryExpression", {
      builder: ["operator", "argument", "prefix"],
      fields: {
        prefix: {default: !0},
        argument: {validate: (0, i.assertNodeType)("Expression")},
        operator: {validate: i.assertOneOf.apply(void 0, h.UNARY_OPERATORS)}
      },
      visitor: ["argument"],
      aliases: ["UnaryLike", "Expression"]
    }), (0, j.default)("UpdateExpression", {
      builder: ["operator", "argument", "prefix"],
      fields: {
        prefix: {default: !1},
        argument: {validate: (0, i.assertNodeType)("Expression")},
        operator: {validate: i.assertOneOf.apply(void 0, h.UPDATE_OPERATORS)}
      },
      visitor: ["argument"],
      aliases: ["Expression"]
    }), (0, j.default)("VariableDeclaration", {
      builder: ["kind", "declarations"],
      visitor: ["declarations"],
      aliases: ["Statement", "Declaration"],
      fields: {
        kind: {validate: (0, i.chain)((0, i.assertValueType)("string"), (0, i.assertOneOf)("var", "let", "const"))},
        declarations: {validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("VariableDeclarator")))}
      }
    }), (0, j.default)("VariableDeclarator", {
      visitor: ["id", "init"],
      fields: {
        id: {validate: (0, i.assertNodeType)("LVal")},
        init: {
          optional: !0,
          validate: (0, i.assertNodeType)("Expression")
        }
      }
    }), (0, j.default)("WhileStatement", {
      visitor: ["test", "body"],
      aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"],
      fields: {
        test: {validate: (0, i.assertNodeType)("Expression")},
        body: {validate: (0, i.assertNodeType)("BlockStatement", "Statement")}
      }
    }), (0, j.default)("WithStatement", {
      visitor: ["object", "body"],
      aliases: ["Statement"],
      fields: {
        object: {object: (0, i.assertNodeType)("Expression")},
        body: {validate: (0, i.assertNodeType)("BlockStatement", "Statement")}
      }
    }), c.exports;
  }), a.registerDynamic("221", ["220"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    var e = (this || self, a("220")),
        f = d(e);
    return (0, f.default)("AssignmentPattern", {
      visitor: ["left", "right"],
      aliases: ["Pattern", "LVal"],
      fields: {
        left: {validate: (0, e.assertNodeType)("Identifier")},
        right: {validate: (0, e.assertNodeType)("Expression")},
        decorators: {validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("Decorator")))}
      }
    }), (0, f.default)("ArrayPattern", {
      visitor: ["elements", "typeAnnotation"],
      aliases: ["Pattern", "LVal"],
      fields: {
        elements: {validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("Expression")))},
        decorators: {validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("Decorator")))}
      }
    }), (0, f.default)("ArrowFunctionExpression", {
      builder: ["params", "body", "async"],
      visitor: ["params", "body", "returnType", "typeParameters"],
      aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"],
      fields: {
        params: {validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("LVal")))},
        body: {validate: (0, e.assertNodeType)("BlockStatement", "Expression")},
        async: {
          validate: (0, e.assertValueType)("boolean"),
          default: !1
        }
      }
    }), (0, f.default)("ClassBody", {
      visitor: ["body"],
      fields: {body: {validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("ClassMethod", "ClassProperty")))}}
    }), (0, f.default)("ClassDeclaration", {
      builder: ["id", "superClass", "body", "decorators"],
      visitor: ["id", "body", "superClass", "mixins", "typeParameters", "superTypeParameters", "implements", "decorators"],
      aliases: ["Scopable", "Class", "Statement", "Declaration", "Pureish"],
      fields: {
        id: {validate: (0, e.assertNodeType)("Identifier")},
        body: {validate: (0, e.assertNodeType)("ClassBody")},
        superClass: {
          optional: !0,
          validate: (0, e.assertNodeType)("Expression")
        },
        decorators: {validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("Decorator")))}
      }
    }), (0, f.default)("ClassExpression", {
      inherits: "ClassDeclaration",
      aliases: ["Scopable", "Class", "Expression", "Pureish"],
      fields: {
        id: {
          optional: !0,
          validate: (0, e.assertNodeType)("Identifier")
        },
        body: {validate: (0, e.assertNodeType)("ClassBody")},
        superClass: {
          optional: !0,
          validate: (0, e.assertNodeType)("Expression")
        },
        decorators: {validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("Decorator")))}
      }
    }), (0, f.default)("ExportAllDeclaration", {
      visitor: ["source"],
      aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
      fields: {source: {validate: (0, e.assertNodeType)("StringLiteral")}}
    }), (0, f.default)("ExportDefaultDeclaration", {
      visitor: ["declaration"],
      aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
      fields: {declaration: {validate: (0, e.assertNodeType)("FunctionDeclaration", "ClassDeclaration", "Expression")}}
    }), (0, f.default)("ExportNamedDeclaration", {
      visitor: ["declaration", "specifiers", "source"],
      aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
      fields: {
        declaration: {
          validate: (0, e.assertNodeType)("Declaration"),
          optional: !0
        },
        specifiers: {validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("ExportSpecifier")))},
        source: {
          validate: (0, e.assertNodeType)("StringLiteral"),
          optional: !0
        }
      }
    }), (0, f.default)("ExportSpecifier", {
      visitor: ["local", "exported"],
      aliases: ["ModuleSpecifier"],
      fields: {
        local: {validate: (0, e.assertNodeType)("Identifier")},
        exported: {validate: (0, e.assertNodeType)("Identifier")}
      }
    }), (0, f.default)("ForOfStatement", {
      visitor: ["left", "right", "body"],
      aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],
      fields: {
        left: {validate: (0, e.assertNodeType)("VariableDeclaration", "LVal")},
        right: {validate: (0, e.assertNodeType)("Expression")},
        body: {validate: (0, e.assertNodeType)("Statement")}
      }
    }), (0, f.default)("ImportDeclaration", {
      visitor: ["specifiers", "source"],
      aliases: ["Statement", "Declaration", "ModuleDeclaration"],
      fields: {
        specifiers: {validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("ImportSpecifier", "ImportDefaultSpecifier", "ImportNamespaceSpecifier")))},
        source: {validate: (0, e.assertNodeType)("StringLiteral")}
      }
    }), (0, f.default)("ImportDefaultSpecifier", {
      visitor: ["local"],
      aliases: ["ModuleSpecifier"],
      fields: {local: {validate: (0, e.assertNodeType)("Identifier")}}
    }), (0, f.default)("ImportNamespaceSpecifier", {
      visitor: ["local"],
      aliases: ["ModuleSpecifier"],
      fields: {local: {validate: (0, e.assertNodeType)("Identifier")}}
    }), (0, f.default)("ImportSpecifier", {
      visitor: ["local", "imported"],
      aliases: ["ModuleSpecifier"],
      fields: {
        local: {validate: (0, e.assertNodeType)("Identifier")},
        imported: {validate: (0, e.assertNodeType)("Identifier")}
      }
    }), (0, f.default)("MetaProperty", {
      visitor: ["meta", "property"],
      aliases: ["Expression"],
      fields: {
        meta: {validate: (0, e.assertValueType)("string")},
        property: {validate: (0, e.assertValueType)("string")}
      }
    }), (0, f.default)("ClassMethod", {
      aliases: ["Function", "Scopable", "BlockParent", "FunctionParent", "Method"],
      builder: ["kind", "key", "params", "body", "computed", "static"],
      visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],
      fields: {
        kind: {
          validate: (0, e.chain)((0, e.assertValueType)("string"), (0, e.assertOneOf)("get", "set", "method", "constructor")),
          default: "method"
        },
        computed: {
          default: !1,
          validate: (0, e.assertValueType)("boolean")
        },
        static: {
          default: !1,
          validate: (0, e.assertValueType)("boolean")
        },
        key: {validate: function(a, b, c) {
            var d = a.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];
            e.assertNodeType.apply(void 0, d)(a, b, c);
          }},
        params: {validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("LVal")))},
        body: {validate: (0, e.assertNodeType)("BlockStatement")},
        generator: {
          default: !1,
          validate: (0, e.assertValueType)("boolean")
        },
        async: {
          default: !1,
          validate: (0, e.assertValueType)("boolean")
        }
      }
    }), (0, f.default)("ObjectPattern", {
      visitor: ["properties", "typeAnnotation"],
      aliases: ["Pattern", "LVal"],
      fields: {
        properties: {validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("RestProperty", "Property")))},
        decorators: {validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("Decorator")))}
      }
    }), (0, f.default)("SpreadElement", {
      visitor: ["argument"],
      aliases: ["UnaryLike"],
      fields: {argument: {validate: (0, e.assertNodeType)("Expression")}}
    }), (0, f.default)("Super", {aliases: ["Expression"]}), (0, f.default)("TaggedTemplateExpression", {
      visitor: ["tag", "quasi"],
      aliases: ["Expression"],
      fields: {
        tag: {validate: (0, e.assertNodeType)("Expression")},
        quasi: {validate: (0, e.assertNodeType)("TemplateLiteral")}
      }
    }), (0, f.default)("TemplateElement", {
      builder: ["value", "tail"],
      fields: {
        value: {},
        tail: {
          validate: (0, e.assertValueType)("boolean"),
          default: !1
        }
      }
    }), (0, f.default)("TemplateLiteral", {
      visitor: ["quasis", "expressions"],
      aliases: ["Expression", "Literal"],
      fields: {
        quasis: {validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("TemplateElement")))},
        expressions: {validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("Expression")))}
      }
    }), (0, f.default)("YieldExpression", {
      builder: ["argument", "delegate"],
      visitor: ["argument"],
      aliases: ["Expression", "Terminatorless"],
      fields: {
        delegate: {
          validate: (0, e.assertValueType)("boolean"),
          default: !1
        },
        argument: {
          optional: !0,
          validate: (0, e.assertNodeType)("Expression")
        }
      }
    }), c.exports;
  }), a.registerDynamic("222", ["220"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    var e = (this || self, a("220")),
        f = d(e);
    return (0, f.default)("AnyTypeAnnotation", {
      aliases: ["Flow", "FlowBaseAnnotation"],
      fields: {}
    }), (0, f.default)("ArrayTypeAnnotation", {
      visitor: ["elementType"],
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("BooleanTypeAnnotation", {
      aliases: ["Flow", "FlowBaseAnnotation"],
      fields: {}
    }), (0, f.default)("BooleanLiteralTypeAnnotation", {
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("NullLiteralTypeAnnotation", {
      aliases: ["Flow", "FlowBaseAnnotation"],
      fields: {}
    }), (0, f.default)("ClassImplements", {
      visitor: ["id", "typeParameters"],
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("ClassProperty", {
      visitor: ["key", "value", "typeAnnotation", "decorators"],
      builder: ["key", "value", "typeAnnotation", "decorators", "computed"],
      aliases: ["Property"],
      fields: {computed: {
          validate: (0, e.assertValueType)("boolean"),
          default: !1
        }}
    }), (0, f.default)("DeclareClass", {
      visitor: ["id", "typeParameters", "extends", "body"],
      aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
      fields: {}
    }), (0, f.default)("DeclareFunction", {
      visitor: ["id"],
      aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
      fields: {}
    }), (0, f.default)("DeclareInterface", {
      visitor: ["id", "typeParameters", "extends", "body"],
      aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
      fields: {}
    }), (0, f.default)("DeclareModule", {
      visitor: ["id", "body"],
      aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
      fields: {}
    }), (0, f.default)("DeclareModuleExports", {
      visitor: ["typeAnnotation"],
      aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
      fields: {}
    }), (0, f.default)("DeclareTypeAlias", {
      visitor: ["id", "typeParameters", "right"],
      aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
      fields: {}
    }), (0, f.default)("DeclareVariable", {
      visitor: ["id"],
      aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
      fields: {}
    }), (0, f.default)("ExistentialTypeParam", {aliases: ["Flow"]}), (0, f.default)("FunctionTypeAnnotation", {
      visitor: ["typeParameters", "params", "rest", "returnType"],
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("FunctionTypeParam", {
      visitor: ["name", "typeAnnotation"],
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("GenericTypeAnnotation", {
      visitor: ["id", "typeParameters"],
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("InterfaceExtends", {
      visitor: ["id", "typeParameters"],
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("InterfaceDeclaration", {
      visitor: ["id", "typeParameters", "extends", "body"],
      aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
      fields: {}
    }), (0, f.default)("IntersectionTypeAnnotation", {
      visitor: ["types"],
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("MixedTypeAnnotation", {aliases: ["Flow", "FlowBaseAnnotation"]}), (0, f.default)("EmptyTypeAnnotation", {aliases: ["Flow", "FlowBaseAnnotation"]}), (0, f.default)("NullableTypeAnnotation", {
      visitor: ["typeAnnotation"],
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("NumericLiteralTypeAnnotation", {
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("NumberTypeAnnotation", {
      aliases: ["Flow", "FlowBaseAnnotation"],
      fields: {}
    }), (0, f.default)("StringLiteralTypeAnnotation", {
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("StringTypeAnnotation", {
      aliases: ["Flow", "FlowBaseAnnotation"],
      fields: {}
    }), (0, f.default)("ThisTypeAnnotation", {
      aliases: ["Flow", "FlowBaseAnnotation"],
      fields: {}
    }), (0, f.default)("TupleTypeAnnotation", {
      visitor: ["types"],
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("TypeofTypeAnnotation", {
      visitor: ["argument"],
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("TypeAlias", {
      visitor: ["id", "typeParameters", "right"],
      aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
      fields: {}
    }), (0, f.default)("TypeAnnotation", {
      visitor: ["typeAnnotation"],
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("TypeCastExpression", {
      visitor: ["expression", "typeAnnotation"],
      aliases: ["Flow", "ExpressionWrapper", "Expression"],
      fields: {}
    }), (0, f.default)("TypeParameter", {
      visitor: ["bound"],
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("TypeParameterDeclaration", {
      visitor: ["params"],
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("TypeParameterInstantiation", {
      visitor: ["params"],
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("ObjectTypeAnnotation", {
      visitor: ["properties", "indexers", "callProperties"],
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("ObjectTypeCallProperty", {
      visitor: ["value"],
      aliases: ["Flow", "UserWhitespacable"],
      fields: {}
    }), (0, f.default)("ObjectTypeIndexer", {
      visitor: ["id", "key", "value"],
      aliases: ["Flow", "UserWhitespacable"],
      fields: {}
    }), (0, f.default)("ObjectTypeProperty", {
      visitor: ["key", "value"],
      aliases: ["Flow", "UserWhitespacable"],
      fields: {}
    }), (0, f.default)("QualifiedTypeIdentifier", {
      visitor: ["id", "qualification"],
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("UnionTypeAnnotation", {
      visitor: ["types"],
      aliases: ["Flow"],
      fields: {}
    }), (0, f.default)("VoidTypeAnnotation", {
      aliases: ["Flow", "FlowBaseAnnotation"],
      fields: {}
    }), c.exports;
  }), a.registerDynamic("223", ["220"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    var e = (this || self, a("220")),
        f = d(e);
    return (0, f.default)("JSXAttribute", {
      visitor: ["name", "value"],
      aliases: ["JSX", "Immutable"],
      fields: {
        name: {validate: (0, e.assertNodeType)("JSXIdentifier", "JSXNamespacedName")},
        value: {
          optional: !0,
          validate: (0, e.assertNodeType)("JSXElement", "StringLiteral", "JSXExpressionContainer")
        }
      }
    }), (0, f.default)("JSXClosingElement", {
      visitor: ["name"],
      aliases: ["JSX", "Immutable"],
      fields: {name: {validate: (0, e.assertNodeType)("JSXIdentifier", "JSXMemberExpression")}}
    }), (0, f.default)("JSXElement", {
      builder: ["openingElement", "closingElement", "children", "selfClosing"],
      visitor: ["openingElement", "children", "closingElement"],
      aliases: ["JSX", "Immutable", "Expression"],
      fields: {
        openingElement: {validate: (0, e.assertNodeType)("JSXOpeningElement")},
        closingElement: {
          optional: !0,
          validate: (0, e.assertNodeType)("JSXClosingElement")
        },
        children: {validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("JSXText", "JSXExpressionContainer", "JSXElement")))}
      }
    }), (0, f.default)("JSXEmptyExpression", {aliases: ["JSX", "Expression"]}), (0, f.default)("JSXExpressionContainer", {
      visitor: ["expression"],
      aliases: ["JSX", "Immutable"],
      fields: {expression: {validate: (0, e.assertNodeType)("Expression")}}
    }), (0, f.default)("JSXIdentifier", {
      builder: ["name"],
      aliases: ["JSX", "Expression"],
      fields: {name: {validate: (0, e.assertValueType)("string")}}
    }), (0, f.default)("JSXMemberExpression", {
      visitor: ["object", "property"],
      aliases: ["JSX", "Expression"],
      fields: {
        object: {validate: (0, e.assertNodeType)("JSXMemberExpression", "JSXIdentifier")},
        property: {validate: (0, e.assertNodeType)("JSXIdentifier")}
      }
    }), (0, f.default)("JSXNamespacedName", {
      visitor: ["namespace", "name"],
      aliases: ["JSX"],
      fields: {
        namespace: {validate: (0, e.assertNodeType)("JSXIdentifier")},
        name: {validate: (0, e.assertNodeType)("JSXIdentifier")}
      }
    }), (0, f.default)("JSXOpeningElement", {
      builder: ["name", "attributes", "selfClosing"],
      visitor: ["name", "attributes"],
      aliases: ["JSX", "Immutable"],
      fields: {
        name: {validate: (0, e.assertNodeType)("JSXIdentifier", "JSXMemberExpression")},
        selfClosing: {
          default: !1,
          validate: (0, e.assertValueType)("boolean")
        },
        attributes: {validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("JSXAttribute", "JSXSpreadAttribute")))}
      }
    }), (0, f.default)("JSXSpreadAttribute", {
      visitor: ["argument"],
      aliases: ["JSX"],
      fields: {argument: {validate: (0, e.assertNodeType)("Expression")}}
    }), (0, f.default)("JSXText", {
      aliases: ["JSX", "Immutable"],
      builder: ["value"],
      fields: {value: {validate: (0, e.assertValueType)("string")}}
    }), c.exports;
  }), a.registerDynamic("224", ["220"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    var e = (this || self, a("220")),
        f = d(e);
    return (0, f.default)("Noop", {visitor: []}), (0, f.default)("ParenthesizedExpression", {
      visitor: ["expression"],
      aliases: ["Expression", "ExpressionWrapper"],
      fields: {expression: {validate: (0, e.assertNodeType)("Expression")}}
    }), c.exports;
  }), a.registerDynamic("225", ["220"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    var e = (this || self, a("220")),
        f = d(e);
    return (0, f.default)("AwaitExpression", {
      builder: ["argument"],
      visitor: ["argument"],
      aliases: ["Expression", "Terminatorless"],
      fields: {argument: {validate: (0, e.assertNodeType)("Expression")}}
    }), (0, f.default)("ForAwaitStatement", {
      visitor: ["left", "right", "body"],
      aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],
      fields: {
        left: {validate: (0, e.assertNodeType)("VariableDeclaration", "LVal")},
        right: {validate: (0, e.assertNodeType)("Expression")},
        body: {validate: (0, e.assertNodeType)("Statement")}
      }
    }), (0, f.default)("BindExpression", {
      visitor: ["object", "callee"],
      aliases: ["Expression"],
      fields: {}
    }), (0, f.default)("Decorator", {
      visitor: ["expression"],
      fields: {expression: {validate: (0, e.assertNodeType)("Expression")}}
    }), (0, f.default)("DoExpression", {
      visitor: ["body"],
      aliases: ["Expression"],
      fields: {body: {validate: (0, e.assertNodeType)("BlockStatement")}}
    }), (0, f.default)("ExportDefaultSpecifier", {
      visitor: ["exported"],
      aliases: ["ModuleSpecifier"],
      fields: {exported: {validate: (0, e.assertNodeType)("Identifier")}}
    }), (0, f.default)("ExportNamespaceSpecifier", {
      visitor: ["exported"],
      aliases: ["ModuleSpecifier"],
      fields: {exported: {validate: (0, e.assertNodeType)("Identifier")}}
    }), (0, f.default)("RestProperty", {
      visitor: ["argument"],
      aliases: ["UnaryLike"],
      fields: {argument: {validate: (0, e.assertNodeType)("LVal")}}
    }), (0, f.default)("SpreadProperty", {
      visitor: ["argument"],
      aliases: ["UnaryLike"],
      fields: {argument: {validate: (0, e.assertNodeType)("Expression")}}
    }), c.exports;
  }), a.registerDynamic("226", ["220", "21f", "221", "222", "223", "224", "225"], !0, function(a, b, c) {
    "use strict";
    this || self;
    return a("220"), a("21f"), a("221"), a("222"), a("223"), a("224"), a("225"), c.exports;
  }), a.registerDynamic("14d", ["227", "140", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("227")),
        e = a("140")("toStringTag"),
        f = "Arguments" == d(function() {
          return arguments;
        }()),
        g = function(a, b) {
          try {
            return a[b];
          } catch (a) {}
        };
    return c.exports = function(a) {
      var b,
          c,
          h;
      return void 0 === a ? "Undefined" : null === a ? "Null" : "string" == typeof(c = g(b = Object(a), e)) ? c : f ? d(b) : "Object" == (h = d(b)) && "function" == typeof b.callee ? "Arguments" : h;
    }, c.exports;
  }), a.registerDynamic("16f", ["14d", "140", "16d", "31", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("14d")),
        e = a("140")("iterator"),
        f = a("16d");
    return c.exports = a("31").getIteratorMethod = function(a) {
      if (void 0 != a)
        return a[e] || a["@@iterator"] || f[d(a)];
    }, c.exports;
  }), a.registerDynamic("228", ["e6", "16f", "31", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("e6")),
        e = a("16f");
    return c.exports = a("31").getIterator = function(a) {
      var b = e(a);
      if ("function" != typeof b)
        throw TypeError(a + " is not iterable!");
      return d(b.call(a));
    }, c.exports;
  }), a.registerDynamic("229", ["30", "150", "228", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return a("30"), a("150"), c.exports = a("228"), c.exports;
  }), a.registerDynamic("f", ["229"], !0, function(a, b, c) {
    this || self;
    return c.exports = {
      default: a("229"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("22a", ["31", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("31")),
        e = d.JSON || (d.JSON = {stringify: JSON.stringify});
    return c.exports = function(a) {
      return e.stringify.apply(e, arguments);
    }, c.exports;
  }), a.registerDynamic("65", ["22a"], !0, function(a, b, c) {
    this || self;
    return c.exports = {
      default: a("22a"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("22b", ["22c", "145", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("22c")),
        e = a("145");
    return c.exports = function(a) {
      return function(b, c) {
        var f,
            g,
            h = String(e(b)),
            i = d(c),
            j = h.length;
        return i < 0 || i >= j ? a ? "" : void 0 : (f = h.charCodeAt(i), f < 55296 || f > 56319 || i + 1 === j || (g = h.charCodeAt(i + 1)) < 56320 || g > 57343 ? a ? h.charAt(i) : f : a ? h.slice(i, i + 2) : (f - 55296 << 10) + (g - 56320) + 65536);
      };
    }, c.exports;
  }), a.registerDynamic("150", ["22b", "147", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), this || self, a("22b")(!0));
    return a("147")(String, "String", function(a) {
      this._t = String(a), this._i = 0;
    }, function() {
      var a,
          b = this._t,
          c = this._i;
      return c >= b.length ? {
        value: void 0,
        done: !0
      } : (a = d(b, c), this._i += a.length, {
        value: a,
        done: !1
      });
    }), c.exports;
  }), a.registerDynamic("22d", ["3"], !0, function(a, b, c) {
    a("3"), this || self;
    return c.exports = function() {}, c.exports;
  }), a.registerDynamic("148", ["3"], !0, function(a, b, c) {
    a("3"), this || self;
    return c.exports = function(a, b) {
      return {
        value: b,
        done: !!a
      };
    }, c.exports;
  }), a.registerDynamic("22e", ["142", "22f", "173", "16a", "140", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), this || self, a("142")),
        e = a("22f"),
        f = a("173"),
        g = {};
    return a("16a")(g, a("140")("iterator"), function() {
      return this;
    }), c.exports = function(a, b, c) {
      a.prototype = d(g, {next: e(1, c)}), f(a, b + " Iterator");
    }, c.exports;
  }), a.registerDynamic("165", ["145", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("145"));
    return c.exports = function(a) {
      return Object(d(a));
    }, c.exports;
  }), a.registerDynamic("230", ["169", "165", "231", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("169")),
        e = a("165"),
        f = a("231")("IE_PROTO"),
        g = Object.prototype;
    return c.exports = Object.getPrototypeOf || function(a) {
      return a = e(a), d(a, f) ? a[f] : "function" == typeof a.constructor && a instanceof a.constructor ? a.constructor.prototype : a instanceof Object ? g : null;
    }, c.exports;
  }), a.registerDynamic("147", ["232", "a8", "175", "16a", "169", "16d", "22e", "173", "230", "140", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), this || self, a("232")),
        e = a("a8"),
        f = a("175"),
        g = a("16a"),
        h = a("169"),
        i = a("16d"),
        j = a("22e"),
        k = a("173"),
        l = a("230"),
        m = a("140")("iterator"),
        n = !([].keys && "next" in [].keys()),
        o = "@@iterator",
        p = "keys",
        q = "values",
        r = function() {
          return this;
        };
    return c.exports = function(a, b, c, s, t, u, v) {
      j(c, b, s);
      var w,
          x,
          y,
          z = function(a) {
            if (!n && a in D)
              return D[a];
            switch (a) {
              case p:
                return function() {
                  return new c(this, a);
                };
              case q:
                return function() {
                  return new c(this, a);
                };
            }
            return function() {
              return new c(this, a);
            };
          },
          A = b + " Iterator",
          B = t == q,
          C = !1,
          D = a.prototype,
          E = D[m] || D[o] || t && D[t],
          F = E || z(t),
          G = t ? B ? z("entries") : F : void 0,
          H = "Array" == b ? D.entries || E : E;
      if (H && (y = l(H.call(new a)), y !== Object.prototype && (k(y, A, !0), d || h(y, m) || g(y, m, r))), B && E && E.name !== q && (C = !0, F = function() {
        return E.call(this);
      }), d && !v || !n && !C && D[m] || g(D, m, F), i[b] = F, i[A] = r, t)
        if (w = {
          values: B ? F : z(q),
          keys: u ? F : z(p),
          entries: G
        }, v)
          for (x in w)
            x in D || f(D, x, w[x]);
        else
          e(e.P + e.F * (n || C), b, w);
      return w;
    }, c.exports;
  }), a.registerDynamic("233", ["22d", "148", "16d", "234", "147", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), this || self, a("22d")),
        e = a("148"),
        f = a("16d"),
        g = a("234");
    return c.exports = a("147")(Array, "Array", function(a, b) {
      this._t = g(a), this._i = 0, this._k = b;
    }, function() {
      var a = this._t,
          b = this._k,
          c = this._i++;
      return !a || c >= a.length ? (this._t = void 0, e(1)) : "keys" == b ? e(0, c) : "values" == b ? e(0, a[c]) : e(0, [c, a[c]]);
    }, "values"), f.Arguments = f.Array, d("keys"), d("values"), d("entries"), c.exports;
  }), a.registerDynamic("16d", ["3"], !0, function(a, b, c) {
    a("3"), this || self;
    return c.exports = {}, c.exports;
  }), a.registerDynamic("30", ["233", "13d", "16a", "16d", "140", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self);
    a("233");
    for (var d = a("13d"),
        e = a("16a"),
        f = a("16d"),
        g = a("140")("toStringTag"),
        h = ["NodeList", "DOMTokenList", "MediaList", "StyleSheetList", "CSSRuleList"],
        i = 0; i < 5; i++) {
      var j = h[i],
          k = d[j],
          l = k && k.prototype;
      l && !l[g] && e(l, g, j), f[j] = f.Array;
    }
    return c.exports;
  }), a.registerDynamic("235", ["150", "30", "236", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return a("150"), a("30"), c.exports = a("236").f("iterator"), c.exports;
  }), a.registerDynamic("237", ["235"], !0, function(a, b, c) {
    this || self;
    return c.exports = {
      default: a("235"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("238", ["3"], !0, function(a, b, c) {
    a("3"), this || self;
    return c.exports = function(a) {
      if ("function" != typeof a)
        throw TypeError(a + " is not a function!");
      return a;
    }, c.exports;
  }), a.registerDynamic("e7", ["238", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("238"));
    return c.exports = function(a, b, c) {
      if (d(a), void 0 === b)
        return a;
      switch (c) {
        case 1:
          return function(c) {
            return a.call(b, c);
          };
        case 2:
          return function(c, d) {
            return a.call(b, c, d);
          };
        case 3:
          return function(c, d, e) {
            return a.call(b, c, d, e);
          };
      }
      return function() {
        return a.apply(b, arguments);
      };
    }, c.exports;
  }), a.registerDynamic("a8", ["13d", "31", "e7", "16a", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self),
        d = a("13d"),
        e = a("31"),
        f = a("e7"),
        g = a("16a"),
        h = "prototype",
        i = function(a, b, c) {
          var j,
              k,
              l,
              m = a & i.F,
              n = a & i.G,
              o = a & i.S,
              p = a & i.P,
              q = a & i.B,
              r = a & i.W,
              s = n ? e : e[b] || (e[b] = {}),
              t = s[h],
              u = n ? d : o ? d[b] : (d[b] || {})[h];
          n && (c = b);
          for (j in c)
            k = !m && u && void 0 !== u[j], k && j in s || (l = k ? u[j] : c[j], s[j] = n && "function" != typeof u[j] ? c[j] : q && k ? f(l, d) : r && u[j] == l ? function(a) {
              var b = function(b, c, d) {
                if (this instanceof a) {
                  switch (arguments.length) {
                    case 0:
                      return new a;
                    case 1:
                      return new a(b);
                    case 2:
                      return new a(b, c);
                  }
                  return new a(b, c, d);
                }
                return a.apply(this, arguments);
              };
              return b[h] = a[h], b;
            }(l) : p && "function" == typeof l ? f(Function.call, l) : l, p && ((s.virtual || (s.virtual = {}))[j] = l, a & i.R && t && !t[j] && g(t, j, l)));
        };
    return i.F = 1, i.G = 2, i.S = 4, i.P = 8, i.B = 16, i.W = 32, i.U = 64, i.R = 128, c.exports = i, c.exports;
  }), a.registerDynamic("175", ["16a", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return c.exports = a("16a"), c.exports;
  }), a.registerDynamic("149", ["239", "e5", "169", "13e", "167", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("239")("meta")),
        e = a("e5"),
        f = a("169"),
        g = a("13e").f,
        h = 0,
        i = Object.isExtensible || function() {
          return !0;
        },
        j = !a("167")(function() {
          return i(Object.preventExtensions({}));
        }),
        k = function(a) {
          g(a, d, {value: {
              i: "O" + ++h,
              w: {}
            }});
        },
        l = function(a, b) {
          if (!e(a))
            return "symbol" == typeof a ? a : ("string" == typeof a ? "S" : "P") + a;
          if (!f(a, d)) {
            if (!i(a))
              return "F";
            if (!b)
              return "E";
            k(a);
          }
          return a[d].i;
        },
        m = function(a, b) {
          if (!f(a, d)) {
            if (!i(a))
              return !0;
            if (!b)
              return !1;
            k(a);
          }
          return a[d].w;
        },
        n = function(a) {
          return j && o.NEED && i(a) && !f(a, d) && k(a), a;
        },
        o = c.exports = {
          KEY: d,
          NEED: !1,
          fastKey: l,
          getWeak: m,
          onFreeze: n
        };
    return c.exports;
  }), a.registerDynamic("173", ["13e", "169", "140", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("13e").f),
        e = a("169"),
        f = a("140")("toStringTag");
    return c.exports = function(a, b, c) {
      a && !e(a = c ? a : a.prototype, f) && d(a, f, {
        configurable: !0,
        value: b
      });
    }, c.exports;
  }), a.registerDynamic("23a", ["162", "234", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("162")),
        e = a("234");
    return c.exports = function(a, b) {
      for (var c,
          f = e(a),
          g = d(f),
          h = g.length,
          i = 0; h > i; )
        if (f[c = g[i++]] === b)
          return c;
    }, c.exports;
  }), a.registerDynamic("23b", ["162", "163", "164", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("162")),
        e = a("163"),
        f = a("164");
    return c.exports = function(a) {
      var b = d(a),
          c = e.f;
      if (c)
        for (var g,
            h = c(a),
            i = f.f,
            j = 0; h.length > j; )
          i.call(a, g = h[j++]) && b.push(g);
      return b;
    }, c.exports;
  }), a.registerDynamic("171", ["227", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("227"));
    return c.exports = Array.isArray || function(a) {
      return "Array" == d(a);
    }, c.exports;
  }), a.registerDynamic("23c", ["13e", "e6", "162", "13f", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("13e")),
        e = a("e6"),
        f = a("162");
    return c.exports = a("13f") ? Object.defineProperties : function(a, b) {
      e(a);
      for (var c,
          g = f(b),
          h = g.length,
          i = 0; h > i; )
        d.f(a, c = g[i++], b[c]);
      return a;
    }, c.exports;
  }), a.registerDynamic("23d", ["13d", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return c.exports = a("13d").document && document.documentElement, c.exports;
  }), a.registerDynamic("142", ["e6", "23c", "23e", "231", "23f", "23d", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("e6")),
        e = a("23c"),
        f = a("23e"),
        g = a("231")("IE_PROTO"),
        h = function() {},
        i = "prototype",
        j = function() {
          var b,
              c = a("23f")("iframe"),
              d = f.length,
              e = "<",
              g = ">";
          for (c.style.display = "none", a("23d").appendChild(c), c.src = "javascript:", b = c.contentWindow.document, b.open(), b.write(e + "script" + g + "document.F=Object" + e + "/script" + g), b.close(), j = b.F; d--; )
            delete j[i][f[d]];
          return j();
        };
    return c.exports = Object.create || function(a, b) {
      var c;
      return null !== a ? (h[i] = d(a), c = new h, h[i] = null, c[g] = a) : c = j(), void 0 === b ? c : e(c, b);
    }, c.exports;
  }), a.registerDynamic("240", ["234", "241", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("234")),
        e = a("241").f,
        f = {}.toString,
        g = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [],
        h = function(a) {
          try {
            return e(a);
          } catch (a) {
            return g.slice();
          }
        };
    return c.exports.f = function(a) {
      return g && "[object Window]" == f.call(a) ? h(a) : e(d(a));
    }, c.exports;
  }), a.registerDynamic("e8", ["164", "22f", "234", "242", "169", "243", "13f", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("164")),
        e = a("22f"),
        f = a("234"),
        g = a("242"),
        h = a("169"),
        i = a("243"),
        j = Object.getOwnPropertyDescriptor;
    return b.f = a("13f") ? j : function(a, b) {
      if (a = f(a), b = g(b, !0), i)
        try {
          return j(a, b);
        } catch (a) {}
      if (h(a, b))
        return e(!d.f.call(a, b), a[b]);
    }, c.exports;
  }), a.registerDynamic("162", ["244", "23e", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("244")),
        e = a("23e");
    return c.exports = Object.keys || function(a) {
      return d(a, e);
    }, c.exports;
  }), a.registerDynamic("169", ["3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, {}.hasOwnProperty);
    return c.exports = function(a, b) {
      return d.call(a, b);
    }, c.exports;
  }), a.registerDynamic("227", ["3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, {}.toString);
    return c.exports = function(a) {
      return d.call(a).slice(8, -1);
    }, c.exports;
  }), a.registerDynamic("166", ["227", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("227"));
    return c.exports = Object("z").propertyIsEnumerable(0) ? Object : function(a) {
      return "String" == d(a) ? a.split("") : Object(a);
    }, c.exports;
  }), a.registerDynamic("145", ["3"], !0, function(a, b, c) {
    a("3"), this || self;
    return c.exports = function(a) {
      if (void 0 == a)
        throw TypeError("Can't call method on  " + a);
      return a;
    }, c.exports;
  }), a.registerDynamic("234", ["166", "145", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("166")),
        e = a("145");
    return c.exports = function(a) {
      return d(e(a));
    }, c.exports;
  }), a.registerDynamic("16e", ["22c", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("22c")),
        e = Math.min;
    return c.exports = function(a) {
      return a > 0 ? e(d(a), 9007199254740991) : 0;
    }, c.exports;
  }), a.registerDynamic("22c", ["3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, Math.ceil),
        e = Math.floor;
    return c.exports = function(a) {
      return isNaN(a = +a) ? 0 : (a > 0 ? e : d)(a);
    }, c.exports;
  }), a.registerDynamic("245", ["22c", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("22c")),
        e = Math.max,
        f = Math.min;
    return c.exports = function(a, b) {
      return a = d(a), a < 0 ? e(a + b, 0) : f(a, b);
    }, c.exports;
  }), a.registerDynamic("246", ["234", "16e", "245", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("234")),
        e = a("16e"),
        f = a("245");
    return c.exports = function(a) {
      return function(b, c, g) {
        var h,
            i = d(b),
            j = e(i.length),
            k = f(g, j);
        if (a && c != c) {
          for (; j > k; )
            if (h = i[k++], h != h)
              return !0;
        } else
          for (; j > k; k++)
            if ((a || k in i) && i[k] === c)
              return a || k || 0;
        return !a && -1;
      };
    }, c.exports;
  }), a.registerDynamic("231", ["247", "239", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("247")("keys")),
        e = a("239");
    return c.exports = function(a) {
      return d[a] || (d[a] = e(a));
    }, c.exports;
  }), a.registerDynamic("244", ["169", "234", "246", "231", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("169")),
        e = a("234"),
        f = a("246")(!1),
        g = a("231")("IE_PROTO");
    return c.exports = function(a, b) {
      var c,
          h = e(a),
          i = 0,
          j = [];
      for (c in h)
        c != g && d(h, c) && j.push(c);
      for (; b.length > i; )
        d(h, c = b[i++]) && (~f(j, c) || j.push(c));
      return j;
    }, c.exports;
  }), a.registerDynamic("23e", ["3"], !0, function(a, b, c) {
    a("3"), this || self;
    return c.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(","), c.exports;
  }), a.registerDynamic("241", ["244", "23e", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("244")),
        e = a("23e").concat("length", "prototype");
    return b.f = Object.getOwnPropertyNames || function(a) {
      return d(a, e);
    }, c.exports;
  }), a.registerDynamic("164", ["3"], !0, function(a, b, c) {
    a("3"), this || self;
    return b.f = {}.propertyIsEnumerable, c.exports;
  }), a.registerDynamic("163", ["3"], !0, function(a, b, c) {
    a("3"), this || self;
    return b.f = Object.getOwnPropertySymbols, c.exports;
  }), a.registerDynamic("22f", ["3"], !0, function(a, b, c) {
    a("3"), this || self;
    return c.exports = function(a, b) {
      return {
        enumerable: !(1 & a),
        configurable: !(2 & a),
        writable: !(4 & a),
        value: b
      };
    }, c.exports;
  }), a.registerDynamic("16a", ["13e", "22f", "13f", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("13e")),
        e = a("22f");
    return c.exports = a("13f") ? function(a, b, c) {
      return d.f(a, b, e(1, c));
    } : function(a, b, c) {
      return a[b] = c, a;
    }, c.exports;
  }), a.registerDynamic("195", ["13d", "169", "13f", "a8", "175", "149", "167", "247", "173", "239", "140", "236", "248", "23a", "23b", "171", "e6", "234", "242", "22f", "142", "240", "e8", "13e", "162", "241", "164", "163", "232", "16a", "3"], !0, function(a, b, c) {
    "use strict";
    var d = (a("3"), this || self),
        d = a("13d"),
        e = a("169"),
        f = a("13f"),
        g = a("a8"),
        h = a("175"),
        i = a("149").KEY,
        j = a("167"),
        k = a("247"),
        l = a("173"),
        m = a("239"),
        n = a("140"),
        o = a("236"),
        p = a("248"),
        q = a("23a"),
        r = a("23b"),
        s = a("171"),
        t = a("e6"),
        u = a("234"),
        v = a("242"),
        w = a("22f"),
        x = a("142"),
        y = a("240"),
        z = a("e8"),
        A = a("13e"),
        B = a("162"),
        C = z.f,
        D = A.f,
        E = y.f,
        F = d.Symbol,
        G = d.JSON,
        H = G && G.stringify,
        I = "prototype",
        J = n("_hidden"),
        K = n("toPrimitive"),
        L = {}.propertyIsEnumerable,
        M = k("symbol-registry"),
        N = k("symbols"),
        O = k("op-symbols"),
        P = Object[I],
        Q = "function" == typeof F,
        R = d.QObject,
        S = !R || !R[I] || !R[I].findChild,
        T = f && j(function() {
          return 7 != x(D({}, "a", {get: function() {
              return D(this, "a", {value: 7}).a;
            }})).a;
        }) ? function(a, b, c) {
          var d = C(P, b);
          d && delete P[b], D(a, b, c), d && a !== P && D(P, b, d);
        } : D,
        U = function(a) {
          var b = N[a] = x(F[I]);
          return b._k = a, b;
        },
        V = Q && "symbol" == typeof F.iterator ? function(a) {
          return "symbol" == typeof a;
        } : function(a) {
          return a instanceof F;
        },
        W = function(a, b, c) {
          return a === P && W(O, b, c), t(a), b = v(b, !0), t(c), e(N, b) ? (c.enumerable ? (e(a, J) && a[J][b] && (a[J][b] = !1), c = x(c, {enumerable: w(0, !1)})) : (e(a, J) || D(a, J, w(1, {})), a[J][b] = !0), T(a, b, c)) : D(a, b, c);
        },
        X = function(a, b) {
          t(a);
          for (var c,
              d = r(b = u(b)),
              e = 0,
              f = d.length; f > e; )
            W(a, c = d[e++], b[c]);
          return a;
        },
        Y = function(a, b) {
          return void 0 === b ? x(a) : X(x(a), b);
        },
        Z = function(a) {
          var b = L.call(this, a = v(a, !0));
          return !(this === P && e(N, a) && !e(O, a)) && (!(b || !e(this, a) || !e(N, a) || e(this, J) && this[J][a]) || b);
        },
        $ = function(a, b) {
          if (a = u(a), b = v(b, !0), a !== P || !e(N, b) || e(O, b)) {
            var c = C(a, b);
            return !c || !e(N, b) || e(a, J) && a[J][b] || (c.enumerable = !0), c;
          }
        },
        _ = function(a) {
          for (var b,
              c = E(u(a)),
              d = [],
              f = 0; c.length > f; )
            e(N, b = c[f++]) || b == J || b == i || d.push(b);
          return d;
        },
        aa = function(a) {
          for (var b,
              c = a === P,
              d = E(c ? O : u(a)),
              f = [],
              g = 0; d.length > g; )
            !e(N, b = d[g++]) || c && !e(P, b) || f.push(N[b]);
          return f;
        };
    Q || (F = function() {
      if (this instanceof F)
        throw TypeError("Symbol is not a constructor!");
      var a = m(arguments.length > 0 ? arguments[0] : void 0),
          b = function(c) {
            this === P && b.call(O, c), e(this, J) && e(this[J], a) && (this[J][a] = !1), T(this, a, w(1, c));
          };
      return f && S && T(P, a, {
        configurable: !0,
        set: b
      }), U(a);
    }, h(F[I], "toString", function() {
      return this._k;
    }), z.f = $, A.f = W, a("241").f = y.f = _, a("164").f = Z, a("163").f = aa, f && !a("232") && h(P, "propertyIsEnumerable", Z, !0), o.f = function(a) {
      return U(n(a));
    }), g(g.G + g.W + g.F * !Q, {Symbol: F});
    for (var ba = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),
        ca = 0; ba.length > ca; )
      n(ba[ca++]);
    for (var ba = B(n.store),
        ca = 0; ba.length > ca; )
      p(ba[ca++]);
    return g(g.S + g.F * !Q, "Symbol", {
      for: function(a) {
        return e(M, a += "") ? M[a] : M[a] = F(a);
      },
      keyFor: function(a) {
        if (V(a))
          return q(M, a);
        throw TypeError(a + " is not a symbol!");
      },
      useSetter: function() {
        S = !0;
      },
      useSimple: function() {
        S = !1;
      }
    }), g(g.S + g.F * !Q, "Object", {
      create: Y,
      defineProperty: W,
      defineProperties: X,
      getOwnPropertyDescriptor: $,
      getOwnPropertyNames: _,
      getOwnPropertySymbols: aa
    }), G && g(g.S + g.F * (!Q || j(function() {
      var a = F();
      return "[null]" != H([a]) || "{}" != H({a: a}) || "{}" != H(Object(a));
    })), "JSON", {stringify: function(a) {
        if (void 0 !== a && !V(a)) {
          for (var b,
              c,
              d = [a],
              e = 1; arguments.length > e; )
            d.push(arguments[e++]);
          return b = d[1], "function" == typeof b && (c = b), !c && s(b) || (b = function(a, b) {
            if (c && (b = c.call(this, a, b)), !V(b))
              return b;
          }), d[1] = b, H.apply(G, d);
        }
      }}), F[I][K] || a("16a")(F[I], K, F[I].valueOf), l(F, "Symbol"), l(Math, "Math", !0), l(d.JSON, "JSON", !0), c.exports;
  }), a.registerDynamic("2f", ["3"], !0, function(a, b, c) {
    a("3"), this || self;
    return c.exports;
  }), a.registerDynamic("249", ["248", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return a("248")("asyncIterator"), c.exports;
  }), a.registerDynamic("232", ["3"], !0, function(a, b, c) {
    a("3"), this || self;
    return c.exports = !0, c.exports;
  }), a.registerDynamic("247", ["13d", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self),
        d = a("13d"),
        e = "__core-js_shared__",
        f = d[e] || (d[e] = {});
    return c.exports = function(a) {
      return f[a] || (f[a] = {});
    }, c.exports;
  }), a.registerDynamic("239", ["3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, 0),
        e = Math.random();
    return c.exports = function(a) {
      return "Symbol(".concat(void 0 === a ? "" : a, ")_", (++d + e).toString(36));
    }, c.exports;
  }), a.registerDynamic("140", ["247", "239", "13d", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("247")("wks")),
        e = a("239"),
        f = a("13d").Symbol,
        g = "function" == typeof f,
        h = c.exports = function(a) {
          return d[a] || (d[a] = g && f[a] || (g ? f : e)("Symbol." + a));
        };
    return h.store = d, c.exports;
  }), a.registerDynamic("236", ["140", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return b.f = a("140"), c.exports;
  }), a.registerDynamic("e6", ["e5", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("e5"));
    return c.exports = function(a) {
      if (!d(a))
        throw TypeError(a + " is not an object!");
      return a;
    }, c.exports;
  }), a.registerDynamic("13d", ["3"], !0, function(a, b, c) {
    var d = (a("3"), this || self),
        d = c.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
    return "number" == typeof __g && (__g = d), c.exports;
  }), a.registerDynamic("23f", ["e5", "13d", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("e5")),
        e = a("13d").document,
        f = d(e) && d(e.createElement);
    return c.exports = function(a) {
      return f ? e.createElement(a) : {};
    }, c.exports;
  }), a.registerDynamic("243", ["13f", "167", "23f", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return c.exports = !a("13f") && !a("167")(function() {
      return 7 != Object.defineProperty(a("23f")("div"), "a", {get: function() {
          return 7;
        }}).a;
    }), c.exports;
  }), a.registerDynamic("e5", ["3"], !0, function(a, b, c) {
    a("3"), this || self;
    return c.exports = function(a) {
      return "object" == typeof a ? null !== a : "function" == typeof a;
    }, c.exports;
  }), a.registerDynamic("242", ["e5", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("e5"));
    return c.exports = function(a, b) {
      if (!d(a))
        return a;
      var c,
          e;
      if (b && "function" == typeof(c = a.toString) && !d(e = c.call(a)))
        return e;
      if ("function" == typeof(c = a.valueOf) && !d(e = c.call(a)))
        return e;
      if (!b && "function" == typeof(c = a.toString) && !d(e = c.call(a)))
        return e;
      throw TypeError("Can't convert object to primitive value");
    }, c.exports;
  }), a.registerDynamic("167", ["3"], !0, function(a, b, c) {
    a("3"), this || self;
    return c.exports = function(a) {
      try {
        return !!a();
      } catch (a) {
        return !0;
      }
    }, c.exports;
  }), a.registerDynamic("13f", ["167", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return c.exports = !a("167")(function() {
      return 7 != Object.defineProperty({}, "a", {get: function() {
          return 7;
        }}).a;
    }), c.exports;
  }), a.registerDynamic("13e", ["e6", "243", "242", "13f", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, a("e6")),
        e = a("243"),
        f = a("242"),
        g = Object.defineProperty;
    return b.f = a("13f") ? Object.defineProperty : function(a, b, c) {
      if (d(a), b = f(b, !0), d(c), e)
        try {
          return g(a, b, c);
        } catch (a) {}
      if ("get" in c || "set" in c)
        throw TypeError("Accessors not supported!");
      return "value" in c && (a[b] = c.value), a;
    }, c.exports;
  }), a.registerDynamic("248", ["13d", "31", "232", "236", "13e", "3"], !0, function(a, b, c) {
    var d = (a("3"), this || self),
        d = a("13d"),
        e = a("31"),
        f = a("232"),
        g = a("236"),
        h = a("13e").f;
    return c.exports = function(a) {
      var b = e.Symbol || (e.Symbol = f ? {} : d.Symbol || {});
      "_" == a.charAt(0) || a in b || h(b, a, {value: g.f(a)});
    }, c.exports;
  }), a.registerDynamic("24a", ["248", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return a("248")("observable"), c.exports;
  }), a.registerDynamic("31", ["3"], !0, function(a, b, c) {
    var d = (a("3"), this || self, c.exports = {version: "2.4.0"});
    return "number" == typeof __e && (__e = d), c.exports;
  }), a.registerDynamic("24b", ["195", "2f", "249", "24a", "31", "3"], !0, function(a, b, c) {
    a("3"), this || self;
    return a("195"), a("2f"), a("249"), a("24a"), c.exports = a("31").Symbol, c.exports;
  }), a.registerDynamic("b7", ["24b"], !0, function(a, b, c) {
    this || self;
    return c.exports = {
      default: a("24b"),
      __esModule: !0
    }, c.exports;
  }), a.registerDynamic("2a", ["237", "b7"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : {default: a};
    }
    this || self;
    b.__esModule = !0;
    var e = a("237"),
        f = d(e),
        g = a("b7"),
        h = d(g),
        i = "function" == typeof h.default && "symbol" == typeof f.default ? function(a) {
          return typeof a;
        } : function(a) {
          return a && "function" == typeof h.default && a.constructor === h.default && a !== h.default.prototype ? "symbol" : typeof a;
        };
    return b.default = "function" == typeof h.default && "symbol" === i(f.default) ? function(a) {
      return "undefined" == typeof a ? "undefined" : i(a);
    } : function(a) {
      return a && "function" == typeof h.default && a.constructor === h.default && a !== h.default.prototype ? "symbol" : "undefined" == typeof a ? "undefined" : i(a);
    }, c.exports;
  }), a.registerDynamic("220", ["f", "65", "2a", "9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      return Array.isArray(a) ? "array" : null === a ? "null" : void 0 === a ? "undefined" : "undefined" == typeof a ? "undefined" : (0, s.default)(a);
    }
    function g(a) {
      function b(b, c, d) {
        if (Array.isArray(d))
          for (var e = 0; e < d.length; e++)
            a(b, c + "[" + e + "]", d[e]);
      }
      return b.each = a, b;
    }
    function h() {
      function a(a, b, d) {
        if (c.indexOf(d) < 0)
          throw new TypeError("Property " + b + " expected value to be one of " + (0, q.default)(c) + " but got " + (0, q.default)(d));
      }
      for (var b = arguments.length,
          c = Array(b),
          d = 0; d < b; d++)
        c[d] = arguments[d];
      return a.oneOf = c, a;
    }
    function i() {
      function a(a, b, d) {
        for (var e = !1,
            f = c,
            g = Array.isArray(f),
            h = 0,
            f = g ? f : (0, o.default)(f); ; ) {
          var i;
          if (g) {
            if (h >= f.length)
              break;
            i = f[h++];
          } else {
            if (h = f.next(), h.done)
              break;
            i = h.value;
          }
          var j = i;
          if (u.is(j, d)) {
            e = !0;
            break;
          }
        }
        if (!e)
          throw new TypeError("Property " + b + " of " + a.type + " expected node to be of a type " + (0, q.default)(c) + " but instead got " + (0, q.default)(d && d.type));
      }
      for (var b = arguments.length,
          c = Array(b),
          d = 0; d < b; d++)
        c[d] = arguments[d];
      return a.oneOfNodeTypes = c, a;
    }
    function j() {
      function a(a, b, d) {
        for (var e = !1,
            g = c,
            h = Array.isArray(g),
            i = 0,
            g = h ? g : (0, o.default)(g); ; ) {
          var j;
          if (h) {
            if (i >= g.length)
              break;
            j = g[i++];
          } else {
            if (i = g.next(), i.done)
              break;
            j = i.value;
          }
          var k = j;
          if (f(d) === k || u.is(k, d)) {
            e = !0;
            break;
          }
        }
        if (!e)
          throw new TypeError("Property " + b + " of " + a.type + " expected node to be of a type " + (0, q.default)(c) + " but instead got " + (0, q.default)(d && d.type));
      }
      for (var b = arguments.length,
          c = Array(b),
          d = 0; d < b; d++)
        c[d] = arguments[d];
      return a.oneOfNodeOrValueTypes = c, a;
    }
    function k(a) {
      function b(b, c, d) {
        var e = f(d) === a;
        if (!e)
          throw new TypeError("Property " + c + " expected type of " + a + " but got " + f(d));
      }
      return b.type = a, b;
    }
    function l() {
      function a() {
        for (var a = c,
            b = Array.isArray(a),
            d = 0,
            a = b ? a : (0, o.default)(a); ; ) {
          var e;
          if (b) {
            if (d >= a.length)
              break;
            e = a[d++];
          } else {
            if (d = a.next(), d.done)
              break;
            e = d.value;
          }
          var f = e;
          f.apply(void 0, arguments);
        }
      }
      for (var b = arguments.length,
          c = Array(b),
          d = 0; d < b; d++)
        c[d] = arguments[d];
      return a.chainOf = c, a;
    }
    function m(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          c = b.inherits && A[b.inherits] || {};
      b.fields = b.fields || c.fields || {}, b.visitor = b.visitor || c.visitor || [], b.aliases = b.aliases || c.aliases || [], b.builder = b.builder || c.builder || b.visitor || [], b.deprecatedAlias && (z[b.deprecatedAlias] = a);
      for (var d = b.visitor.concat(b.builder),
          e = Array.isArray(d),
          g = 0,
          d = e ? d : (0, o.default)(d); ; ) {
        var h;
        if (e) {
          if (g >= d.length)
            break;
          h = d[g++];
        } else {
          if (g = d.next(), g.done)
            break;
          h = g.value;
        }
        var i = h;
        b.fields[i] = b.fields[i] || {};
      }
      for (var j in b.fields) {
        var l = b.fields[j];
        b.builder.indexOf(j) === -1 && (l.optional = !0), void 0 === l.default ? l.default = null : l.validate || (l.validate = k(f(l.default)));
      }
      v[a] = b.visitor, y[a] = b.builder, x[a] = b.fields, w[a] = b.aliases, A[a] = b;
    }
    this || self;
    b.__esModule = !0, b.DEPRECATED_KEYS = b.BUILDER_KEYS = b.NODE_FIELDS = b.ALIAS_KEYS = b.VISITOR_KEYS = void 0;
    var n = a("f"),
        o = e(n),
        p = a("65"),
        q = e(p),
        r = a("2a"),
        s = e(r);
    b.assertEach = g, b.assertOneOf = h, b.assertNodeType = i, b.assertNodeOrValueType = j, b.assertValueType = k, b.chain = l, b.default = m;
    var t = a("9"),
        u = d(t),
        v = b.VISITOR_KEYS = {},
        w = b.ALIAS_KEYS = {},
        x = b.NODE_FIELDS = {},
        y = b.BUILDER_KEYS = {},
        z = b.DEPRECATED_KEYS = {},
        A = {};
    return c.exports;
  }), a.registerDynamic("24c", ["9"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return !!a && /^[a-z]|\-/.test(a);
    }
    function f(a, b) {
      for (var c = a.value.split(/\r\n|\n|\r/),
          d = 0,
          e = 0; e < c.length; e++)
        c[e].match(/[^ \t]/) && (d = e);
      for (var f = "",
          g = 0; g < c.length; g++) {
        var h = c[g],
            j = 0 === g,
            k = g === c.length - 1,
            l = g === d,
            m = h.replace(/\t/g, " ");
        j || (m = m.replace(/^[ ]+/, "")), k || (m = m.replace(/[ ]+$/, "")), m && (l || (m += " "), f += m);
      }
      f && b.push(i.stringLiteral(f));
    }
    function g(a) {
      for (var b = [],
          c = 0; c < a.children.length; c++) {
        var d = a.children[c];
        i.isJSXText(d) ? f(d, b) : (i.isJSXExpressionContainer(d) && (d = d.expression), i.isJSXEmptyExpression(d) || b.push(d));
      }
      return b;
    }
    this || self;
    b.__esModule = !0, b.isReactComponent = void 0, b.isCompatTag = e, b.buildChildren = g;
    var h = a("9"),
        i = d(h);
    b.isReactComponent = i.buildMatchMemberExpression("React.Component");
    return c.exports;
  }), a.registerDynamic("9", ["196", "f", "d", "65", "1a1", "19c", "1a0", "1a8", "1a9", "1aa", "1ab", "b2", "8", "21c", "226", "220", "24c"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a) {
      var b = ba["is" + a];
      b || (b = ba["is" + a] = function(b, c) {
        return ba.is(a, b, c);
      }), ba["assert" + a] = function(c, d) {
        if (d = d || {}, !b(c, d))
          throw new Error("Expected type " + (0, K.default)(a) + " with option " + (0, K.default)(d));
      };
    }
    function g(a, b, c) {
      if (!b)
        return !1;
      var d = h(b.type, a);
      return !!d && ("undefined" == typeof c || ba.shallowEqual(b, c));
    }
    function h(a, b) {
      if (a === b)
        return !0;
      if (ba.ALIAS_KEYS[b])
        return !1;
      var c = ba.FLIPPED_ALIAS_KEYS[b];
      if (c) {
        if (c[0] === a)
          return !0;
        for (var d = c,
            e = Array.isArray(d),
            f = 0,
            d = e ? d : (0, G.default)(d); ; ) {
          var g;
          if (e) {
            if (f >= d.length)
              break;
            g = d[f++];
          } else {
            if (f = d.next(), f.done)
              break;
            g = f.value;
          }
          var h = g;
          if (a === h)
            return !0;
        }
      }
      return !1;
    }
    function i(a, b, c) {
      if (a) {
        var d = ba.NODE_FIELDS[a.type];
        if (d) {
          var e = d[b];
          e && e.validate && (e.optional && null == c || e.validate(a, b, c));
        }
      }
    }
    function j(a, b) {
      for (var c = (0, I.default)(b),
          d = c,
          e = Array.isArray(d),
          f = 0,
          d = e ? d : (0, G.default)(d); ; ) {
        var g;
        if (e) {
          if (f >= d.length)
            break;
          g = d[f++];
        } else {
          if (f = d.next(), f.done)
            break;
          g = f.value;
        }
        var h = g;
        if (a[h] !== b[h])
          return !1;
      }
      return !0;
    }
    function k(a, b, c) {
      return a.object = ba.memberExpression(a.object, a.property, a.computed), a.property = b, a.computed = !!c, a;
    }
    function l(a, b) {
      return a.object = ba.memberExpression(b, a.object), a;
    }
    function m(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "body";
      return a[b] = ba.toBlock(a[b], a);
    }
    function n(a) {
      var b = {};
      for (var c in a)
        "_" !== c[0] && (b[c] = a[c]);
      return b;
    }
    function o(a) {
      var b = n(a);
      return delete b.loc, b;
    }
    function p(a) {
      var b = {};
      for (var c in a)
        if ("_" !== c[0]) {
          var d = a[c];
          d && (d.type ? d = ba.cloneDeep(d) : Array.isArray(d) && (d = d.map(ba.cloneDeep))), b[c] = d;
        }
      return b;
    }
    function q(a, b) {
      var c = a.split(".");
      return function(a) {
        if (!ba.isMemberExpression(a))
          return !1;
        for (var d = [a],
            e = 0; d.length; ) {
          var f = d.shift();
          if (b && e === c.length)
            return !0;
          if (ba.isIdentifier(f)) {
            if (c[e] !== f.name)
              return !1;
          } else {
            if (!ba.isStringLiteral(f)) {
              if (ba.isMemberExpression(f)) {
                if (f.computed && !ba.isStringLiteral(f.property))
                  return !1;
                d.push(f.object), d.push(f.property);
                continue;
              }
              return !1;
            }
            if (c[e] !== f.value)
              return !1;
          }
          if (++e > c.length)
            return !1;
        }
        return !0;
      };
    }
    function r(a) {
      for (var b = ba.COMMENT_KEYS,
          c = Array.isArray(b),
          d = 0,
          b = c ? b : (0, G.default)(b); ; ) {
        var e;
        if (c) {
          if (d >= b.length)
            break;
          e = b[d++];
        } else {
          if (d = b.next(), d.done)
            break;
          e = d.value;
        }
        var f = e;
        delete a[f];
      }
      return a;
    }
    function s(a, b) {
      return t(a, b), u(a, b), v(a, b), a;
    }
    function t(a, b) {
      w("trailingComments", a, b);
    }
    function u(a, b) {
      w("leadingComments", a, b);
    }
    function v(a, b) {
      w("innerComments", a, b);
    }
    function w(a, b, c) {
      b && c && (b[a] = (0, Z.default)((0, T.default)([].concat(b[a], c[a]))));
    }
    function x(a, b) {
      if (!a || !b)
        return a;
      for (var c = ba.INHERIT_KEYS.optional,
          d = Array.isArray(c),
          e = 0,
          c = d ? c : (0, G.default)(c); ; ) {
        var f;
        if (d) {
          if (e >= c.length)
            break;
          f = c[e++];
        } else {
          if (e = c.next(), e.done)
            break;
          f = e.value;
        }
        var g = f;
        null == a[g] && (a[g] = b[g]);
      }
      for (var h in b)
        "_" === h[0] && (a[h] = b[h]);
      for (var i = ba.INHERIT_KEYS.force,
          j = Array.isArray(i),
          k = 0,
          i = j ? i : (0, G.default)(i); ; ) {
        var l;
        if (j) {
          if (k >= i.length)
            break;
          l = i[k++];
        } else {
          if (k = i.next(), k.done)
            break;
          l = k.value;
        }
        var m = l;
        a[m] = b[m];
      }
      return ba.inheritsComments(a, b), a;
    }
    function y(a) {
      if (!z(a))
        throw new TypeError("Not a valid node " + (a && a.type));
    }
    function z(a) {
      return !(!a || !$.VISITOR_KEYS[a.type]);
    }
    function A(a, b, c) {
      if (a) {
        var d = ba.VISITOR_KEYS[a.type];
        if (d) {
          c = c || {}, b(a, c);
          for (var e = d,
              f = Array.isArray(e),
              g = 0,
              e = f ? e : (0, G.default)(e); ; ) {
            var h;
            if (f) {
              if (g >= e.length)
                break;
              h = e[g++];
            } else {
              if (g = e.next(), g.done)
                break;
              h = g.value;
            }
            var i = h,
                j = a[i];
            if (Array.isArray(j))
              for (var k = j,
                  l = Array.isArray(k),
                  m = 0,
                  k = l ? k : (0, G.default)(k); ; ) {
                var n;
                if (l) {
                  if (m >= k.length)
                    break;
                  n = k[m++];
                } else {
                  if (m = k.next(), m.done)
                    break;
                  n = m.value;
                }
                var o = n;
                A(o, b, c);
              }
            else
              A(j, b, c);
          }
        }
      }
    }
    function B(a, b) {
      b = b || {};
      for (var c = b.preserveComments ? fa : ga,
          d = c,
          e = Array.isArray(d),
          f = 0,
          d = e ? d : (0, G.default)(d); ; ) {
        var g;
        if (e) {
          if (f >= d.length)
            break;
          g = d[f++];
        } else {
          if (f = d.next(), f.done)
            break;
          g = f.value;
        }
        var h = g;
        null != a[h] && (a[h] = void 0);
      }
      for (var i in a)
        "_" === i[0] && null != a[i] && (a[i] = void 0);
      for (var j = (0, E.default)(a),
          k = j,
          l = Array.isArray(k),
          m = 0,
          k = l ? k : (0, G.default)(k); ; ) {
        var n;
        if (l) {
          if (m >= k.length)
            break;
          n = k[m++];
        } else {
          if (m = k.next(), m.done)
            break;
          n = m.value;
        }
        var o = n;
        a[o] = null;
      }
    }
    function C(a, b) {
      return A(a, B, b), a;
    }
    this || self;
    b.__esModule = !0, b.createTypeAnnotationBasedOnTypeof = b.removeTypeDuplicates = b.createUnionTypeAnnotation = b.valueToNode = b.toBlock = b.toExpression = b.toStatement = b.toBindingIdentifierName = b.toIdentifier = b.toKeyAlias = b.toSequenceExpression = b.toComputedKey = b.isImmutable = b.isScope = b.isSpecifierDefault = b.isVar = b.isBlockScoped = b.isLet = b.isValidIdentifier = b.isReferenced = b.isBinding = b.getOuterBindingIdentifiers = b.getBindingIdentifiers = b.TYPES = b.react = b.DEPRECATED_KEYS = b.BUILDER_KEYS = b.NODE_FIELDS = b.ALIAS_KEYS = b.VISITOR_KEYS = b.NOT_LOCAL_BINDING = b.BLOCK_SCOPED_SYMBOL = b.INHERIT_KEYS = b.UNARY_OPERATORS = b.STRING_UNARY_OPERATORS = b.NUMBER_UNARY_OPERATORS = b.BOOLEAN_UNARY_OPERATORS = b.BINARY_OPERATORS = b.NUMBER_BINARY_OPERATORS = b.BOOLEAN_BINARY_OPERATORS = b.COMPARISON_BINARY_OPERATORS = b.EQUALITY_BINARY_OPERATORS = b.BOOLEAN_NUMBER_BINARY_OPERATORS = b.UPDATE_OPERATORS = b.LOGICAL_OPERATORS = b.COMMENT_KEYS = b.FOR_INIT_KEYS = b.FLATTENABLE_KEYS = b.STATEMENT_OR_BLOCK_KEYS = void 0;
    var D = a("196"),
        E = e(D),
        F = a("f"),
        G = e(F),
        H = a("d"),
        I = e(H),
        J = a("65"),
        K = e(J),
        L = a("1a1");
    Object.defineProperty(b, "STATEMENT_OR_BLOCK_KEYS", {
      enumerable: !0,
      get: function() {
        return L.STATEMENT_OR_BLOCK_KEYS;
      }
    }), Object.defineProperty(b, "FLATTENABLE_KEYS", {
      enumerable: !0,
      get: function() {
        return L.FLATTENABLE_KEYS;
      }
    }), Object.defineProperty(b, "FOR_INIT_KEYS", {
      enumerable: !0,
      get: function() {
        return L.FOR_INIT_KEYS;
      }
    }), Object.defineProperty(b, "COMMENT_KEYS", {
      enumerable: !0,
      get: function() {
        return L.COMMENT_KEYS;
      }
    }), Object.defineProperty(b, "LOGICAL_OPERATORS", {
      enumerable: !0,
      get: function() {
        return L.LOGICAL_OPERATORS;
      }
    }), Object.defineProperty(b, "UPDATE_OPERATORS", {
      enumerable: !0,
      get: function() {
        return L.UPDATE_OPERATORS;
      }
    }), Object.defineProperty(b, "BOOLEAN_NUMBER_BINARY_OPERATORS", {
      enumerable: !0,
      get: function() {
        return L.BOOLEAN_NUMBER_BINARY_OPERATORS;
      }
    }), Object.defineProperty(b, "EQUALITY_BINARY_OPERATORS", {
      enumerable: !0,
      get: function() {
        return L.EQUALITY_BINARY_OPERATORS;
      }
    }), Object.defineProperty(b, "COMPARISON_BINARY_OPERATORS", {
      enumerable: !0,
      get: function() {
        return L.COMPARISON_BINARY_OPERATORS;
      }
    }), Object.defineProperty(b, "BOOLEAN_BINARY_OPERATORS", {
      enumerable: !0,
      get: function() {
        return L.BOOLEAN_BINARY_OPERATORS;
      }
    }), Object.defineProperty(b, "NUMBER_BINARY_OPERATORS", {
      enumerable: !0,
      get: function() {
        return L.NUMBER_BINARY_OPERATORS;
      }
    }), Object.defineProperty(b, "BINARY_OPERATORS", {
      enumerable: !0,
      get: function() {
        return L.BINARY_OPERATORS;
      }
    }), Object.defineProperty(b, "BOOLEAN_UNARY_OPERATORS", {
      enumerable: !0,
      get: function() {
        return L.BOOLEAN_UNARY_OPERATORS;
      }
    }), Object.defineProperty(b, "NUMBER_UNARY_OPERATORS", {
      enumerable: !0,
      get: function() {
        return L.NUMBER_UNARY_OPERATORS;
      }
    }), Object.defineProperty(b, "STRING_UNARY_OPERATORS", {
      enumerable: !0,
      get: function() {
        return L.STRING_UNARY_OPERATORS;
      }
    }), Object.defineProperty(b, "UNARY_OPERATORS", {
      enumerable: !0,
      get: function() {
        return L.UNARY_OPERATORS;
      }
    }), Object.defineProperty(b, "INHERIT_KEYS", {
      enumerable: !0,
      get: function() {
        return L.INHERIT_KEYS;
      }
    }), Object.defineProperty(b, "BLOCK_SCOPED_SYMBOL", {
      enumerable: !0,
      get: function() {
        return L.BLOCK_SCOPED_SYMBOL;
      }
    }), Object.defineProperty(b, "NOT_LOCAL_BINDING", {
      enumerable: !0,
      get: function() {
        return L.NOT_LOCAL_BINDING;
      }
    }), b.is = g, b.isType = h, b.validate = i, b.shallowEqual = j, b.appendToMemberExpression = k, b.prependToMemberExpression = l, b.ensureBlock = m, b.clone = n, b.cloneWithoutLoc = o, b.cloneDeep = p, b.buildMatchMemberExpression = q, b.removeComments = r, b.inheritsComments = s, b.inheritTrailingComments = t, b.inheritLeadingComments = u, b.inheritInnerComments = v, b.inherits = x, b.assertNode = y, b.isNode = z, b.traverseFast = A, b.removeProperties = B, b.removePropertiesDeep = C;
    var M = a("19c");
    Object.defineProperty(b, "getBindingIdentifiers", {
      enumerable: !0,
      get: function() {
        return M.getBindingIdentifiers;
      }
    }), Object.defineProperty(b, "getOuterBindingIdentifiers", {
      enumerable: !0,
      get: function() {
        return M.getOuterBindingIdentifiers;
      }
    });
    var N = a("1a0");
    Object.defineProperty(b, "isBinding", {
      enumerable: !0,
      get: function() {
        return N.isBinding;
      }
    }), Object.defineProperty(b, "isReferenced", {
      enumerable: !0,
      get: function() {
        return N.isReferenced;
      }
    }), Object.defineProperty(b, "isValidIdentifier", {
      enumerable: !0,
      get: function() {
        return N.isValidIdentifier;
      }
    }), Object.defineProperty(b, "isLet", {
      enumerable: !0,
      get: function() {
        return N.isLet;
      }
    }), Object.defineProperty(b, "isBlockScoped", {
      enumerable: !0,
      get: function() {
        return N.isBlockScoped;
      }
    }), Object.defineProperty(b, "isVar", {
      enumerable: !0,
      get: function() {
        return N.isVar;
      }
    }), Object.defineProperty(b, "isSpecifierDefault", {
      enumerable: !0,
      get: function() {
        return N.isSpecifierDefault;
      }
    }), Object.defineProperty(b, "isScope", {
      enumerable: !0,
      get: function() {
        return N.isScope;
      }
    }), Object.defineProperty(b, "isImmutable", {
      enumerable: !0,
      get: function() {
        return N.isImmutable;
      }
    });
    var O = a("1a8");
    Object.defineProperty(b, "toComputedKey", {
      enumerable: !0,
      get: function() {
        return O.toComputedKey;
      }
    }), Object.defineProperty(b, "toSequenceExpression", {
      enumerable: !0,
      get: function() {
        return O.toSequenceExpression;
      }
    }), Object.defineProperty(b, "toKeyAlias", {
      enumerable: !0,
      get: function() {
        return O.toKeyAlias;
      }
    }), Object.defineProperty(b, "toIdentifier", {
      enumerable: !0,
      get: function() {
        return O.toIdentifier;
      }
    }), Object.defineProperty(b, "toBindingIdentifierName", {
      enumerable: !0,
      get: function() {
        return O.toBindingIdentifierName;
      }
    }), Object.defineProperty(b, "toStatement", {
      enumerable: !0,
      get: function() {
        return O.toStatement;
      }
    }), Object.defineProperty(b, "toExpression", {
      enumerable: !0,
      get: function() {
        return O.toExpression;
      }
    }), Object.defineProperty(b, "toBlock", {
      enumerable: !0,
      get: function() {
        return O.toBlock;
      }
    }), Object.defineProperty(b, "valueToNode", {
      enumerable: !0,
      get: function() {
        return O.valueToNode;
      }
    });
    var P = a("1a9");
    Object.defineProperty(b, "createUnionTypeAnnotation", {
      enumerable: !0,
      get: function() {
        return P.createUnionTypeAnnotation;
      }
    }), Object.defineProperty(b, "removeTypeDuplicates", {
      enumerable: !0,
      get: function() {
        return P.removeTypeDuplicates;
      }
    }), Object.defineProperty(b, "createTypeAnnotationBasedOnTypeof", {
      enumerable: !0,
      get: function() {
        return P.createTypeAnnotationBasedOnTypeof;
      }
    });
    var Q = a("1aa"),
        R = e(Q),
        S = a("1ab"),
        T = e(S),
        U = a("b2"),
        V = e(U),
        W = a("8"),
        X = e(W),
        Y = a("21c"),
        Z = e(Y);
    a("226");
    var $ = a("220"),
        _ = a("24c"),
        aa = d(_),
        ba = b;
    b.VISITOR_KEYS = $.VISITOR_KEYS, b.ALIAS_KEYS = $.ALIAS_KEYS, b.NODE_FIELDS = $.NODE_FIELDS, b.BUILDER_KEYS = $.BUILDER_KEYS, b.DEPRECATED_KEYS = $.DEPRECATED_KEYS, b.react = aa;
    for (var ca in ba.VISITOR_KEYS)
      f(ca);
    ba.FLIPPED_ALIAS_KEYS = {}, (0, X.default)(ba.ALIAS_KEYS, function(a, b) {
      (0, X.default)(a, function(a) {
        var c = ba.FLIPPED_ALIAS_KEYS[a] = ba.FLIPPED_ALIAS_KEYS[a] || [];
        c.push(b);
      });
    }), (0, X.default)(ba.FLIPPED_ALIAS_KEYS, function(a, b) {
      ba[b.toUpperCase() + "_TYPES"] = a, f(b);
    });
    b.TYPES = (0, I.default)(ba.VISITOR_KEYS).concat((0, I.default)(ba.FLIPPED_ALIAS_KEYS)).concat((0, I.default)(ba.DEPRECATED_KEYS));
    (0, X.default)(ba.BUILDER_KEYS, function(a, b) {
      function c() {
        if (arguments.length > a.length)
          throw new Error("t." + b + ": Too many arguments passed. Received " + arguments.length + " but can receive no more than " + a.length);
        var c = {};
        c.type = b;
        for (var d = 0,
            e = a,
            f = Array.isArray(e),
            g = 0,
            e = f ? e : (0, G.default)(e); ; ) {
          var h;
          if (f) {
            if (g >= e.length)
              break;
            h = e[g++];
          } else {
            if (g = e.next(), g.done)
              break;
            h = g.value;
          }
          var j = h,
              k = ba.NODE_FIELDS[b][j],
              l = arguments[d++];
          void 0 === l && (l = (0, V.default)(k.default)), c[j] = l;
        }
        for (var m in c)
          i(c, m, c[m]);
        return c;
      }
      ba[b] = c, ba[b[0].toLowerCase() + b.slice(1)] = c;
    });
    var da = function(a) {
      function b(b) {
        return function() {
          return console.trace("The node type " + a + " has been renamed to " + c), b.apply(this, arguments);
        };
      }
      var c = ba.DEPRECATED_KEYS[a];
      ba[a] = ba[a[0].toLowerCase() + a.slice(1)] = b(ba[c]), ba["is" + a] = b(ba["is" + c]), ba["assert" + a] = b(ba["assert" + c]);
    };
    for (var ea in ba.DEPRECATED_KEYS)
      da(ea);
    (0, R.default)(ba), (0, R.default)(ba.VISITOR_KEYS);
    var fa = ["tokens", "start", "end", "loc", "raw", "rawValue"],
        ga = ba.COMMENT_KEYS.concat(["comments"]).concat(fa);
    return c.exports;
  }), a.registerDynamic("193", ["9", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a, b) {
      return h.memberExpression(b || h.identifier("regeneratorRuntime"), h.identifier(a), !1);
    }
    function f(a) {
      return a.isReferenced() || a.parentPath.isAssignmentExpression({left: a.node});
    }
    a("3"), this || self;
    b.__esModule = !0, b.runtimeProperty = e, b.isReference = f;
    var g = a("9"),
        h = d(g);
    return c.exports;
  }), a.registerDynamic("192", [], !0, function(a, b, c) {
    "use strict";
    function d(a, b, c) {
      if (l)
        try {
          l.call(k, a, b, {value: c});
        } catch (d) {
          a[b] = c;
        }
      else
        a[b] = c;
    }
    function e(a) {
      return a && (d(a, "call", a.call), d(a, "apply", a.apply)), a;
    }
    function f(a) {
      return m ? m.call(k, a) : (q.prototype = a || null, new q);
    }
    function g() {
      do
        var a = h(p.call(o.call(r(), 36), 2));
 while (n.call(s, a));
      return s[a] = a;
    }
    function h(a) {
      var b = {};
      return b[a] = !0, Object.keys(b)[0];
    }
    function i(a) {
      return f(null);
    }
    function j(a) {
      function b(b) {
        function c(c, d) {
          if (c === h)
            return d ? f = null : f || (f = a(b));
        }
        var f;
        d(b, e, c);
      }
      function c(a) {
        return n.call(a, e) || b(a), a[e](h);
      }
      var e = g(),
          h = f(null);
      return a = a || i, c.forget = function(a) {
        n.call(a, e) && a[e](h, !0);
      }, c;
    }
    var k = (this || self, Object),
        l = Object.defineProperty,
        m = Object.create;
    e(l), e(m);
    var n = e(Object.prototype.hasOwnProperty),
        o = e(Number.prototype.toString),
        p = e(String.prototype.slice),
        q = function() {},
        r = Math.random,
        s = f(null);
    d(b, "makeUniqueKey", g);
    var t = Object.getOwnPropertyNames;
    return Object.getOwnPropertyNames = function(a) {
      for (var b = t(a),
          c = 0,
          d = 0,
          e = b.length; c < e; ++c)
        n.call(s, b[c]) || (c > d && (b[d] = b[c]), ++d);
      return b.length = d, b;
    }, d(b, "makeAccessor", j), c.exports;
  }), a.registerDynamic("24d", ["18e", "9", "18c", "18f", "193", "192", "3"], !0, function(a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule)
        return a;
      var b = {};
      if (null != a)
        for (var c in a)
          Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
      return b.default = a, b;
    }
    function e(a) {
      return a && a.__esModule ? a : {default: a};
    }
    function f(a, b) {
      var c = a.node;
      if (l.assertFunction(c), c.id || (c.id = a.scope.parent.generateUidIdentifier("callee")), c.generator && l.isFunctionDeclaration(c)) {
        var d = a.findParent(function(a) {
          return a.isProgram() || a.isBlockStatement();
        });
        if (!d)
          return c.id;
        var e = g(d, b),
            f = e.declarations[0].id,
            h = e.declarations[0].init.callee.object;
        l.assertArrayExpression(h);
        var i = h.elements.length;
        return h.elements.push(c.id), l.memberExpression(f, l.numericLiteral(i), !0);
      }
      return c.id;
    }
    function g(a, b) {
      var c = a.node;
      j.default.ok(Array.isArray(c.body));
      var d = q(c);
      return d.decl ? d.decl : (d.decl = l.variableDeclaration("var", [l.variableDeclarator(a.scope.generateUidIdentifier("marked"), l.callExpression(l.memberExpression(l.arrayExpression([]), l.identifier("map"), !1), [p.runtimeProperty("mark", b.file.get("regeneratorIdentifier"))]))]), a.unshiftContainer("body", d.decl), d.decl);
    }
    function h(a, b) {
      var c = {
        didRenameArguments: !1,
        argsId: b
      };
      return a.traverse(r, c), c.didRenameArguments;
    }
    var i = (a("3"), this || self, a("18e")),
        j = e(i),
        k = a("9"),
        l = d(k),
        m = a("18c"),
        n = a("18f"),
        o = a("193"),
        p = d(o),
        q = a("192").makeAccessor();
    b.visitor = {Function: {exit: function(a, b) {
          var c = a.node;
          if (c.generator) {
            if (c.async) {
              if (b.opts.asyncGenerators === !1)
                return;
            } else if (b.opts.generators === !1)
              return;
          } else {
            if (!c.async)
              return;
            if (b.opts.async === !1)
              return;
          }
          var d = a.scope.generateUidIdentifier("context"),
              e = a.scope.generateUidIdentifier("args");
          a.ensureBlock();
          var g = a.get("body");
          c.async && g.traverse(t), g.traverse(s, {context: d});
          var i = [],
              j = [];
          g.get("body").forEach(function(a) {
            var b = a.node;
            b && null != b._blockHoist ? i.push(b) : j.push(b);
          }), i.length > 0 && (g.node.body = j);
          var k = f(a, b);
          l.assertIdentifier(c.id);
          var o = l.identifier(c.id.name + "$"),
              q = (0, m.hoist)(a),
              r = h(a, e);
          r && (q = q || l.variableDeclaration("var", []), q.declarations.push(l.variableDeclarator(e, l.identifier("arguments"))));
          var u = new n.Emitter(d);
          u.explode(a.get("body")), q && q.declarations.length > 0 && i.push(q);
          var v = [u.getContextFunction(o), c.generator ? k : l.nullLiteral(), l.thisExpression()],
              w = u.getTryLocsList();
          w && v.push(w);
          var x = l.callExpression(p.runtimeProperty(c.async ? "async" : "wrap", b.file.get("regeneratorIdentifier")), v);
          i.push(l.returnStatement(x)), c.body = l.blockStatement(i);
          var y = c.generator;
          y && (c.generator = !1), c.async && (c.async = !1), y && l.isExpression(c) && a.replaceWith(l.callExpression(p.runtimeProperty("mark", b.file.get("regeneratorIdentifier")), [c])), a.requeue();
        }}};
    var r = {
      "FunctionExpression|FunctionDeclaration": function(a) {
        a.skip();
      },
      Identifier: function(a, b) {
        "arguments" === a.node.name && p.isReference(a) && (a.replaceWith(b.argsId), b.didRenameArguments = !0);
      }
    },
        s = {MetaProperty: function(a) {
            var b = a.node;
            "function" === b.meta.name && "sent" === b.property.name && a.replaceWith(l.memberExpression(this.context, l.identifier("_sent")));
          }},
        t = {
          Function: function(a) {
            a.skip();
          },
          AwaitExpression: function(a) {
            var b = a.node.argument;
            a.replaceWith(l.yieldExpression(l.callExpression(p.runtimeProperty("awrap", state.file.get("regeneratorIdentifier")), [b]), !1));
          }
        };
    return c.exports;
  }), a.registerDynamic("@system-env", [], !1, function() {
    return {default: !0};
  }), a.registerDynamic("3", ["@system-env"], !0, function(a, b, c) {
    function d() {
      l = !1, h.length ? k = h.concat(k) : m = -1, k.length && e();
    }
    function e() {
      if (!l) {
        var a = setTimeout(d);
        l = !0;
        for (var b = k.length; b; ) {
          for (h = k, k = []; ++m < b; )
            h && h[m].run();
          m = -1, b = k.length;
        }
        h = null, l = !1, clearTimeout(a);
      }
    }
    function f(a, b) {
      this.fun = a, this.array = b;
    }
    function g() {}
    var h,
        i = (this || self, a("@system-env").production),
        j = c.exports = {},
        k = [],
        l = !1,
        m = -1;
    return j.nextTick = function(a) {
      var b = new Array(arguments.length - 1);
      if (arguments.length > 1)
        for (var c = 1; c < arguments.length; c++)
          b[c - 1] = arguments[c];
      k.push(new f(a, b)), 1 !== k.length || l || setTimeout(e, 0);
    }, f.prototype.run = function() {
      this.fun.apply(null, this.array);
    }, j.title = "browser", j.browser = !0, j.env = {NODE_ENV: i ? "production" : "development"}, j.argv = [], j.version = "", j.versions = {}, j.on = g, j.addListener = g, j.once = g, j.off = g, j.removeListener = g, j.removeAllListeners = g, j.emit = g, j.binding = function(a) {
      throw new Error("process.binding is not supported");
    }, j.cwd = function() {
      return "/";
    }, j.chdir = function(a) {
      throw new Error("process.chdir is not supported");
    }, j.umask = function() {
      return 0;
    }, c.exports;
  }), a.registerDynamic("24e", ["24d", "3"], !0, function(a, b, c) {
    "use strict";
    a("3"), this || self;
    return b.__esModule = !0, b.default = function() {
      return a("24d");
    }, c.exports = b.default, c.exports;
  }), a.register("1", ["104", "105", "106", "bd", "be", "c0", "c2", "c7", "c8", "d1", "df", "e0", "e1", "e2", "e3", "f3", "f4", "f5", "f6", "f7", "f8", "10b", "10c", "18b", "24e"], function(a, b) {
    "use strict";
    var c,
        d,
        e,
        f,
        g,
        h,
        i,
        j,
        k,
        l,
        m,
        n,
        o,
        p,
        q,
        r,
        s,
        t,
        u,
        v,
        w,
        x,
        y,
        z,
        A,
        B,
        C,
        D,
        E;
    return {
      setters: [function(a) {
        r = a.default;
      }, function(a) {
        s = a.default;
      }, function(a) {
        t = a.default;
      }, function(a) {
        c = a;
      }, function(a) {
        d = a.default;
      }, function(a) {
        e = a.default;
      }, function(a) {
        f = a.default;
      }, function(b) {
        var c = {};
        c.pluginsStage1 = b.plugins, a(c);
      }, function(b) {
        var c = {};
        c.pluginsStage2 = b.plugins, a(c);
      }, function(b) {
        var c = {};
        c.pluginsStage3 = b.plugins, a(c);
      }, function(a) {
        g = a.default;
      }, function(a) {
        h = a.default;
      }, function(a) {
        i = a.default;
      }, function(a) {
        j = a.default;
      }, function(a) {
        k = a.default;
      }, function(a) {
        l = a.default;
      }, function(a) {
        m = a.default;
      }, function(a) {
        n = a.default;
      }, function(a) {
        o = a.default;
      }, function(a) {
        p = a.default;
      }, function(a) {
        q = a.default;
      }, function(a) {
        u = a.default;
      }, function(a) {
        v = a.default;
      }, function(a) {
        w = a.default;
      }, function(a) {
        x = a.default;
      }],
      execute: function() {
        a("babel", c), a("modulesRegister", y = {plugins: [d]}), a("modulesRegister", y), a("externalHelpers", z = {plugins: [e]}), a("externalHelpers", z), a("runtimeTransform", A = {plugins: [[f, {polyfill: !1}]]}), a("runtimeTransform", A), B = [g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w], C = [x, {
          async: !1,
          asyncGenerators: !1
        }], a("presetES2015", D = {plugins: [].concat(B, [C])}), a("presetES2015", D), a("presetES2015Register", E = {plugins: [].concat(B, [d, C])}), a("presetES2015Register", E);
      }
    };
  });
})(function(a) {
  define("npm:systemjs-plugin-babel@0.0.17/systemjs-babel-browser.js", [], a);
});

})();
System.registerDynamic('npm:systemjs-plugin-babel@0.0.17/plugin-babel.js', ['systemjs-babel-build'], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  var babel = $__require('systemjs-babel-build').babel;

  // the SystemJS babel build includes standard presets
  var es2015 = $__require('systemjs-babel-build').presetES2015;
  var es2015Register = $__require('systemjs-babel-build').presetES2015Register;
  var modulesRegister = $__require('systemjs-babel-build').modulesRegister;
  var stage3 = $__require('systemjs-babel-build').pluginsStage3;
  var stage2 = $__require('systemjs-babel-build').pluginsStage2;
  var stage1 = $__require('systemjs-babel-build').pluginsStage1;

  var externalHelpers = $__require('systemjs-babel-build').externalHelpers;
  var runtimeTransform = $__require('systemjs-babel-build').runtimeTransform;

  var babelRuntimePath;
  var modularHelpersPath = System.decanonicalize('./babel-helpers/', module.id);
  var externalHelpersPath = System.decanonicalize('./babel-helpers.js', module.id);
  var regeneratorRuntimePath = System.decanonicalize('./regenerator-runtime.js', module.id);

  if (modularHelpersPath.substr(modularHelpersPath.length - 3, 3) == '.js') modularHelpersPath = modularHelpersPath.substr(0, modularHelpersPath.length - 3);

  // in builds we want to embed canonical names to helpers
  if (System.getCanonicalName) {
    modularHelpersPath = System.getCanonicalName(modularHelpersPath);
    externalHelpersPath = System.getCanonicalName(externalHelpersPath);
    regeneratorRuntimePath = System.getCanonicalName(regeneratorRuntimePath);
  }

  // disable SystemJS runtime detection
  SystemJS._loader.loadedTranspilerRuntime = true;

  function prepend(a, b) {
    for (var p in b) if (!(p in a)) a[p] = b[p];
    return a;
  }

  /*
   * babelOptions:
   *   modularRuntime: true / false (whether to use babel-runtime or babel/external-helpers respectively)
   *   sourceMaps: true / false (defaults to true)
   *   es2015: true / false (defaults to true)
   *   stage3: true / false (defaults to true)
   *   stage2: true / false (defaults to true)
   *   stage1: true / false (defaults to false)
   *   plugins: array of custom plugins (objects or module name strings)
   *   presets: array of custom presets (objects or module name strings)
   *   compact: as in Babel
   *   comments: as in Babel
   *
   * babelOptions can be set at SystemJS.babelOptions OR on the metadata object for a given module
   */
  var defaultBabelOptions = {
    modularRuntime: true,
    sourceMaps: true,
    es2015: true,
    stage3: true,
    stage2: true,
    stage1: false,
    compact: false,
    comments: true
  };

  exports.translate = function (load, traceOpts) {
    // we don't transpile anything other than CommonJS or ESM
    if (load.metadata.format == 'global' || load.metadata.format == 'amd' || load.metadata.format == 'json') throw new TypeError('plugin-babel cannot transpile ' + load.metadata.format + ' modules. Ensure "' + load.name + '" is configured not to use this loader.');

    var loader = this;
    var pluginLoader = loader.pluginLoader || loader;

    // we only output ES modules when running in the builder
    var outputESM = traceOpts ? traceOpts.outputESM : loader.builder;

    var babelOptions = {};

    if (load.metadata.babelOptions) prepend(babelOptions, load.metadata.babelOptions);

    if (loader.babelOptions) prepend(babelOptions, loader.babelOptions);

    prepend(babelOptions, defaultBabelOptions);

    // determine any plugins or preset strings which need to be imported as modules
    var pluginAndPresetModuleLoads = [];

    if (babelOptions.presets) babelOptions.presets.forEach(function (preset) {
      if (typeof preset == 'string') pluginAndPresetModuleLoads.push(pluginLoader['import'](preset, module.id));
    });

    if (babelOptions.plugins) babelOptions.plugins.forEach(function (plugin) {
      plugin = typeof plugin == 'string' ? plugin : Array.isArray(plugin) && typeof plugin[0] == 'string' && plugin[0];
      if (!plugin) return;
      pluginAndPresetModuleLoads.push(pluginLoader.normalize(plugin, module.id).then(function (normalized) {
        return pluginLoader.load(normalized).then(function () {
          return pluginLoader.get(normalized)['default'];
        });
      }));
    });

    return Promise.all(pluginAndPresetModuleLoads).then(function (pluginAndPresetModules) {
      var curPluginOrPresetModule = 0;

      var presets = [];
      var plugins = [];

      if (babelOptions.modularRuntime) {
        if (load.metadata.format == 'cjs') throw new TypeError('plugin-babel does not support modular runtime for CJS module transpilations. Set babelOptions.modularRuntime: false if needed.');
        presets.push(runtimeTransform);
      } else {
        if (load.metadata.format == 'cjs') load.source = 'var babelHelpers = require("' + externalHelpersPath + '");' + load.source;else load.source = 'import babelHelpers from "' + externalHelpersPath + '";' + load.source;
        presets.push(externalHelpers);
      }

      if (babelOptions.es2015) presets.push(outputESM || load.metadata.format == 'cjs' ? es2015 : es2015Register);else if (!(outputESM || load.metadata.format == 'cjs')) presets.push(modulesRegister);

      if (babelOptions.stage3) presets.push({
        plugins: stage3
      });

      if (babelOptions.stage2) presets.push({
        plugins: stage2
      });

      if (babelOptions.stage1) presets.push({
        plugins: stage1
      });

      if (babelOptions.presets) babelOptions.presets.forEach(function (preset) {
        if (typeof preset == 'string') presets.push(pluginAndPresetModules[curPluginOrPresetModule++]);else presets.push(preset);
      });

      if (babelOptions.plugins) babelOptions.plugins.forEach(function (plugin) {
        if (typeof plugin == 'string') plugins.push(pluginAndPresetModules[curPluginOrPresetModule++]);else if (Array.isArray(plugin) && typeof plugin[0] == 'string') plugins.push([pluginAndPresetModules[curPluginOrPresetModule++], plugin[1]]);else plugins.push(plugin);
      });

      var output = babel.transform(load.source, {
        babelrc: false,
        plugins: plugins,
        presets: presets,
        filename: load.address,
        moduleIds: false,
        sourceMaps: traceOpts && traceOpts.sourceMaps || babelOptions.sourceMaps,
        inputSourceMap: load.metadata.sourceMap,
        compact: babelOptions.compact,
        comments: babelOptions.comments,
        code: true,
        ast: true,
        resolveModuleSource: function (m) {
          if (m.substr(0, 22) == 'babel-runtime/helpers/') {
            m = modularHelpersPath + m.substr(22) + '.js';
          } else if (m == 'babel-runtime/regenerator') {
            m = regeneratorRuntimePath;
          } else if (m.substr(0, 14) == 'babel-runtime/') {
            if (!babelRuntimePath) {
              babelRuntimePath = System.decanonicalize('babel-runtime/', module.id);
              if (babelRuntimePath.substr(babelRuntimePath.length - 3, 3) == '.js') babelRuntimePath = babelRuntimePath.substr(0, babelRuntimePath.length - 3);
              if (loader.getCanonicalName) babelRuntimePath = loader.getCanonicalName(babelRuntimePath);
              if (babelRuntimePath == 'babel-runtime/') throw new Error('The babel-runtime module must be mapped to support modular helpers and builtins. If using jspm run jspm install npm:babel-runtime.');
            }
            m = babelRuntimePath + m.substr(14) + '.js';
          }
          return m;
        }
      });

      // add babelHelpers as a dependency for non-modular runtime
      if (!babelOptions.modularRuntime) load.metadata.deps.push(externalHelpersPath);

      // set output module format
      // (in builder we output modules as esm)
      if (!load.metadata.format || load.metadata.format == 'detect' || load.metadata.format == 'esm') load.metadata.format = outputESM ? 'esm' : 'register';

      load.metadata.sourceMap = output.map;

      return output.code;
    });
  };
  return module.exports;
});
System.registerDynamic("npm:moment@2.18.1.json", [], false, function() {
  return {
    "main": "./moment.js",
    "map": {
      "moment": "./moment"
    }
  };
});

(function() {
var define = System.amdDefine;
;
(function(global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define("npm:moment@2.18.1/moment.js", [], factory) : global.moment = factory();
}(this, (function() {
  'use strict';
  var hookCallback;
  function hooks() {
    return hookCallback.apply(null, arguments);
  }
  function setHookCallback(callback) {
    hookCallback = callback;
  }
  function isArray(input) {
    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
  }
  function isObject(input) {
    return input != null && Object.prototype.toString.call(input) === '[object Object]';
  }
  function isObjectEmpty(obj) {
    var k;
    for (k in obj) {
      return false;
    }
    return true;
  }
  function isUndefined(input) {
    return input === void 0;
  }
  function isNumber(input) {
    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
  }
  function isDate(input) {
    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
  }
  function map(arr, fn) {
    var res = [],
        i;
    for (i = 0; i < arr.length; ++i) {
      res.push(fn(arr[i], i));
    }
    return res;
  }
  function hasOwnProp(a, b) {
    return Object.prototype.hasOwnProperty.call(a, b);
  }
  function extend(a, b) {
    for (var i in b) {
      if (hasOwnProp(b, i)) {
        a[i] = b[i];
      }
    }
    if (hasOwnProp(b, 'toString')) {
      a.toString = b.toString;
    }
    if (hasOwnProp(b, 'valueOf')) {
      a.valueOf = b.valueOf;
    }
    return a;
  }
  function createUTC(input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, true).utc();
  }
  function defaultParsingFlags() {
    return {
      empty: false,
      unusedTokens: [],
      unusedInput: [],
      overflow: -2,
      charsLeftOver: 0,
      nullInput: false,
      invalidMonth: null,
      invalidFormat: false,
      userInvalidated: false,
      iso: false,
      parsedDateParts: [],
      meridiem: null,
      rfc2822: false,
      weekdayMismatch: false
    };
  }
  function getParsingFlags(m) {
    if (m._pf == null) {
      m._pf = defaultParsingFlags();
    }
    return m._pf;
  }
  var some;
  if (Array.prototype.some) {
    some = Array.prototype.some;
  } else {
    some = function(fun) {
      var t = Object(this);
      var len = t.length >>> 0;
      for (var i = 0; i < len; i++) {
        if (i in t && fun.call(this, t[i], i, t)) {
          return true;
        }
      }
      return false;
    };
  }
  var some$1 = some;
  function isValid(m) {
    if (m._isValid == null) {
      var flags = getParsingFlags(m);
      var parsedParts = some$1.call(flags.parsedDateParts, function(i) {
        return i != null;
      });
      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || (flags.meridiem && parsedParts));
      if (m._strict) {
        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;
      }
      if (Object.isFrozen == null || !Object.isFrozen(m)) {
        m._isValid = isNowValid;
      } else {
        return isNowValid;
      }
    }
    return m._isValid;
  }
  function createInvalid(flags) {
    var m = createUTC(NaN);
    if (flags != null) {
      extend(getParsingFlags(m), flags);
    } else {
      getParsingFlags(m).userInvalidated = true;
    }
    return m;
  }
  var momentProperties = hooks.momentProperties = [];
  function copyConfig(to, from) {
    var i,
        prop,
        val;
    if (!isUndefined(from._isAMomentObject)) {
      to._isAMomentObject = from._isAMomentObject;
    }
    if (!isUndefined(from._i)) {
      to._i = from._i;
    }
    if (!isUndefined(from._f)) {
      to._f = from._f;
    }
    if (!isUndefined(from._l)) {
      to._l = from._l;
    }
    if (!isUndefined(from._strict)) {
      to._strict = from._strict;
    }
    if (!isUndefined(from._tzm)) {
      to._tzm = from._tzm;
    }
    if (!isUndefined(from._isUTC)) {
      to._isUTC = from._isUTC;
    }
    if (!isUndefined(from._offset)) {
      to._offset = from._offset;
    }
    if (!isUndefined(from._pf)) {
      to._pf = getParsingFlags(from);
    }
    if (!isUndefined(from._locale)) {
      to._locale = from._locale;
    }
    if (momentProperties.length > 0) {
      for (i = 0; i < momentProperties.length; i++) {
        prop = momentProperties[i];
        val = from[prop];
        if (!isUndefined(val)) {
          to[prop] = val;
        }
      }
    }
    return to;
  }
  var updateInProgress = false;
  function Moment(config) {
    copyConfig(this, config);
    this._d = new Date(config._d != null ? config._d.getTime() : NaN);
    if (!this.isValid()) {
      this._d = new Date(NaN);
    }
    if (updateInProgress === false) {
      updateInProgress = true;
      hooks.updateOffset(this);
      updateInProgress = false;
    }
  }
  function isMoment(obj) {
    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
  }
  function absFloor(number) {
    if (number < 0) {
      return Math.ceil(number) || 0;
    } else {
      return Math.floor(number);
    }
  }
  function toInt(argumentForCoercion) {
    var coercedNumber = +argumentForCoercion,
        value = 0;
    if (coercedNumber !== 0 && isFinite(coercedNumber)) {
      value = absFloor(coercedNumber);
    }
    return value;
  }
  function compareArrays(array1, array2, dontConvert) {
    var len = Math.min(array1.length, array2.length),
        lengthDiff = Math.abs(array1.length - array2.length),
        diffs = 0,
        i;
    for (i = 0; i < len; i++) {
      if ((dontConvert && array1[i] !== array2[i]) || (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
        diffs++;
      }
    }
    return diffs + lengthDiff;
  }
  function warn(msg) {
    if (hooks.suppressDeprecationWarnings === false && (typeof console !== 'undefined') && console.warn) {
      console.warn('Deprecation warning: ' + msg);
    }
  }
  function deprecate(msg, fn) {
    var firstTime = true;
    return extend(function() {
      if (hooks.deprecationHandler != null) {
        hooks.deprecationHandler(null, msg);
      }
      if (firstTime) {
        var args = [];
        var arg;
        for (var i = 0; i < arguments.length; i++) {
          arg = '';
          if (typeof arguments[i] === 'object') {
            arg += '\n[' + i + '] ';
            for (var key in arguments[0]) {
              arg += key + ': ' + arguments[0][key] + ', ';
            }
            arg = arg.slice(0, -2);
          } else {
            arg = arguments[i];
          }
          args.push(arg);
        }
        warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
        firstTime = false;
      }
      return fn.apply(this, arguments);
    }, fn);
  }
  var deprecations = {};
  function deprecateSimple(name, msg) {
    if (hooks.deprecationHandler != null) {
      hooks.deprecationHandler(name, msg);
    }
    if (!deprecations[name]) {
      warn(msg);
      deprecations[name] = true;
    }
  }
  hooks.suppressDeprecationWarnings = false;
  hooks.deprecationHandler = null;
  function isFunction(input) {
    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
  }
  function set(config) {
    var prop,
        i;
    for (i in config) {
      prop = config[i];
      if (isFunction(prop)) {
        this[i] = prop;
      } else {
        this['_' + i] = prop;
      }
    }
    this._config = config;
    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + (/\d{1,2}/).source);
  }
  function mergeConfigs(parentConfig, childConfig) {
    var res = extend({}, parentConfig),
        prop;
    for (prop in childConfig) {
      if (hasOwnProp(childConfig, prop)) {
        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
          res[prop] = {};
          extend(res[prop], parentConfig[prop]);
          extend(res[prop], childConfig[prop]);
        } else if (childConfig[prop] != null) {
          res[prop] = childConfig[prop];
        } else {
          delete res[prop];
        }
      }
    }
    for (prop in parentConfig) {
      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {
        res[prop] = extend({}, res[prop]);
      }
    }
    return res;
  }
  function Locale(config) {
    if (config != null) {
      this.set(config);
    }
  }
  var keys;
  if (Object.keys) {
    keys = Object.keys;
  } else {
    keys = function(obj) {
      var i,
          res = [];
      for (i in obj) {
        if (hasOwnProp(obj, i)) {
          res.push(i);
        }
      }
      return res;
    };
  }
  var keys$1 = keys;
  var defaultCalendar = {
    sameDay: '[Today at] LT',
    nextDay: '[Tomorrow at] LT',
    nextWeek: 'dddd [at] LT',
    lastDay: '[Yesterday at] LT',
    lastWeek: '[Last] dddd [at] LT',
    sameElse: 'L'
  };
  function calendar(key, mom, now) {
    var output = this._calendar[key] || this._calendar['sameElse'];
    return isFunction(output) ? output.call(mom, now) : output;
  }
  var defaultLongDateFormat = {
    LTS: 'h:mm:ss A',
    LT: 'h:mm A',
    L: 'MM/DD/YYYY',
    LL: 'MMMM D, YYYY',
    LLL: 'MMMM D, YYYY h:mm A',
    LLLL: 'dddd, MMMM D, YYYY h:mm A'
  };
  function longDateFormat(key) {
    var format = this._longDateFormat[key],
        formatUpper = this._longDateFormat[key.toUpperCase()];
    if (format || !formatUpper) {
      return format;
    }
    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function(val) {
      return val.slice(1);
    });
    return this._longDateFormat[key];
  }
  var defaultInvalidDate = 'Invalid date';
  function invalidDate() {
    return this._invalidDate;
  }
  var defaultOrdinal = '%d';
  var defaultDayOfMonthOrdinalParse = /\d{1,2}/;
  function ordinal(number) {
    return this._ordinal.replace('%d', number);
  }
  var defaultRelativeTime = {
    future: 'in %s',
    past: '%s ago',
    s: 'a few seconds',
    ss: '%d seconds',
    m: 'a minute',
    mm: '%d minutes',
    h: 'an hour',
    hh: '%d hours',
    d: 'a day',
    dd: '%d days',
    M: 'a month',
    MM: '%d months',
    y: 'a year',
    yy: '%d years'
  };
  function relativeTime(number, withoutSuffix, string, isFuture) {
    var output = this._relativeTime[string];
    return (isFunction(output)) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
  }
  function pastFuture(diff, output) {
    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
    return isFunction(format) ? format(output) : format.replace(/%s/i, output);
  }
  var aliases = {};
  function addUnitAlias(unit, shorthand) {
    var lowerCase = unit.toLowerCase();
    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
  }
  function normalizeUnits(units) {
    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
  }
  function normalizeObjectUnits(inputObject) {
    var normalizedInput = {},
        normalizedProp,
        prop;
    for (prop in inputObject) {
      if (hasOwnProp(inputObject, prop)) {
        normalizedProp = normalizeUnits(prop);
        if (normalizedProp) {
          normalizedInput[normalizedProp] = inputObject[prop];
        }
      }
    }
    return normalizedInput;
  }
  var priorities = {};
  function addUnitPriority(unit, priority) {
    priorities[unit] = priority;
  }
  function getPrioritizedUnits(unitsObj) {
    var units = [];
    for (var u in unitsObj) {
      units.push({
        unit: u,
        priority: priorities[u]
      });
    }
    units.sort(function(a, b) {
      return a.priority - b.priority;
    });
    return units;
  }
  function makeGetSet(unit, keepTime) {
    return function(value) {
      if (value != null) {
        set$1(this, unit, value);
        hooks.updateOffset(this, keepTime);
        return this;
      } else {
        return get(this, unit);
      }
    };
  }
  function get(mom, unit) {
    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
  }
  function set$1(mom, unit, value) {
    if (mom.isValid()) {
      mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
    }
  }
  function stringGet(units) {
    units = normalizeUnits(units);
    if (isFunction(this[units])) {
      return this[units]();
    }
    return this;
  }
  function stringSet(units, value) {
    if (typeof units === 'object') {
      units = normalizeObjectUnits(units);
      var prioritized = getPrioritizedUnits(units);
      for (var i = 0; i < prioritized.length; i++) {
        this[prioritized[i].unit](units[prioritized[i].unit]);
      }
    } else {
      units = normalizeUnits(units);
      if (isFunction(this[units])) {
        return this[units](value);
      }
    }
    return this;
  }
  function zeroFill(number, targetLength, forceSign) {
    var absNumber = '' + Math.abs(number),
        zerosToFill = targetLength - absNumber.length,
        sign = number >= 0;
    return (sign ? (forceSign ? '+' : '') : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
  }
  var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
  var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
  var formatFunctions = {};
  var formatTokenFunctions = {};
  function addFormatToken(token, padded, ordinal, callback) {
    var func = callback;
    if (typeof callback === 'string') {
      func = function() {
        return this[callback]();
      };
    }
    if (token) {
      formatTokenFunctions[token] = func;
    }
    if (padded) {
      formatTokenFunctions[padded[0]] = function() {
        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
      };
    }
    if (ordinal) {
      formatTokenFunctions[ordinal] = function() {
        return this.localeData().ordinal(func.apply(this, arguments), token);
      };
    }
  }
  function removeFormattingTokens(input) {
    if (input.match(/\[[\s\S]/)) {
      return input.replace(/^\[|\]$/g, '');
    }
    return input.replace(/\\/g, '');
  }
  function makeFormatFunction(format) {
    var array = format.match(formattingTokens),
        i,
        length;
    for (i = 0, length = array.length; i < length; i++) {
      if (formatTokenFunctions[array[i]]) {
        array[i] = formatTokenFunctions[array[i]];
      } else {
        array[i] = removeFormattingTokens(array[i]);
      }
    }
    return function(mom) {
      var output = '',
          i;
      for (i = 0; i < length; i++) {
        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
      }
      return output;
    };
  }
  function formatMoment(m, format) {
    if (!m.isValid()) {
      return m.localeData().invalidDate();
    }
    format = expandFormat(format, m.localeData());
    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);
    return formatFunctions[format](m);
  }
  function expandFormat(format, locale) {
    var i = 5;
    function replaceLongDateFormatTokens(input) {
      return locale.longDateFormat(input) || input;
    }
    localFormattingTokens.lastIndex = 0;
    while (i >= 0 && localFormattingTokens.test(format)) {
      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
      localFormattingTokens.lastIndex = 0;
      i -= 1;
    }
    return format;
  }
  var match1 = /\d/;
  var match2 = /\d\d/;
  var match3 = /\d{3}/;
  var match4 = /\d{4}/;
  var match6 = /[+-]?\d{6}/;
  var match1to2 = /\d\d?/;
  var match3to4 = /\d\d\d\d?/;
  var match5to6 = /\d\d\d\d\d\d?/;
  var match1to3 = /\d{1,3}/;
  var match1to4 = /\d{1,4}/;
  var match1to6 = /[+-]?\d{1,6}/;
  var matchUnsigned = /\d+/;
  var matchSigned = /[+-]?\d+/;
  var matchOffset = /Z|[+-]\d\d:?\d\d/gi;
  var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi;
  var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/;
  var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;
  var regexes = {};
  function addRegexToken(token, regex, strictRegex) {
    regexes[token] = isFunction(regex) ? regex : function(isStrict, localeData) {
      return (isStrict && strictRegex) ? strictRegex : regex;
    };
  }
  function getParseRegexForToken(token, config) {
    if (!hasOwnProp(regexes, token)) {
      return new RegExp(unescapeFormat(token));
    }
    return regexes[token](config._strict, config._locale);
  }
  function unescapeFormat(s) {
    return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(matched, p1, p2, p3, p4) {
      return p1 || p2 || p3 || p4;
    }));
  }
  function regexEscape(s) {
    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
  }
  var tokens = {};
  function addParseToken(token, callback) {
    var i,
        func = callback;
    if (typeof token === 'string') {
      token = [token];
    }
    if (isNumber(callback)) {
      func = function(input, array) {
        array[callback] = toInt(input);
      };
    }
    for (i = 0; i < token.length; i++) {
      tokens[token[i]] = func;
    }
  }
  function addWeekParseToken(token, callback) {
    addParseToken(token, function(input, array, config, token) {
      config._w = config._w || {};
      callback(input, config._w, config, token);
    });
  }
  function addTimeToArrayFromToken(token, input, config) {
    if (input != null && hasOwnProp(tokens, token)) {
      tokens[token](input, config._a, config, token);
    }
  }
  var YEAR = 0;
  var MONTH = 1;
  var DATE = 2;
  var HOUR = 3;
  var MINUTE = 4;
  var SECOND = 5;
  var MILLISECOND = 6;
  var WEEK = 7;
  var WEEKDAY = 8;
  var indexOf;
  if (Array.prototype.indexOf) {
    indexOf = Array.prototype.indexOf;
  } else {
    indexOf = function(o) {
      var i;
      for (i = 0; i < this.length; ++i) {
        if (this[i] === o) {
          return i;
        }
      }
      return -1;
    };
  }
  var indexOf$1 = indexOf;
  function daysInMonth(year, month) {
    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
  }
  addFormatToken('M', ['MM', 2], 'Mo', function() {
    return this.month() + 1;
  });
  addFormatToken('MMM', 0, 0, function(format) {
    return this.localeData().monthsShort(this, format);
  });
  addFormatToken('MMMM', 0, 0, function(format) {
    return this.localeData().months(this, format);
  });
  addUnitAlias('month', 'M');
  addUnitPriority('month', 8);
  addRegexToken('M', match1to2);
  addRegexToken('MM', match1to2, match2);
  addRegexToken('MMM', function(isStrict, locale) {
    return locale.monthsShortRegex(isStrict);
  });
  addRegexToken('MMMM', function(isStrict, locale) {
    return locale.monthsRegex(isStrict);
  });
  addParseToken(['M', 'MM'], function(input, array) {
    array[MONTH] = toInt(input) - 1;
  });
  addParseToken(['MMM', 'MMMM'], function(input, array, config, token) {
    var month = config._locale.monthsParse(input, token, config._strict);
    if (month != null) {
      array[MONTH] = month;
    } else {
      getParsingFlags(config).invalidMonth = input;
    }
  });
  var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
  function localeMonths(m, format) {
    if (!m) {
      return isArray(this._months) ? this._months : this._months['standalone'];
    }
    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
  }
  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
  function localeMonthsShort(m, format) {
    if (!m) {
      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];
    }
    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
  }
  function handleStrictParse(monthName, format, strict) {
    var i,
        ii,
        mom,
        llc = monthName.toLocaleLowerCase();
    if (!this._monthsParse) {
      this._monthsParse = [];
      this._longMonthsParse = [];
      this._shortMonthsParse = [];
      for (i = 0; i < 12; ++i) {
        mom = createUTC([2000, i]);
        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
      }
    }
    if (strict) {
      if (format === 'MMM') {
        ii = indexOf$1.call(this._shortMonthsParse, llc);
        return ii !== -1 ? ii : null;
      } else {
        ii = indexOf$1.call(this._longMonthsParse, llc);
        return ii !== -1 ? ii : null;
      }
    } else {
      if (format === 'MMM') {
        ii = indexOf$1.call(this._shortMonthsParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf$1.call(this._longMonthsParse, llc);
        return ii !== -1 ? ii : null;
      } else {
        ii = indexOf$1.call(this._longMonthsParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf$1.call(this._shortMonthsParse, llc);
        return ii !== -1 ? ii : null;
      }
    }
  }
  function localeMonthsParse(monthName, format, strict) {
    var i,
        mom,
        regex;
    if (this._monthsParseExact) {
      return handleStrictParse.call(this, monthName, format, strict);
    }
    if (!this._monthsParse) {
      this._monthsParse = [];
      this._longMonthsParse = [];
      this._shortMonthsParse = [];
    }
    for (i = 0; i < 12; i++) {
      mom = createUTC([2000, i]);
      if (strict && !this._longMonthsParse[i]) {
        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
      }
      if (!strict && !this._monthsParse[i]) {
        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
      }
      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
        return i;
      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
        return i;
      } else if (!strict && this._monthsParse[i].test(monthName)) {
        return i;
      }
    }
  }
  function setMonth(mom, value) {
    var dayOfMonth;
    if (!mom.isValid()) {
      return mom;
    }
    if (typeof value === 'string') {
      if (/^\d+$/.test(value)) {
        value = toInt(value);
      } else {
        value = mom.localeData().monthsParse(value);
        if (!isNumber(value)) {
          return mom;
        }
      }
    }
    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
    return mom;
  }
  function getSetMonth(value) {
    if (value != null) {
      setMonth(this, value);
      hooks.updateOffset(this, true);
      return this;
    } else {
      return get(this, 'Month');
    }
  }
  function getDaysInMonth() {
    return daysInMonth(this.year(), this.month());
  }
  var defaultMonthsShortRegex = matchWord;
  function monthsShortRegex(isStrict) {
    if (this._monthsParseExact) {
      if (!hasOwnProp(this, '_monthsRegex')) {
        computeMonthsParse.call(this);
      }
      if (isStrict) {
        return this._monthsShortStrictRegex;
      } else {
        return this._monthsShortRegex;
      }
    } else {
      if (!hasOwnProp(this, '_monthsShortRegex')) {
        this._monthsShortRegex = defaultMonthsShortRegex;
      }
      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;
    }
  }
  var defaultMonthsRegex = matchWord;
  function monthsRegex(isStrict) {
    if (this._monthsParseExact) {
      if (!hasOwnProp(this, '_monthsRegex')) {
        computeMonthsParse.call(this);
      }
      if (isStrict) {
        return this._monthsStrictRegex;
      } else {
        return this._monthsRegex;
      }
    } else {
      if (!hasOwnProp(this, '_monthsRegex')) {
        this._monthsRegex = defaultMonthsRegex;
      }
      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;
    }
  }
  function computeMonthsParse() {
    function cmpLenRev(a, b) {
      return b.length - a.length;
    }
    var shortPieces = [],
        longPieces = [],
        mixedPieces = [],
        i,
        mom;
    for (i = 0; i < 12; i++) {
      mom = createUTC([2000, i]);
      shortPieces.push(this.monthsShort(mom, ''));
      longPieces.push(this.months(mom, ''));
      mixedPieces.push(this.months(mom, ''));
      mixedPieces.push(this.monthsShort(mom, ''));
    }
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);
    for (i = 0; i < 12; i++) {
      shortPieces[i] = regexEscape(shortPieces[i]);
      longPieces[i] = regexEscape(longPieces[i]);
    }
    for (i = 0; i < 24; i++) {
      mixedPieces[i] = regexEscape(mixedPieces[i]);
    }
    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._monthsShortRegex = this._monthsRegex;
    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
  }
  addFormatToken('Y', 0, 0, function() {
    var y = this.year();
    return y <= 9999 ? '' + y : '+' + y;
  });
  addFormatToken(0, ['YY', 2], 0, function() {
    return this.year() % 100;
  });
  addFormatToken(0, ['YYYY', 4], 0, 'year');
  addFormatToken(0, ['YYYYY', 5], 0, 'year');
  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');
  addUnitAlias('year', 'y');
  addUnitPriority('year', 1);
  addRegexToken('Y', matchSigned);
  addRegexToken('YY', match1to2, match2);
  addRegexToken('YYYY', match1to4, match4);
  addRegexToken('YYYYY', match1to6, match6);
  addRegexToken('YYYYYY', match1to6, match6);
  addParseToken(['YYYYY', 'YYYYYY'], YEAR);
  addParseToken('YYYY', function(input, array) {
    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
  });
  addParseToken('YY', function(input, array) {
    array[YEAR] = hooks.parseTwoDigitYear(input);
  });
  addParseToken('Y', function(input, array) {
    array[YEAR] = parseInt(input, 10);
  });
  function daysInYear(year) {
    return isLeapYear(year) ? 366 : 365;
  }
  function isLeapYear(year) {
    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
  }
  hooks.parseTwoDigitYear = function(input) {
    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
  };
  var getSetYear = makeGetSet('FullYear', true);
  function getIsLeapYear() {
    return isLeapYear(this.year());
  }
  function createDate(y, m, d, h, M, s, ms) {
    var date = new Date(y, m, d, h, M, s, ms);
    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
      date.setFullYear(y);
    }
    return date;
  }
  function createUTCDate(y) {
    var date = new Date(Date.UTC.apply(null, arguments));
    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
      date.setUTCFullYear(y);
    }
    return date;
  }
  function firstWeekOffset(year, dow, doy) {
    var fwd = 7 + dow - doy,
        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
    return -fwdlw + fwd - 1;
  }
  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
    var localWeekday = (7 + weekday - dow) % 7,
        weekOffset = firstWeekOffset(year, dow, doy),
        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
        resYear,
        resDayOfYear;
    if (dayOfYear <= 0) {
      resYear = year - 1;
      resDayOfYear = daysInYear(resYear) + dayOfYear;
    } else if (dayOfYear > daysInYear(year)) {
      resYear = year + 1;
      resDayOfYear = dayOfYear - daysInYear(year);
    } else {
      resYear = year;
      resDayOfYear = dayOfYear;
    }
    return {
      year: resYear,
      dayOfYear: resDayOfYear
    };
  }
  function weekOfYear(mom, dow, doy) {
    var weekOffset = firstWeekOffset(mom.year(), dow, doy),
        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
        resWeek,
        resYear;
    if (week < 1) {
      resYear = mom.year() - 1;
      resWeek = week + weeksInYear(resYear, dow, doy);
    } else if (week > weeksInYear(mom.year(), dow, doy)) {
      resWeek = week - weeksInYear(mom.year(), dow, doy);
      resYear = mom.year() + 1;
    } else {
      resYear = mom.year();
      resWeek = week;
    }
    return {
      week: resWeek,
      year: resYear
    };
  }
  function weeksInYear(year, dow, doy) {
    var weekOffset = firstWeekOffset(year, dow, doy),
        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
  }
  addFormatToken('w', ['ww', 2], 'wo', 'week');
  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');
  addUnitAlias('week', 'w');
  addUnitAlias('isoWeek', 'W');
  addUnitPriority('week', 5);
  addUnitPriority('isoWeek', 5);
  addRegexToken('w', match1to2);
  addRegexToken('ww', match1to2, match2);
  addRegexToken('W', match1to2);
  addRegexToken('WW', match1to2, match2);
  addWeekParseToken(['w', 'ww', 'W', 'WW'], function(input, week, config, token) {
    week[token.substr(0, 1)] = toInt(input);
  });
  function localeWeek(mom) {
    return weekOfYear(mom, this._week.dow, this._week.doy).week;
  }
  var defaultLocaleWeek = {
    dow: 0,
    doy: 6
  };
  function localeFirstDayOfWeek() {
    return this._week.dow;
  }
  function localeFirstDayOfYear() {
    return this._week.doy;
  }
  function getSetWeek(input) {
    var week = this.localeData().week(this);
    return input == null ? week : this.add((input - week) * 7, 'd');
  }
  function getSetISOWeek(input) {
    var week = weekOfYear(this, 1, 4).week;
    return input == null ? week : this.add((input - week) * 7, 'd');
  }
  addFormatToken('d', 0, 'do', 'day');
  addFormatToken('dd', 0, 0, function(format) {
    return this.localeData().weekdaysMin(this, format);
  });
  addFormatToken('ddd', 0, 0, function(format) {
    return this.localeData().weekdaysShort(this, format);
  });
  addFormatToken('dddd', 0, 0, function(format) {
    return this.localeData().weekdays(this, format);
  });
  addFormatToken('e', 0, 0, 'weekday');
  addFormatToken('E', 0, 0, 'isoWeekday');
  addUnitAlias('day', 'd');
  addUnitAlias('weekday', 'e');
  addUnitAlias('isoWeekday', 'E');
  addUnitPriority('day', 11);
  addUnitPriority('weekday', 11);
  addUnitPriority('isoWeekday', 11);
  addRegexToken('d', match1to2);
  addRegexToken('e', match1to2);
  addRegexToken('E', match1to2);
  addRegexToken('dd', function(isStrict, locale) {
    return locale.weekdaysMinRegex(isStrict);
  });
  addRegexToken('ddd', function(isStrict, locale) {
    return locale.weekdaysShortRegex(isStrict);
  });
  addRegexToken('dddd', function(isStrict, locale) {
    return locale.weekdaysRegex(isStrict);
  });
  addWeekParseToken(['dd', 'ddd', 'dddd'], function(input, week, config, token) {
    var weekday = config._locale.weekdaysParse(input, token, config._strict);
    if (weekday != null) {
      week.d = weekday;
    } else {
      getParsingFlags(config).invalidWeekday = input;
    }
  });
  addWeekParseToken(['d', 'e', 'E'], function(input, week, config, token) {
    week[token] = toInt(input);
  });
  function parseWeekday(input, locale) {
    if (typeof input !== 'string') {
      return input;
    }
    if (!isNaN(input)) {
      return parseInt(input, 10);
    }
    input = locale.weekdaysParse(input);
    if (typeof input === 'number') {
      return input;
    }
    return null;
  }
  function parseIsoWeekday(input, locale) {
    if (typeof input === 'string') {
      return locale.weekdaysParse(input) % 7 || 7;
    }
    return isNaN(input) ? null : input;
  }
  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
  function localeWeekdays(m, format) {
    if (!m) {
      return isArray(this._weekdays) ? this._weekdays : this._weekdays['standalone'];
    }
    return isArray(this._weekdays) ? this._weekdays[m.day()] : this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
  }
  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
  function localeWeekdaysShort(m) {
    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
  }
  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
  function localeWeekdaysMin(m) {
    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
  }
  function handleStrictParse$1(weekdayName, format, strict) {
    var i,
        ii,
        mom,
        llc = weekdayName.toLocaleLowerCase();
    if (!this._weekdaysParse) {
      this._weekdaysParse = [];
      this._shortWeekdaysParse = [];
      this._minWeekdaysParse = [];
      for (i = 0; i < 7; ++i) {
        mom = createUTC([2000, 1]).day(i);
        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
      }
    }
    if (strict) {
      if (format === 'dddd') {
        ii = indexOf$1.call(this._weekdaysParse, llc);
        return ii !== -1 ? ii : null;
      } else if (format === 'ddd') {
        ii = indexOf$1.call(this._shortWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      } else {
        ii = indexOf$1.call(this._minWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      }
    } else {
      if (format === 'dddd') {
        ii = indexOf$1.call(this._weekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf$1.call(this._shortWeekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf$1.call(this._minWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      } else if (format === 'ddd') {
        ii = indexOf$1.call(this._shortWeekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf$1.call(this._weekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf$1.call(this._minWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      } else {
        ii = indexOf$1.call(this._minWeekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf$1.call(this._weekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf$1.call(this._shortWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      }
    }
  }
  function localeWeekdaysParse(weekdayName, format, strict) {
    var i,
        mom,
        regex;
    if (this._weekdaysParseExact) {
      return handleStrictParse$1.call(this, weekdayName, format, strict);
    }
    if (!this._weekdaysParse) {
      this._weekdaysParse = [];
      this._minWeekdaysParse = [];
      this._shortWeekdaysParse = [];
      this._fullWeekdaysParse = [];
    }
    for (i = 0; i < 7; i++) {
      mom = createUTC([2000, 1]).day(i);
      if (strict && !this._fullWeekdaysParse[i]) {
        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
      }
      if (!this._weekdaysParse[i]) {
        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
      }
      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
        return i;
      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
        return i;
      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
        return i;
      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
        return i;
      }
    }
  }
  function getSetDayOfWeek(input) {
    if (!this.isValid()) {
      return input != null ? this : NaN;
    }
    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
    if (input != null) {
      input = parseWeekday(input, this.localeData());
      return this.add(input - day, 'd');
    } else {
      return day;
    }
  }
  function getSetLocaleDayOfWeek(input) {
    if (!this.isValid()) {
      return input != null ? this : NaN;
    }
    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
    return input == null ? weekday : this.add(input - weekday, 'd');
  }
  function getSetISODayOfWeek(input) {
    if (!this.isValid()) {
      return input != null ? this : NaN;
    }
    if (input != null) {
      var weekday = parseIsoWeekday(input, this.localeData());
      return this.day(this.day() % 7 ? weekday : weekday - 7);
    } else {
      return this.day() || 7;
    }
  }
  var defaultWeekdaysRegex = matchWord;
  function weekdaysRegex(isStrict) {
    if (this._weekdaysParseExact) {
      if (!hasOwnProp(this, '_weekdaysRegex')) {
        computeWeekdaysParse.call(this);
      }
      if (isStrict) {
        return this._weekdaysStrictRegex;
      } else {
        return this._weekdaysRegex;
      }
    } else {
      if (!hasOwnProp(this, '_weekdaysRegex')) {
        this._weekdaysRegex = defaultWeekdaysRegex;
      }
      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;
    }
  }
  var defaultWeekdaysShortRegex = matchWord;
  function weekdaysShortRegex(isStrict) {
    if (this._weekdaysParseExact) {
      if (!hasOwnProp(this, '_weekdaysRegex')) {
        computeWeekdaysParse.call(this);
      }
      if (isStrict) {
        return this._weekdaysShortStrictRegex;
      } else {
        return this._weekdaysShortRegex;
      }
    } else {
      if (!hasOwnProp(this, '_weekdaysShortRegex')) {
        this._weekdaysShortRegex = defaultWeekdaysShortRegex;
      }
      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
    }
  }
  var defaultWeekdaysMinRegex = matchWord;
  function weekdaysMinRegex(isStrict) {
    if (this._weekdaysParseExact) {
      if (!hasOwnProp(this, '_weekdaysRegex')) {
        computeWeekdaysParse.call(this);
      }
      if (isStrict) {
        return this._weekdaysMinStrictRegex;
      } else {
        return this._weekdaysMinRegex;
      }
    } else {
      if (!hasOwnProp(this, '_weekdaysMinRegex')) {
        this._weekdaysMinRegex = defaultWeekdaysMinRegex;
      }
      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
    }
  }
  function computeWeekdaysParse() {
    function cmpLenRev(a, b) {
      return b.length - a.length;
    }
    var minPieces = [],
        shortPieces = [],
        longPieces = [],
        mixedPieces = [],
        i,
        mom,
        minp,
        shortp,
        longp;
    for (i = 0; i < 7; i++) {
      mom = createUTC([2000, 1]).day(i);
      minp = this.weekdaysMin(mom, '');
      shortp = this.weekdaysShort(mom, '');
      longp = this.weekdays(mom, '');
      minPieces.push(minp);
      shortPieces.push(shortp);
      longPieces.push(longp);
      mixedPieces.push(minp);
      mixedPieces.push(shortp);
      mixedPieces.push(longp);
    }
    minPieces.sort(cmpLenRev);
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);
    for (i = 0; i < 7; i++) {
      shortPieces[i] = regexEscape(shortPieces[i]);
      longPieces[i] = regexEscape(longPieces[i]);
      mixedPieces[i] = regexEscape(mixedPieces[i]);
    }
    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._weekdaysShortRegex = this._weekdaysRegex;
    this._weekdaysMinRegex = this._weekdaysRegex;
    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
  }
  function hFormat() {
    return this.hours() % 12 || 12;
  }
  function kFormat() {
    return this.hours() || 24;
  }
  addFormatToken('H', ['HH', 2], 0, 'hour');
  addFormatToken('h', ['hh', 2], 0, hFormat);
  addFormatToken('k', ['kk', 2], 0, kFormat);
  addFormatToken('hmm', 0, 0, function() {
    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
  });
  addFormatToken('hmmss', 0, 0, function() {
    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
  });
  addFormatToken('Hmm', 0, 0, function() {
    return '' + this.hours() + zeroFill(this.minutes(), 2);
  });
  addFormatToken('Hmmss', 0, 0, function() {
    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
  });
  function meridiem(token, lowercase) {
    addFormatToken(token, 0, 0, function() {
      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
    });
  }
  meridiem('a', true);
  meridiem('A', false);
  addUnitAlias('hour', 'h');
  addUnitPriority('hour', 13);
  function matchMeridiem(isStrict, locale) {
    return locale._meridiemParse;
  }
  addRegexToken('a', matchMeridiem);
  addRegexToken('A', matchMeridiem);
  addRegexToken('H', match1to2);
  addRegexToken('h', match1to2);
  addRegexToken('k', match1to2);
  addRegexToken('HH', match1to2, match2);
  addRegexToken('hh', match1to2, match2);
  addRegexToken('kk', match1to2, match2);
  addRegexToken('hmm', match3to4);
  addRegexToken('hmmss', match5to6);
  addRegexToken('Hmm', match3to4);
  addRegexToken('Hmmss', match5to6);
  addParseToken(['H', 'HH'], HOUR);
  addParseToken(['k', 'kk'], function(input, array, config) {
    var kInput = toInt(input);
    array[HOUR] = kInput === 24 ? 0 : kInput;
  });
  addParseToken(['a', 'A'], function(input, array, config) {
    config._isPm = config._locale.isPM(input);
    config._meridiem = input;
  });
  addParseToken(['h', 'hh'], function(input, array, config) {
    array[HOUR] = toInt(input);
    getParsingFlags(config).bigHour = true;
  });
  addParseToken('hmm', function(input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
    getParsingFlags(config).bigHour = true;
  });
  addParseToken('hmmss', function(input, array, config) {
    var pos1 = input.length - 4;
    var pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
    getParsingFlags(config).bigHour = true;
  });
  addParseToken('Hmm', function(input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
  });
  addParseToken('Hmmss', function(input, array, config) {
    var pos1 = input.length - 4;
    var pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
  });
  function localeIsPM(input) {
    return ((input + '').toLowerCase().charAt(0) === 'p');
  }
  var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
  function localeMeridiem(hours, minutes, isLower) {
    if (hours > 11) {
      return isLower ? 'pm' : 'PM';
    } else {
      return isLower ? 'am' : 'AM';
    }
  }
  var getSetHour = makeGetSet('Hours', true);
  var baseConfig = {
    calendar: defaultCalendar,
    longDateFormat: defaultLongDateFormat,
    invalidDate: defaultInvalidDate,
    ordinal: defaultOrdinal,
    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
    relativeTime: defaultRelativeTime,
    months: defaultLocaleMonths,
    monthsShort: defaultLocaleMonthsShort,
    week: defaultLocaleWeek,
    weekdays: defaultLocaleWeekdays,
    weekdaysMin: defaultLocaleWeekdaysMin,
    weekdaysShort: defaultLocaleWeekdaysShort,
    meridiemParse: defaultLocaleMeridiemParse
  };
  var locales = {};
  var localeFamilies = {};
  var globalLocale;
  function normalizeLocale(key) {
    return key ? key.toLowerCase().replace('_', '-') : key;
  }
  function chooseLocale(names) {
    var i = 0,
        j,
        next,
        locale,
        split;
    while (i < names.length) {
      split = normalizeLocale(names[i]).split('-');
      j = split.length;
      next = normalizeLocale(names[i + 1]);
      next = next ? next.split('-') : null;
      while (j > 0) {
        locale = loadLocale(split.slice(0, j).join('-'));
        if (locale) {
          return locale;
        }
        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
          break;
        }
        j--;
      }
      i++;
    }
    return null;
  }
  function loadLocale(name) {
    var oldLocale = null;
    if (!locales[name] && (typeof module !== 'undefined') && module && module.exports) {
      try {
        oldLocale = globalLocale._abbr;
        require('./locale/' + name);
        getSetGlobalLocale(oldLocale);
      } catch (e) {}
    }
    return locales[name];
  }
  function getSetGlobalLocale(key, values) {
    var data;
    if (key) {
      if (isUndefined(values)) {
        data = getLocale(key);
      } else {
        data = defineLocale(key, values);
      }
      if (data) {
        globalLocale = data;
      }
    }
    return globalLocale._abbr;
  }
  function defineLocale(name, config) {
    if (config !== null) {
      var parentConfig = baseConfig;
      config.abbr = name;
      if (locales[name] != null) {
        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
        parentConfig = locales[name]._config;
      } else if (config.parentLocale != null) {
        if (locales[config.parentLocale] != null) {
          parentConfig = locales[config.parentLocale]._config;
        } else {
          if (!localeFamilies[config.parentLocale]) {
            localeFamilies[config.parentLocale] = [];
          }
          localeFamilies[config.parentLocale].push({
            name: name,
            config: config
          });
          return null;
        }
      }
      locales[name] = new Locale(mergeConfigs(parentConfig, config));
      if (localeFamilies[name]) {
        localeFamilies[name].forEach(function(x) {
          defineLocale(x.name, x.config);
        });
      }
      getSetGlobalLocale(name);
      return locales[name];
    } else {
      delete locales[name];
      return null;
    }
  }
  function updateLocale(name, config) {
    if (config != null) {
      var locale,
          parentConfig = baseConfig;
      if (locales[name] != null) {
        parentConfig = locales[name]._config;
      }
      config = mergeConfigs(parentConfig, config);
      locale = new Locale(config);
      locale.parentLocale = locales[name];
      locales[name] = locale;
      getSetGlobalLocale(name);
    } else {
      if (locales[name] != null) {
        if (locales[name].parentLocale != null) {
          locales[name] = locales[name].parentLocale;
        } else if (locales[name] != null) {
          delete locales[name];
        }
      }
    }
    return locales[name];
  }
  function getLocale(key) {
    var locale;
    if (key && key._locale && key._locale._abbr) {
      key = key._locale._abbr;
    }
    if (!key) {
      return globalLocale;
    }
    if (!isArray(key)) {
      locale = loadLocale(key);
      if (locale) {
        return locale;
      }
      key = [key];
    }
    return chooseLocale(key);
  }
  function listLocales() {
    return keys$1(locales);
  }
  function checkOverflow(m) {
    var overflow;
    var a = m._a;
    if (a && getParsingFlags(m).overflow === -2) {
      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;
      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
        overflow = DATE;
      }
      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
        overflow = WEEK;
      }
      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
        overflow = WEEKDAY;
      }
      getParsingFlags(m).overflow = overflow;
    }
    return m;
  }
  var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
  var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
  var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;
  var isoDates = [['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/], ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/], ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/], ['GGGG-[W]WW', /\d{4}-W\d\d/, false], ['YYYY-DDD', /\d{4}-\d{3}/], ['YYYY-MM', /\d{4}-\d\d/, false], ['YYYYYYMMDD', /[+-]\d{10}/], ['YYYYMMDD', /\d{8}/], ['GGGG[W]WWE', /\d{4}W\d{3}/], ['GGGG[W]WW', /\d{4}W\d{2}/, false], ['YYYYDDD', /\d{7}/]];
  var isoTimes = [['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/], ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/], ['HH:mm:ss', /\d\d:\d\d:\d\d/], ['HH:mm', /\d\d:\d\d/], ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/], ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/], ['HHmmss', /\d\d\d\d\d\d/], ['HHmm', /\d\d\d\d/], ['HH', /\d\d/]];
  var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;
  function configFromISO(config) {
    var i,
        l,
        string = config._i,
        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
        allowTime,
        dateFormat,
        timeFormat,
        tzFormat;
    if (match) {
      getParsingFlags(config).iso = true;
      for (i = 0, l = isoDates.length; i < l; i++) {
        if (isoDates[i][1].exec(match[1])) {
          dateFormat = isoDates[i][0];
          allowTime = isoDates[i][2] !== false;
          break;
        }
      }
      if (dateFormat == null) {
        config._isValid = false;
        return;
      }
      if (match[3]) {
        for (i = 0, l = isoTimes.length; i < l; i++) {
          if (isoTimes[i][1].exec(match[3])) {
            timeFormat = (match[2] || ' ') + isoTimes[i][0];
            break;
          }
        }
        if (timeFormat == null) {
          config._isValid = false;
          return;
        }
      }
      if (!allowTime && timeFormat != null) {
        config._isValid = false;
        return;
      }
      if (match[4]) {
        if (tzRegex.exec(match[4])) {
          tzFormat = 'Z';
        } else {
          config._isValid = false;
          return;
        }
      }
      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
      configFromStringAndFormat(config);
    } else {
      config._isValid = false;
    }
  }
  var basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d?\d\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(?:\d\d)?\d\d\s)(\d\d:\d\d)(\:\d\d)?(\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\d{4}))$/;
  function configFromRFC2822(config) {
    var string,
        match,
        dayFormat,
        dateFormat,
        timeFormat,
        tzFormat;
    var timezones = {
      ' GMT': ' +0000',
      ' EDT': ' -0400',
      ' EST': ' -0500',
      ' CDT': ' -0500',
      ' CST': ' -0600',
      ' MDT': ' -0600',
      ' MST': ' -0700',
      ' PDT': ' -0700',
      ' PST': ' -0800'
    };
    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';
    var timezone,
        timezoneIndex;
    string = config._i.replace(/\([^\)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s|\s$/g, '');
    match = basicRfcRegex.exec(string);
    if (match) {
      dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';
      dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');
      timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');
      if (match[1]) {
        var momentDate = new Date(match[2]);
        var momentDay = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][momentDate.getDay()];
        if (match[1].substr(0, 3) !== momentDay) {
          getParsingFlags(config).weekdayMismatch = true;
          config._isValid = false;
          return;
        }
      }
      switch (match[5].length) {
        case 2:
          if (timezoneIndex === 0) {
            timezone = ' +0000';
          } else {
            timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;
            timezone = ((timezoneIndex < 0) ? ' -' : ' +') + (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';
          }
          break;
        case 4:
          timezone = timezones[match[5]];
          break;
        default:
          timezone = timezones[' GMT'];
      }
      match[5] = timezone;
      config._i = match.splice(1).join('');
      tzFormat = ' ZZ';
      config._f = dayFormat + dateFormat + timeFormat + tzFormat;
      configFromStringAndFormat(config);
      getParsingFlags(config).rfc2822 = true;
    } else {
      config._isValid = false;
    }
  }
  function configFromString(config) {
    var matched = aspNetJsonRegex.exec(config._i);
    if (matched !== null) {
      config._d = new Date(+matched[1]);
      return;
    }
    configFromISO(config);
    if (config._isValid === false) {
      delete config._isValid;
    } else {
      return;
    }
    configFromRFC2822(config);
    if (config._isValid === false) {
      delete config._isValid;
    } else {
      return;
    }
    hooks.createFromInputFallback(config);
  }
  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function(config) {
    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
  });
  function defaults(a, b, c) {
    if (a != null) {
      return a;
    }
    if (b != null) {
      return b;
    }
    return c;
  }
  function currentDateArray(config) {
    var nowValue = new Date(hooks.now());
    if (config._useUTC) {
      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
    }
    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
  }
  function configFromArray(config) {
    var i,
        date,
        input = [],
        currentDate,
        yearToUse;
    if (config._d) {
      return;
    }
    currentDate = currentDateArray(config);
    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
      dayOfYearFromWeekInfo(config);
    }
    if (config._dayOfYear != null) {
      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);
      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
        getParsingFlags(config)._overflowDayOfYear = true;
      }
      date = createUTCDate(yearToUse, 0, config._dayOfYear);
      config._a[MONTH] = date.getUTCMonth();
      config._a[DATE] = date.getUTCDate();
    }
    for (i = 0; i < 3 && config._a[i] == null; ++i) {
      config._a[i] = input[i] = currentDate[i];
    }
    for (; i < 7; i++) {
      config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
    }
    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {
      config._nextDay = true;
      config._a[HOUR] = 0;
    }
    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
    if (config._tzm != null) {
      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
    }
    if (config._nextDay) {
      config._a[HOUR] = 24;
    }
  }
  function dayOfYearFromWeekInfo(config) {
    var w,
        weekYear,
        week,
        weekday,
        dow,
        doy,
        temp,
        weekdayOverflow;
    w = config._w;
    if (w.GG != null || w.W != null || w.E != null) {
      dow = 1;
      doy = 4;
      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
      week = defaults(w.W, 1);
      weekday = defaults(w.E, 1);
      if (weekday < 1 || weekday > 7) {
        weekdayOverflow = true;
      }
    } else {
      dow = config._locale._week.dow;
      doy = config._locale._week.doy;
      var curWeek = weekOfYear(createLocal(), dow, doy);
      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);
      week = defaults(w.w, curWeek.week);
      if (w.d != null) {
        weekday = w.d;
        if (weekday < 0 || weekday > 6) {
          weekdayOverflow = true;
        }
      } else if (w.e != null) {
        weekday = w.e + dow;
        if (w.e < 0 || w.e > 6) {
          weekdayOverflow = true;
        }
      } else {
        weekday = dow;
      }
    }
    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
      getParsingFlags(config)._overflowWeeks = true;
    } else if (weekdayOverflow != null) {
      getParsingFlags(config)._overflowWeekday = true;
    } else {
      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
      config._a[YEAR] = temp.year;
      config._dayOfYear = temp.dayOfYear;
    }
  }
  hooks.ISO_8601 = function() {};
  hooks.RFC_2822 = function() {};
  function configFromStringAndFormat(config) {
    if (config._f === hooks.ISO_8601) {
      configFromISO(config);
      return;
    }
    if (config._f === hooks.RFC_2822) {
      configFromRFC2822(config);
      return;
    }
    config._a = [];
    getParsingFlags(config).empty = true;
    var string = '' + config._i,
        i,
        parsedInput,
        tokens,
        token,
        skipped,
        stringLength = string.length,
        totalParsedInputLength = 0;
    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];
    for (i = 0; i < tokens.length; i++) {
      token = tokens[i];
      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
      if (parsedInput) {
        skipped = string.substr(0, string.indexOf(parsedInput));
        if (skipped.length > 0) {
          getParsingFlags(config).unusedInput.push(skipped);
        }
        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
        totalParsedInputLength += parsedInput.length;
      }
      if (formatTokenFunctions[token]) {
        if (parsedInput) {
          getParsingFlags(config).empty = false;
        } else {
          getParsingFlags(config).unusedTokens.push(token);
        }
        addTimeToArrayFromToken(token, parsedInput, config);
      } else if (config._strict && !parsedInput) {
        getParsingFlags(config).unusedTokens.push(token);
      }
    }
    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
    if (string.length > 0) {
      getParsingFlags(config).unusedInput.push(string);
    }
    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {
      getParsingFlags(config).bigHour = undefined;
    }
    getParsingFlags(config).parsedDateParts = config._a.slice(0);
    getParsingFlags(config).meridiem = config._meridiem;
    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);
    configFromArray(config);
    checkOverflow(config);
  }
  function meridiemFixWrap(locale, hour, meridiem) {
    var isPm;
    if (meridiem == null) {
      return hour;
    }
    if (locale.meridiemHour != null) {
      return locale.meridiemHour(hour, meridiem);
    } else if (locale.isPM != null) {
      isPm = locale.isPM(meridiem);
      if (isPm && hour < 12) {
        hour += 12;
      }
      if (!isPm && hour === 12) {
        hour = 0;
      }
      return hour;
    } else {
      return hour;
    }
  }
  function configFromStringAndArray(config) {
    var tempConfig,
        bestMoment,
        scoreToBeat,
        i,
        currentScore;
    if (config._f.length === 0) {
      getParsingFlags(config).invalidFormat = true;
      config._d = new Date(NaN);
      return;
    }
    for (i = 0; i < config._f.length; i++) {
      currentScore = 0;
      tempConfig = copyConfig({}, config);
      if (config._useUTC != null) {
        tempConfig._useUTC = config._useUTC;
      }
      tempConfig._f = config._f[i];
      configFromStringAndFormat(tempConfig);
      if (!isValid(tempConfig)) {
        continue;
      }
      currentScore += getParsingFlags(tempConfig).charsLeftOver;
      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
      getParsingFlags(tempConfig).score = currentScore;
      if (scoreToBeat == null || currentScore < scoreToBeat) {
        scoreToBeat = currentScore;
        bestMoment = tempConfig;
      }
    }
    extend(config, bestMoment || tempConfig);
  }
  function configFromObject(config) {
    if (config._d) {
      return;
    }
    var i = normalizeObjectUnits(config._i);
    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function(obj) {
      return obj && parseInt(obj, 10);
    });
    configFromArray(config);
  }
  function createFromConfig(config) {
    var res = new Moment(checkOverflow(prepareConfig(config)));
    if (res._nextDay) {
      res.add(1, 'd');
      res._nextDay = undefined;
    }
    return res;
  }
  function prepareConfig(config) {
    var input = config._i,
        format = config._f;
    config._locale = config._locale || getLocale(config._l);
    if (input === null || (format === undefined && input === '')) {
      return createInvalid({nullInput: true});
    }
    if (typeof input === 'string') {
      config._i = input = config._locale.preparse(input);
    }
    if (isMoment(input)) {
      return new Moment(checkOverflow(input));
    } else if (isDate(input)) {
      config._d = input;
    } else if (isArray(format)) {
      configFromStringAndArray(config);
    } else if (format) {
      configFromStringAndFormat(config);
    } else {
      configFromInput(config);
    }
    if (!isValid(config)) {
      config._d = null;
    }
    return config;
  }
  function configFromInput(config) {
    var input = config._i;
    if (isUndefined(input)) {
      config._d = new Date(hooks.now());
    } else if (isDate(input)) {
      config._d = new Date(input.valueOf());
    } else if (typeof input === 'string') {
      configFromString(config);
    } else if (isArray(input)) {
      config._a = map(input.slice(0), function(obj) {
        return parseInt(obj, 10);
      });
      configFromArray(config);
    } else if (isObject(input)) {
      configFromObject(config);
    } else if (isNumber(input)) {
      config._d = new Date(input);
    } else {
      hooks.createFromInputFallback(config);
    }
  }
  function createLocalOrUTC(input, format, locale, strict, isUTC) {
    var c = {};
    if (locale === true || locale === false) {
      strict = locale;
      locale = undefined;
    }
    if ((isObject(input) && isObjectEmpty(input)) || (isArray(input) && input.length === 0)) {
      input = undefined;
    }
    c._isAMomentObject = true;
    c._useUTC = c._isUTC = isUTC;
    c._l = locale;
    c._i = input;
    c._f = format;
    c._strict = strict;
    return createFromConfig(c);
  }
  function createLocal(input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, false);
  }
  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function() {
    var other = createLocal.apply(null, arguments);
    if (this.isValid() && other.isValid()) {
      return other < this ? this : other;
    } else {
      return createInvalid();
    }
  });
  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function() {
    var other = createLocal.apply(null, arguments);
    if (this.isValid() && other.isValid()) {
      return other > this ? this : other;
    } else {
      return createInvalid();
    }
  });
  function pickBy(fn, moments) {
    var res,
        i;
    if (moments.length === 1 && isArray(moments[0])) {
      moments = moments[0];
    }
    if (!moments.length) {
      return createLocal();
    }
    res = moments[0];
    for (i = 1; i < moments.length; ++i) {
      if (!moments[i].isValid() || moments[i][fn](res)) {
        res = moments[i];
      }
    }
    return res;
  }
  function min() {
    var args = [].slice.call(arguments, 0);
    return pickBy('isBefore', args);
  }
  function max() {
    var args = [].slice.call(arguments, 0);
    return pickBy('isAfter', args);
  }
  var now = function() {
    return Date.now ? Date.now() : +(new Date());
  };
  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];
  function isDurationValid(m) {
    for (var key in m) {
      if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
        return false;
      }
    }
    var unitHasDecimal = false;
    for (var i = 0; i < ordering.length; ++i) {
      if (m[ordering[i]]) {
        if (unitHasDecimal) {
          return false;
        }
        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
          unitHasDecimal = true;
        }
      }
    }
    return true;
  }
  function isValid$1() {
    return this._isValid;
  }
  function createInvalid$1() {
    return createDuration(NaN);
  }
  function Duration(duration) {
    var normalizedInput = normalizeObjectUnits(duration),
        years = normalizedInput.year || 0,
        quarters = normalizedInput.quarter || 0,
        months = normalizedInput.month || 0,
        weeks = normalizedInput.week || 0,
        days = normalizedInput.day || 0,
        hours = normalizedInput.hour || 0,
        minutes = normalizedInput.minute || 0,
        seconds = normalizedInput.second || 0,
        milliseconds = normalizedInput.millisecond || 0;
    this._isValid = isDurationValid(normalizedInput);
    this._milliseconds = +milliseconds + seconds * 1e3 + minutes * 6e4 + hours * 1000 * 60 * 60;
    this._days = +days + weeks * 7;
    this._months = +months + quarters * 3 + years * 12;
    this._data = {};
    this._locale = getLocale();
    this._bubble();
  }
  function isDuration(obj) {
    return obj instanceof Duration;
  }
  function absRound(number) {
    if (number < 0) {
      return Math.round(-1 * number) * -1;
    } else {
      return Math.round(number);
    }
  }
  function offset(token, separator) {
    addFormatToken(token, 0, 0, function() {
      var offset = this.utcOffset();
      var sign = '+';
      if (offset < 0) {
        offset = -offset;
        sign = '-';
      }
      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
    });
  }
  offset('Z', ':');
  offset('ZZ', '');
  addRegexToken('Z', matchShortOffset);
  addRegexToken('ZZ', matchShortOffset);
  addParseToken(['Z', 'ZZ'], function(input, array, config) {
    config._useUTC = true;
    config._tzm = offsetFromString(matchShortOffset, input);
  });
  var chunkOffset = /([\+\-]|\d\d)/gi;
  function offsetFromString(matcher, string) {
    var matches = (string || '').match(matcher);
    if (matches === null) {
      return null;
    }
    var chunk = matches[matches.length - 1] || [];
    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
    var minutes = +(parts[1] * 60) + toInt(parts[2]);
    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
  }
  function cloneWithOffset(input, model) {
    var res,
        diff;
    if (model._isUTC) {
      res = model.clone();
      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
      res._d.setTime(res._d.valueOf() + diff);
      hooks.updateOffset(res, false);
      return res;
    } else {
      return createLocal(input).local();
    }
  }
  function getDateOffset(m) {
    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
  }
  hooks.updateOffset = function() {};
  function getSetOffset(input, keepLocalTime, keepMinutes) {
    var offset = this._offset || 0,
        localAdjust;
    if (!this.isValid()) {
      return input != null ? this : NaN;
    }
    if (input != null) {
      if (typeof input === 'string') {
        input = offsetFromString(matchShortOffset, input);
        if (input === null) {
          return this;
        }
      } else if (Math.abs(input) < 16 && !keepMinutes) {
        input = input * 60;
      }
      if (!this._isUTC && keepLocalTime) {
        localAdjust = getDateOffset(this);
      }
      this._offset = input;
      this._isUTC = true;
      if (localAdjust != null) {
        this.add(localAdjust, 'm');
      }
      if (offset !== input) {
        if (!keepLocalTime || this._changeInProgress) {
          addSubtract(this, createDuration(input - offset, 'm'), 1, false);
        } else if (!this._changeInProgress) {
          this._changeInProgress = true;
          hooks.updateOffset(this, true);
          this._changeInProgress = null;
        }
      }
      return this;
    } else {
      return this._isUTC ? offset : getDateOffset(this);
    }
  }
  function getSetZone(input, keepLocalTime) {
    if (input != null) {
      if (typeof input !== 'string') {
        input = -input;
      }
      this.utcOffset(input, keepLocalTime);
      return this;
    } else {
      return -this.utcOffset();
    }
  }
  function setOffsetToUTC(keepLocalTime) {
    return this.utcOffset(0, keepLocalTime);
  }
  function setOffsetToLocal(keepLocalTime) {
    if (this._isUTC) {
      this.utcOffset(0, keepLocalTime);
      this._isUTC = false;
      if (keepLocalTime) {
        this.subtract(getDateOffset(this), 'm');
      }
    }
    return this;
  }
  function setOffsetToParsedOffset() {
    if (this._tzm != null) {
      this.utcOffset(this._tzm, false, true);
    } else if (typeof this._i === 'string') {
      var tZone = offsetFromString(matchOffset, this._i);
      if (tZone != null) {
        this.utcOffset(tZone);
      } else {
        this.utcOffset(0, true);
      }
    }
    return this;
  }
  function hasAlignedHourOffset(input) {
    if (!this.isValid()) {
      return false;
    }
    input = input ? createLocal(input).utcOffset() : 0;
    return (this.utcOffset() - input) % 60 === 0;
  }
  function isDaylightSavingTime() {
    return (this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset());
  }
  function isDaylightSavingTimeShifted() {
    if (!isUndefined(this._isDSTShifted)) {
      return this._isDSTShifted;
    }
    var c = {};
    copyConfig(c, this);
    c = prepareConfig(c);
    if (c._a) {
      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;
    } else {
      this._isDSTShifted = false;
    }
    return this._isDSTShifted;
  }
  function isLocal() {
    return this.isValid() ? !this._isUTC : false;
  }
  function isUtcOffset() {
    return this.isValid() ? this._isUTC : false;
  }
  function isUtc() {
    return this.isValid() ? this._isUTC && this._offset === 0 : false;
  }
  var aspNetRegex = /^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;
  var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;
  function createDuration(input, key) {
    var duration = input,
        match = null,
        sign,
        ret,
        diffRes;
    if (isDuration(input)) {
      duration = {
        ms: input._milliseconds,
        d: input._days,
        M: input._months
      };
    } else if (isNumber(input)) {
      duration = {};
      if (key) {
        duration[key] = input;
      } else {
        duration.milliseconds = input;
      }
    } else if (!!(match = aspNetRegex.exec(input))) {
      sign = (match[1] === '-') ? -1 : 1;
      duration = {
        y: 0,
        d: toInt(match[DATE]) * sign,
        h: toInt(match[HOUR]) * sign,
        m: toInt(match[MINUTE]) * sign,
        s: toInt(match[SECOND]) * sign,
        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign
      };
    } else if (!!(match = isoRegex.exec(input))) {
      sign = (match[1] === '-') ? -1 : 1;
      duration = {
        y: parseIso(match[2], sign),
        M: parseIso(match[3], sign),
        w: parseIso(match[4], sign),
        d: parseIso(match[5], sign),
        h: parseIso(match[6], sign),
        m: parseIso(match[7], sign),
        s: parseIso(match[8], sign)
      };
    } else if (duration == null) {
      duration = {};
    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));
      duration = {};
      duration.ms = diffRes.milliseconds;
      duration.M = diffRes.months;
    }
    ret = new Duration(duration);
    if (isDuration(input) && hasOwnProp(input, '_locale')) {
      ret._locale = input._locale;
    }
    return ret;
  }
  createDuration.fn = Duration.prototype;
  createDuration.invalid = createInvalid$1;
  function parseIso(inp, sign) {
    var res = inp && parseFloat(inp.replace(',', '.'));
    return (isNaN(res) ? 0 : res) * sign;
  }
  function positiveMomentsDifference(base, other) {
    var res = {
      milliseconds: 0,
      months: 0
    };
    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;
    if (base.clone().add(res.months, 'M').isAfter(other)) {
      --res.months;
    }
    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));
    return res;
  }
  function momentsDifference(base, other) {
    var res;
    if (!(base.isValid() && other.isValid())) {
      return {
        milliseconds: 0,
        months: 0
      };
    }
    other = cloneWithOffset(other, base);
    if (base.isBefore(other)) {
      res = positiveMomentsDifference(base, other);
    } else {
      res = positiveMomentsDifference(other, base);
      res.milliseconds = -res.milliseconds;
      res.months = -res.months;
    }
    return res;
  }
  function createAdder(direction, name) {
    return function(val, period) {
      var dur,
          tmp;
      if (period !== null && !isNaN(+period)) {
        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
        tmp = val;
        val = period;
        period = tmp;
      }
      val = typeof val === 'string' ? +val : val;
      dur = createDuration(val, period);
      addSubtract(this, dur, direction);
      return this;
    };
  }
  function addSubtract(mom, duration, isAdding, updateOffset) {
    var milliseconds = duration._milliseconds,
        days = absRound(duration._days),
        months = absRound(duration._months);
    if (!mom.isValid()) {
      return;
    }
    updateOffset = updateOffset == null ? true : updateOffset;
    if (milliseconds) {
      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
    }
    if (days) {
      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
    }
    if (months) {
      setMonth(mom, get(mom, 'Month') + months * isAdding);
    }
    if (updateOffset) {
      hooks.updateOffset(mom, days || months);
    }
  }
  var add = createAdder(1, 'add');
  var subtract = createAdder(-1, 'subtract');
  function getCalendarFormat(myMoment, now) {
    var diff = myMoment.diff(now, 'days', true);
    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';
  }
  function calendar$1(time, formats) {
    var now = time || createLocal(),
        sod = cloneWithOffset(now, this).startOf('day'),
        format = hooks.calendarFormat(this, sod) || 'sameElse';
    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);
    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
  }
  function clone() {
    return new Moment(this);
  }
  function isAfter(input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
      return false;
    }
    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
    if (units === 'millisecond') {
      return this.valueOf() > localInput.valueOf();
    } else {
      return localInput.valueOf() < this.clone().startOf(units).valueOf();
    }
  }
  function isBefore(input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
      return false;
    }
    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
    if (units === 'millisecond') {
      return this.valueOf() < localInput.valueOf();
    } else {
      return this.clone().endOf(units).valueOf() < localInput.valueOf();
    }
  }
  function isBetween(from, to, units, inclusivity) {
    inclusivity = inclusivity || '()';
    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) && (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
  }
  function isSame(input, units) {
    var localInput = isMoment(input) ? input : createLocal(input),
        inputMs;
    if (!(this.isValid() && localInput.isValid())) {
      return false;
    }
    units = normalizeUnits(units || 'millisecond');
    if (units === 'millisecond') {
      return this.valueOf() === localInput.valueOf();
    } else {
      inputMs = localInput.valueOf();
      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
    }
  }
  function isSameOrAfter(input, units) {
    return this.isSame(input, units) || this.isAfter(input, units);
  }
  function isSameOrBefore(input, units) {
    return this.isSame(input, units) || this.isBefore(input, units);
  }
  function diff(input, units, asFloat) {
    var that,
        zoneDelta,
        delta,
        output;
    if (!this.isValid()) {
      return NaN;
    }
    that = cloneWithOffset(input, this);
    if (!that.isValid()) {
      return NaN;
    }
    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
    units = normalizeUnits(units);
    if (units === 'year' || units === 'month' || units === 'quarter') {
      output = monthDiff(this, that);
      if (units === 'quarter') {
        output = output / 3;
      } else if (units === 'year') {
        output = output / 12;
      }
    } else {
      delta = this - that;
      output = units === 'second' ? delta / 1e3 : units === 'minute' ? delta / 6e4 : units === 'hour' ? delta / 36e5 : units === 'day' ? (delta - zoneDelta) / 864e5 : units === 'week' ? (delta - zoneDelta) / 6048e5 : delta;
    }
    return asFloat ? output : absFloor(output);
  }
  function monthDiff(a, b) {
    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
        anchor = a.clone().add(wholeMonthDiff, 'months'),
        anchor2,
        adjust;
    if (b - anchor < 0) {
      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
      adjust = (b - anchor) / (anchor - anchor2);
    } else {
      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
      adjust = (b - anchor) / (anchor2 - anchor);
    }
    return -(wholeMonthDiff + adjust) || 0;
  }
  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';
  function toString() {
    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
  }
  function toISOString() {
    if (!this.isValid()) {
      return null;
    }
    var m = this.clone().utc();
    if (m.year() < 0 || m.year() > 9999) {
      return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
    }
    if (isFunction(Date.prototype.toISOString)) {
      return this.toDate().toISOString();
    }
    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
  }
  function inspect() {
    if (!this.isValid()) {
      return 'moment.invalid(/* ' + this._i + ' */)';
    }
    var func = 'moment';
    var zone = '';
    if (!this.isLocal()) {
      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
      zone = 'Z';
    }
    var prefix = '[' + func + '("]';
    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
    var datetime = '-MM-DD[T]HH:mm:ss.SSS';
    var suffix = zone + '[")]';
    return this.format(prefix + year + datetime + suffix);
  }
  function format(inputString) {
    if (!inputString) {
      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
    }
    var output = formatMoment(this, inputString);
    return this.localeData().postformat(output);
  }
  function from(time, withoutSuffix) {
    if (this.isValid() && ((isMoment(time) && time.isValid()) || createLocal(time).isValid())) {
      return createDuration({
        to: this,
        from: time
      }).locale(this.locale()).humanize(!withoutSuffix);
    } else {
      return this.localeData().invalidDate();
    }
  }
  function fromNow(withoutSuffix) {
    return this.from(createLocal(), withoutSuffix);
  }
  function to(time, withoutSuffix) {
    if (this.isValid() && ((isMoment(time) && time.isValid()) || createLocal(time).isValid())) {
      return createDuration({
        from: this,
        to: time
      }).locale(this.locale()).humanize(!withoutSuffix);
    } else {
      return this.localeData().invalidDate();
    }
  }
  function toNow(withoutSuffix) {
    return this.to(createLocal(), withoutSuffix);
  }
  function locale(key) {
    var newLocaleData;
    if (key === undefined) {
      return this._locale._abbr;
    } else {
      newLocaleData = getLocale(key);
      if (newLocaleData != null) {
        this._locale = newLocaleData;
      }
      return this;
    }
  }
  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function(key) {
    if (key === undefined) {
      return this.localeData();
    } else {
      return this.locale(key);
    }
  });
  function localeData() {
    return this._locale;
  }
  function startOf(units) {
    units = normalizeUnits(units);
    switch (units) {
      case 'year':
        this.month(0);
      case 'quarter':
      case 'month':
        this.date(1);
      case 'week':
      case 'isoWeek':
      case 'day':
      case 'date':
        this.hours(0);
      case 'hour':
        this.minutes(0);
      case 'minute':
        this.seconds(0);
      case 'second':
        this.milliseconds(0);
    }
    if (units === 'week') {
      this.weekday(0);
    }
    if (units === 'isoWeek') {
      this.isoWeekday(1);
    }
    if (units === 'quarter') {
      this.month(Math.floor(this.month() / 3) * 3);
    }
    return this;
  }
  function endOf(units) {
    units = normalizeUnits(units);
    if (units === undefined || units === 'millisecond') {
      return this;
    }
    if (units === 'date') {
      units = 'day';
    }
    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
  }
  function valueOf() {
    return this._d.valueOf() - ((this._offset || 0) * 60000);
  }
  function unix() {
    return Math.floor(this.valueOf() / 1000);
  }
  function toDate() {
    return new Date(this.valueOf());
  }
  function toArray() {
    var m = this;
    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
  }
  function toObject() {
    var m = this;
    return {
      years: m.year(),
      months: m.month(),
      date: m.date(),
      hours: m.hours(),
      minutes: m.minutes(),
      seconds: m.seconds(),
      milliseconds: m.milliseconds()
    };
  }
  function toJSON() {
    return this.isValid() ? this.toISOString() : null;
  }
  function isValid$2() {
    return isValid(this);
  }
  function parsingFlags() {
    return extend({}, getParsingFlags(this));
  }
  function invalidAt() {
    return getParsingFlags(this).overflow;
  }
  function creationData() {
    return {
      input: this._i,
      format: this._f,
      locale: this._locale,
      isUTC: this._isUTC,
      strict: this._strict
    };
  }
  addFormatToken(0, ['gg', 2], 0, function() {
    return this.weekYear() % 100;
  });
  addFormatToken(0, ['GG', 2], 0, function() {
    return this.isoWeekYear() % 100;
  });
  function addWeekYearFormatToken(token, getter) {
    addFormatToken(0, [token, token.length], 0, getter);
  }
  addWeekYearFormatToken('gggg', 'weekYear');
  addWeekYearFormatToken('ggggg', 'weekYear');
  addWeekYearFormatToken('GGGG', 'isoWeekYear');
  addWeekYearFormatToken('GGGGG', 'isoWeekYear');
  addUnitAlias('weekYear', 'gg');
  addUnitAlias('isoWeekYear', 'GG');
  addUnitPriority('weekYear', 1);
  addUnitPriority('isoWeekYear', 1);
  addRegexToken('G', matchSigned);
  addRegexToken('g', matchSigned);
  addRegexToken('GG', match1to2, match2);
  addRegexToken('gg', match1to2, match2);
  addRegexToken('GGGG', match1to4, match4);
  addRegexToken('gggg', match1to4, match4);
  addRegexToken('GGGGG', match1to6, match6);
  addRegexToken('ggggg', match1to6, match6);
  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function(input, week, config, token) {
    week[token.substr(0, 2)] = toInt(input);
  });
  addWeekParseToken(['gg', 'GG'], function(input, week, config, token) {
    week[token] = hooks.parseTwoDigitYear(input);
  });
  function getSetWeekYear(input) {
    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);
  }
  function getSetISOWeekYear(input) {
    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);
  }
  function getISOWeeksInYear() {
    return weeksInYear(this.year(), 1, 4);
  }
  function getWeeksInYear() {
    var weekInfo = this.localeData()._week;
    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
  }
  function getSetWeekYearHelper(input, week, weekday, dow, doy) {
    var weeksTarget;
    if (input == null) {
      return weekOfYear(this, dow, doy).year;
    } else {
      weeksTarget = weeksInYear(input, dow, doy);
      if (week > weeksTarget) {
        week = weeksTarget;
      }
      return setWeekAll.call(this, input, week, weekday, dow, doy);
    }
  }
  function setWeekAll(weekYear, week, weekday, dow, doy) {
    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
    this.year(date.getUTCFullYear());
    this.month(date.getUTCMonth());
    this.date(date.getUTCDate());
    return this;
  }
  addFormatToken('Q', 0, 'Qo', 'quarter');
  addUnitAlias('quarter', 'Q');
  addUnitPriority('quarter', 7);
  addRegexToken('Q', match1);
  addParseToken('Q', function(input, array) {
    array[MONTH] = (toInt(input) - 1) * 3;
  });
  function getSetQuarter(input) {
    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
  }
  addFormatToken('D', ['DD', 2], 'Do', 'date');
  addUnitAlias('date', 'D');
  addUnitPriority('date', 9);
  addRegexToken('D', match1to2);
  addRegexToken('DD', match1to2, match2);
  addRegexToken('Do', function(isStrict, locale) {
    return isStrict ? (locale._dayOfMonthOrdinalParse || locale._ordinalParse) : locale._dayOfMonthOrdinalParseLenient;
  });
  addParseToken(['D', 'DD'], DATE);
  addParseToken('Do', function(input, array) {
    array[DATE] = toInt(input.match(match1to2)[0], 10);
  });
  var getSetDayOfMonth = makeGetSet('Date', true);
  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');
  addUnitAlias('dayOfYear', 'DDD');
  addUnitPriority('dayOfYear', 4);
  addRegexToken('DDD', match1to3);
  addRegexToken('DDDD', match3);
  addParseToken(['DDD', 'DDDD'], function(input, array, config) {
    config._dayOfYear = toInt(input);
  });
  function getSetDayOfYear(input) {
    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
  }
  addFormatToken('m', ['mm', 2], 0, 'minute');
  addUnitAlias('minute', 'm');
  addUnitPriority('minute', 14);
  addRegexToken('m', match1to2);
  addRegexToken('mm', match1to2, match2);
  addParseToken(['m', 'mm'], MINUTE);
  var getSetMinute = makeGetSet('Minutes', false);
  addFormatToken('s', ['ss', 2], 0, 'second');
  addUnitAlias('second', 's');
  addUnitPriority('second', 15);
  addRegexToken('s', match1to2);
  addRegexToken('ss', match1to2, match2);
  addParseToken(['s', 'ss'], SECOND);
  var getSetSecond = makeGetSet('Seconds', false);
  addFormatToken('S', 0, 0, function() {
    return ~~(this.millisecond() / 100);
  });
  addFormatToken(0, ['SS', 2], 0, function() {
    return ~~(this.millisecond() / 10);
  });
  addFormatToken(0, ['SSS', 3], 0, 'millisecond');
  addFormatToken(0, ['SSSS', 4], 0, function() {
    return this.millisecond() * 10;
  });
  addFormatToken(0, ['SSSSS', 5], 0, function() {
    return this.millisecond() * 100;
  });
  addFormatToken(0, ['SSSSSS', 6], 0, function() {
    return this.millisecond() * 1000;
  });
  addFormatToken(0, ['SSSSSSS', 7], 0, function() {
    return this.millisecond() * 10000;
  });
  addFormatToken(0, ['SSSSSSSS', 8], 0, function() {
    return this.millisecond() * 100000;
  });
  addFormatToken(0, ['SSSSSSSSS', 9], 0, function() {
    return this.millisecond() * 1000000;
  });
  addUnitAlias('millisecond', 'ms');
  addUnitPriority('millisecond', 16);
  addRegexToken('S', match1to3, match1);
  addRegexToken('SS', match1to3, match2);
  addRegexToken('SSS', match1to3, match3);
  var token;
  for (token = 'SSSS'; token.length <= 9; token += 'S') {
    addRegexToken(token, matchUnsigned);
  }
  function parseMs(input, array) {
    array[MILLISECOND] = toInt(('0.' + input) * 1000);
  }
  for (token = 'S'; token.length <= 9; token += 'S') {
    addParseToken(token, parseMs);
  }
  var getSetMillisecond = makeGetSet('Milliseconds', false);
  addFormatToken('z', 0, 0, 'zoneAbbr');
  addFormatToken('zz', 0, 0, 'zoneName');
  function getZoneAbbr() {
    return this._isUTC ? 'UTC' : '';
  }
  function getZoneName() {
    return this._isUTC ? 'Coordinated Universal Time' : '';
  }
  var proto = Moment.prototype;
  proto.add = add;
  proto.calendar = calendar$1;
  proto.clone = clone;
  proto.diff = diff;
  proto.endOf = endOf;
  proto.format = format;
  proto.from = from;
  proto.fromNow = fromNow;
  proto.to = to;
  proto.toNow = toNow;
  proto.get = stringGet;
  proto.invalidAt = invalidAt;
  proto.isAfter = isAfter;
  proto.isBefore = isBefore;
  proto.isBetween = isBetween;
  proto.isSame = isSame;
  proto.isSameOrAfter = isSameOrAfter;
  proto.isSameOrBefore = isSameOrBefore;
  proto.isValid = isValid$2;
  proto.lang = lang;
  proto.locale = locale;
  proto.localeData = localeData;
  proto.max = prototypeMax;
  proto.min = prototypeMin;
  proto.parsingFlags = parsingFlags;
  proto.set = stringSet;
  proto.startOf = startOf;
  proto.subtract = subtract;
  proto.toArray = toArray;
  proto.toObject = toObject;
  proto.toDate = toDate;
  proto.toISOString = toISOString;
  proto.inspect = inspect;
  proto.toJSON = toJSON;
  proto.toString = toString;
  proto.unix = unix;
  proto.valueOf = valueOf;
  proto.creationData = creationData;
  proto.year = getSetYear;
  proto.isLeapYear = getIsLeapYear;
  proto.weekYear = getSetWeekYear;
  proto.isoWeekYear = getSetISOWeekYear;
  proto.quarter = proto.quarters = getSetQuarter;
  proto.month = getSetMonth;
  proto.daysInMonth = getDaysInMonth;
  proto.week = proto.weeks = getSetWeek;
  proto.isoWeek = proto.isoWeeks = getSetISOWeek;
  proto.weeksInYear = getWeeksInYear;
  proto.isoWeeksInYear = getISOWeeksInYear;
  proto.date = getSetDayOfMonth;
  proto.day = proto.days = getSetDayOfWeek;
  proto.weekday = getSetLocaleDayOfWeek;
  proto.isoWeekday = getSetISODayOfWeek;
  proto.dayOfYear = getSetDayOfYear;
  proto.hour = proto.hours = getSetHour;
  proto.minute = proto.minutes = getSetMinute;
  proto.second = proto.seconds = getSetSecond;
  proto.millisecond = proto.milliseconds = getSetMillisecond;
  proto.utcOffset = getSetOffset;
  proto.utc = setOffsetToUTC;
  proto.local = setOffsetToLocal;
  proto.parseZone = setOffsetToParsedOffset;
  proto.hasAlignedHourOffset = hasAlignedHourOffset;
  proto.isDST = isDaylightSavingTime;
  proto.isLocal = isLocal;
  proto.isUtcOffset = isUtcOffset;
  proto.isUtc = isUtc;
  proto.isUTC = isUtc;
  proto.zoneAbbr = getZoneAbbr;
  proto.zoneName = getZoneName;
  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);
  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);
  function createUnix(input) {
    return createLocal(input * 1000);
  }
  function createInZone() {
    return createLocal.apply(null, arguments).parseZone();
  }
  function preParsePostFormat(string) {
    return string;
  }
  var proto$1 = Locale.prototype;
  proto$1.calendar = calendar;
  proto$1.longDateFormat = longDateFormat;
  proto$1.invalidDate = invalidDate;
  proto$1.ordinal = ordinal;
  proto$1.preparse = preParsePostFormat;
  proto$1.postformat = preParsePostFormat;
  proto$1.relativeTime = relativeTime;
  proto$1.pastFuture = pastFuture;
  proto$1.set = set;
  proto$1.months = localeMonths;
  proto$1.monthsShort = localeMonthsShort;
  proto$1.monthsParse = localeMonthsParse;
  proto$1.monthsRegex = monthsRegex;
  proto$1.monthsShortRegex = monthsShortRegex;
  proto$1.week = localeWeek;
  proto$1.firstDayOfYear = localeFirstDayOfYear;
  proto$1.firstDayOfWeek = localeFirstDayOfWeek;
  proto$1.weekdays = localeWeekdays;
  proto$1.weekdaysMin = localeWeekdaysMin;
  proto$1.weekdaysShort = localeWeekdaysShort;
  proto$1.weekdaysParse = localeWeekdaysParse;
  proto$1.weekdaysRegex = weekdaysRegex;
  proto$1.weekdaysShortRegex = weekdaysShortRegex;
  proto$1.weekdaysMinRegex = weekdaysMinRegex;
  proto$1.isPM = localeIsPM;
  proto$1.meridiem = localeMeridiem;
  function get$1(format, index, field, setter) {
    var locale = getLocale();
    var utc = createUTC().set(setter, index);
    return locale[field](utc, format);
  }
  function listMonthsImpl(format, index, field) {
    if (isNumber(format)) {
      index = format;
      format = undefined;
    }
    format = format || '';
    if (index != null) {
      return get$1(format, index, field, 'month');
    }
    var i;
    var out = [];
    for (i = 0; i < 12; i++) {
      out[i] = get$1(format, i, field, 'month');
    }
    return out;
  }
  function listWeekdaysImpl(localeSorted, format, index, field) {
    if (typeof localeSorted === 'boolean') {
      if (isNumber(format)) {
        index = format;
        format = undefined;
      }
      format = format || '';
    } else {
      format = localeSorted;
      index = format;
      localeSorted = false;
      if (isNumber(format)) {
        index = format;
        format = undefined;
      }
      format = format || '';
    }
    var locale = getLocale(),
        shift = localeSorted ? locale._week.dow : 0;
    if (index != null) {
      return get$1(format, (index + shift) % 7, field, 'day');
    }
    var i;
    var out = [];
    for (i = 0; i < 7; i++) {
      out[i] = get$1(format, (i + shift) % 7, field, 'day');
    }
    return out;
  }
  function listMonths(format, index) {
    return listMonthsImpl(format, index, 'months');
  }
  function listMonthsShort(format, index) {
    return listMonthsImpl(format, index, 'monthsShort');
  }
  function listWeekdays(localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
  }
  function listWeekdaysShort(localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
  }
  function listWeekdaysMin(localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
  }
  getSetGlobalLocale('en', {
    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal: function(number) {
      var b = number % 10,
          output = (toInt(number % 100 / 10) === 1) ? 'th' : (b === 1) ? 'st' : (b === 2) ? 'nd' : (b === 3) ? 'rd' : 'th';
      return number + output;
    }
  });
  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);
  var mathAbs = Math.abs;
  function abs() {
    var data = this._data;
    this._milliseconds = mathAbs(this._milliseconds);
    this._days = mathAbs(this._days);
    this._months = mathAbs(this._months);
    data.milliseconds = mathAbs(data.milliseconds);
    data.seconds = mathAbs(data.seconds);
    data.minutes = mathAbs(data.minutes);
    data.hours = mathAbs(data.hours);
    data.months = mathAbs(data.months);
    data.years = mathAbs(data.years);
    return this;
  }
  function addSubtract$1(duration, input, value, direction) {
    var other = createDuration(input, value);
    duration._milliseconds += direction * other._milliseconds;
    duration._days += direction * other._days;
    duration._months += direction * other._months;
    return duration._bubble();
  }
  function add$1(input, value) {
    return addSubtract$1(this, input, value, 1);
  }
  function subtract$1(input, value) {
    return addSubtract$1(this, input, value, -1);
  }
  function absCeil(number) {
    if (number < 0) {
      return Math.floor(number);
    } else {
      return Math.ceil(number);
    }
  }
  function bubble() {
    var milliseconds = this._milliseconds;
    var days = this._days;
    var months = this._months;
    var data = this._data;
    var seconds,
        minutes,
        hours,
        years,
        monthsFromDays;
    if (!((milliseconds >= 0 && days >= 0 && months >= 0) || (milliseconds <= 0 && days <= 0 && months <= 0))) {
      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
      days = 0;
      months = 0;
    }
    data.milliseconds = milliseconds % 1000;
    seconds = absFloor(milliseconds / 1000);
    data.seconds = seconds % 60;
    minutes = absFloor(seconds / 60);
    data.minutes = minutes % 60;
    hours = absFloor(minutes / 60);
    data.hours = hours % 24;
    days += absFloor(hours / 24);
    monthsFromDays = absFloor(daysToMonths(days));
    months += monthsFromDays;
    days -= absCeil(monthsToDays(monthsFromDays));
    years = absFloor(months / 12);
    months %= 12;
    data.days = days;
    data.months = months;
    data.years = years;
    return this;
  }
  function daysToMonths(days) {
    return days * 4800 / 146097;
  }
  function monthsToDays(months) {
    return months * 146097 / 4800;
  }
  function as(units) {
    if (!this.isValid()) {
      return NaN;
    }
    var days;
    var months;
    var milliseconds = this._milliseconds;
    units = normalizeUnits(units);
    if (units === 'month' || units === 'year') {
      days = this._days + milliseconds / 864e5;
      months = this._months + daysToMonths(days);
      return units === 'month' ? months : months / 12;
    } else {
      days = this._days + Math.round(monthsToDays(this._months));
      switch (units) {
        case 'week':
          return days / 7 + milliseconds / 6048e5;
        case 'day':
          return days + milliseconds / 864e5;
        case 'hour':
          return days * 24 + milliseconds / 36e5;
        case 'minute':
          return days * 1440 + milliseconds / 6e4;
        case 'second':
          return days * 86400 + milliseconds / 1000;
        case 'millisecond':
          return Math.floor(days * 864e5) + milliseconds;
        default:
          throw new Error('Unknown unit ' + units);
      }
    }
  }
  function valueOf$1() {
    if (!this.isValid()) {
      return NaN;
    }
    return (this._milliseconds + this._days * 864e5 + (this._months % 12) * 2592e6 + toInt(this._months / 12) * 31536e6);
  }
  function makeAs(alias) {
    return function() {
      return this.as(alias);
    };
  }
  var asMilliseconds = makeAs('ms');
  var asSeconds = makeAs('s');
  var asMinutes = makeAs('m');
  var asHours = makeAs('h');
  var asDays = makeAs('d');
  var asWeeks = makeAs('w');
  var asMonths = makeAs('M');
  var asYears = makeAs('y');
  function get$2(units) {
    units = normalizeUnits(units);
    return this.isValid() ? this[units + 's']() : NaN;
  }
  function makeGetter(name) {
    return function() {
      return this.isValid() ? this._data[name] : NaN;
    };
  }
  var milliseconds = makeGetter('milliseconds');
  var seconds = makeGetter('seconds');
  var minutes = makeGetter('minutes');
  var hours = makeGetter('hours');
  var days = makeGetter('days');
  var months = makeGetter('months');
  var years = makeGetter('years');
  function weeks() {
    return absFloor(this.days() / 7);
  }
  var round = Math.round;
  var thresholds = {
    ss: 44,
    s: 45,
    m: 45,
    h: 22,
    d: 26,
    M: 11
  };
  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
  }
  function relativeTime$1(posNegDuration, withoutSuffix, locale) {
    var duration = createDuration(posNegDuration).abs();
    var seconds = round(duration.as('s'));
    var minutes = round(duration.as('m'));
    var hours = round(duration.as('h'));
    var days = round(duration.as('d'));
    var months = round(duration.as('M'));
    var years = round(duration.as('y'));
    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];
    a[2] = withoutSuffix;
    a[3] = +posNegDuration > 0;
    a[4] = locale;
    return substituteTimeAgo.apply(null, a);
  }
  function getSetRelativeTimeRounding(roundingFunction) {
    if (roundingFunction === undefined) {
      return round;
    }
    if (typeof(roundingFunction) === 'function') {
      round = roundingFunction;
      return true;
    }
    return false;
  }
  function getSetRelativeTimeThreshold(threshold, limit) {
    if (thresholds[threshold] === undefined) {
      return false;
    }
    if (limit === undefined) {
      return thresholds[threshold];
    }
    thresholds[threshold] = limit;
    if (threshold === 's') {
      thresholds.ss = limit - 1;
    }
    return true;
  }
  function humanize(withSuffix) {
    if (!this.isValid()) {
      return this.localeData().invalidDate();
    }
    var locale = this.localeData();
    var output = relativeTime$1(this, !withSuffix, locale);
    if (withSuffix) {
      output = locale.pastFuture(+this, output);
    }
    return locale.postformat(output);
  }
  var abs$1 = Math.abs;
  function toISOString$1() {
    if (!this.isValid()) {
      return this.localeData().invalidDate();
    }
    var seconds = abs$1(this._milliseconds) / 1000;
    var days = abs$1(this._days);
    var months = abs$1(this._months);
    var minutes,
        hours,
        years;
    minutes = absFloor(seconds / 60);
    hours = absFloor(minutes / 60);
    seconds %= 60;
    minutes %= 60;
    years = absFloor(months / 12);
    months %= 12;
    var Y = years;
    var M = months;
    var D = days;
    var h = hours;
    var m = minutes;
    var s = seconds;
    var total = this.asSeconds();
    if (!total) {
      return 'P0D';
    }
    return (total < 0 ? '-' : '') + 'P' + (Y ? Y + 'Y' : '') + (M ? M + 'M' : '') + (D ? D + 'D' : '') + ((h || m || s) ? 'T' : '') + (h ? h + 'H' : '') + (m ? m + 'M' : '') + (s ? s + 'S' : '');
  }
  var proto$2 = Duration.prototype;
  proto$2.isValid = isValid$1;
  proto$2.abs = abs;
  proto$2.add = add$1;
  proto$2.subtract = subtract$1;
  proto$2.as = as;
  proto$2.asMilliseconds = asMilliseconds;
  proto$2.asSeconds = asSeconds;
  proto$2.asMinutes = asMinutes;
  proto$2.asHours = asHours;
  proto$2.asDays = asDays;
  proto$2.asWeeks = asWeeks;
  proto$2.asMonths = asMonths;
  proto$2.asYears = asYears;
  proto$2.valueOf = valueOf$1;
  proto$2._bubble = bubble;
  proto$2.get = get$2;
  proto$2.milliseconds = milliseconds;
  proto$2.seconds = seconds;
  proto$2.minutes = minutes;
  proto$2.hours = hours;
  proto$2.days = days;
  proto$2.weeks = weeks;
  proto$2.months = months;
  proto$2.years = years;
  proto$2.humanize = humanize;
  proto$2.toISOString = toISOString$1;
  proto$2.toString = toISOString$1;
  proto$2.toJSON = toISOString$1;
  proto$2.locale = locale;
  proto$2.localeData = localeData;
  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
  proto$2.lang = lang;
  addFormatToken('X', 0, 0, 'unix');
  addFormatToken('x', 0, 0, 'valueOf');
  addRegexToken('x', matchSigned);
  addRegexToken('X', matchTimestamp);
  addParseToken('X', function(input, array, config) {
    config._d = new Date(parseFloat(input, 10) * 1000);
  });
  addParseToken('x', function(input, array, config) {
    config._d = new Date(toInt(input));
  });
  hooks.version = '2.18.1';
  setHookCallback(createLocal);
  hooks.fn = proto;
  hooks.min = min;
  hooks.max = max;
  hooks.now = now;
  hooks.utc = createUTC;
  hooks.unix = createUnix;
  hooks.months = listMonths;
  hooks.isDate = isDate;
  hooks.locale = getSetGlobalLocale;
  hooks.invalid = createInvalid;
  hooks.duration = createDuration;
  hooks.isMoment = isMoment;
  hooks.weekdays = listWeekdays;
  hooks.parseZone = createInZone;
  hooks.localeData = getLocale;
  hooks.isDuration = isDuration;
  hooks.monthsShort = listMonthsShort;
  hooks.weekdaysMin = listWeekdaysMin;
  hooks.defineLocale = defineLocale;
  hooks.updateLocale = updateLocale;
  hooks.locales = listLocales;
  hooks.weekdaysShort = listWeekdaysShort;
  hooks.normalizeUnits = normalizeUnits;
  hooks.relativeTimeRounding = getSetRelativeTimeRounding;
  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
  hooks.calendarFormat = getCalendarFormat;
  hooks.prototype = proto;
  return hooks;
})));

})();
System.register('OpenGroup/plugins/multichat/components/multichat.js', ['moment'], function (_export, _context) {
    "use strict";

    var Moment;

    _export('default', function (wrapper) {
        return {
            data: function data() {
                var _this = this;

                var currentGroup = wrapper.groupManager.getCurrentGroup();

                if (!this.messages) {
                    this.messages = currentGroup.plugins['multichat'].messages;
                }

                currentGroup.on('og.core.multichat.message', function (object, connection) {
                    var message = object.message;
                    message.ownerUuid = connection.uuid;
                    _this.messages.push(message);
                });

                return {
                    newMessage: '',
                    messages: this.messages
                };
            },
            methods: {
                getProfile: function getProfile(uuid) {
                    return wrapper.profileManager.getProfile(uuid);
                },

                displayDate: function displayDate(date) {
                    return Moment(date).fromNow();
                },
                sendChat: function sendChat(event) {
                    if (!event || (event.metaKey || event.ctrlKey) && event.keyCode === 13) {

                        var message = {
                            text: this.newMessage,
                            date: Moment().format()
                        };

                        this.messages.push(message);

                        var currentGroup = wrapper.groupManager.getCurrentGroup();

                        currentGroup.sendMessage({
                            owner: 'og.core.multichat',
                            message: message
                        });

                        this.newMessage = '';
                    }
                }
            }
        };
    });

    return {
        setters: [function (_moment) {
            Moment = _moment.default;
        }],
        execute: function () {
            ;
        }
    };
});
System.register("OpenGroup/plugins/multichat/templates/multichat.html!npm:systemjs-plugin-text@0.0.9/text.js", [], function (_export, _context) {
  "use strict";

  var __useDefault;

  return {
    setters: [],
    execute: function () {
      _export("__useDefault", __useDefault = true);

      _export("__useDefault", __useDefault);

      _export("default", "<div class=\"multichat\">\n    <h1 class=\"plugin-title\">Chat</h1>\n\n    <div class=\"multichat-chats\" v-chat-scroll>\n        <div class=\"multichat-chat\" v-for=\"message in messages\">\n            <div class=\"multichat-chat-message\" :class=\"{'self': message.self }\">\n                <profile-teaser class=\"small\" :profile=\"getProfile(message.ownerUuid)\"></profile-teaser>\n                <div class=\"multichat-chat-message-texts\">\n                    <span class=\"multichat-chat-message-sender\">{{ getProfile(message.ownerUuid).nickname }}</span>\n                    <span class=\"multichat-chat-message-date\">{{ displayDate(message.date) }}</span>\n                    <span class=\"multichat-chat-message-text\">{{ message.text }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"multichat-footer\">\n        <textarea class=\"multichat-textarea\" rows=\"1\" placeholder=\"Your message\" v-on:keydown=\"sendChat($event)\" v-model=\"newMessage\"></textarea>\n        <div class=\"multichat-send button primary\" @click=\"sendChat()\"><span>Send message</span><i class=\"fa fa-paper-plane\" aria-hidden=\"true\"></i></div>\n    </div>\n</div>");
    }
  };
});
System.register('OpenGroup/plugins/webrtc/components/manual-signaling.js', ['uuid/v4'], function (_export, _context) {
    "use strict";

    var uuid;

    _export('default', function (wrapper) {
        var currentGroup = wrapper.groupManager.getCurrentGroup();
        var plugin = currentGroup.plugins['webrtc'];

        return {
            props: ['plugin'],
            methods: {
                createOffer: function createOffer() {
                    var _this = this;

                    currentGroup.addPeer({
                        connectionType: 'og-webrtc',
                        signalerType: 'manual',
                        uuid: uuid(),
                        signalerInfo: {
                            role: 'initiator',
                            offerCreated: function offerCreated(offer, returnAnswerCallback) {
                                _this.offer = btoa(JSON.stringify(offer.toJSON()));
                                _this.returnAnswerCallback = returnAnswerCallback;
                            }
                        }
                    });
                },
                createAnswer: function createAnswer() {
                    var _this2 = this;

                    this.currentStep = 3;
                    var offer = JSON.parse(atob(this.offer));

                    currentGroup.addPeer({
                        connectionType: 'og-webrtc',
                        uuid: uuid(),
                        signalerType: 'manual',
                        signalerInfo: {
                            role: 'answerer',
                            offer: offer,
                            answerCreated: function answerCreated(answer) {
                                _this2.answer = btoa(JSON.stringify(answer.toJSON()));
                            }
                        }
                    });
                },
                acceptAnswer: function acceptAnswer() {
                    var answer = JSON.parse(atob(this.answer));
                    this.returnAnswerCallback(answer);
                },
                setOfferSend: function setOfferSend() {
                    this.currentStep = 3;
                },
                setFlow: function setFlow(type) {
                    this.flow = type;

                    if (type === 'invite') {
                        this.createOffer();
                    }

                    this.currentStep = 2;
                }
            },
            data: function data() {
                return {
                    returnAnswerCallback: false,
                    offer: '',
                    answer: '',
                    flow: '',
                    currentStep: 1
                };
            }
        };
    });

    return {
        setters: [function (_uuidV) {
            uuid = _uuidV.default;
        }],
        execute: function () {
            ;
        }
    };
});
System.register('OpenGroup/plugins/webrtc/EasyWebRtc.test.js', ['./EasyWebRtc.js'], function (_export, _context) {
    "use strict";

    var EasyWebRtc, EasyWebRtc1, EasyWebRtc1Offer, EasyWebRtc2, EasyWebRtc2Answer;
    return {
        setters: [function (_EasyWebRtcJs) {
            EasyWebRtc = _EasyWebRtcJs.default;
        }],
        execute: function () {
            EasyWebRtc1 = new EasyWebRtc();
            EasyWebRtc2 = new EasyWebRtc();


            describe('EasyWebRtc', function () {
                it('should create an offer', function (done) {
                    EasyWebRtc1.getOffer(function (offer) {
                        if (offer && offer.type) {
                            expect(offer.type).toEqual('offer');
                            EasyWebRtc1Offer = offer;
                            done();
                        }
                    });
                });

                it('should create an answer from an offer', function (done) {
                    EasyWebRtc2.getAnswer(EasyWebRtc1Offer, function (answer) {
                        if (answer && answer.type) {
                            expect(answer.type).toEqual('answer');
                            EasyWebRtc2Answer = answer;
                            done();
                        }
                    });
                });

                it('should run a callback when a connection is created', function (done) {
                    EasyWebRtc1.on('connected', function () {
                        done();
                    });

                    EasyWebRtc1.acceptAnswer(EasyWebRtc2Answer);
                });

                it('should send a message', function (done) {
                    EasyWebRtc2.once('message', function (message) {
                        if (message === 'should send a message') {
                            done();
                        }
                    });

                    EasyWebRtc1.sendMessage('should send a message');
                });
            });

            describe('Berekening', function () {
                it('should calculate correctly for alumnium', function () {
                    expect(a).toEqual(b);
                });
            });
        }
    };
});
System.register("OpenGroup/plugins/webrtc/templates/manual-signaling.html!npm:systemjs-plugin-text@0.0.9/text.js", [], function (_export, _context) {
  "use strict";

  var __useDefault;

  return {
    setters: [],
    execute: function () {
      _export("__useDefault", __useDefault = true);

      _export("__useDefault", __useDefault);

      _export("default", "<div class=\"webrtc connect-via-text\">\n    <h1 class=\"plugin-title\">Connect via text</h1>\n\n    <div class=\"step1 step\" v-if=\"currentStep == 1\">\n        <div class=\"button primary\" @click=\"setFlow('invite')\">I want to invite someone</div>\n        <div class=\"button primary\" @click=\"setFlow('invited')\">I am invited by someone</div>\n    </div>\n\n    <div class=\"step2 step\" v-if=\"currentStep == 2 && flow == 'invite'\">\n        <h3>Please send this text to the person you want to connect to</h3>\n        <textarea>{{ offer }}</textarea>\n        <div class=\"button primary\" @click=\"setOfferSend()\">I have send the text</div>\n    </div>\n\n    <div class=\"step2 step\" v-if=\"currentStep == 2 && flow == 'invited'\">\n        <h3>Paste here the text your received</h3>\n        <textarea v-model=\"offer\"></textarea>\n        <div class=\"button primary\" @click=\"createAnswer()\">Continue</div>\n    </div>\n\n    <div class=\"step3 step\" v-if=\"currentStep == 3 && flow == 'invited'\">\n        <h3>Please send this text to the person you got the text from</h3>\n        <textarea>{{ answer }}</textarea>\n    </div>\n\n    <div class=\"step3 step\" v-if=\"currentStep == 3 && flow == 'invite'\">\n        <h3>Paste here the text your received</h3>\n        <textarea v-model=\"answer\"></textarea>\n        <div class=\"button primary\" @click=\"acceptAnswer()\">Connect</div>\n    </div>\n\n\n</div>");
    }
  };
});
System.register("OpenGroup/theme/components/about.js", [], function (_export, _context) {
    "use strict";

    _export("default", function (wrapper) {
        return {};
    });

    return {
        setters: [],
        execute: function () {
            ;
        }
    };
});
System.registerDynamic("npm:underscore@1.8.3.json", [], false, function() {
  return {
    "main": "underscore.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic('npm:underscore@1.8.3/underscore.js', [], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  //     Underscore.js 1.8.3
  //     http://underscorejs.org
  //     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
  //     Underscore may be freely distributed under the MIT license.

  (function () {

    // Baseline setup
    // --------------

    // Establish the root object, `window` in the browser, or `exports` on the server.
    var root = this;

    // Save the previous value of the `_` variable.
    var previousUnderscore = root._;

    // Save bytes in the minified (but not gzipped) version:
    var ArrayProto = Array.prototype,
        ObjProto = Object.prototype,
        FuncProto = Function.prototype;

    // Create quick reference variables for speed access to core prototypes.
    var push = ArrayProto.push,
        slice = ArrayProto.slice,
        toString = ObjProto.toString,
        hasOwnProperty = ObjProto.hasOwnProperty;

    // All **ECMAScript 5** native function implementations that we hope to use
    // are declared here.
    var nativeIsArray = Array.isArray,
        nativeKeys = Object.keys,
        nativeBind = FuncProto.bind,
        nativeCreate = Object.create;

    // Naked function reference for surrogate-prototype-swapping.
    var Ctor = function () {};

    // Create a safe reference to the Underscore object for use below.
    var _ = function (obj) {
      if (obj instanceof _) return obj;
      if (!(this instanceof _)) return new _(obj);
      this._wrapped = obj;
    };

    // Export the Underscore object for **Node.js**, with
    // backwards-compatibility for the old `require()` API. If we're in
    // the browser, add `_` as a global object.
    if (typeof exports !== 'undefined') {
      if (typeof module !== 'undefined' && module.exports) {
        exports = module.exports = _;
      }
      exports._ = _;
    } else {
      root._ = _;
    }

    // Current version.
    _.VERSION = '1.8.3';

    // Internal function that returns an efficient (for current engines) version
    // of the passed-in callback, to be repeatedly applied in other Underscore
    // functions.
    var optimizeCb = function (func, context, argCount) {
      if (context === void 0) return func;
      switch (argCount == null ? 3 : argCount) {
        case 1:
          return function (value) {
            return func.call(context, value);
          };
        case 2:
          return function (value, other) {
            return func.call(context, value, other);
          };
        case 3:
          return function (value, index, collection) {
            return func.call(context, value, index, collection);
          };
        case 4:
          return function (accumulator, value, index, collection) {
            return func.call(context, accumulator, value, index, collection);
          };
      }
      return function () {
        return func.apply(context, arguments);
      };
    };

    // A mostly-internal function to generate callbacks that can be applied
    // to each element in a collection, returning the desired result — either
    // identity, an arbitrary callback, a property matcher, or a property accessor.
    var cb = function (value, context, argCount) {
      if (value == null) return _.identity;
      if (_.isFunction(value)) return optimizeCb(value, context, argCount);
      if (_.isObject(value)) return _.matcher(value);
      return _.property(value);
    };
    _.iteratee = function (value, context) {
      return cb(value, context, Infinity);
    };

    // An internal function for creating assigner functions.
    var createAssigner = function (keysFunc, undefinedOnly) {
      return function (obj) {
        var length = arguments.length;
        if (length < 2 || obj == null) return obj;
        for (var index = 1; index < length; index++) {
          var source = arguments[index],
              keys = keysFunc(source),
              l = keys.length;
          for (var i = 0; i < l; i++) {
            var key = keys[i];
            if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];
          }
        }
        return obj;
      };
    };

    // An internal function for creating a new object that inherits from another.
    var baseCreate = function (prototype) {
      if (!_.isObject(prototype)) return {};
      if (nativeCreate) return nativeCreate(prototype);
      Ctor.prototype = prototype;
      var result = new Ctor();
      Ctor.prototype = null;
      return result;
    };

    var property = function (key) {
      return function (obj) {
        return obj == null ? void 0 : obj[key];
      };
    };

    // Helper for collection methods to determine whether a collection
    // should be iterated as an array or as an object
    // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
    // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094
    var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;
    var getLength = property('length');
    var isArrayLike = function (collection) {
      var length = getLength(collection);
      return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;
    };

    // Collection Functions
    // --------------------

    // The cornerstone, an `each` implementation, aka `forEach`.
    // Handles raw objects in addition to array-likes. Treats all
    // sparse array-likes as if they were dense.
    _.each = _.forEach = function (obj, iteratee, context) {
      iteratee = optimizeCb(iteratee, context);
      var i, length;
      if (isArrayLike(obj)) {
        for (i = 0, length = obj.length; i < length; i++) {
          iteratee(obj[i], i, obj);
        }
      } else {
        var keys = _.keys(obj);
        for (i = 0, length = keys.length; i < length; i++) {
          iteratee(obj[keys[i]], keys[i], obj);
        }
      }
      return obj;
    };

    // Return the results of applying the iteratee to each element.
    _.map = _.collect = function (obj, iteratee, context) {
      iteratee = cb(iteratee, context);
      var keys = !isArrayLike(obj) && _.keys(obj),
          length = (keys || obj).length,
          results = Array(length);
      for (var index = 0; index < length; index++) {
        var currentKey = keys ? keys[index] : index;
        results[index] = iteratee(obj[currentKey], currentKey, obj);
      }
      return results;
    };

    // Create a reducing function iterating left or right.
    function createReduce(dir) {
      // Optimized iterator function as using arguments.length
      // in the main function will deoptimize the, see #1991.
      function iterator(obj, iteratee, memo, keys, index, length) {
        for (; index >= 0 && index < length; index += dir) {
          var currentKey = keys ? keys[index] : index;
          memo = iteratee(memo, obj[currentKey], currentKey, obj);
        }
        return memo;
      }

      return function (obj, iteratee, memo, context) {
        iteratee = optimizeCb(iteratee, context, 4);
        var keys = !isArrayLike(obj) && _.keys(obj),
            length = (keys || obj).length,
            index = dir > 0 ? 0 : length - 1;
        // Determine the initial value if none is provided.
        if (arguments.length < 3) {
          memo = obj[keys ? keys[index] : index];
          index += dir;
        }
        return iterator(obj, iteratee, memo, keys, index, length);
      };
    }

    // **Reduce** builds up a single result from a list of values, aka `inject`,
    // or `foldl`.
    _.reduce = _.foldl = _.inject = createReduce(1);

    // The right-associative version of reduce, also known as `foldr`.
    _.reduceRight = _.foldr = createReduce(-1);

    // Return the first value which passes a truth test. Aliased as `detect`.
    _.find = _.detect = function (obj, predicate, context) {
      var key;
      if (isArrayLike(obj)) {
        key = _.findIndex(obj, predicate, context);
      } else {
        key = _.findKey(obj, predicate, context);
      }
      if (key !== void 0 && key !== -1) return obj[key];
    };

    // Return all the elements that pass a truth test.
    // Aliased as `select`.
    _.filter = _.select = function (obj, predicate, context) {
      var results = [];
      predicate = cb(predicate, context);
      _.each(obj, function (value, index, list) {
        if (predicate(value, index, list)) results.push(value);
      });
      return results;
    };

    // Return all the elements for which a truth test fails.
    _.reject = function (obj, predicate, context) {
      return _.filter(obj, _.negate(cb(predicate)), context);
    };

    // Determine whether all of the elements match a truth test.
    // Aliased as `all`.
    _.every = _.all = function (obj, predicate, context) {
      predicate = cb(predicate, context);
      var keys = !isArrayLike(obj) && _.keys(obj),
          length = (keys || obj).length;
      for (var index = 0; index < length; index++) {
        var currentKey = keys ? keys[index] : index;
        if (!predicate(obj[currentKey], currentKey, obj)) return false;
      }
      return true;
    };

    // Determine if at least one element in the object matches a truth test.
    // Aliased as `any`.
    _.some = _.any = function (obj, predicate, context) {
      predicate = cb(predicate, context);
      var keys = !isArrayLike(obj) && _.keys(obj),
          length = (keys || obj).length;
      for (var index = 0; index < length; index++) {
        var currentKey = keys ? keys[index] : index;
        if (predicate(obj[currentKey], currentKey, obj)) return true;
      }
      return false;
    };

    // Determine if the array or object contains a given item (using `===`).
    // Aliased as `includes` and `include`.
    _.contains = _.includes = _.include = function (obj, item, fromIndex, guard) {
      if (!isArrayLike(obj)) obj = _.values(obj);
      if (typeof fromIndex != 'number' || guard) fromIndex = 0;
      return _.indexOf(obj, item, fromIndex) >= 0;
    };

    // Invoke a method (with arguments) on every item in a collection.
    _.invoke = function (obj, method) {
      var args = slice.call(arguments, 2);
      var isFunc = _.isFunction(method);
      return _.map(obj, function (value) {
        var func = isFunc ? method : value[method];
        return func == null ? func : func.apply(value, args);
      });
    };

    // Convenience version of a common use case of `map`: fetching a property.
    _.pluck = function (obj, key) {
      return _.map(obj, _.property(key));
    };

    // Convenience version of a common use case of `filter`: selecting only objects
    // containing specific `key:value` pairs.
    _.where = function (obj, attrs) {
      return _.filter(obj, _.matcher(attrs));
    };

    // Convenience version of a common use case of `find`: getting the first object
    // containing specific `key:value` pairs.
    _.findWhere = function (obj, attrs) {
      return _.find(obj, _.matcher(attrs));
    };

    // Return the maximum element (or element-based computation).
    _.max = function (obj, iteratee, context) {
      var result = -Infinity,
          lastComputed = -Infinity,
          value,
          computed;
      if (iteratee == null && obj != null) {
        obj = isArrayLike(obj) ? obj : _.values(obj);
        for (var i = 0, length = obj.length; i < length; i++) {
          value = obj[i];
          if (value > result) {
            result = value;
          }
        }
      } else {
        iteratee = cb(iteratee, context);
        _.each(obj, function (value, index, list) {
          computed = iteratee(value, index, list);
          if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
            result = value;
            lastComputed = computed;
          }
        });
      }
      return result;
    };

    // Return the minimum element (or element-based computation).
    _.min = function (obj, iteratee, context) {
      var result = Infinity,
          lastComputed = Infinity,
          value,
          computed;
      if (iteratee == null && obj != null) {
        obj = isArrayLike(obj) ? obj : _.values(obj);
        for (var i = 0, length = obj.length; i < length; i++) {
          value = obj[i];
          if (value < result) {
            result = value;
          }
        }
      } else {
        iteratee = cb(iteratee, context);
        _.each(obj, function (value, index, list) {
          computed = iteratee(value, index, list);
          if (computed < lastComputed || computed === Infinity && result === Infinity) {
            result = value;
            lastComputed = computed;
          }
        });
      }
      return result;
    };

    // Shuffle a collection, using the modern version of the
    // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
    _.shuffle = function (obj) {
      var set = isArrayLike(obj) ? obj : _.values(obj);
      var length = set.length;
      var shuffled = Array(length);
      for (var index = 0, rand; index < length; index++) {
        rand = _.random(0, index);
        if (rand !== index) shuffled[index] = shuffled[rand];
        shuffled[rand] = set[index];
      }
      return shuffled;
    };

    // Sample **n** random values from a collection.
    // If **n** is not specified, returns a single random element.
    // The internal `guard` argument allows it to work with `map`.
    _.sample = function (obj, n, guard) {
      if (n == null || guard) {
        if (!isArrayLike(obj)) obj = _.values(obj);
        return obj[_.random(obj.length - 1)];
      }
      return _.shuffle(obj).slice(0, Math.max(0, n));
    };

    // Sort the object's values by a criterion produced by an iteratee.
    _.sortBy = function (obj, iteratee, context) {
      iteratee = cb(iteratee, context);
      return _.pluck(_.map(obj, function (value, index, list) {
        return {
          value: value,
          index: index,
          criteria: iteratee(value, index, list)
        };
      }).sort(function (left, right) {
        var a = left.criteria;
        var b = right.criteria;
        if (a !== b) {
          if (a > b || a === void 0) return 1;
          if (a < b || b === void 0) return -1;
        }
        return left.index - right.index;
      }), 'value');
    };

    // An internal function used for aggregate "group by" operations.
    var group = function (behavior) {
      return function (obj, iteratee, context) {
        var result = {};
        iteratee = cb(iteratee, context);
        _.each(obj, function (value, index) {
          var key = iteratee(value, index, obj);
          behavior(result, value, key);
        });
        return result;
      };
    };

    // Groups the object's values by a criterion. Pass either a string attribute
    // to group by, or a function that returns the criterion.
    _.groupBy = group(function (result, value, key) {
      if (_.has(result, key)) result[key].push(value);else result[key] = [value];
    });

    // Indexes the object's values by a criterion, similar to `groupBy`, but for
    // when you know that your index values will be unique.
    _.indexBy = group(function (result, value, key) {
      result[key] = value;
    });

    // Counts instances of an object that group by a certain criterion. Pass
    // either a string attribute to count by, or a function that returns the
    // criterion.
    _.countBy = group(function (result, value, key) {
      if (_.has(result, key)) result[key]++;else result[key] = 1;
    });

    // Safely create a real, live array from anything iterable.
    _.toArray = function (obj) {
      if (!obj) return [];
      if (_.isArray(obj)) return slice.call(obj);
      if (isArrayLike(obj)) return _.map(obj, _.identity);
      return _.values(obj);
    };

    // Return the number of elements in an object.
    _.size = function (obj) {
      if (obj == null) return 0;
      return isArrayLike(obj) ? obj.length : _.keys(obj).length;
    };

    // Split a collection into two arrays: one whose elements all satisfy the given
    // predicate, and one whose elements all do not satisfy the predicate.
    _.partition = function (obj, predicate, context) {
      predicate = cb(predicate, context);
      var pass = [],
          fail = [];
      _.each(obj, function (value, key, obj) {
        (predicate(value, key, obj) ? pass : fail).push(value);
      });
      return [pass, fail];
    };

    // Array Functions
    // ---------------

    // Get the first element of an array. Passing **n** will return the first N
    // values in the array. Aliased as `head` and `take`. The **guard** check
    // allows it to work with `_.map`.
    _.first = _.head = _.take = function (array, n, guard) {
      if (array == null) return void 0;
      if (n == null || guard) return array[0];
      return _.initial(array, array.length - n);
    };

    // Returns everything but the last entry of the array. Especially useful on
    // the arguments object. Passing **n** will return all the values in
    // the array, excluding the last N.
    _.initial = function (array, n, guard) {
      return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
    };

    // Get the last element of an array. Passing **n** will return the last N
    // values in the array.
    _.last = function (array, n, guard) {
      if (array == null) return void 0;
      if (n == null || guard) return array[array.length - 1];
      return _.rest(array, Math.max(0, array.length - n));
    };

    // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
    // Especially useful on the arguments object. Passing an **n** will return
    // the rest N values in the array.
    _.rest = _.tail = _.drop = function (array, n, guard) {
      return slice.call(array, n == null || guard ? 1 : n);
    };

    // Trim out all falsy values from an array.
    _.compact = function (array) {
      return _.filter(array, _.identity);
    };

    // Internal implementation of a recursive `flatten` function.
    var flatten = function (input, shallow, strict, startIndex) {
      var output = [],
          idx = 0;
      for (var i = startIndex || 0, length = getLength(input); i < length; i++) {
        var value = input[i];
        if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {
          //flatten current level of array or arguments object
          if (!shallow) value = flatten(value, shallow, strict);
          var j = 0,
              len = value.length;
          output.length += len;
          while (j < len) {
            output[idx++] = value[j++];
          }
        } else if (!strict) {
          output[idx++] = value;
        }
      }
      return output;
    };

    // Flatten out an array, either recursively (by default), or just one level.
    _.flatten = function (array, shallow) {
      return flatten(array, shallow, false);
    };

    // Return a version of the array that does not contain the specified value(s).
    _.without = function (array) {
      return _.difference(array, slice.call(arguments, 1));
    };

    // Produce a duplicate-free version of the array. If the array has already
    // been sorted, you have the option of using a faster algorithm.
    // Aliased as `unique`.
    _.uniq = _.unique = function (array, isSorted, iteratee, context) {
      if (!_.isBoolean(isSorted)) {
        context = iteratee;
        iteratee = isSorted;
        isSorted = false;
      }
      if (iteratee != null) iteratee = cb(iteratee, context);
      var result = [];
      var seen = [];
      for (var i = 0, length = getLength(array); i < length; i++) {
        var value = array[i],
            computed = iteratee ? iteratee(value, i, array) : value;
        if (isSorted) {
          if (!i || seen !== computed) result.push(value);
          seen = computed;
        } else if (iteratee) {
          if (!_.contains(seen, computed)) {
            seen.push(computed);
            result.push(value);
          }
        } else if (!_.contains(result, value)) {
          result.push(value);
        }
      }
      return result;
    };

    // Produce an array that contains the union: each distinct element from all of
    // the passed-in arrays.
    _.union = function () {
      return _.uniq(flatten(arguments, true, true));
    };

    // Produce an array that contains every item shared between all the
    // passed-in arrays.
    _.intersection = function (array) {
      var result = [];
      var argsLength = arguments.length;
      for (var i = 0, length = getLength(array); i < length; i++) {
        var item = array[i];
        if (_.contains(result, item)) continue;
        for (var j = 1; j < argsLength; j++) {
          if (!_.contains(arguments[j], item)) break;
        }
        if (j === argsLength) result.push(item);
      }
      return result;
    };

    // Take the difference between one array and a number of other arrays.
    // Only the elements present in just the first array will remain.
    _.difference = function (array) {
      var rest = flatten(arguments, true, true, 1);
      return _.filter(array, function (value) {
        return !_.contains(rest, value);
      });
    };

    // Zip together multiple lists into a single array -- elements that share
    // an index go together.
    _.zip = function () {
      return _.unzip(arguments);
    };

    // Complement of _.zip. Unzip accepts an array of arrays and groups
    // each array's elements on shared indices
    _.unzip = function (array) {
      var length = array && _.max(array, getLength).length || 0;
      var result = Array(length);

      for (var index = 0; index < length; index++) {
        result[index] = _.pluck(array, index);
      }
      return result;
    };

    // Converts lists into objects. Pass either a single array of `[key, value]`
    // pairs, or two parallel arrays of the same length -- one of keys, and one of
    // the corresponding values.
    _.object = function (list, values) {
      var result = {};
      for (var i = 0, length = getLength(list); i < length; i++) {
        if (values) {
          result[list[i]] = values[i];
        } else {
          result[list[i][0]] = list[i][1];
        }
      }
      return result;
    };

    // Generator function to create the findIndex and findLastIndex functions
    function createPredicateIndexFinder(dir) {
      return function (array, predicate, context) {
        predicate = cb(predicate, context);
        var length = getLength(array);
        var index = dir > 0 ? 0 : length - 1;
        for (; index >= 0 && index < length; index += dir) {
          if (predicate(array[index], index, array)) return index;
        }
        return -1;
      };
    }

    // Returns the first index on an array-like that passes a predicate test
    _.findIndex = createPredicateIndexFinder(1);
    _.findLastIndex = createPredicateIndexFinder(-1);

    // Use a comparator function to figure out the smallest index at which
    // an object should be inserted so as to maintain order. Uses binary search.
    _.sortedIndex = function (array, obj, iteratee, context) {
      iteratee = cb(iteratee, context, 1);
      var value = iteratee(obj);
      var low = 0,
          high = getLength(array);
      while (low < high) {
        var mid = Math.floor((low + high) / 2);
        if (iteratee(array[mid]) < value) low = mid + 1;else high = mid;
      }
      return low;
    };

    // Generator function to create the indexOf and lastIndexOf functions
    function createIndexFinder(dir, predicateFind, sortedIndex) {
      return function (array, item, idx) {
        var i = 0,
            length = getLength(array);
        if (typeof idx == 'number') {
          if (dir > 0) {
            i = idx >= 0 ? idx : Math.max(idx + length, i);
          } else {
            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;
          }
        } else if (sortedIndex && idx && length) {
          idx = sortedIndex(array, item);
          return array[idx] === item ? idx : -1;
        }
        if (item !== item) {
          idx = predicateFind(slice.call(array, i, length), _.isNaN);
          return idx >= 0 ? idx + i : -1;
        }
        for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {
          if (array[idx] === item) return idx;
        }
        return -1;
      };
    }

    // Return the position of the first occurrence of an item in an array,
    // or -1 if the item is not included in the array.
    // If the array is large and already in sort order, pass `true`
    // for **isSorted** to use binary search.
    _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);
    _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);

    // Generate an integer Array containing an arithmetic progression. A port of
    // the native Python `range()` function. See
    // [the Python documentation](http://docs.python.org/library/functions.html#range).
    _.range = function (start, stop, step) {
      if (stop == null) {
        stop = start || 0;
        start = 0;
      }
      step = step || 1;

      var length = Math.max(Math.ceil((stop - start) / step), 0);
      var range = Array(length);

      for (var idx = 0; idx < length; idx++, start += step) {
        range[idx] = start;
      }

      return range;
    };

    // Function (ahem) Functions
    // ------------------

    // Determines whether to execute a function as a constructor
    // or a normal function with the provided arguments
    var executeBound = function (sourceFunc, boundFunc, context, callingContext, args) {
      if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);
      var self = baseCreate(sourceFunc.prototype);
      var result = sourceFunc.apply(self, args);
      if (_.isObject(result)) return result;
      return self;
    };

    // Create a function bound to a given object (assigning `this`, and arguments,
    // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
    // available.
    _.bind = function (func, context) {
      if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
      if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');
      var args = slice.call(arguments, 2);
      var bound = function () {
        return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));
      };
      return bound;
    };

    // Partially apply a function by creating a version that has had some of its
    // arguments pre-filled, without changing its dynamic `this` context. _ acts
    // as a placeholder, allowing any combination of arguments to be pre-filled.
    _.partial = function (func) {
      var boundArgs = slice.call(arguments, 1);
      var bound = function () {
        var position = 0,
            length = boundArgs.length;
        var args = Array(length);
        for (var i = 0; i < length; i++) {
          args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];
        }
        while (position < arguments.length) args.push(arguments[position++]);
        return executeBound(func, bound, this, this, args);
      };
      return bound;
    };

    // Bind a number of an object's methods to that object. Remaining arguments
    // are the method names to be bound. Useful for ensuring that all callbacks
    // defined on an object belong to it.
    _.bindAll = function (obj) {
      var i,
          length = arguments.length,
          key;
      if (length <= 1) throw new Error('bindAll must be passed function names');
      for (i = 1; i < length; i++) {
        key = arguments[i];
        obj[key] = _.bind(obj[key], obj);
      }
      return obj;
    };

    // Memoize an expensive function by storing its results.
    _.memoize = function (func, hasher) {
      var memoize = function (key) {
        var cache = memoize.cache;
        var address = '' + (hasher ? hasher.apply(this, arguments) : key);
        if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);
        return cache[address];
      };
      memoize.cache = {};
      return memoize;
    };

    // Delays a function for the given number of milliseconds, and then calls
    // it with the arguments supplied.
    _.delay = function (func, wait) {
      var args = slice.call(arguments, 2);
      return setTimeout(function () {
        return func.apply(null, args);
      }, wait);
    };

    // Defers a function, scheduling it to run after the current call stack has
    // cleared.
    _.defer = _.partial(_.delay, _, 1);

    // Returns a function, that, when invoked, will only be triggered at most once
    // during a given window of time. Normally, the throttled function will run
    // as much as it can, without ever going more than once per `wait` duration;
    // but if you'd like to disable the execution on the leading edge, pass
    // `{leading: false}`. To disable execution on the trailing edge, ditto.
    _.throttle = function (func, wait, options) {
      var context, args, result;
      var timeout = null;
      var previous = 0;
      if (!options) options = {};
      var later = function () {
        previous = options.leading === false ? 0 : _.now();
        timeout = null;
        result = func.apply(context, args);
        if (!timeout) context = args = null;
      };
      return function () {
        var now = _.now();
        if (!previous && options.leading === false) previous = now;
        var remaining = wait - (now - previous);
        context = this;
        args = arguments;
        if (remaining <= 0 || remaining > wait) {
          if (timeout) {
            clearTimeout(timeout);
            timeout = null;
          }
          previous = now;
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        } else if (!timeout && options.trailing !== false) {
          timeout = setTimeout(later, remaining);
        }
        return result;
      };
    };

    // Returns a function, that, as long as it continues to be invoked, will not
    // be triggered. The function will be called after it stops being called for
    // N milliseconds. If `immediate` is passed, trigger the function on the
    // leading edge, instead of the trailing.
    _.debounce = function (func, wait, immediate) {
      var timeout, args, context, timestamp, result;

      var later = function () {
        var last = _.now() - timestamp;

        if (last < wait && last >= 0) {
          timeout = setTimeout(later, wait - last);
        } else {
          timeout = null;
          if (!immediate) {
            result = func.apply(context, args);
            if (!timeout) context = args = null;
          }
        }
      };

      return function () {
        context = this;
        args = arguments;
        timestamp = _.now();
        var callNow = immediate && !timeout;
        if (!timeout) timeout = setTimeout(later, wait);
        if (callNow) {
          result = func.apply(context, args);
          context = args = null;
        }

        return result;
      };
    };

    // Returns the first function passed as an argument to the second,
    // allowing you to adjust arguments, run code before and after, and
    // conditionally execute the original function.
    _.wrap = function (func, wrapper) {
      return _.partial(wrapper, func);
    };

    // Returns a negated version of the passed-in predicate.
    _.negate = function (predicate) {
      return function () {
        return !predicate.apply(this, arguments);
      };
    };

    // Returns a function that is the composition of a list of functions, each
    // consuming the return value of the function that follows.
    _.compose = function () {
      var args = arguments;
      var start = args.length - 1;
      return function () {
        var i = start;
        var result = args[start].apply(this, arguments);
        while (i--) result = args[i].call(this, result);
        return result;
      };
    };

    // Returns a function that will only be executed on and after the Nth call.
    _.after = function (times, func) {
      return function () {
        if (--times < 1) {
          return func.apply(this, arguments);
        }
      };
    };

    // Returns a function that will only be executed up to (but not including) the Nth call.
    _.before = function (times, func) {
      var memo;
      return function () {
        if (--times > 0) {
          memo = func.apply(this, arguments);
        }
        if (times <= 1) func = null;
        return memo;
      };
    };

    // Returns a function that will be executed at most one time, no matter how
    // often you call it. Useful for lazy initialization.
    _.once = _.partial(_.before, 2);

    // Object Functions
    // ----------------

    // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.
    var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');
    var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

    function collectNonEnumProps(obj, keys) {
      var nonEnumIdx = nonEnumerableProps.length;
      var constructor = obj.constructor;
      var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;

      // Constructor is a special case.
      var prop = 'constructor';
      if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);

      while (nonEnumIdx--) {
        prop = nonEnumerableProps[nonEnumIdx];
        if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {
          keys.push(prop);
        }
      }
    }

    // Retrieve the names of an object's own properties.
    // Delegates to **ECMAScript 5**'s native `Object.keys`
    _.keys = function (obj) {
      if (!_.isObject(obj)) return [];
      if (nativeKeys) return nativeKeys(obj);
      var keys = [];
      for (var key in obj) if (_.has(obj, key)) keys.push(key);
      // Ahem, IE < 9.
      if (hasEnumBug) collectNonEnumProps(obj, keys);
      return keys;
    };

    // Retrieve all the property names of an object.
    _.allKeys = function (obj) {
      if (!_.isObject(obj)) return [];
      var keys = [];
      for (var key in obj) keys.push(key);
      // Ahem, IE < 9.
      if (hasEnumBug) collectNonEnumProps(obj, keys);
      return keys;
    };

    // Retrieve the values of an object's properties.
    _.values = function (obj) {
      var keys = _.keys(obj);
      var length = keys.length;
      var values = Array(length);
      for (var i = 0; i < length; i++) {
        values[i] = obj[keys[i]];
      }
      return values;
    };

    // Returns the results of applying the iteratee to each element of the object
    // In contrast to _.map it returns an object
    _.mapObject = function (obj, iteratee, context) {
      iteratee = cb(iteratee, context);
      var keys = _.keys(obj),
          length = keys.length,
          results = {},
          currentKey;
      for (var index = 0; index < length; index++) {
        currentKey = keys[index];
        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);
      }
      return results;
    };

    // Convert an object into a list of `[key, value]` pairs.
    _.pairs = function (obj) {
      var keys = _.keys(obj);
      var length = keys.length;
      var pairs = Array(length);
      for (var i = 0; i < length; i++) {
        pairs[i] = [keys[i], obj[keys[i]]];
      }
      return pairs;
    };

    // Invert the keys and values of an object. The values must be serializable.
    _.invert = function (obj) {
      var result = {};
      var keys = _.keys(obj);
      for (var i = 0, length = keys.length; i < length; i++) {
        result[obj[keys[i]]] = keys[i];
      }
      return result;
    };

    // Return a sorted list of the function names available on the object.
    // Aliased as `methods`
    _.functions = _.methods = function (obj) {
      var names = [];
      for (var key in obj) {
        if (_.isFunction(obj[key])) names.push(key);
      }
      return names.sort();
    };

    // Extend a given object with all the properties in passed-in object(s).
    _.extend = createAssigner(_.allKeys);

    // Assigns a given object with all the own properties in the passed-in object(s)
    // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)
    _.extendOwn = _.assign = createAssigner(_.keys);

    // Returns the first key on an object that passes a predicate test
    _.findKey = function (obj, predicate, context) {
      predicate = cb(predicate, context);
      var keys = _.keys(obj),
          key;
      for (var i = 0, length = keys.length; i < length; i++) {
        key = keys[i];
        if (predicate(obj[key], key, obj)) return key;
      }
    };

    // Return a copy of the object only containing the whitelisted properties.
    _.pick = function (object, oiteratee, context) {
      var result = {},
          obj = object,
          iteratee,
          keys;
      if (obj == null) return result;
      if (_.isFunction(oiteratee)) {
        keys = _.allKeys(obj);
        iteratee = optimizeCb(oiteratee, context);
      } else {
        keys = flatten(arguments, false, false, 1);
        iteratee = function (value, key, obj) {
          return key in obj;
        };
        obj = Object(obj);
      }
      for (var i = 0, length = keys.length; i < length; i++) {
        var key = keys[i];
        var value = obj[key];
        if (iteratee(value, key, obj)) result[key] = value;
      }
      return result;
    };

    // Return a copy of the object without the blacklisted properties.
    _.omit = function (obj, iteratee, context) {
      if (_.isFunction(iteratee)) {
        iteratee = _.negate(iteratee);
      } else {
        var keys = _.map(flatten(arguments, false, false, 1), String);
        iteratee = function (value, key) {
          return !_.contains(keys, key);
        };
      }
      return _.pick(obj, iteratee, context);
    };

    // Fill in a given object with default properties.
    _.defaults = createAssigner(_.allKeys, true);

    // Creates an object that inherits from the given prototype object.
    // If additional properties are provided then they will be added to the
    // created object.
    _.create = function (prototype, props) {
      var result = baseCreate(prototype);
      if (props) _.extendOwn(result, props);
      return result;
    };

    // Create a (shallow-cloned) duplicate of an object.
    _.clone = function (obj) {
      if (!_.isObject(obj)) return obj;
      return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
    };

    // Invokes interceptor with the obj, and then returns obj.
    // The primary purpose of this method is to "tap into" a method chain, in
    // order to perform operations on intermediate results within the chain.
    _.tap = function (obj, interceptor) {
      interceptor(obj);
      return obj;
    };

    // Returns whether an object has a given set of `key:value` pairs.
    _.isMatch = function (object, attrs) {
      var keys = _.keys(attrs),
          length = keys.length;
      if (object == null) return !length;
      var obj = Object(object);
      for (var i = 0; i < length; i++) {
        var key = keys[i];
        if (attrs[key] !== obj[key] || !(key in obj)) return false;
      }
      return true;
    };

    // Internal recursive comparison function for `isEqual`.
    var eq = function (a, b, aStack, bStack) {
      // Identical objects are equal. `0 === -0`, but they aren't identical.
      // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
      if (a === b) return a !== 0 || 1 / a === 1 / b;
      // A strict comparison is necessary because `null == undefined`.
      if (a == null || b == null) return a === b;
      // Unwrap any wrapped objects.
      if (a instanceof _) a = a._wrapped;
      if (b instanceof _) b = b._wrapped;
      // Compare `[[Class]]` names.
      var className = toString.call(a);
      if (className !== toString.call(b)) return false;
      switch (className) {
        // Strings, numbers, regular expressions, dates, and booleans are compared by value.
        case '[object RegExp]':
        // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
        case '[object String]':
          // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
          // equivalent to `new String("5")`.
          return '' + a === '' + b;
        case '[object Number]':
          // `NaN`s are equivalent, but non-reflexive.
          // Object(NaN) is equivalent to NaN
          if (+a !== +a) return +b !== +b;
          // An `egal` comparison is performed for other numeric values.
          return +a === 0 ? 1 / +a === 1 / b : +a === +b;
        case '[object Date]':
        case '[object Boolean]':
          // Coerce dates and booleans to numeric primitive values. Dates are compared by their
          // millisecond representations. Note that invalid dates with millisecond representations
          // of `NaN` are not equivalent.
          return +a === +b;
      }

      var areArrays = className === '[object Array]';
      if (!areArrays) {
        if (typeof a != 'object' || typeof b != 'object') return false;

        // Objects with different constructors are not equivalent, but `Object`s or `Array`s
        // from different frames are.
        var aCtor = a.constructor,
            bCtor = b.constructor;
        if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor) && 'constructor' in a && 'constructor' in b) {
          return false;
        }
      }
      // Assume equality for cyclic structures. The algorithm for detecting cyclic
      // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.

      // Initializing stack of traversed objects.
      // It's done here since we only need them for objects and arrays comparison.
      aStack = aStack || [];
      bStack = bStack || [];
      var length = aStack.length;
      while (length--) {
        // Linear search. Performance is inversely proportional to the number of
        // unique nested structures.
        if (aStack[length] === a) return bStack[length] === b;
      }

      // Add the first object to the stack of traversed objects.
      aStack.push(a);
      bStack.push(b);

      // Recursively compare objects and arrays.
      if (areArrays) {
        // Compare array lengths to determine if a deep comparison is necessary.
        length = a.length;
        if (length !== b.length) return false;
        // Deep compare the contents, ignoring non-numeric properties.
        while (length--) {
          if (!eq(a[length], b[length], aStack, bStack)) return false;
        }
      } else {
        // Deep compare objects.
        var keys = _.keys(a),
            key;
        length = keys.length;
        // Ensure that both objects contain the same number of properties before comparing deep equality.
        if (_.keys(b).length !== length) return false;
        while (length--) {
          // Deep compare each member
          key = keys[length];
          if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;
        }
      }
      // Remove the first object from the stack of traversed objects.
      aStack.pop();
      bStack.pop();
      return true;
    };

    // Perform a deep comparison to check if two objects are equal.
    _.isEqual = function (a, b) {
      return eq(a, b);
    };

    // Is a given array, string, or object empty?
    // An "empty" object has no enumerable own-properties.
    _.isEmpty = function (obj) {
      if (obj == null) return true;
      if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;
      return _.keys(obj).length === 0;
    };

    // Is a given value a DOM element?
    _.isElement = function (obj) {
      return !!(obj && obj.nodeType === 1);
    };

    // Is a given value an array?
    // Delegates to ECMA5's native Array.isArray
    _.isArray = nativeIsArray || function (obj) {
      return toString.call(obj) === '[object Array]';
    };

    // Is a given variable an object?
    _.isObject = function (obj) {
      var type = typeof obj;
      return type === 'function' || type === 'object' && !!obj;
    };

    // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.
    _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function (name) {
      _['is' + name] = function (obj) {
        return toString.call(obj) === '[object ' + name + ']';
      };
    });

    // Define a fallback version of the method in browsers (ahem, IE < 9), where
    // there isn't any inspectable "Arguments" type.
    if (!_.isArguments(arguments)) {
      _.isArguments = function (obj) {
        return _.has(obj, 'callee');
      };
    }

    // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,
    // IE 11 (#1621), and in Safari 8 (#1929).
    if (typeof /./ != 'function' && typeof Int8Array != 'object') {
      _.isFunction = function (obj) {
        return typeof obj == 'function' || false;
      };
    }

    // Is a given object a finite number?
    _.isFinite = function (obj) {
      return isFinite(obj) && !isNaN(parseFloat(obj));
    };

    // Is the given value `NaN`? (NaN is the only number which does not equal itself).
    _.isNaN = function (obj) {
      return _.isNumber(obj) && obj !== +obj;
    };

    // Is a given value a boolean?
    _.isBoolean = function (obj) {
      return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
    };

    // Is a given value equal to null?
    _.isNull = function (obj) {
      return obj === null;
    };

    // Is a given variable undefined?
    _.isUndefined = function (obj) {
      return obj === void 0;
    };

    // Shortcut function for checking if an object has a given property directly
    // on itself (in other words, not on a prototype).
    _.has = function (obj, key) {
      return obj != null && hasOwnProperty.call(obj, key);
    };

    // Utility Functions
    // -----------------

    // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
    // previous owner. Returns a reference to the Underscore object.
    _.noConflict = function () {
      root._ = previousUnderscore;
      return this;
    };

    // Keep the identity function around for default iteratees.
    _.identity = function (value) {
      return value;
    };

    // Predicate-generating functions. Often useful outside of Underscore.
    _.constant = function (value) {
      return function () {
        return value;
      };
    };

    _.noop = function () {};

    _.property = property;

    // Generates a function for a given object that returns a given property.
    _.propertyOf = function (obj) {
      return obj == null ? function () {} : function (key) {
        return obj[key];
      };
    };

    // Returns a predicate for checking whether an object has a given set of
    // `key:value` pairs.
    _.matcher = _.matches = function (attrs) {
      attrs = _.extendOwn({}, attrs);
      return function (obj) {
        return _.isMatch(obj, attrs);
      };
    };

    // Run a function **n** times.
    _.times = function (n, iteratee, context) {
      var accum = Array(Math.max(0, n));
      iteratee = optimizeCb(iteratee, context, 1);
      for (var i = 0; i < n; i++) accum[i] = iteratee(i);
      return accum;
    };

    // Return a random integer between min and max (inclusive).
    _.random = function (min, max) {
      if (max == null) {
        max = min;
        min = 0;
      }
      return min + Math.floor(Math.random() * (max - min + 1));
    };

    // A (possibly faster) way to get the current timestamp as an integer.
    _.now = Date.now || function () {
      return new Date().getTime();
    };

    // List of HTML entities for escaping.
    var escapeMap = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#x27;',
      '`': '&#x60;'
    };
    var unescapeMap = _.invert(escapeMap);

    // Functions for escaping and unescaping strings to/from HTML interpolation.
    var createEscaper = function (map) {
      var escaper = function (match) {
        return map[match];
      };
      // Regexes for identifying a key that needs to be escaped
      var source = '(?:' + _.keys(map).join('|') + ')';
      var testRegexp = RegExp(source);
      var replaceRegexp = RegExp(source, 'g');
      return function (string) {
        string = string == null ? '' : '' + string;
        return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
      };
    };
    _.escape = createEscaper(escapeMap);
    _.unescape = createEscaper(unescapeMap);

    // If the value of the named `property` is a function then invoke it with the
    // `object` as context; otherwise, return it.
    _.result = function (object, property, fallback) {
      var value = object == null ? void 0 : object[property];
      if (value === void 0) {
        value = fallback;
      }
      return _.isFunction(value) ? value.call(object) : value;
    };

    // Generate a unique integer id (unique within the entire client session).
    // Useful for temporary DOM ids.
    var idCounter = 0;
    _.uniqueId = function (prefix) {
      var id = ++idCounter + '';
      return prefix ? prefix + id : id;
    };

    // By default, Underscore uses ERB-style template delimiters, change the
    // following template settings to use alternative delimiters.
    _.templateSettings = {
      evaluate: /<%([\s\S]+?)%>/g,
      interpolate: /<%=([\s\S]+?)%>/g,
      escape: /<%-([\s\S]+?)%>/g
    };

    // When customizing `templateSettings`, if you don't want to define an
    // interpolation, evaluation or escaping regex, we need one that is
    // guaranteed not to match.
    var noMatch = /(.)^/;

    // Certain characters need to be escaped so that they can be put into a
    // string literal.
    var escapes = {
      "'": "'",
      '\\': '\\',
      '\r': 'r',
      '\n': 'n',
      '\u2028': 'u2028',
      '\u2029': 'u2029'
    };

    var escaper = /\\|'|\r|\n|\u2028|\u2029/g;

    var escapeChar = function (match) {
      return '\\' + escapes[match];
    };

    // JavaScript micro-templating, similar to John Resig's implementation.
    // Underscore templating handles arbitrary delimiters, preserves whitespace,
    // and correctly escapes quotes within interpolated code.
    // NB: `oldSettings` only exists for backwards compatibility.
    _.template = function (text, settings, oldSettings) {
      if (!settings && oldSettings) settings = oldSettings;
      settings = _.defaults({}, settings, _.templateSettings);

      // Combine delimiters into one regular expression via alternation.
      var matcher = RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join('|') + '|$', 'g');

      // Compile the template source, escaping string literals appropriately.
      var index = 0;
      var source = "__p+='";
      text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {
        source += text.slice(index, offset).replace(escaper, escapeChar);
        index = offset + match.length;

        if (escape) {
          source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
        } else if (interpolate) {
          source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
        } else if (evaluate) {
          source += "';\n" + evaluate + "\n__p+='";
        }

        // Adobe VMs need the match returned to produce the correct offest.
        return match;
      });
      source += "';\n";

      // If a variable is not specified, place data values in local scope.
      if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

      source = "var __t,__p='',__j=Array.prototype.join," + "print=function(){__p+=__j.call(arguments,'');};\n" + source + 'return __p;\n';

      try {
        var render = new Function(settings.variable || 'obj', '_', source);
      } catch (e) {
        e.source = source;
        throw e;
      }

      var template = function (data) {
        return render.call(this, data, _);
      };

      // Provide the compiled source as a convenience for precompilation.
      var argument = settings.variable || 'obj';
      template.source = 'function(' + argument + '){\n' + source + '}';

      return template;
    };

    // Add a "chain" function. Start chaining a wrapped Underscore object.
    _.chain = function (obj) {
      var instance = _(obj);
      instance._chain = true;
      return instance;
    };

    // OOP
    // ---------------
    // If Underscore is called as a function, it returns a wrapped object that
    // can be used OO-style. This wrapper holds altered versions of all the
    // underscore functions. Wrapped objects may be chained.

    // Helper function to continue chaining intermediate results.
    var result = function (instance, obj) {
      return instance._chain ? _(obj).chain() : obj;
    };

    // Add your own custom functions to the Underscore object.
    _.mixin = function (obj) {
      _.each(_.functions(obj), function (name) {
        var func = _[name] = obj[name];
        _.prototype[name] = function () {
          var args = [this._wrapped];
          push.apply(args, arguments);
          return result(this, func.apply(_, args));
        };
      });
    };

    // Add all of the Underscore functions to the wrapper object.
    _.mixin(_);

    // Add all mutator Array functions to the wrapper.
    _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (name) {
      var method = ArrayProto[name];
      _.prototype[name] = function () {
        var obj = this._wrapped;
        method.apply(obj, arguments);
        if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
        return result(this, obj);
      };
    });

    // Add all accessor Array functions to the wrapper.
    _.each(['concat', 'join', 'slice'], function (name) {
      var method = ArrayProto[name];
      _.prototype[name] = function () {
        return result(this, method.apply(this._wrapped, arguments));
      };
    });

    // Extracts the result from a wrapped and chained object.
    _.prototype.value = function () {
      return this._wrapped;
    };

    // Provide unwrapping proxy for some methods used in engine operations
    // such as arithmetic and JSON stringification.
    _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;

    _.prototype.toString = function () {
      return '' + this._wrapped;
    };

    // AMD registration happens at the end for compatibility with AMD loaders
    // that may not enforce next-turn semantics on modules. Even though general
    // practice for AMD registration is to be anonymous, underscore registers
    // as a named module because, like jQuery, it is a base library that is
    // popular enough to be bundled in a third party lib, but not be part of
    // an AMD load request. Those cases could generate an error when an
    // anonymous define() is called outside of a loader request.
    if (typeof define === 'function' && define.amd) {
      define('underscore', [], function () {
        return _;
      });
    }
  }).call(this);
  return module.exports;
});
System.register('OpenGroup/plugins/group/plugin.js', ['npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/createClass.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js', 'OpenGroup/core/Plugin'], function (_export, _context) {
    "use strict";

    var _classCallCheck, _createClass, _possibleConstructorReturn, _inherits, Plugin, Group;

    return {
        setters: [function (_npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs) {
            _classCallCheck = _npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersCreateClassJs) {
            _createClass = _npmSystemjsPluginBabel0017BabelHelpersCreateClassJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs) {
            _possibleConstructorReturn = _npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersInheritsJs) {
            _inherits = _npmSystemjsPluginBabel0017BabelHelpersInheritsJs.default;
        }, function (_OpenGroupCorePlugin) {
            Plugin = _OpenGroupCorePlugin.default;
        }],
        execute: function () {
            Group = function (_Plugin) {
                _inherits(Group, _Plugin);

                /**
                 * @param group.
                 * @param config.
                 * @constructor
                 */
                function Group(group) {
                    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

                    _classCallCheck(this, Group);

                    var _this = _possibleConstructorReturn(this, (Group.__proto__ || Object.getPrototypeOf(Group)).call(this));

                    _this.label = 'Group';
                    _this.description = 'Lorem ipsum';
                    _this.name = 'group';
                    _this.config = {};
                    _this.componentNames = ['group-settings'];

                    _this.group = group;
                    Object.assign(_this.config, config);
                    return _this;
                }

                _createClass(Group, [{
                    key: 'getMenuItems',
                    value: function getMenuItems() {
                        return [{
                            title: 'Settings',
                            component: 'group-settings',
                            subPath: 'settings',
                            weight: 999
                        }];
                    }
                }]);

                return Group;
            }(Plugin);

            _export('default', Group);
        }
    };
});
System.registerDynamic("npm:vue-chat-scroll@1.2.0.json", [], false, function() {
  return {
    "main": "dist/vue-chat-scroll.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      },
      "rollup.config.js": {
        "format": "esm"
      },
      "src/*": {
        "format": "esm"
      }
    }
  };
});

System.registerDynamic('npm:vue-chat-scroll@1.2.0/dist/vue-chat-scroll.js', [], true, function ($__require, exports, module) {
    var define,
        global = this || self,
        GLOBAL = global;
    (function (global, factory) {
        typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global['vue-chat-scroll'] = factory();
    })(this, function () {
        'use strict';

        /**
         * @name VueJS vChatScroll (vue-chat-scroll)
         * @description Monitors an element and scrolls to the bottom if a new child is added
         * @author Theodore Messinezis <theo@theomessin.com>
         * @file v-chat-scroll  directive definition
         */

        var scrollToBottom = function scrollToBottom(el) {
            el.scrollTop = el.scrollHeight;
        };

        var vChatScroll = {
            bind: function bind(el, binding) {
                var timeout = void 0;
                var scrolled = false;

                el.addEventListener('scroll', function (e) {
                    if (timeout) window.clearTimeout(timeout);
                    timeout = window.setTimeout(function () {
                        scrolled = el.scrollTop + el.clientHeight + 1 < el.scrollHeight;
                    }, 200);
                });

                new MutationObserver(function (e) {
                    var config = binding.value || {};
                    var pause = config.always === false && scrolled;
                    if (pause || e[e.length - 1].addedNodes.length != 1) return;
                    scrollToBottom(el);
                }).observe(el, { childList: true });
            },
            inserted: scrollToBottom
        };

        /**
         * @name VueJS vChatScroll (vue-chat-scroll)
         * @description Monitors an element and scrolls to the bottom if a new child is added
         * @author Theodore Messinezis <theo@theomessin.com>
         * @file vue-chat-scroll plugin definition
         */

        var VueChatScroll = {
            install: function install(Vue, options) {
                Vue.directive('chat-scroll', vChatScroll);
            }
        };

        if (typeof window !== 'undefined' && window.Vue) {
            window.Vue.use(VueChatScroll);
        }

        return VueChatScroll;
    });
    return module.exports;
});
System.registerDynamic("npm:jspm-nodelibs-process@0.2.0.json", [], false, function() {
  return {
    "main": "./process.js"
  };
});

System.registerDynamic('npm:jspm-nodelibs-process@0.2.0/process.js', ['@system-env'], true, function ($__require, exports, module) {
    var define,
        global = this || self,
        GLOBAL = global;
    // From https://github.com/defunctzombie/node-process/blob/master/browser.js
    // shim for using process in browser

    var productionEnv = $__require('@system-env').production;

    var process = module.exports = {};
    var queue = [];
    var draining = false;
    var currentQueue;
    var queueIndex = -1;

    function cleanUpNextTick() {
        draining = false;
        if (currentQueue.length) {
            queue = currentQueue.concat(queue);
        } else {
            queueIndex = -1;
        }
        if (queue.length) {
            drainQueue();
        }
    }

    function drainQueue() {
        if (draining) {
            return;
        }
        var timeout = setTimeout(cleanUpNextTick);
        draining = true;

        var len = queue.length;
        while (len) {
            currentQueue = queue;
            queue = [];
            while (++queueIndex < len) {
                if (currentQueue) {
                    currentQueue[queueIndex].run();
                }
            }
            queueIndex = -1;
            len = queue.length;
        }
        currentQueue = null;
        draining = false;
        clearTimeout(timeout);
    }

    process.nextTick = function (fun) {
        var args = new Array(arguments.length - 1);
        if (arguments.length > 1) {
            for (var i = 1; i < arguments.length; i++) {
                args[i - 1] = arguments[i];
            }
        }
        queue.push(new Item(fun, args));
        if (queue.length === 1 && !draining) {
            setTimeout(drainQueue, 0);
        }
    };

    // v8 likes predictible objects
    function Item(fun, array) {
        this.fun = fun;
        this.array = array;
    }
    Item.prototype.run = function () {
        this.fun.apply(null, this.array);
    };
    process.title = 'browser';
    process.browser = true;
    process.env = {
        NODE_ENV: productionEnv ? 'production' : 'development'
    };
    process.argv = [];
    process.version = ''; // empty string to avoid regexp issues
    process.versions = {};

    function noop() {}

    process.on = noop;
    process.addListener = noop;
    process.once = noop;
    process.off = noop;
    process.removeListener = noop;
    process.removeAllListeners = noop;
    process.emit = noop;

    process.binding = function (name) {
        throw new Error('process.binding is not supported');
    };

    process.cwd = function () {
        return '/';
    };
    process.chdir = function (dir) {
        throw new Error('process.chdir is not supported');
    };
    process.umask = function () {
        return 0;
    };
    return module.exports;
});
System.registerDynamic("npm:vue@2.4.2.json", [], false, function() {
  return {
    "main": "dist/vue.common.js",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic('npm:vue@2.4.2/dist/vue.common.js', ['process'], true, function ($__require, exports, module) {
  /*!
   * Vue.js v2.4.2
   * (c) 2014-2017 Evan You
   * Released under the MIT License.
   */
  'use strict';

  /*  */

  // these helpers produces better vm code in JS engines due to their
  // explicitness and function inlining

  var process = $__require('process');
  var define,
      global = this || self,
      GLOBAL = global;
  function isUndef(v) {
    return v === undefined || v === null;
  }

  function isDef(v) {
    return v !== undefined && v !== null;
  }

  function isTrue(v) {
    return v === true;
  }

  function isFalse(v) {
    return v === false;
  }

  /**
   * Check if value is primitive
   */
  function isPrimitive(value) {
    return typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean';
  }

  /**
   * Quick object check - this is primarily used to tell
   * Objects from primitive values when we know the value
   * is a JSON-compliant type.
   */
  function isObject(obj) {
    return obj !== null && typeof obj === 'object';
  }

  var _toString = Object.prototype.toString;

  /**
   * Strict object type check. Only returns true
   * for plain JavaScript objects.
   */
  function isPlainObject(obj) {
    return _toString.call(obj) === '[object Object]';
  }

  function isRegExp(v) {
    return _toString.call(v) === '[object RegExp]';
  }

  /**
   * Check if val is a valid array index.
   */
  function isValidArrayIndex(val) {
    var n = parseFloat(val);
    return n >= 0 && Math.floor(n) === n && isFinite(val);
  }

  /**
   * Convert a value to a string that is actually rendered.
   */
  function toString(val) {
    return val == null ? '' : typeof val === 'object' ? JSON.stringify(val, null, 2) : String(val);
  }

  /**
   * Convert a input value to a number for persistence.
   * If the conversion fails, return original string.
   */
  function toNumber(val) {
    var n = parseFloat(val);
    return isNaN(n) ? val : n;
  }

  /**
   * Make a map and return a function for checking if a key
   * is in that map.
   */
  function makeMap(str, expectsLowerCase) {
    var map = Object.create(null);
    var list = str.split(',');
    for (var i = 0; i < list.length; i++) {
      map[list[i]] = true;
    }
    return expectsLowerCase ? function (val) {
      return map[val.toLowerCase()];
    } : function (val) {
      return map[val];
    };
  }

  /**
   * Check if a tag is a built-in tag.
   */
  var isBuiltInTag = makeMap('slot,component', true);

  /**
   * Check if a attribute is a reserved attribute.
   */
  var isReservedAttribute = makeMap('key,ref,slot,is');

  /**
   * Remove an item from an array
   */
  function remove(arr, item) {
    if (arr.length) {
      var index = arr.indexOf(item);
      if (index > -1) {
        return arr.splice(index, 1);
      }
    }
  }

  /**
   * Check whether the object has the property.
   */
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  function hasOwn(obj, key) {
    return hasOwnProperty.call(obj, key);
  }

  /**
   * Create a cached version of a pure function.
   */
  function cached(fn) {
    var cache = Object.create(null);
    return function cachedFn(str) {
      var hit = cache[str];
      return hit || (cache[str] = fn(str));
    };
  }

  /**
   * Camelize a hyphen-delimited string.
   */
  var camelizeRE = /-(\w)/g;
  var camelize = cached(function (str) {
    return str.replace(camelizeRE, function (_, c) {
      return c ? c.toUpperCase() : '';
    });
  });

  /**
   * Capitalize a string.
   */
  var capitalize = cached(function (str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
  });

  /**
   * Hyphenate a camelCase string.
   */
  var hyphenateRE = /([^-])([A-Z])/g;
  var hyphenate = cached(function (str) {
    return str.replace(hyphenateRE, '$1-$2').replace(hyphenateRE, '$1-$2').toLowerCase();
  });

  /**
   * Simple bind, faster than native
   */
  function bind(fn, ctx) {
    function boundFn(a) {
      var l = arguments.length;
      return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);
    }
    // record original fn length
    boundFn._length = fn.length;
    return boundFn;
  }

  /**
   * Convert an Array-like object to a real Array.
   */
  function toArray(list, start) {
    start = start || 0;
    var i = list.length - start;
    var ret = new Array(i);
    while (i--) {
      ret[i] = list[i + start];
    }
    return ret;
  }

  /**
   * Mix properties into target object.
   */
  function extend(to, _from) {
    for (var key in _from) {
      to[key] = _from[key];
    }
    return to;
  }

  /**
   * Merge an Array of Objects into a single Object.
   */
  function toObject(arr) {
    var res = {};
    for (var i = 0; i < arr.length; i++) {
      if (arr[i]) {
        extend(res, arr[i]);
      }
    }
    return res;
  }

  /**
   * Perform no operation.
   * Stubbing args to make Flow happy without leaving useless transpiled code
   * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)
   */
  function noop(a, b, c) {}

  /**
   * Always return false.
   */
  var no = function (a, b, c) {
    return false;
  };

  /**
   * Return same value
   */
  var identity = function (_) {
    return _;
  };

  /**
   * Generate a static keys string from compiler modules.
   */
  function genStaticKeys(modules) {
    return modules.reduce(function (keys, m) {
      return keys.concat(m.staticKeys || []);
    }, []).join(',');
  }

  /**
   * Check if two values are loosely equal - that is,
   * if they are plain objects, do they have the same shape?
   */
  function looseEqual(a, b) {
    if (a === b) {
      return true;
    }
    var isObjectA = isObject(a);
    var isObjectB = isObject(b);
    if (isObjectA && isObjectB) {
      try {
        var isArrayA = Array.isArray(a);
        var isArrayB = Array.isArray(b);
        if (isArrayA && isArrayB) {
          return a.length === b.length && a.every(function (e, i) {
            return looseEqual(e, b[i]);
          });
        } else if (!isArrayA && !isArrayB) {
          var keysA = Object.keys(a);
          var keysB = Object.keys(b);
          return keysA.length === keysB.length && keysA.every(function (key) {
            return looseEqual(a[key], b[key]);
          });
        } else {
          /* istanbul ignore next */
          return false;
        }
      } catch (e) {
        /* istanbul ignore next */
        return false;
      }
    } else if (!isObjectA && !isObjectB) {
      return String(a) === String(b);
    } else {
      return false;
    }
  }

  function looseIndexOf(arr, val) {
    for (var i = 0; i < arr.length; i++) {
      if (looseEqual(arr[i], val)) {
        return i;
      }
    }
    return -1;
  }

  /**
   * Ensure a function is called only once.
   */
  function once(fn) {
    var called = false;
    return function () {
      if (!called) {
        called = true;
        fn.apply(this, arguments);
      }
    };
  }

  var SSR_ATTR = 'data-server-rendered';

  var ASSET_TYPES = ['component', 'directive', 'filter'];

  var LIFECYCLE_HOOKS = ['beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeUpdate', 'updated', 'beforeDestroy', 'destroyed', 'activated', 'deactivated'];

  /*  */

  var config = {
    /**
     * Option merge strategies (used in core/util/options)
     */
    optionMergeStrategies: Object.create(null),

    /**
     * Whether to suppress warnings.
     */
    silent: false,

    /**
     * Show production mode tip message on boot?
     */
    productionTip: 'production' !== 'production',

    /**
     * Whether to enable devtools
     */
    devtools: 'production' !== 'production',

    /**
     * Whether to record perf
     */
    performance: false,

    /**
     * Error handler for watcher errors
     */
    errorHandler: null,

    /**
     * Warn handler for watcher warns
     */
    warnHandler: null,

    /**
     * Ignore certain custom elements
     */
    ignoredElements: [],

    /**
     * Custom user key aliases for v-on
     */
    keyCodes: Object.create(null),

    /**
     * Check if a tag is reserved so that it cannot be registered as a
     * component. This is platform-dependent and may be overwritten.
     */
    isReservedTag: no,

    /**
     * Check if an attribute is reserved so that it cannot be used as a component
     * prop. This is platform-dependent and may be overwritten.
     */
    isReservedAttr: no,

    /**
     * Check if a tag is an unknown element.
     * Platform-dependent.
     */
    isUnknownElement: no,

    /**
     * Get the namespace of an element
     */
    getTagNamespace: noop,

    /**
     * Parse the real tag name for the specific platform.
     */
    parsePlatformTagName: identity,

    /**
     * Check if an attribute must be bound using property, e.g. value
     * Platform-dependent.
     */
    mustUseProp: no,

    /**
     * Exposed for legacy reasons
     */
    _lifecycleHooks: LIFECYCLE_HOOKS
  };

  /*  */

  var emptyObject = Object.freeze({});

  /**
   * Check if a string starts with $ or _
   */
  function isReserved(str) {
    var c = (str + '').charCodeAt(0);
    return c === 0x24 || c === 0x5F;
  }

  /**
   * Define a property.
   */
  function def(obj, key, val, enumerable) {
    Object.defineProperty(obj, key, {
      value: val,
      enumerable: !!enumerable,
      writable: true,
      configurable: true
    });
  }

  /**
   * Parse simple path.
   */
  var bailRE = /[^\w.$]/;
  function parsePath(path) {
    if (bailRE.test(path)) {
      return;
    }
    var segments = path.split('.');
    return function (obj) {
      for (var i = 0; i < segments.length; i++) {
        if (!obj) {
          return;
        }
        obj = obj[segments[i]];
      }
      return obj;
    };
  }

  /*  */

  var warn = noop;
  var tip = noop;
  var formatComponentName = null; // work around flow check

  if ('production' !== 'production') {
    var hasConsole = typeof console !== 'undefined';
    var classifyRE = /(?:^|[-_])(\w)/g;
    var classify = function (str) {
      return str.replace(classifyRE, function (c) {
        return c.toUpperCase();
      }).replace(/[-_]/g, '');
    };

    warn = function (msg, vm) {
      var trace = vm ? generateComponentTrace(vm) : '';

      if (config.warnHandler) {
        config.warnHandler.call(null, msg, vm, trace);
      } else if (hasConsole && !config.silent) {
        console.error("[Vue warn]: " + msg + trace);
      }
    };

    tip = function (msg, vm) {
      if (hasConsole && !config.silent) {
        console.warn("[Vue tip]: " + msg + (vm ? generateComponentTrace(vm) : ''));
      }
    };

    formatComponentName = function (vm, includeFile) {
      if (vm.$root === vm) {
        return '<Root>';
      }
      var name = typeof vm === 'string' ? vm : typeof vm === 'function' && vm.options ? vm.options.name : vm._isVue ? vm.$options.name || vm.$options._componentTag : vm.name;

      var file = vm._isVue && vm.$options.__file;
      if (!name && file) {
        var match = file.match(/([^/\\]+)\.vue$/);
        name = match && match[1];
      }

      return (name ? "<" + classify(name) + ">" : "<Anonymous>") + (file && includeFile !== false ? " at " + file : '');
    };

    var repeat = function (str, n) {
      var res = '';
      while (n) {
        if (n % 2 === 1) {
          res += str;
        }
        if (n > 1) {
          str += str;
        }
        n >>= 1;
      }
      return res;
    };

    var generateComponentTrace = function (vm) {
      if (vm._isVue && vm.$parent) {
        var tree = [];
        var currentRecursiveSequence = 0;
        while (vm) {
          if (tree.length > 0) {
            var last = tree[tree.length - 1];
            if (last.constructor === vm.constructor) {
              currentRecursiveSequence++;
              vm = vm.$parent;
              continue;
            } else if (currentRecursiveSequence > 0) {
              tree[tree.length - 1] = [last, currentRecursiveSequence];
              currentRecursiveSequence = 0;
            }
          }
          tree.push(vm);
          vm = vm.$parent;
        }
        return '\n\nfound in\n\n' + tree.map(function (vm, i) {
          return "" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm) ? formatComponentName(vm[0]) + "... (" + vm[1] + " recursive calls)" : formatComponentName(vm));
        }).join('\n');
      } else {
        return "\n\n(found in " + formatComponentName(vm) + ")";
      }
    };
  }

  /*  */

  function handleError(err, vm, info) {
    if (config.errorHandler) {
      config.errorHandler.call(null, err, vm, info);
    } else {
      if ('production' !== 'production') {
        warn("Error in " + info + ": \"" + err.toString() + "\"", vm);
      }
      /* istanbul ignore else */
      if (inBrowser && typeof console !== 'undefined') {
        console.error(err);
      } else {
        throw err;
      }
    }
  }

  /*  */
  /* globals MutationObserver */

  // can we use __proto__?
  var hasProto = '__proto__' in {};

  // Browser environment sniffing
  var inBrowser = typeof window !== 'undefined';
  var UA = inBrowser && window.navigator.userAgent.toLowerCase();
  var isIE = UA && /msie|trident/.test(UA);
  var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
  var isEdge = UA && UA.indexOf('edge/') > 0;
  var isAndroid = UA && UA.indexOf('android') > 0;
  var isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);
  var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;

  // Firefix has a "watch" function on Object.prototype...
  var nativeWatch = {}.watch;

  var supportsPassive = false;
  if (inBrowser) {
    try {
      var opts = {};
      Object.defineProperty(opts, 'passive', {
        get: function get() {
          /* istanbul ignore next */
          supportsPassive = true;
        }
      }); // https://github.com/facebook/flow/issues/285
      window.addEventListener('test-passive', null, opts);
    } catch (e) {}
  }

  // this needs to be lazy-evaled because vue may be required before
  // vue-server-renderer can set VUE_ENV
  var _isServer;
  var isServerRendering = function () {
    if (_isServer === undefined) {
      /* istanbul ignore if */
      if (!inBrowser && typeof global !== 'undefined') {
        // detect presence of vue-server-renderer and avoid
        // Webpack shimming the process
        _isServer = global['process'].env.VUE_ENV === 'server';
      } else {
        _isServer = false;
      }
    }
    return _isServer;
  };

  // detect devtools
  var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

  /* istanbul ignore next */
  function isNative(Ctor) {
    return typeof Ctor === 'function' && /native code/.test(Ctor.toString());
  }

  var hasSymbol = typeof Symbol !== 'undefined' && isNative(Symbol) && typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

  /**
   * Defer a task to execute it asynchronously.
   */
  var nextTick = function () {
    var callbacks = [];
    var pending = false;
    var timerFunc;

    function nextTickHandler() {
      pending = false;
      var copies = callbacks.slice(0);
      callbacks.length = 0;
      for (var i = 0; i < copies.length; i++) {
        copies[i]();
      }
    }

    // the nextTick behavior leverages the microtask queue, which can be accessed
    // via either native Promise.then or MutationObserver.
    // MutationObserver has wider support, however it is seriously bugged in
    // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
    // completely stops working after triggering a few times... so, if native
    // Promise is available, we will use it:
    /* istanbul ignore if */
    if (typeof Promise !== 'undefined' && isNative(Promise)) {
      var p = Promise.resolve();
      var logError = function (err) {
        console.error(err);
      };
      timerFunc = function () {
        p.then(nextTickHandler).catch(logError);
        // in problematic UIWebViews, Promise.then doesn't completely break, but
        // it can get stuck in a weird state where callbacks are pushed into the
        // microtask queue but the queue isn't being flushed, until the browser
        // needs to do some other work, e.g. handle a timer. Therefore we can
        // "force" the microtask queue to be flushed by adding an empty timer.
        if (isIOS) {
          setTimeout(noop);
        }
      };
    } else if (typeof MutationObserver !== 'undefined' && (isNative(MutationObserver) ||
    // PhantomJS and iOS 7.x
    MutationObserver.toString() === '[object MutationObserverConstructor]')) {
      // use MutationObserver where native Promise is not available,
      // e.g. PhantomJS IE11, iOS7, Android 4.4
      var counter = 1;
      var observer = new MutationObserver(nextTickHandler);
      var textNode = document.createTextNode(String(counter));
      observer.observe(textNode, {
        characterData: true
      });
      timerFunc = function () {
        counter = (counter + 1) % 2;
        textNode.data = String(counter);
      };
    } else {
      // fallback to setTimeout
      /* istanbul ignore next */
      timerFunc = function () {
        setTimeout(nextTickHandler, 0);
      };
    }

    return function queueNextTick(cb, ctx) {
      var _resolve;
      callbacks.push(function () {
        if (cb) {
          try {
            cb.call(ctx);
          } catch (e) {
            handleError(e, ctx, 'nextTick');
          }
        } else if (_resolve) {
          _resolve(ctx);
        }
      });
      if (!pending) {
        pending = true;
        timerFunc();
      }
      if (!cb && typeof Promise !== 'undefined') {
        return new Promise(function (resolve, reject) {
          _resolve = resolve;
        });
      }
    };
  }();

  var _Set;
  /* istanbul ignore if */
  if (typeof Set !== 'undefined' && isNative(Set)) {
    // use native Set when available.
    _Set = Set;
  } else {
    // a non-standard Set polyfill that only works with primitive keys.
    _Set = function () {
      function Set() {
        this.set = Object.create(null);
      }
      Set.prototype.has = function has(key) {
        return this.set[key] === true;
      };
      Set.prototype.add = function add(key) {
        this.set[key] = true;
      };
      Set.prototype.clear = function clear() {
        this.set = Object.create(null);
      };

      return Set;
    }();
  }

  /*  */

  var uid = 0;

  /**
   * A dep is an observable that can have multiple
   * directives subscribing to it.
   */
  var Dep = function Dep() {
    this.id = uid++;
    this.subs = [];
  };

  Dep.prototype.addSub = function addSub(sub) {
    this.subs.push(sub);
  };

  Dep.prototype.removeSub = function removeSub(sub) {
    remove(this.subs, sub);
  };

  Dep.prototype.depend = function depend() {
    if (Dep.target) {
      Dep.target.addDep(this);
    }
  };

  Dep.prototype.notify = function notify() {
    // stabilize the subscriber list first
    var subs = this.subs.slice();
    for (var i = 0, l = subs.length; i < l; i++) {
      subs[i].update();
    }
  };

  // the current target watcher being evaluated.
  // this is globally unique because there could be only one
  // watcher being evaluated at any time.
  Dep.target = null;
  var targetStack = [];

  function pushTarget(_target) {
    if (Dep.target) {
      targetStack.push(Dep.target);
    }
    Dep.target = _target;
  }

  function popTarget() {
    Dep.target = targetStack.pop();
  }

  /*
   * not type checking this file because flow doesn't play well with
   * dynamically accessing methods on Array prototype
   */

  var arrayProto = Array.prototype;
  var arrayMethods = Object.create(arrayProto);['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {
    // cache original method
    var original = arrayProto[method];
    def(arrayMethods, method, function mutator() {
      var args = [],
          len = arguments.length;
      while (len--) args[len] = arguments[len];

      var result = original.apply(this, args);
      var ob = this.__ob__;
      var inserted;
      switch (method) {
        case 'push':
        case 'unshift':
          inserted = args;
          break;
        case 'splice':
          inserted = args.slice(2);
          break;
      }
      if (inserted) {
        ob.observeArray(inserted);
      }
      // notify change
      ob.dep.notify();
      return result;
    });
  });

  /*  */

  var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

  /**
   * By default, when a reactive property is set, the new value is
   * also converted to become reactive. However when passing down props,
   * we don't want to force conversion because the value may be a nested value
   * under a frozen data structure. Converting it would defeat the optimization.
   */
  var observerState = {
    shouldConvert: true
  };

  /**
   * Observer class that are attached to each observed
   * object. Once attached, the observer converts target
   * object's property keys into getter/setters that
   * collect dependencies and dispatches updates.
   */
  var Observer = function Observer(value) {
    this.value = value;
    this.dep = new Dep();
    this.vmCount = 0;
    def(value, '__ob__', this);
    if (Array.isArray(value)) {
      var augment = hasProto ? protoAugment : copyAugment;
      augment(value, arrayMethods, arrayKeys);
      this.observeArray(value);
    } else {
      this.walk(value);
    }
  };

  /**
   * Walk through each property and convert them into
   * getter/setters. This method should only be called when
   * value type is Object.
   */
  Observer.prototype.walk = function walk(obj) {
    var keys = Object.keys(obj);
    for (var i = 0; i < keys.length; i++) {
      defineReactive$$1(obj, keys[i], obj[keys[i]]);
    }
  };

  /**
   * Observe a list of Array items.
   */
  Observer.prototype.observeArray = function observeArray(items) {
    for (var i = 0, l = items.length; i < l; i++) {
      observe(items[i]);
    }
  };

  // helpers

  /**
   * Augment an target Object or Array by intercepting
   * the prototype chain using __proto__
   */
  function protoAugment(target, src, keys) {
    /* eslint-disable no-proto */
    target.__proto__ = src;
    /* eslint-enable no-proto */
  }

  /**
   * Augment an target Object or Array by defining
   * hidden properties.
   */
  /* istanbul ignore next */
  function copyAugment(target, src, keys) {
    for (var i = 0, l = keys.length; i < l; i++) {
      var key = keys[i];
      def(target, key, src[key]);
    }
  }

  /**
   * Attempt to create an observer instance for a value,
   * returns the new observer if successfully observed,
   * or the existing observer if the value already has one.
   */
  function observe(value, asRootData) {
    if (!isObject(value)) {
      return;
    }
    var ob;
    if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
      ob = value.__ob__;
    } else if (observerState.shouldConvert && !isServerRendering() && (Array.isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {
      ob = new Observer(value);
    }
    if (asRootData && ob) {
      ob.vmCount++;
    }
    return ob;
  }

  /**
   * Define a reactive property on an Object.
   */
  function defineReactive$$1(obj, key, val, customSetter, shallow) {
    var dep = new Dep();

    var property = Object.getOwnPropertyDescriptor(obj, key);
    if (property && property.configurable === false) {
      return;
    }

    // cater for pre-defined getter/setters
    var getter = property && property.get;
    var setter = property && property.set;

    var childOb = !shallow && observe(val);
    Object.defineProperty(obj, key, {
      enumerable: true,
      configurable: true,
      get: function reactiveGetter() {
        var value = getter ? getter.call(obj) : val;
        if (Dep.target) {
          dep.depend();
          if (childOb) {
            childOb.dep.depend();
          }
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
        return value;
      },
      set: function reactiveSetter(newVal) {
        var value = getter ? getter.call(obj) : val;
        /* eslint-disable no-self-compare */
        if (newVal === value || newVal !== newVal && value !== value) {
          return;
        }
        /* eslint-enable no-self-compare */
        if ('production' !== 'production' && customSetter) {
          customSetter();
        }
        if (setter) {
          setter.call(obj, newVal);
        } else {
          val = newVal;
        }
        childOb = !shallow && observe(newVal);
        dep.notify();
      }
    });
  }

  /**
   * Set a property on an object. Adds the new property and
   * triggers change notification if the property doesn't
   * already exist.
   */
  function set(target, key, val) {
    if (Array.isArray(target) && isValidArrayIndex(key)) {
      target.length = Math.max(target.length, key);
      target.splice(key, 1, val);
      return val;
    }
    if (hasOwn(target, key)) {
      target[key] = val;
      return val;
    }
    var ob = target.__ob__;
    if (target._isVue || ob && ob.vmCount) {
      'production' !== 'production' && warn('Avoid adding reactive properties to a Vue instance or its root $data ' + 'at runtime - declare it upfront in the data option.');
      return val;
    }
    if (!ob) {
      target[key] = val;
      return val;
    }
    defineReactive$$1(ob.value, key, val);
    ob.dep.notify();
    return val;
  }

  /**
   * Delete a property and trigger change if necessary.
   */
  function del(target, key) {
    if (Array.isArray(target) && isValidArrayIndex(key)) {
      target.splice(key, 1);
      return;
    }
    var ob = target.__ob__;
    if (target._isVue || ob && ob.vmCount) {
      'production' !== 'production' && warn('Avoid deleting properties on a Vue instance or its root $data ' + '- just set it to null.');
      return;
    }
    if (!hasOwn(target, key)) {
      return;
    }
    delete target[key];
    if (!ob) {
      return;
    }
    ob.dep.notify();
  }

  /**
   * Collect dependencies on array elements when the array is touched, since
   * we cannot intercept array element access like property getters.
   */
  function dependArray(value) {
    for (var e = void 0, i = 0, l = value.length; i < l; i++) {
      e = value[i];
      e && e.__ob__ && e.__ob__.dep.depend();
      if (Array.isArray(e)) {
        dependArray(e);
      }
    }
  }

  /*  */

  /**
   * Option overwriting strategies are functions that handle
   * how to merge a parent option value and a child option
   * value into the final value.
   */
  var strats = config.optionMergeStrategies;

  /**
   * Options with restrictions
   */
  if ('production' !== 'production') {
    strats.el = strats.propsData = function (parent, child, vm, key) {
      if (!vm) {
        warn("option \"" + key + "\" can only be used during instance " + 'creation with the `new` keyword.');
      }
      return defaultStrat(parent, child);
    };
  }

  /**
   * Helper that recursively merges two data objects together.
   */
  function mergeData(to, from) {
    if (!from) {
      return to;
    }
    var key, toVal, fromVal;
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      key = keys[i];
      toVal = to[key];
      fromVal = from[key];
      if (!hasOwn(to, key)) {
        set(to, key, fromVal);
      } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {
        mergeData(toVal, fromVal);
      }
    }
    return to;
  }

  /**
   * Data
   */
  function mergeDataOrFn(parentVal, childVal, vm) {
    if (!vm) {
      // in a Vue.extend merge, both should be functions
      if (!childVal) {
        return parentVal;
      }
      if (!parentVal) {
        return childVal;
      }
      // when parentVal & childVal are both present,
      // we need to return a function that returns the
      // merged result of both functions... no need to
      // check if parentVal is a function here because
      // it has to be a function to pass previous merges.
      return function mergedDataFn() {
        return mergeData(typeof childVal === 'function' ? childVal.call(this) : childVal, typeof parentVal === 'function' ? parentVal.call(this) : parentVal);
      };
    } else if (parentVal || childVal) {
      return function mergedInstanceDataFn() {
        // instance merge
        var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;
        var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;
        if (instanceData) {
          return mergeData(instanceData, defaultData);
        } else {
          return defaultData;
        }
      };
    }
  }

  strats.data = function (parentVal, childVal, vm) {
    if (!vm) {
      if (childVal && typeof childVal !== 'function') {
        'production' !== 'production' && warn('The "data" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);

        return parentVal;
      }
      return mergeDataOrFn.call(this, parentVal, childVal);
    }

    return mergeDataOrFn(parentVal, childVal, vm);
  };

  /**
   * Hooks and props are merged as arrays.
   */
  function mergeHook(parentVal, childVal) {
    return childVal ? parentVal ? parentVal.concat(childVal) : Array.isArray(childVal) ? childVal : [childVal] : parentVal;
  }

  LIFECYCLE_HOOKS.forEach(function (hook) {
    strats[hook] = mergeHook;
  });

  /**
   * Assets
   *
   * When a vm is present (instance creation), we need to do
   * a three-way merge between constructor options, instance
   * options and parent options.
   */
  function mergeAssets(parentVal, childVal) {
    var res = Object.create(parentVal || null);
    return childVal ? extend(res, childVal) : res;
  }

  ASSET_TYPES.forEach(function (type) {
    strats[type + 's'] = mergeAssets;
  });

  /**
   * Watchers.
   *
   * Watchers hashes should not overwrite one
   * another, so we merge them as arrays.
   */
  strats.watch = function (parentVal, childVal) {
    // work around Firefox's Object.prototype.watch...
    if (parentVal === nativeWatch) {
      parentVal = undefined;
    }
    if (childVal === nativeWatch) {
      childVal = undefined;
    }
    /* istanbul ignore if */
    if (!childVal) {
      return Object.create(parentVal || null);
    }
    if (!parentVal) {
      return childVal;
    }
    var ret = {};
    extend(ret, parentVal);
    for (var key in childVal) {
      var parent = ret[key];
      var child = childVal[key];
      if (parent && !Array.isArray(parent)) {
        parent = [parent];
      }
      ret[key] = parent ? parent.concat(child) : Array.isArray(child) ? child : [child];
    }
    return ret;
  };

  /**
   * Other object hashes.
   */
  strats.props = strats.methods = strats.inject = strats.computed = function (parentVal, childVal) {
    if (!parentVal) {
      return childVal;
    }
    var ret = Object.create(null);
    extend(ret, parentVal);
    if (childVal) {
      extend(ret, childVal);
    }
    return ret;
  };
  strats.provide = mergeDataOrFn;

  /**
   * Default strategy.
   */
  var defaultStrat = function (parentVal, childVal) {
    return childVal === undefined ? parentVal : childVal;
  };

  /**
   * Validate component names
   */
  function checkComponents(options) {
    for (var key in options.components) {
      var lower = key.toLowerCase();
      if (isBuiltInTag(lower) || config.isReservedTag(lower)) {
        warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);
      }
    }
  }

  /**
   * Ensure all props option syntax are normalized into the
   * Object-based format.
   */
  function normalizeProps(options) {
    var props = options.props;
    if (!props) {
      return;
    }
    var res = {};
    var i, val, name;
    if (Array.isArray(props)) {
      i = props.length;
      while (i--) {
        val = props[i];
        if (typeof val === 'string') {
          name = camelize(val);
          res[name] = { type: null };
        } else if ('production' !== 'production') {
          warn('props must be strings when using array syntax.');
        }
      }
    } else if (isPlainObject(props)) {
      for (var key in props) {
        val = props[key];
        name = camelize(key);
        res[name] = isPlainObject(val) ? val : { type: val };
      }
    }
    options.props = res;
  }

  /**
   * Normalize all injections into Object-based format
   */
  function normalizeInject(options) {
    var inject = options.inject;
    if (Array.isArray(inject)) {
      var normalized = options.inject = {};
      for (var i = 0; i < inject.length; i++) {
        normalized[inject[i]] = inject[i];
      }
    }
  }

  /**
   * Normalize raw function directives into object format.
   */
  function normalizeDirectives(options) {
    var dirs = options.directives;
    if (dirs) {
      for (var key in dirs) {
        var def = dirs[key];
        if (typeof def === 'function') {
          dirs[key] = { bind: def, update: def };
        }
      }
    }
  }

  /**
   * Merge two option objects into a new one.
   * Core utility used in both instantiation and inheritance.
   */
  function mergeOptions(parent, child, vm) {
    if ('production' !== 'production') {
      checkComponents(child);
    }

    if (typeof child === 'function') {
      child = child.options;
    }

    normalizeProps(child);
    normalizeInject(child);
    normalizeDirectives(child);
    var extendsFrom = child.extends;
    if (extendsFrom) {
      parent = mergeOptions(parent, extendsFrom, vm);
    }
    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
    var options = {};
    var key;
    for (key in parent) {
      mergeField(key);
    }
    for (key in child) {
      if (!hasOwn(parent, key)) {
        mergeField(key);
      }
    }
    function mergeField(key) {
      var strat = strats[key] || defaultStrat;
      options[key] = strat(parent[key], child[key], vm, key);
    }
    return options;
  }

  /**
   * Resolve an asset.
   * This function is used because child instances need access
   * to assets defined in its ancestor chain.
   */
  function resolveAsset(options, type, id, warnMissing) {
    /* istanbul ignore if */
    if (typeof id !== 'string') {
      return;
    }
    var assets = options[type];
    // check local registration variations first
    if (hasOwn(assets, id)) {
      return assets[id];
    }
    var camelizedId = camelize(id);
    if (hasOwn(assets, camelizedId)) {
      return assets[camelizedId];
    }
    var PascalCaseId = capitalize(camelizedId);
    if (hasOwn(assets, PascalCaseId)) {
      return assets[PascalCaseId];
    }
    // fallback to prototype chain
    var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
    if ('production' !== 'production' && warnMissing && !res) {
      warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);
    }
    return res;
  }

  /*  */

  function validateProp(key, propOptions, propsData, vm) {
    var prop = propOptions[key];
    var absent = !hasOwn(propsData, key);
    var value = propsData[key];
    // handle boolean props
    if (isType(Boolean, prop.type)) {
      if (absent && !hasOwn(prop, 'default')) {
        value = false;
      } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {
        value = true;
      }
    }
    // check default value
    if (value === undefined) {
      value = getPropDefaultValue(vm, prop, key);
      // since the default value is a fresh copy,
      // make sure to observe it.
      var prevShouldConvert = observerState.shouldConvert;
      observerState.shouldConvert = true;
      observe(value);
      observerState.shouldConvert = prevShouldConvert;
    }
    if ('production' !== 'production') {
      assertProp(prop, key, value, vm, absent);
    }
    return value;
  }

  /**
   * Get the default value of a prop.
   */
  function getPropDefaultValue(vm, prop, key) {
    // no default, return undefined
    if (!hasOwn(prop, 'default')) {
      return undefined;
    }
    var def = prop.default;
    // warn against non-factory defaults for Object & Array
    if ('production' !== 'production' && isObject(def)) {
      warn('Invalid default value for prop "' + key + '": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);
    }
    // the raw prop value was also undefined from previous render,
    // return previous default value to avoid unnecessary watcher trigger
    if (vm && vm.$options.propsData && vm.$options.propsData[key] === undefined && vm._props[key] !== undefined) {
      return vm._props[key];
    }
    // call factory function for non-Function types
    // a value is Function if its prototype is function even across different execution context
    return typeof def === 'function' && getType(prop.type) !== 'Function' ? def.call(vm) : def;
  }

  /**
   * Assert whether a prop is valid.
   */
  function assertProp(prop, name, value, vm, absent) {
    if (prop.required && absent) {
      warn('Missing required prop: "' + name + '"', vm);
      return;
    }
    if (value == null && !prop.required) {
      return;
    }
    var type = prop.type;
    var valid = !type || type === true;
    var expectedTypes = [];
    if (type) {
      if (!Array.isArray(type)) {
        type = [type];
      }
      for (var i = 0; i < type.length && !valid; i++) {
        var assertedType = assertType(value, type[i]);
        expectedTypes.push(assertedType.expectedType || '');
        valid = assertedType.valid;
      }
    }
    if (!valid) {
      warn('Invalid prop: type check failed for prop "' + name + '".' + ' Expected ' + expectedTypes.map(capitalize).join(', ') + ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.', vm);
      return;
    }
    var validator = prop.validator;
    if (validator) {
      if (!validator(value)) {
        warn('Invalid prop: custom validator check failed for prop "' + name + '".', vm);
      }
    }
  }

  var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

  function assertType(value, type) {
    var valid;
    var expectedType = getType(type);
    if (simpleCheckRE.test(expectedType)) {
      valid = typeof value === expectedType.toLowerCase();
    } else if (expectedType === 'Object') {
      valid = isPlainObject(value);
    } else if (expectedType === 'Array') {
      valid = Array.isArray(value);
    } else {
      valid = value instanceof type;
    }
    return {
      valid: valid,
      expectedType: expectedType
    };
  }

  /**
   * Use function string name to check built-in types,
   * because a simple equality check will fail when running
   * across different vms / iframes.
   */
  function getType(fn) {
    var match = fn && fn.toString().match(/^\s*function (\w+)/);
    return match ? match[1] : '';
  }

  function isType(type, fn) {
    if (!Array.isArray(fn)) {
      return getType(fn) === getType(type);
    }
    for (var i = 0, len = fn.length; i < len; i++) {
      if (getType(fn[i]) === getType(type)) {
        return true;
      }
    }
    /* istanbul ignore next */
    return false;
  }

  /*  */

  var mark;
  var measure;

  if ('production' !== 'production') {
    var perf = inBrowser && window.performance;
    /* istanbul ignore if */
    if (perf && perf.mark && perf.measure && perf.clearMarks && perf.clearMeasures) {
      mark = function (tag) {
        return perf.mark(tag);
      };
      measure = function (name, startTag, endTag) {
        perf.measure(name, startTag, endTag);
        perf.clearMarks(startTag);
        perf.clearMarks(endTag);
        perf.clearMeasures(name);
      };
    }
  }

  /* not type checking this file because flow doesn't play well with Proxy */

  var initProxy;

  if ('production' !== 'production') {
    var allowedGlobals = makeMap('Infinity,undefined,NaN,isFinite,isNaN,' + 'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' + 'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' + 'require' // for Webpack/Browserify
    );

    var warnNonPresent = function (target, key) {
      warn("Property or method \"" + key + "\" is not defined on the instance but " + "referenced during render. Make sure to declare reactive data " + "properties in the data option.", target);
    };

    var hasProxy = typeof Proxy !== 'undefined' && Proxy.toString().match(/native code/);

    if (hasProxy) {
      var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');
      config.keyCodes = new Proxy(config.keyCodes, {
        set: function set(target, key, value) {
          if (isBuiltInModifier(key)) {
            warn("Avoid overwriting built-in modifier in config.keyCodes: ." + key);
            return false;
          } else {
            target[key] = value;
            return true;
          }
        }
      });
    }

    var hasHandler = {
      has: function has(target, key) {
        var has = key in target;
        var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';
        if (!has && !isAllowed) {
          warnNonPresent(target, key);
        }
        return has || !isAllowed;
      }
    };

    var getHandler = {
      get: function get(target, key) {
        if (typeof key === 'string' && !(key in target)) {
          warnNonPresent(target, key);
        }
        return target[key];
      }
    };

    initProxy = function initProxy(vm) {
      if (hasProxy) {
        // determine which proxy handler to use
        var options = vm.$options;
        var handlers = options.render && options.render._withStripped ? getHandler : hasHandler;
        vm._renderProxy = new Proxy(vm, handlers);
      } else {
        vm._renderProxy = vm;
      }
    };
  }

  /*  */

  var VNode = function VNode(tag, data, children, text, elm, context, componentOptions, asyncFactory) {
    this.tag = tag;
    this.data = data;
    this.children = children;
    this.text = text;
    this.elm = elm;
    this.ns = undefined;
    this.context = context;
    this.functionalContext = undefined;
    this.key = data && data.key;
    this.componentOptions = componentOptions;
    this.componentInstance = undefined;
    this.parent = undefined;
    this.raw = false;
    this.isStatic = false;
    this.isRootInsert = true;
    this.isComment = false;
    this.isCloned = false;
    this.isOnce = false;
    this.asyncFactory = asyncFactory;
    this.asyncMeta = undefined;
    this.isAsyncPlaceholder = false;
  };

  var prototypeAccessors = { child: {} };

  // DEPRECATED: alias for componentInstance for backwards compat.
  /* istanbul ignore next */
  prototypeAccessors.child.get = function () {
    return this.componentInstance;
  };

  Object.defineProperties(VNode.prototype, prototypeAccessors);

  var createEmptyVNode = function (text) {
    if (text === void 0) text = '';

    var node = new VNode();
    node.text = text;
    node.isComment = true;
    return node;
  };

  function createTextVNode(val) {
    return new VNode(undefined, undefined, undefined, String(val));
  }

  // optimized shallow clone
  // used for static nodes and slot nodes because they may be reused across
  // multiple renders, cloning them avoids errors when DOM manipulations rely
  // on their elm reference.
  function cloneVNode(vnode) {
    var cloned = new VNode(vnode.tag, vnode.data, vnode.children, vnode.text, vnode.elm, vnode.context, vnode.componentOptions, vnode.asyncFactory);
    cloned.ns = vnode.ns;
    cloned.isStatic = vnode.isStatic;
    cloned.key = vnode.key;
    cloned.isComment = vnode.isComment;
    cloned.isCloned = true;
    return cloned;
  }

  function cloneVNodes(vnodes) {
    var len = vnodes.length;
    var res = new Array(len);
    for (var i = 0; i < len; i++) {
      res[i] = cloneVNode(vnodes[i]);
    }
    return res;
  }

  /*  */

  var normalizeEvent = cached(function (name) {
    var passive = name.charAt(0) === '&';
    name = passive ? name.slice(1) : name;
    var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
    name = once$$1 ? name.slice(1) : name;
    var capture = name.charAt(0) === '!';
    name = capture ? name.slice(1) : name;
    return {
      name: name,
      once: once$$1,
      capture: capture,
      passive: passive
    };
  });

  function createFnInvoker(fns) {
    function invoker() {
      var arguments$1 = arguments;

      var fns = invoker.fns;
      if (Array.isArray(fns)) {
        var cloned = fns.slice();
        for (var i = 0; i < cloned.length; i++) {
          cloned[i].apply(null, arguments$1);
        }
      } else {
        // return handler return value for single handlers
        return fns.apply(null, arguments);
      }
    }
    invoker.fns = fns;
    return invoker;
  }

  function updateListeners(on, oldOn, add, remove$$1, vm) {
    var name, cur, old, event;
    for (name in on) {
      cur = on[name];
      old = oldOn[name];
      event = normalizeEvent(name);
      if (isUndef(cur)) {
        'production' !== 'production' && warn("Invalid handler for event \"" + event.name + "\": got " + String(cur), vm);
      } else if (isUndef(old)) {
        if (isUndef(cur.fns)) {
          cur = on[name] = createFnInvoker(cur);
        }
        add(event.name, cur, event.once, event.capture, event.passive);
      } else if (cur !== old) {
        old.fns = cur;
        on[name] = old;
      }
    }
    for (name in oldOn) {
      if (isUndef(on[name])) {
        event = normalizeEvent(name);
        remove$$1(event.name, oldOn[name], event.capture);
      }
    }
  }

  /*  */

  function mergeVNodeHook(def, hookKey, hook) {
    var invoker;
    var oldHook = def[hookKey];

    function wrappedHook() {
      hook.apply(this, arguments);
      // important: remove merged hook to ensure it's called only once
      // and prevent memory leak
      remove(invoker.fns, wrappedHook);
    }

    if (isUndef(oldHook)) {
      // no existing hook
      invoker = createFnInvoker([wrappedHook]);
    } else {
      /* istanbul ignore if */
      if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
        // already a merged invoker
        invoker = oldHook;
        invoker.fns.push(wrappedHook);
      } else {
        // existing plain hook
        invoker = createFnInvoker([oldHook, wrappedHook]);
      }
    }

    invoker.merged = true;
    def[hookKey] = invoker;
  }

  /*  */

  function extractPropsFromVNodeData(data, Ctor, tag) {
    // we are only extracting raw values here.
    // validation and default values are handled in the child
    // component itself.
    var propOptions = Ctor.options.props;
    if (isUndef(propOptions)) {
      return;
    }
    var res = {};
    var attrs = data.attrs;
    var props = data.props;
    if (isDef(attrs) || isDef(props)) {
      for (var key in propOptions) {
        var altKey = hyphenate(key);
        if ('production' !== 'production') {
          var keyInLowerCase = key.toLowerCase();
          if (key !== keyInLowerCase && attrs && hasOwn(attrs, keyInLowerCase)) {
            tip("Prop \"" + keyInLowerCase + "\" is passed to component " + formatComponentName(tag || Ctor) + ", but the declared prop name is" + " \"" + key + "\". " + "Note that HTML attributes are case-insensitive and camelCased " + "props need to use their kebab-case equivalents when using in-DOM " + "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\".");
          }
        }
        checkProp(res, props, key, altKey, true) || checkProp(res, attrs, key, altKey, false);
      }
    }
    return res;
  }

  function checkProp(res, hash, key, altKey, preserve) {
    if (isDef(hash)) {
      if (hasOwn(hash, key)) {
        res[key] = hash[key];
        if (!preserve) {
          delete hash[key];
        }
        return true;
      } else if (hasOwn(hash, altKey)) {
        res[key] = hash[altKey];
        if (!preserve) {
          delete hash[altKey];
        }
        return true;
      }
    }
    return false;
  }

  /*  */

  // The template compiler attempts to minimize the need for normalization by
  // statically analyzing the template at compile time.
  //
  // For plain HTML markup, normalization can be completely skipped because the
  // generated render function is guaranteed to return Array<VNode>. There are
  // two cases where extra normalization is needed:

  // 1. When the children contains components - because a functional component
  // may return an Array instead of a single root. In this case, just a simple
  // normalization is needed - if any child is an Array, we flatten the whole
  // thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
  // because functional components already normalize their own children.
  function simpleNormalizeChildren(children) {
    for (var i = 0; i < children.length; i++) {
      if (Array.isArray(children[i])) {
        return Array.prototype.concat.apply([], children);
      }
    }
    return children;
  }

  // 2. When the children contains constructs that always generated nested Arrays,
  // e.g. <template>, <slot>, v-for, or when the children is provided by user
  // with hand-written render functions / JSX. In such cases a full normalization
  // is needed to cater to all possible types of children values.
  function normalizeChildren(children) {
    return isPrimitive(children) ? [createTextVNode(children)] : Array.isArray(children) ? normalizeArrayChildren(children) : undefined;
  }

  function isTextNode(node) {
    return isDef(node) && isDef(node.text) && isFalse(node.isComment);
  }

  function normalizeArrayChildren(children, nestedIndex) {
    var res = [];
    var i, c, last;
    for (i = 0; i < children.length; i++) {
      c = children[i];
      if (isUndef(c) || typeof c === 'boolean') {
        continue;
      }
      last = res[res.length - 1];
      //  nested
      if (Array.isArray(c)) {
        res.push.apply(res, normalizeArrayChildren(c, (nestedIndex || '') + "_" + i));
      } else if (isPrimitive(c)) {
        if (isTextNode(last)) {
          // merge adjacent text nodes
          // this is necessary for SSR hydration because text nodes are
          // essentially merged when rendered to HTML strings
          last.text += String(c);
        } else if (c !== '') {
          // convert primitive to vnode
          res.push(createTextVNode(c));
        }
      } else {
        if (isTextNode(c) && isTextNode(last)) {
          // merge adjacent text nodes
          res[res.length - 1] = createTextVNode(last.text + c.text);
        } else {
          // default key for nested array children (likely generated by v-for)
          if (isTrue(children._isVList) && isDef(c.tag) && isUndef(c.key) && isDef(nestedIndex)) {
            c.key = "__vlist" + nestedIndex + "_" + i + "__";
          }
          res.push(c);
        }
      }
    }
    return res;
  }

  /*  */

  function ensureCtor(comp, base) {
    if (comp.__esModule && comp.default) {
      comp = comp.default;
    }
    return isObject(comp) ? base.extend(comp) : comp;
  }

  function createAsyncPlaceholder(factory, data, context, children, tag) {
    var node = createEmptyVNode();
    node.asyncFactory = factory;
    node.asyncMeta = { data: data, context: context, children: children, tag: tag };
    return node;
  }

  function resolveAsyncComponent(factory, baseCtor, context) {
    if (isTrue(factory.error) && isDef(factory.errorComp)) {
      return factory.errorComp;
    }

    if (isDef(factory.resolved)) {
      return factory.resolved;
    }

    if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
      return factory.loadingComp;
    }

    if (isDef(factory.contexts)) {
      // already pending
      factory.contexts.push(context);
    } else {
      var contexts = factory.contexts = [context];
      var sync = true;

      var forceRender = function () {
        for (var i = 0, l = contexts.length; i < l; i++) {
          contexts[i].$forceUpdate();
        }
      };

      var resolve = once(function (res) {
        // cache resolved
        factory.resolved = ensureCtor(res, baseCtor);
        // invoke callbacks only if this is not a synchronous resolve
        // (async resolves are shimmed as synchronous during SSR)
        if (!sync) {
          forceRender();
        }
      });

      var reject = once(function (reason) {
        'production' !== 'production' && warn("Failed to resolve async component: " + String(factory) + (reason ? "\nReason: " + reason : ''));
        if (isDef(factory.errorComp)) {
          factory.error = true;
          forceRender();
        }
      });

      var res = factory(resolve, reject);

      if (isObject(res)) {
        if (typeof res.then === 'function') {
          // () => Promise
          if (isUndef(factory.resolved)) {
            res.then(resolve, reject);
          }
        } else if (isDef(res.component) && typeof res.component.then === 'function') {
          res.component.then(resolve, reject);

          if (isDef(res.error)) {
            factory.errorComp = ensureCtor(res.error, baseCtor);
          }

          if (isDef(res.loading)) {
            factory.loadingComp = ensureCtor(res.loading, baseCtor);
            if (res.delay === 0) {
              factory.loading = true;
            } else {
              setTimeout(function () {
                if (isUndef(factory.resolved) && isUndef(factory.error)) {
                  factory.loading = true;
                  forceRender();
                }
              }, res.delay || 200);
            }
          }

          if (isDef(res.timeout)) {
            setTimeout(function () {
              if (isUndef(factory.resolved)) {
                reject('production' !== 'production' ? "timeout (" + res.timeout + "ms)" : null);
              }
            }, res.timeout);
          }
        }
      }

      sync = false;
      // return in case resolved synchronously
      return factory.loading ? factory.loadingComp : factory.resolved;
    }
  }

  /*  */

  function getFirstComponentChild(children) {
    if (Array.isArray(children)) {
      for (var i = 0; i < children.length; i++) {
        var c = children[i];
        if (isDef(c) && isDef(c.componentOptions)) {
          return c;
        }
      }
    }
  }

  /*  */

  /*  */

  function initEvents(vm) {
    vm._events = Object.create(null);
    vm._hasHookEvent = false;
    // init parent attached events
    var listeners = vm.$options._parentListeners;
    if (listeners) {
      updateComponentListeners(vm, listeners);
    }
  }

  var target;

  function add(event, fn, once$$1) {
    if (once$$1) {
      target.$once(event, fn);
    } else {
      target.$on(event, fn);
    }
  }

  function remove$1(event, fn) {
    target.$off(event, fn);
  }

  function updateComponentListeners(vm, listeners, oldListeners) {
    target = vm;
    updateListeners(listeners, oldListeners || {}, add, remove$1, vm);
  }

  function eventsMixin(Vue) {
    var hookRE = /^hook:/;
    Vue.prototype.$on = function (event, fn) {
      var this$1 = this;

      var vm = this;
      if (Array.isArray(event)) {
        for (var i = 0, l = event.length; i < l; i++) {
          this$1.$on(event[i], fn);
        }
      } else {
        (vm._events[event] || (vm._events[event] = [])).push(fn);
        // optimize hook:event cost by using a boolean flag marked at registration
        // instead of a hash lookup
        if (hookRE.test(event)) {
          vm._hasHookEvent = true;
        }
      }
      return vm;
    };

    Vue.prototype.$once = function (event, fn) {
      var vm = this;
      function on() {
        vm.$off(event, on);
        fn.apply(vm, arguments);
      }
      on.fn = fn;
      vm.$on(event, on);
      return vm;
    };

    Vue.prototype.$off = function (event, fn) {
      var this$1 = this;

      var vm = this;
      // all
      if (!arguments.length) {
        vm._events = Object.create(null);
        return vm;
      }
      // array of events
      if (Array.isArray(event)) {
        for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
          this$1.$off(event[i$1], fn);
        }
        return vm;
      }
      // specific event
      var cbs = vm._events[event];
      if (!cbs) {
        return vm;
      }
      if (arguments.length === 1) {
        vm._events[event] = null;
        return vm;
      }
      // specific handler
      var cb;
      var i = cbs.length;
      while (i--) {
        cb = cbs[i];
        if (cb === fn || cb.fn === fn) {
          cbs.splice(i, 1);
          break;
        }
      }
      return vm;
    };

    Vue.prototype.$emit = function (event) {
      var vm = this;
      if ('production' !== 'production') {
        var lowerCaseEvent = event.toLowerCase();
        if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
          tip("Event \"" + lowerCaseEvent + "\" is emitted in component " + formatComponentName(vm) + " but the handler is registered for \"" + event + "\". " + "Note that HTML attributes are case-insensitive and you cannot use " + "v-on to listen to camelCase events when using in-DOM templates. " + "You should probably use \"" + hyphenate(event) + "\" instead of \"" + event + "\".");
        }
      }
      var cbs = vm._events[event];
      if (cbs) {
        cbs = cbs.length > 1 ? toArray(cbs) : cbs;
        var args = toArray(arguments, 1);
        for (var i = 0, l = cbs.length; i < l; i++) {
          try {
            cbs[i].apply(vm, args);
          } catch (e) {
            handleError(e, vm, "event handler for \"" + event + "\"");
          }
        }
      }
      return vm;
    };
  }

  /*  */

  /**
   * Runtime helper for resolving raw children VNodes into a slot object.
   */
  function resolveSlots(children, context) {
    var slots = {};
    if (!children) {
      return slots;
    }
    var defaultSlot = [];
    for (var i = 0, l = children.length; i < l; i++) {
      var child = children[i];
      // named slots should only be respected if the vnode was rendered in the
      // same context.
      if ((child.context === context || child.functionalContext === context) && child.data && child.data.slot != null) {
        var name = child.data.slot;
        var slot = slots[name] || (slots[name] = []);
        if (child.tag === 'template') {
          slot.push.apply(slot, child.children);
        } else {
          slot.push(child);
        }
      } else {
        defaultSlot.push(child);
      }
    }
    // ignore whitespace
    if (!defaultSlot.every(isWhitespace)) {
      slots.default = defaultSlot;
    }
    return slots;
  }

  function isWhitespace(node) {
    return node.isComment || node.text === ' ';
  }

  function resolveScopedSlots(fns, // see flow/vnode
  res) {
    res = res || {};
    for (var i = 0; i < fns.length; i++) {
      if (Array.isArray(fns[i])) {
        resolveScopedSlots(fns[i], res);
      } else {
        res[fns[i].key] = fns[i].fn;
      }
    }
    return res;
  }

  /*  */

  var activeInstance = null;
  var isUpdatingChildComponent = false;

  function initLifecycle(vm) {
    var options = vm.$options;

    // locate first non-abstract parent
    var parent = options.parent;
    if (parent && !options.abstract) {
      while (parent.$options.abstract && parent.$parent) {
        parent = parent.$parent;
      }
      parent.$children.push(vm);
    }

    vm.$parent = parent;
    vm.$root = parent ? parent.$root : vm;

    vm.$children = [];
    vm.$refs = {};

    vm._watcher = null;
    vm._inactive = null;
    vm._directInactive = false;
    vm._isMounted = false;
    vm._isDestroyed = false;
    vm._isBeingDestroyed = false;
  }

  function lifecycleMixin(Vue) {
    Vue.prototype._update = function (vnode, hydrating) {
      var vm = this;
      if (vm._isMounted) {
        callHook(vm, 'beforeUpdate');
      }
      var prevEl = vm.$el;
      var prevVnode = vm._vnode;
      var prevActiveInstance = activeInstance;
      activeInstance = vm;
      vm._vnode = vnode;
      // Vue.prototype.__patch__ is injected in entry points
      // based on the rendering backend used.
      if (!prevVnode) {
        // initial render
        vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */
        , vm.$options._parentElm, vm.$options._refElm);
        // no need for the ref nodes after initial patch
        // this prevents keeping a detached DOM tree in memory (#5851)
        vm.$options._parentElm = vm.$options._refElm = null;
      } else {
        // updates
        vm.$el = vm.__patch__(prevVnode, vnode);
      }
      activeInstance = prevActiveInstance;
      // update __vue__ reference
      if (prevEl) {
        prevEl.__vue__ = null;
      }
      if (vm.$el) {
        vm.$el.__vue__ = vm;
      }
      // if parent is an HOC, update its $el as well
      if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
        vm.$parent.$el = vm.$el;
      }
      // updated hook is called by the scheduler to ensure that children are
      // updated in a parent's updated hook.
    };

    Vue.prototype.$forceUpdate = function () {
      var vm = this;
      if (vm._watcher) {
        vm._watcher.update();
      }
    };

    Vue.prototype.$destroy = function () {
      var vm = this;
      if (vm._isBeingDestroyed) {
        return;
      }
      callHook(vm, 'beforeDestroy');
      vm._isBeingDestroyed = true;
      // remove self from parent
      var parent = vm.$parent;
      if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
        remove(parent.$children, vm);
      }
      // teardown watchers
      if (vm._watcher) {
        vm._watcher.teardown();
      }
      var i = vm._watchers.length;
      while (i--) {
        vm._watchers[i].teardown();
      }
      // remove reference from data ob
      // frozen object may not have observer.
      if (vm._data.__ob__) {
        vm._data.__ob__.vmCount--;
      }
      // call the last hook...
      vm._isDestroyed = true;
      // invoke destroy hooks on current rendered tree
      vm.__patch__(vm._vnode, null);
      // fire destroyed hook
      callHook(vm, 'destroyed');
      // turn off all instance listeners.
      vm.$off();
      // remove __vue__ reference
      if (vm.$el) {
        vm.$el.__vue__ = null;
      }
    };
  }

  function mountComponent(vm, el, hydrating) {
    vm.$el = el;
    if (!vm.$options.render) {
      vm.$options.render = createEmptyVNode;
      if ('production' !== 'production') {
        /* istanbul ignore if */
        if (vm.$options.template && vm.$options.template.charAt(0) !== '#' || vm.$options.el || el) {
          warn('You are using the runtime-only build of Vue where the template ' + 'compiler is not available. Either pre-compile the templates into ' + 'render functions, or use the compiler-included build.', vm);
        } else {
          warn('Failed to mount component: template or render function not defined.', vm);
        }
      }
    }
    callHook(vm, 'beforeMount');

    var updateComponent;
    /* istanbul ignore if */
    if ('production' !== 'production' && config.performance && mark) {
      updateComponent = function () {
        var name = vm._name;
        var id = vm._uid;
        var startTag = "vue-perf-start:" + id;
        var endTag = "vue-perf-end:" + id;

        mark(startTag);
        var vnode = vm._render();
        mark(endTag);
        measure(name + " render", startTag, endTag);

        mark(startTag);
        vm._update(vnode, hydrating);
        mark(endTag);
        measure(name + " patch", startTag, endTag);
      };
    } else {
      updateComponent = function () {
        vm._update(vm._render(), hydrating);
      };
    }

    vm._watcher = new Watcher(vm, updateComponent, noop);
    hydrating = false;

    // manually mounted instance, call mounted on self
    // mounted is called for render-created child components in its inserted hook
    if (vm.$vnode == null) {
      vm._isMounted = true;
      callHook(vm, 'mounted');
    }
    return vm;
  }

  function updateChildComponent(vm, propsData, listeners, parentVnode, renderChildren) {
    if ('production' !== 'production') {
      isUpdatingChildComponent = true;
    }

    // determine whether component has slot children
    // we need to do this before overwriting $options._renderChildren
    var hasChildren = !!(renderChildren || // has new static slots
    vm.$options._renderChildren || // has old static slots
    parentVnode.data.scopedSlots || // has new scoped slots
    vm.$scopedSlots !== emptyObject // has old scoped slots
    );

    vm.$options._parentVnode = parentVnode;
    vm.$vnode = parentVnode; // update vm's placeholder node without re-render

    if (vm._vnode) {
      // update child tree's parent
      vm._vnode.parent = parentVnode;
    }
    vm.$options._renderChildren = renderChildren;

    // update $attrs and $listensers hash
    // these are also reactive so they may trigger child update if the child
    // used them during render
    vm.$attrs = parentVnode.data && parentVnode.data.attrs;
    vm.$listeners = listeners;

    // update props
    if (propsData && vm.$options.props) {
      observerState.shouldConvert = false;
      var props = vm._props;
      var propKeys = vm.$options._propKeys || [];
      for (var i = 0; i < propKeys.length; i++) {
        var key = propKeys[i];
        props[key] = validateProp(key, vm.$options.props, propsData, vm);
      }
      observerState.shouldConvert = true;
      // keep a copy of raw propsData
      vm.$options.propsData = propsData;
    }

    // update listeners
    if (listeners) {
      var oldListeners = vm.$options._parentListeners;
      vm.$options._parentListeners = listeners;
      updateComponentListeners(vm, listeners, oldListeners);
    }
    // resolve slots + force update if has children
    if (hasChildren) {
      vm.$slots = resolveSlots(renderChildren, parentVnode.context);
      vm.$forceUpdate();
    }

    if ('production' !== 'production') {
      isUpdatingChildComponent = false;
    }
  }

  function isInInactiveTree(vm) {
    while (vm && (vm = vm.$parent)) {
      if (vm._inactive) {
        return true;
      }
    }
    return false;
  }

  function activateChildComponent(vm, direct) {
    if (direct) {
      vm._directInactive = false;
      if (isInInactiveTree(vm)) {
        return;
      }
    } else if (vm._directInactive) {
      return;
    }
    if (vm._inactive || vm._inactive === null) {
      vm._inactive = false;
      for (var i = 0; i < vm.$children.length; i++) {
        activateChildComponent(vm.$children[i]);
      }
      callHook(vm, 'activated');
    }
  }

  function deactivateChildComponent(vm, direct) {
    if (direct) {
      vm._directInactive = true;
      if (isInInactiveTree(vm)) {
        return;
      }
    }
    if (!vm._inactive) {
      vm._inactive = true;
      for (var i = 0; i < vm.$children.length; i++) {
        deactivateChildComponent(vm.$children[i]);
      }
      callHook(vm, 'deactivated');
    }
  }

  function callHook(vm, hook) {
    var handlers = vm.$options[hook];
    if (handlers) {
      for (var i = 0, j = handlers.length; i < j; i++) {
        try {
          handlers[i].call(vm);
        } catch (e) {
          handleError(e, vm, hook + " hook");
        }
      }
    }
    if (vm._hasHookEvent) {
      vm.$emit('hook:' + hook);
    }
  }

  /*  */

  var MAX_UPDATE_COUNT = 100;

  var queue = [];
  var activatedChildren = [];
  var has = {};
  var circular = {};
  var waiting = false;
  var flushing = false;
  var index = 0;

  /**
   * Reset the scheduler's state.
   */
  function resetSchedulerState() {
    index = queue.length = activatedChildren.length = 0;
    has = {};
    if ('production' !== 'production') {
      circular = {};
    }
    waiting = flushing = false;
  }

  /**
   * Flush both queues and run the watchers.
   */
  function flushSchedulerQueue() {
    flushing = true;
    var watcher, id;

    // Sort queue before flush.
    // This ensures that:
    // 1. Components are updated from parent to child. (because parent is always
    //    created before the child)
    // 2. A component's user watchers are run before its render watcher (because
    //    user watchers are created before the render watcher)
    // 3. If a component is destroyed during a parent component's watcher run,
    //    its watchers can be skipped.
    queue.sort(function (a, b) {
      return a.id - b.id;
    });

    // do not cache length because more watchers might be pushed
    // as we run existing watchers
    for (index = 0; index < queue.length; index++) {
      watcher = queue[index];
      id = watcher.id;
      has[id] = null;
      watcher.run();
      // in dev build, check and stop circular updates.
      if ('production' !== 'production' && has[id] != null) {
        circular[id] = (circular[id] || 0) + 1;
        if (circular[id] > MAX_UPDATE_COUNT) {
          warn('You may have an infinite update loop ' + (watcher.user ? "in watcher with expression \"" + watcher.expression + "\"" : "in a component render function."), watcher.vm);
          break;
        }
      }
    }

    // keep copies of post queues before resetting state
    var activatedQueue = activatedChildren.slice();
    var updatedQueue = queue.slice();

    resetSchedulerState();

    // call component updated and activated hooks
    callActivatedHooks(activatedQueue);
    callUpdatedHooks(updatedQueue);

    // devtool hook
    /* istanbul ignore if */
    if (devtools && config.devtools) {
      devtools.emit('flush');
    }
  }

  function callUpdatedHooks(queue) {
    var i = queue.length;
    while (i--) {
      var watcher = queue[i];
      var vm = watcher.vm;
      if (vm._watcher === watcher && vm._isMounted) {
        callHook(vm, 'updated');
      }
    }
  }

  /**
   * Queue a kept-alive component that was activated during patch.
   * The queue will be processed after the entire tree has been patched.
   */
  function queueActivatedComponent(vm) {
    // setting _inactive to false here so that a render function can
    // rely on checking whether it's in an inactive tree (e.g. router-view)
    vm._inactive = false;
    activatedChildren.push(vm);
  }

  function callActivatedHooks(queue) {
    for (var i = 0; i < queue.length; i++) {
      queue[i]._inactive = true;
      activateChildComponent(queue[i], true /* true */);
    }
  }

  /**
   * Push a watcher into the watcher queue.
   * Jobs with duplicate IDs will be skipped unless it's
   * pushed when the queue is being flushed.
   */
  function queueWatcher(watcher) {
    var id = watcher.id;
    if (has[id] == null) {
      has[id] = true;
      if (!flushing) {
        queue.push(watcher);
      } else {
        // if already flushing, splice the watcher based on its id
        // if already past its id, it will be run next immediately.
        var i = queue.length - 1;
        while (i > index && queue[i].id > watcher.id) {
          i--;
        }
        queue.splice(i + 1, 0, watcher);
      }
      // queue the flush
      if (!waiting) {
        waiting = true;
        nextTick(flushSchedulerQueue);
      }
    }
  }

  /*  */

  var uid$2 = 0;

  /**
   * A watcher parses an expression, collects dependencies,
   * and fires callback when the expression value changes.
   * This is used for both the $watch() api and directives.
   */
  var Watcher = function Watcher(vm, expOrFn, cb, options) {
    this.vm = vm;
    vm._watchers.push(this);
    // options
    if (options) {
      this.deep = !!options.deep;
      this.user = !!options.user;
      this.lazy = !!options.lazy;
      this.sync = !!options.sync;
    } else {
      this.deep = this.user = this.lazy = this.sync = false;
    }
    this.cb = cb;
    this.id = ++uid$2; // uid for batching
    this.active = true;
    this.dirty = this.lazy; // for lazy watchers
    this.deps = [];
    this.newDeps = [];
    this.depIds = new _Set();
    this.newDepIds = new _Set();
    this.expression = 'production' !== 'production' ? expOrFn.toString() : '';
    // parse expression for getter
    if (typeof expOrFn === 'function') {
      this.getter = expOrFn;
    } else {
      this.getter = parsePath(expOrFn);
      if (!this.getter) {
        this.getter = function () {};
        'production' !== 'production' && warn("Failed watching path: \"" + expOrFn + "\" " + 'Watcher only accepts simple dot-delimited paths. ' + 'For full control, use a function instead.', vm);
      }
    }
    this.value = this.lazy ? undefined : this.get();
  };

  /**
   * Evaluate the getter, and re-collect dependencies.
   */
  Watcher.prototype.get = function get() {
    pushTarget(this);
    var value;
    var vm = this.vm;
    try {
      value = this.getter.call(vm, vm);
    } catch (e) {
      if (this.user) {
        handleError(e, vm, "getter for watcher \"" + this.expression + "\"");
      } else {
        throw e;
      }
    } finally {
      // "touch" every property so they are all tracked as
      // dependencies for deep watching
      if (this.deep) {
        traverse(value);
      }
      popTarget();
      this.cleanupDeps();
    }
    return value;
  };

  /**
   * Add a dependency to this directive.
   */
  Watcher.prototype.addDep = function addDep(dep) {
    var id = dep.id;
    if (!this.newDepIds.has(id)) {
      this.newDepIds.add(id);
      this.newDeps.push(dep);
      if (!this.depIds.has(id)) {
        dep.addSub(this);
      }
    }
  };

  /**
   * Clean up for dependency collection.
   */
  Watcher.prototype.cleanupDeps = function cleanupDeps() {
    var this$1 = this;

    var i = this.deps.length;
    while (i--) {
      var dep = this$1.deps[i];
      if (!this$1.newDepIds.has(dep.id)) {
        dep.removeSub(this$1);
      }
    }
    var tmp = this.depIds;
    this.depIds = this.newDepIds;
    this.newDepIds = tmp;
    this.newDepIds.clear();
    tmp = this.deps;
    this.deps = this.newDeps;
    this.newDeps = tmp;
    this.newDeps.length = 0;
  };

  /**
   * Subscriber interface.
   * Will be called when a dependency changes.
   */
  Watcher.prototype.update = function update() {
    /* istanbul ignore else */
    if (this.lazy) {
      this.dirty = true;
    } else if (this.sync) {
      this.run();
    } else {
      queueWatcher(this);
    }
  };

  /**
   * Scheduler job interface.
   * Will be called by the scheduler.
   */
  Watcher.prototype.run = function run() {
    if (this.active) {
      var value = this.get();
      if (value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) || this.deep) {
        // set new value
        var oldValue = this.value;
        this.value = value;
        if (this.user) {
          try {
            this.cb.call(this.vm, value, oldValue);
          } catch (e) {
            handleError(e, this.vm, "callback for watcher \"" + this.expression + "\"");
          }
        } else {
          this.cb.call(this.vm, value, oldValue);
        }
      }
    }
  };

  /**
   * Evaluate the value of the watcher.
   * This only gets called for lazy watchers.
   */
  Watcher.prototype.evaluate = function evaluate() {
    this.value = this.get();
    this.dirty = false;
  };

  /**
   * Depend on all deps collected by this watcher.
   */
  Watcher.prototype.depend = function depend() {
    var this$1 = this;

    var i = this.deps.length;
    while (i--) {
      this$1.deps[i].depend();
    }
  };

  /**
   * Remove self from all dependencies' subscriber list.
   */
  Watcher.prototype.teardown = function teardown() {
    var this$1 = this;

    if (this.active) {
      // remove self from vm's watcher list
      // this is a somewhat expensive operation so we skip it
      // if the vm is being destroyed.
      if (!this.vm._isBeingDestroyed) {
        remove(this.vm._watchers, this);
      }
      var i = this.deps.length;
      while (i--) {
        this$1.deps[i].removeSub(this$1);
      }
      this.active = false;
    }
  };

  /**
   * Recursively traverse an object to evoke all converted
   * getters, so that every nested property inside the object
   * is collected as a "deep" dependency.
   */
  var seenObjects = new _Set();
  function traverse(val) {
    seenObjects.clear();
    _traverse(val, seenObjects);
  }

  function _traverse(val, seen) {
    var i, keys;
    var isA = Array.isArray(val);
    if (!isA && !isObject(val) || !Object.isExtensible(val)) {
      return;
    }
    if (val.__ob__) {
      var depId = val.__ob__.dep.id;
      if (seen.has(depId)) {
        return;
      }
      seen.add(depId);
    }
    if (isA) {
      i = val.length;
      while (i--) {
        _traverse(val[i], seen);
      }
    } else {
      keys = Object.keys(val);
      i = keys.length;
      while (i--) {
        _traverse(val[keys[i]], seen);
      }
    }
  }

  /*  */

  var sharedPropertyDefinition = {
    enumerable: true,
    configurable: true,
    get: noop,
    set: noop
  };

  function proxy(target, sourceKey, key) {
    sharedPropertyDefinition.get = function proxyGetter() {
      return this[sourceKey][key];
    };
    sharedPropertyDefinition.set = function proxySetter(val) {
      this[sourceKey][key] = val;
    };
    Object.defineProperty(target, key, sharedPropertyDefinition);
  }

  function initState(vm) {
    vm._watchers = [];
    var opts = vm.$options;
    if (opts.props) {
      initProps(vm, opts.props);
    }
    if (opts.methods) {
      initMethods(vm, opts.methods);
    }
    if (opts.data) {
      initData(vm);
    } else {
      observe(vm._data = {}, true /* asRootData */);
    }
    if (opts.computed) {
      initComputed(vm, opts.computed);
    }
    if (opts.watch && opts.watch !== nativeWatch) {
      initWatch(vm, opts.watch);
    }
  }

  function checkOptionType(vm, name) {
    var option = vm.$options[name];
    if (!isPlainObject(option)) {
      warn("component option \"" + name + "\" should be an object.", vm);
    }
  }

  function initProps(vm, propsOptions) {
    var propsData = vm.$options.propsData || {};
    var props = vm._props = {};
    // cache prop keys so that future props updates can iterate using Array
    // instead of dynamic object key enumeration.
    var keys = vm.$options._propKeys = [];
    var isRoot = !vm.$parent;
    // root instance props should be converted
    observerState.shouldConvert = isRoot;
    var loop = function (key) {
      keys.push(key);
      var value = validateProp(key, propsOptions, propsData, vm);
      /* istanbul ignore else */
      if ('production' !== 'production') {
        if (isReservedAttribute(key) || config.isReservedAttr(key)) {
          warn("\"" + key + "\" is a reserved attribute and cannot be used as component prop.", vm);
        }
        defineReactive$$1(props, key, value, function () {
          if (vm.$parent && !isUpdatingChildComponent) {
            warn("Avoid mutating a prop directly since the value will be " + "overwritten whenever the parent component re-renders. " + "Instead, use a data or computed property based on the prop's " + "value. Prop being mutated: \"" + key + "\"", vm);
          }
        });
      } else {
        defineReactive$$1(props, key, value);
      }
      // static props are already proxied on the component's prototype
      // during Vue.extend(). We only need to proxy props defined at
      // instantiation here.
      if (!(key in vm)) {
        proxy(vm, "_props", key);
      }
    };

    for (var key in propsOptions) loop(key);
    observerState.shouldConvert = true;
  }

  function initData(vm) {
    var data = vm.$options.data;
    data = vm._data = typeof data === 'function' ? getData(data, vm) : data || {};
    if (!isPlainObject(data)) {
      data = {};
      'production' !== 'production' && warn('data functions should return an object:\n' + 'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function', vm);
    }
    // proxy data on instance
    var keys = Object.keys(data);
    var props = vm.$options.props;
    var methods = vm.$options.methods;
    var i = keys.length;
    while (i--) {
      var key = keys[i];
      if ('production' !== 'production') {
        if (methods && hasOwn(methods, key)) {
          warn("method \"" + key + "\" has already been defined as a data property.", vm);
        }
      }
      if (props && hasOwn(props, key)) {
        'production' !== 'production' && warn("The data property \"" + key + "\" is already declared as a prop. " + "Use prop default value instead.", vm);
      } else if (!isReserved(key)) {
        proxy(vm, "_data", key);
      }
    }
    // observe data
    observe(data, true /* asRootData */);
  }

  function getData(data, vm) {
    try {
      return data.call(vm);
    } catch (e) {
      handleError(e, vm, "data()");
      return {};
    }
  }

  var computedWatcherOptions = { lazy: true };

  function initComputed(vm, computed) {
    'production' !== 'production' && checkOptionType(vm, 'computed');
    var watchers = vm._computedWatchers = Object.create(null);

    for (var key in computed) {
      var userDef = computed[key];
      var getter = typeof userDef === 'function' ? userDef : userDef.get;
      if ('production' !== 'production' && getter == null) {
        warn("Getter is missing for computed property \"" + key + "\".", vm);
      }
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(vm, getter || noop, noop, computedWatcherOptions);

      // component-defined computed properties are already defined on the
      // component prototype. We only need to define computed properties defined
      // at instantiation here.
      if (!(key in vm)) {
        defineComputed(vm, key, userDef);
      } else if ('production' !== 'production') {
        if (key in vm.$data) {
          warn("The computed property \"" + key + "\" is already defined in data.", vm);
        } else if (vm.$options.props && key in vm.$options.props) {
          warn("The computed property \"" + key + "\" is already defined as a prop.", vm);
        }
      }
    }
  }

  function defineComputed(target, key, userDef) {
    if (typeof userDef === 'function') {
      sharedPropertyDefinition.get = createComputedGetter(key);
      sharedPropertyDefinition.set = noop;
    } else {
      sharedPropertyDefinition.get = userDef.get ? userDef.cache !== false ? createComputedGetter(key) : userDef.get : noop;
      sharedPropertyDefinition.set = userDef.set ? userDef.set : noop;
    }
    if ('production' !== 'production' && sharedPropertyDefinition.set === noop) {
      sharedPropertyDefinition.set = function () {
        warn("Computed property \"" + key + "\" was assigned to but it has no setter.", this);
      };
    }
    Object.defineProperty(target, key, sharedPropertyDefinition);
  }

  function createComputedGetter(key) {
    return function computedGetter() {
      var watcher = this._computedWatchers && this._computedWatchers[key];
      if (watcher) {
        if (watcher.dirty) {
          watcher.evaluate();
        }
        if (Dep.target) {
          watcher.depend();
        }
        return watcher.value;
      }
    };
  }

  function initMethods(vm, methods) {
    'production' !== 'production' && checkOptionType(vm, 'methods');
    var props = vm.$options.props;
    for (var key in methods) {
      vm[key] = methods[key] == null ? noop : bind(methods[key], vm);
      if ('production' !== 'production') {
        if (methods[key] == null) {
          warn("method \"" + key + "\" has an undefined value in the component definition. " + "Did you reference the function correctly?", vm);
        }
        if (props && hasOwn(props, key)) {
          warn("method \"" + key + "\" has already been defined as a prop.", vm);
        }
      }
    }
  }

  function initWatch(vm, watch) {
    'production' !== 'production' && checkOptionType(vm, 'watch');
    for (var key in watch) {
      var handler = watch[key];
      if (Array.isArray(handler)) {
        for (var i = 0; i < handler.length; i++) {
          createWatcher(vm, key, handler[i]);
        }
      } else {
        createWatcher(vm, key, handler);
      }
    }
  }

  function createWatcher(vm, keyOrFn, handler, options) {
    if (isPlainObject(handler)) {
      options = handler;
      handler = handler.handler;
    }
    if (typeof handler === 'string') {
      handler = vm[handler];
    }
    return vm.$watch(keyOrFn, handler, options);
  }

  function stateMixin(Vue) {
    // flow somehow has problems with directly declared definition object
    // when using Object.defineProperty, so we have to procedurally build up
    // the object here.
    var dataDef = {};
    dataDef.get = function () {
      return this._data;
    };
    var propsDef = {};
    propsDef.get = function () {
      return this._props;
    };
    if ('production' !== 'production') {
      dataDef.set = function (newData) {
        warn('Avoid replacing instance root $data. ' + 'Use nested data properties instead.', this);
      };
      propsDef.set = function () {
        warn("$props is readonly.", this);
      };
    }
    Object.defineProperty(Vue.prototype, '$data', dataDef);
    Object.defineProperty(Vue.prototype, '$props', propsDef);

    Vue.prototype.$set = set;
    Vue.prototype.$delete = del;

    Vue.prototype.$watch = function (expOrFn, cb, options) {
      var vm = this;
      if (isPlainObject(cb)) {
        return createWatcher(vm, expOrFn, cb, options);
      }
      options = options || {};
      options.user = true;
      var watcher = new Watcher(vm, expOrFn, cb, options);
      if (options.immediate) {
        cb.call(vm, watcher.value);
      }
      return function unwatchFn() {
        watcher.teardown();
      };
    };
  }

  /*  */

  function initProvide(vm) {
    var provide = vm.$options.provide;
    if (provide) {
      vm._provided = typeof provide === 'function' ? provide.call(vm) : provide;
    }
  }

  function initInjections(vm) {
    var result = resolveInject(vm.$options.inject, vm);
    if (result) {
      observerState.shouldConvert = false;
      Object.keys(result).forEach(function (key) {
        /* istanbul ignore else */
        if ('production' !== 'production') {
          defineReactive$$1(vm, key, result[key], function () {
            warn("Avoid mutating an injected value directly since the changes will be " + "overwritten whenever the provided component re-renders. " + "injection being mutated: \"" + key + "\"", vm);
          });
        } else {
          defineReactive$$1(vm, key, result[key]);
        }
      });
      observerState.shouldConvert = true;
    }
  }

  function resolveInject(inject, vm) {
    if (inject) {
      // inject is :any because flow is not smart enough to figure out cached
      var result = Object.create(null);
      var keys = hasSymbol ? Reflect.ownKeys(inject) : Object.keys(inject);

      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        var provideKey = inject[key];
        var source = vm;
        while (source) {
          if (source._provided && provideKey in source._provided) {
            result[key] = source._provided[provideKey];
            break;
          }
          source = source.$parent;
        }
        if ('production' !== 'production' && !source) {
          warn("Injection \"" + key + "\" not found", vm);
        }
      }
      return result;
    }
  }

  /*  */

  function createFunctionalComponent(Ctor, propsData, data, context, children) {
    var props = {};
    var propOptions = Ctor.options.props;
    if (isDef(propOptions)) {
      for (var key in propOptions) {
        props[key] = validateProp(key, propOptions, propsData || {});
      }
    } else {
      if (isDef(data.attrs)) {
        mergeProps(props, data.attrs);
      }
      if (isDef(data.props)) {
        mergeProps(props, data.props);
      }
    }
    // ensure the createElement function in functional components
    // gets a unique context - this is necessary for correct named slot check
    var _context = Object.create(context);
    var h = function (a, b, c, d) {
      return createElement(_context, a, b, c, d, true);
    };
    var vnode = Ctor.options.render.call(null, h, {
      data: data,
      props: props,
      children: children,
      parent: context,
      listeners: data.on || {},
      injections: resolveInject(Ctor.options.inject, context),
      slots: function () {
        return resolveSlots(children, context);
      }
    });
    if (vnode instanceof VNode) {
      vnode.functionalContext = context;
      vnode.functionalOptions = Ctor.options;
      if (data.slot) {
        (vnode.data || (vnode.data = {})).slot = data.slot;
      }
    }
    return vnode;
  }

  function mergeProps(to, from) {
    for (var key in from) {
      to[camelize(key)] = from[key];
    }
  }

  /*  */

  // hooks to be invoked on component VNodes during patch
  var componentVNodeHooks = {
    init: function init(vnode, hydrating, parentElm, refElm) {
      if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {
        var child = vnode.componentInstance = createComponentInstanceForVnode(vnode, activeInstance, parentElm, refElm);
        child.$mount(hydrating ? vnode.elm : undefined, hydrating);
      } else if (vnode.data.keepAlive) {
        // kept-alive components, treat as a patch
        var mountedNode = vnode; // work around flow
        componentVNodeHooks.prepatch(mountedNode, mountedNode);
      }
    },

    prepatch: function prepatch(oldVnode, vnode) {
      var options = vnode.componentOptions;
      var child = vnode.componentInstance = oldVnode.componentInstance;
      updateChildComponent(child, options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
      );
    },

    insert: function insert(vnode) {
      var context = vnode.context;
      var componentInstance = vnode.componentInstance;
      if (!componentInstance._isMounted) {
        componentInstance._isMounted = true;
        callHook(componentInstance, 'mounted');
      }
      if (vnode.data.keepAlive) {
        if (context._isMounted) {
          // vue-router#1212
          // During updates, a kept-alive component's child components may
          // change, so directly walking the tree here may call activated hooks
          // on incorrect children. Instead we push them into a queue which will
          // be processed after the whole patch process ended.
          queueActivatedComponent(componentInstance);
        } else {
          activateChildComponent(componentInstance, true /* direct */);
        }
      }
    },

    destroy: function destroy(vnode) {
      var componentInstance = vnode.componentInstance;
      if (!componentInstance._isDestroyed) {
        if (!vnode.data.keepAlive) {
          componentInstance.$destroy();
        } else {
          deactivateChildComponent(componentInstance, true /* direct */);
        }
      }
    }
  };

  var hooksToMerge = Object.keys(componentVNodeHooks);

  function createComponent(Ctor, data, context, children, tag) {
    if (isUndef(Ctor)) {
      return;
    }

    var baseCtor = context.$options._base;

    // plain options object: turn it into a constructor
    if (isObject(Ctor)) {
      Ctor = baseCtor.extend(Ctor);
    }

    // if at this stage it's not a constructor or an async component factory,
    // reject.
    if (typeof Ctor !== 'function') {
      if ('production' !== 'production') {
        warn("Invalid Component definition: " + String(Ctor), context);
      }
      return;
    }

    // async component
    var asyncFactory;
    if (isUndef(Ctor.cid)) {
      asyncFactory = Ctor;
      Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);
      if (Ctor === undefined) {
        // return a placeholder node for async component, which is rendered
        // as a comment node but preserves all the raw information for the node.
        // the information will be used for async server-rendering and hydration.
        return createAsyncPlaceholder(asyncFactory, data, context, children, tag);
      }
    }

    data = data || {};

    // resolve constructor options in case global mixins are applied after
    // component constructor creation
    resolveConstructorOptions(Ctor);

    // transform component v-model data into props & events
    if (isDef(data.model)) {
      transformModel(Ctor.options, data);
    }

    // extract props
    var propsData = extractPropsFromVNodeData(data, Ctor, tag);

    // functional component
    if (isTrue(Ctor.options.functional)) {
      return createFunctionalComponent(Ctor, propsData, data, context, children);
    }

    // extract listeners, since these needs to be treated as
    // child component listeners instead of DOM listeners
    var listeners = data.on;
    // replace with listeners with .native modifier
    // so it gets processed during parent component patch.
    data.on = data.nativeOn;

    if (isTrue(Ctor.options.abstract)) {
      // abstract components do not keep anything
      // other than props & listeners & slot

      // work around flow
      var slot = data.slot;
      data = {};
      if (slot) {
        data.slot = slot;
      }
    }

    // merge component management hooks onto the placeholder node
    mergeHooks(data);

    // return a placeholder vnode
    var name = Ctor.options.name || tag;
    var vnode = new VNode("vue-component-" + Ctor.cid + (name ? "-" + name : ''), data, undefined, undefined, undefined, context, { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }, asyncFactory);
    return vnode;
  }

  function createComponentInstanceForVnode(vnode, // we know it's MountedComponentVNode but flow doesn't
  parent, // activeInstance in lifecycle state
  parentElm, refElm) {
    var vnodeComponentOptions = vnode.componentOptions;
    var options = {
      _isComponent: true,
      parent: parent,
      propsData: vnodeComponentOptions.propsData,
      _componentTag: vnodeComponentOptions.tag,
      _parentVnode: vnode,
      _parentListeners: vnodeComponentOptions.listeners,
      _renderChildren: vnodeComponentOptions.children,
      _parentElm: parentElm || null,
      _refElm: refElm || null
    };
    // check inline-template render functions
    var inlineTemplate = vnode.data.inlineTemplate;
    if (isDef(inlineTemplate)) {
      options.render = inlineTemplate.render;
      options.staticRenderFns = inlineTemplate.staticRenderFns;
    }
    return new vnodeComponentOptions.Ctor(options);
  }

  function mergeHooks(data) {
    if (!data.hook) {
      data.hook = {};
    }
    for (var i = 0; i < hooksToMerge.length; i++) {
      var key = hooksToMerge[i];
      var fromParent = data.hook[key];
      var ours = componentVNodeHooks[key];
      data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;
    }
  }

  function mergeHook$1(one, two) {
    return function (a, b, c, d) {
      one(a, b, c, d);
      two(a, b, c, d);
    };
  }

  // transform component v-model info (value and callback) into
  // prop and event handler respectively.
  function transformModel(options, data) {
    var prop = options.model && options.model.prop || 'value';
    var event = options.model && options.model.event || 'input';(data.props || (data.props = {}))[prop] = data.model.value;
    var on = data.on || (data.on = {});
    if (isDef(on[event])) {
      on[event] = [data.model.callback].concat(on[event]);
    } else {
      on[event] = data.model.callback;
    }
  }

  /*  */

  var SIMPLE_NORMALIZE = 1;
  var ALWAYS_NORMALIZE = 2;

  // wrapper function for providing a more flexible interface
  // without getting yelled at by flow
  function createElement(context, tag, data, children, normalizationType, alwaysNormalize) {
    if (Array.isArray(data) || isPrimitive(data)) {
      normalizationType = children;
      children = data;
      data = undefined;
    }
    if (isTrue(alwaysNormalize)) {
      normalizationType = ALWAYS_NORMALIZE;
    }
    return _createElement(context, tag, data, children, normalizationType);
  }

  function _createElement(context, tag, data, children, normalizationType) {
    if (isDef(data) && isDef(data.__ob__)) {
      'production' !== 'production' && warn("Avoid using observed data object as vnode data: " + JSON.stringify(data) + "\n" + 'Always create fresh vnode data objects in each render!', context);
      return createEmptyVNode();
    }
    // object syntax in v-bind
    if (isDef(data) && isDef(data.is)) {
      tag = data.is;
    }
    if (!tag) {
      // in case of component :is set to falsy value
      return createEmptyVNode();
    }
    // warn against non-primitive key
    if ('production' !== 'production' && isDef(data) && isDef(data.key) && !isPrimitive(data.key)) {
      warn('Avoid using non-primitive value as key, ' + 'use string/number value instead.', context);
    }
    // support single function children as default scoped slot
    if (Array.isArray(children) && typeof children[0] === 'function') {
      data = data || {};
      data.scopedSlots = { default: children[0] };
      children.length = 0;
    }
    if (normalizationType === ALWAYS_NORMALIZE) {
      children = normalizeChildren(children);
    } else if (normalizationType === SIMPLE_NORMALIZE) {
      children = simpleNormalizeChildren(children);
    }
    var vnode, ns;
    if (typeof tag === 'string') {
      var Ctor;
      ns = config.getTagNamespace(tag);
      if (config.isReservedTag(tag)) {
        // platform built-in elements
        vnode = new VNode(config.parsePlatformTagName(tag), data, children, undefined, undefined, context);
      } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
        // component
        vnode = createComponent(Ctor, data, context, children, tag);
      } else {
        // unknown or unlisted namespaced elements
        // check at runtime because it may get assigned a namespace when its
        // parent normalizes children
        vnode = new VNode(tag, data, children, undefined, undefined, context);
      }
    } else {
      // direct component options / constructor
      vnode = createComponent(tag, data, context, children);
    }
    if (isDef(vnode)) {
      if (ns) {
        applyNS(vnode, ns);
      }
      return vnode;
    } else {
      return createEmptyVNode();
    }
  }

  function applyNS(vnode, ns) {
    vnode.ns = ns;
    if (vnode.tag === 'foreignObject') {
      // use default namespace inside foreignObject
      return;
    }
    if (isDef(vnode.children)) {
      for (var i = 0, l = vnode.children.length; i < l; i++) {
        var child = vnode.children[i];
        if (isDef(child.tag) && isUndef(child.ns)) {
          applyNS(child, ns);
        }
      }
    }
  }

  /*  */

  /**
   * Runtime helper for rendering v-for lists.
   */
  function renderList(val, render) {
    var ret, i, l, keys, key;
    if (Array.isArray(val) || typeof val === 'string') {
      ret = new Array(val.length);
      for (i = 0, l = val.length; i < l; i++) {
        ret[i] = render(val[i], i);
      }
    } else if (typeof val === 'number') {
      ret = new Array(val);
      for (i = 0; i < val; i++) {
        ret[i] = render(i + 1, i);
      }
    } else if (isObject(val)) {
      keys = Object.keys(val);
      ret = new Array(keys.length);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i);
      }
    }
    if (isDef(ret)) {
      ret._isVList = true;
    }
    return ret;
  }

  /*  */

  /**
   * Runtime helper for rendering <slot>
   */
  function renderSlot(name, fallback, props, bindObject) {
    var scopedSlotFn = this.$scopedSlots[name];
    if (scopedSlotFn) {
      // scoped slot
      props = props || {};
      if (bindObject) {
        props = extend(extend({}, bindObject), props);
      }
      return scopedSlotFn(props) || fallback;
    } else {
      var slotNodes = this.$slots[name];
      // warn duplicate slot usage
      if (slotNodes && 'production' !== 'production') {
        slotNodes._rendered && warn("Duplicate presence of slot \"" + name + "\" found in the same render tree " + "- this will likely cause render errors.", this);
        slotNodes._rendered = true;
      }
      return slotNodes || fallback;
    }
  }

  /*  */

  /**
   * Runtime helper for resolving filters
   */
  function resolveFilter(id) {
    return resolveAsset(this.$options, 'filters', id, true) || identity;
  }

  /*  */

  /**
   * Runtime helper for checking keyCodes from config.
   */
  function checkKeyCodes(eventKeyCode, key, builtInAlias) {
    var keyCodes = config.keyCodes[key] || builtInAlias;
    if (Array.isArray(keyCodes)) {
      return keyCodes.indexOf(eventKeyCode) === -1;
    } else {
      return keyCodes !== eventKeyCode;
    }
  }

  /*  */

  /**
   * Runtime helper for merging v-bind="object" into a VNode's data.
   */
  function bindObjectProps(data, tag, value, asProp, isSync) {
    if (value) {
      if (!isObject(value)) {
        'production' !== 'production' && warn('v-bind without argument expects an Object or Array value', this);
      } else {
        if (Array.isArray(value)) {
          value = toObject(value);
        }
        var hash;
        var loop = function (key) {
          if (key === 'class' || key === 'style' || isReservedAttribute(key)) {
            hash = data;
          } else {
            var type = data.attrs && data.attrs.type;
            hash = asProp || config.mustUseProp(tag, type, key) ? data.domProps || (data.domProps = {}) : data.attrs || (data.attrs = {});
          }
          if (!(key in hash)) {
            hash[key] = value[key];

            if (isSync) {
              var on = data.on || (data.on = {});
              on["update:" + key] = function ($event) {
                value[key] = $event;
              };
            }
          }
        };

        for (var key in value) loop(key);
      }
    }
    return data;
  }

  /*  */

  /**
   * Runtime helper for rendering static trees.
   */
  function renderStatic(index, isInFor) {
    var tree = this._staticTrees[index];
    // if has already-rendered static tree and not inside v-for,
    // we can reuse the same tree by doing a shallow clone.
    if (tree && !isInFor) {
      return Array.isArray(tree) ? cloneVNodes(tree) : cloneVNode(tree);
    }
    // otherwise, render a fresh tree.
    tree = this._staticTrees[index] = this.$options.staticRenderFns[index].call(this._renderProxy);
    markStatic(tree, "__static__" + index, false);
    return tree;
  }

  /**
   * Runtime helper for v-once.
   * Effectively it means marking the node as static with a unique key.
   */
  function markOnce(tree, index, key) {
    markStatic(tree, "__once__" + index + (key ? "_" + key : ""), true);
    return tree;
  }

  function markStatic(tree, key, isOnce) {
    if (Array.isArray(tree)) {
      for (var i = 0; i < tree.length; i++) {
        if (tree[i] && typeof tree[i] !== 'string') {
          markStaticNode(tree[i], key + "_" + i, isOnce);
        }
      }
    } else {
      markStaticNode(tree, key, isOnce);
    }
  }

  function markStaticNode(node, key, isOnce) {
    node.isStatic = true;
    node.key = key;
    node.isOnce = isOnce;
  }

  /*  */

  function bindObjectListeners(data, value) {
    if (value) {
      if (!isPlainObject(value)) {
        'production' !== 'production' && warn('v-on without argument expects an Object value', this);
      } else {
        var on = data.on = data.on ? extend({}, data.on) : {};
        for (var key in value) {
          var existing = on[key];
          var ours = value[key];
          on[key] = existing ? [].concat(ours, existing) : ours;
        }
      }
    }
    return data;
  }

  /*  */

  function initRender(vm) {
    vm._vnode = null; // the root of the child tree
    vm._staticTrees = null;
    var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree
    var renderContext = parentVnode && parentVnode.context;
    vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);
    vm.$scopedSlots = emptyObject;
    // bind the createElement fn to this instance
    // so that we get proper render context inside it.
    // args order: tag, data, children, normalizationType, alwaysNormalize
    // internal version is used by render functions compiled from templates
    vm._c = function (a, b, c, d) {
      return createElement(vm, a, b, c, d, false);
    };
    // normalization is always applied for the public version, used in
    // user-written render functions.
    vm.$createElement = function (a, b, c, d) {
      return createElement(vm, a, b, c, d, true);
    };

    // $attrs & $listeners are exposed for easier HOC creation.
    // they need to be reactive so that HOCs using them are always updated
    var parentData = parentVnode && parentVnode.data;
    /* istanbul ignore else */
    if ('production' !== 'production') {
      defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, function () {
        !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
      }, true);
      defineReactive$$1(vm, '$listeners', vm.$options._parentListeners, function () {
        !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
      }, true);
    } else {
      defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, null, true);
      defineReactive$$1(vm, '$listeners', vm.$options._parentListeners, null, true);
    }
  }

  function renderMixin(Vue) {
    Vue.prototype.$nextTick = function (fn) {
      return nextTick(fn, this);
    };

    Vue.prototype._render = function () {
      var vm = this;
      var ref = vm.$options;
      var render = ref.render;
      var staticRenderFns = ref.staticRenderFns;
      var _parentVnode = ref._parentVnode;

      if (vm._isMounted) {
        // clone slot nodes on re-renders
        for (var key in vm.$slots) {
          vm.$slots[key] = cloneVNodes(vm.$slots[key]);
        }
      }

      vm.$scopedSlots = _parentVnode && _parentVnode.data.scopedSlots || emptyObject;

      if (staticRenderFns && !vm._staticTrees) {
        vm._staticTrees = [];
      }
      // set parent vnode. this allows render functions to have access
      // to the data on the placeholder node.
      vm.$vnode = _parentVnode;
      // render self
      var vnode;
      try {
        vnode = render.call(vm._renderProxy, vm.$createElement);
      } catch (e) {
        handleError(e, vm, "render function");
        // return error render result,
        // or previous vnode to prevent render error causing blank component
        /* istanbul ignore else */
        if ('production' !== 'production') {
          vnode = vm.$options.renderError ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e) : vm._vnode;
        } else {
          vnode = vm._vnode;
        }
      }
      // return empty vnode in case the render function errored out
      if (!(vnode instanceof VNode)) {
        if ('production' !== 'production' && Array.isArray(vnode)) {
          warn('Multiple root nodes returned from render function. Render function ' + 'should return a single root node.', vm);
        }
        vnode = createEmptyVNode();
      }
      // set parent
      vnode.parent = _parentVnode;
      return vnode;
    };

    // internal render helpers.
    // these are exposed on the instance prototype to reduce generated render
    // code size.
    Vue.prototype._o = markOnce;
    Vue.prototype._n = toNumber;
    Vue.prototype._s = toString;
    Vue.prototype._l = renderList;
    Vue.prototype._t = renderSlot;
    Vue.prototype._q = looseEqual;
    Vue.prototype._i = looseIndexOf;
    Vue.prototype._m = renderStatic;
    Vue.prototype._f = resolveFilter;
    Vue.prototype._k = checkKeyCodes;
    Vue.prototype._b = bindObjectProps;
    Vue.prototype._v = createTextVNode;
    Vue.prototype._e = createEmptyVNode;
    Vue.prototype._u = resolveScopedSlots;
    Vue.prototype._g = bindObjectListeners;
  }

  /*  */

  var uid$1 = 0;

  function initMixin(Vue) {
    Vue.prototype._init = function (options) {
      var vm = this;
      // a uid
      vm._uid = uid$1++;

      var startTag, endTag;
      /* istanbul ignore if */
      if ('production' !== 'production' && config.performance && mark) {
        startTag = "vue-perf-init:" + vm._uid;
        endTag = "vue-perf-end:" + vm._uid;
        mark(startTag);
      }

      // a flag to avoid this being observed
      vm._isVue = true;
      // merge options
      if (options && options._isComponent) {
        // optimize internal component instantiation
        // since dynamic options merging is pretty slow, and none of the
        // internal component options needs special treatment.
        initInternalComponent(vm, options);
      } else {
        vm.$options = mergeOptions(resolveConstructorOptions(vm.constructor), options || {}, vm);
      }
      /* istanbul ignore else */
      if ('production' !== 'production') {
        initProxy(vm);
      } else {
        vm._renderProxy = vm;
      }
      // expose real self
      vm._self = vm;
      initLifecycle(vm);
      initEvents(vm);
      initRender(vm);
      callHook(vm, 'beforeCreate');
      initInjections(vm); // resolve injections before data/props
      initState(vm);
      initProvide(vm); // resolve provide after data/props
      callHook(vm, 'created');

      /* istanbul ignore if */
      if ('production' !== 'production' && config.performance && mark) {
        vm._name = formatComponentName(vm, false);
        mark(endTag);
        measure(vm._name + " init", startTag, endTag);
      }

      if (vm.$options.el) {
        vm.$mount(vm.$options.el);
      }
    };
  }

  function initInternalComponent(vm, options) {
    var opts = vm.$options = Object.create(vm.constructor.options);
    // doing this because it's faster than dynamic enumeration.
    opts.parent = options.parent;
    opts.propsData = options.propsData;
    opts._parentVnode = options._parentVnode;
    opts._parentListeners = options._parentListeners;
    opts._renderChildren = options._renderChildren;
    opts._componentTag = options._componentTag;
    opts._parentElm = options._parentElm;
    opts._refElm = options._refElm;
    if (options.render) {
      opts.render = options.render;
      opts.staticRenderFns = options.staticRenderFns;
    }
  }

  function resolveConstructorOptions(Ctor) {
    var options = Ctor.options;
    if (Ctor.super) {
      var superOptions = resolveConstructorOptions(Ctor.super);
      var cachedSuperOptions = Ctor.superOptions;
      if (superOptions !== cachedSuperOptions) {
        // super option changed,
        // need to resolve new options.
        Ctor.superOptions = superOptions;
        // check if there are any late-modified/attached options (#4976)
        var modifiedOptions = resolveModifiedOptions(Ctor);
        // update base extend options
        if (modifiedOptions) {
          extend(Ctor.extendOptions, modifiedOptions);
        }
        options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
        if (options.name) {
          options.components[options.name] = Ctor;
        }
      }
    }
    return options;
  }

  function resolveModifiedOptions(Ctor) {
    var modified;
    var latest = Ctor.options;
    var extended = Ctor.extendOptions;
    var sealed = Ctor.sealedOptions;
    for (var key in latest) {
      if (latest[key] !== sealed[key]) {
        if (!modified) {
          modified = {};
        }
        modified[key] = dedupe(latest[key], extended[key], sealed[key]);
      }
    }
    return modified;
  }

  function dedupe(latest, extended, sealed) {
    // compare latest and sealed to ensure lifecycle hooks won't be duplicated
    // between merges
    if (Array.isArray(latest)) {
      var res = [];
      sealed = Array.isArray(sealed) ? sealed : [sealed];
      extended = Array.isArray(extended) ? extended : [extended];
      for (var i = 0; i < latest.length; i++) {
        // push original options and not sealed options to exclude duplicated options
        if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {
          res.push(latest[i]);
        }
      }
      return res;
    } else {
      return latest;
    }
  }

  function Vue$3(options) {
    if ('production' !== 'production' && !(this instanceof Vue$3)) {
      warn('Vue is a constructor and should be called with the `new` keyword');
    }
    this._init(options);
  }

  initMixin(Vue$3);
  stateMixin(Vue$3);
  eventsMixin(Vue$3);
  lifecycleMixin(Vue$3);
  renderMixin(Vue$3);

  /*  */

  function initUse(Vue) {
    Vue.use = function (plugin) {
      var installedPlugins = this._installedPlugins || (this._installedPlugins = []);
      if (installedPlugins.indexOf(plugin) > -1) {
        return this;
      }

      // additional parameters
      var args = toArray(arguments, 1);
      args.unshift(this);
      if (typeof plugin.install === 'function') {
        plugin.install.apply(plugin, args);
      } else if (typeof plugin === 'function') {
        plugin.apply(null, args);
      }
      installedPlugins.push(plugin);
      return this;
    };
  }

  /*  */

  function initMixin$1(Vue) {
    Vue.mixin = function (mixin) {
      this.options = mergeOptions(this.options, mixin);
      return this;
    };
  }

  /*  */

  function initExtend(Vue) {
    /**
     * Each instance constructor, including Vue, has a unique
     * cid. This enables us to create wrapped "child
     * constructors" for prototypal inheritance and cache them.
     */
    Vue.cid = 0;
    var cid = 1;

    /**
     * Class inheritance
     */
    Vue.extend = function (extendOptions) {
      extendOptions = extendOptions || {};
      var Super = this;
      var SuperId = Super.cid;
      var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
      if (cachedCtors[SuperId]) {
        return cachedCtors[SuperId];
      }

      var name = extendOptions.name || Super.options.name;
      if ('production' !== 'production') {
        if (!/^[a-zA-Z][\w-]*$/.test(name)) {
          warn('Invalid component name: "' + name + '". Component names ' + 'can only contain alphanumeric characters and the hyphen, ' + 'and must start with a letter.');
        }
      }

      var Sub = function VueComponent(options) {
        this._init(options);
      };
      Sub.prototype = Object.create(Super.prototype);
      Sub.prototype.constructor = Sub;
      Sub.cid = cid++;
      Sub.options = mergeOptions(Super.options, extendOptions);
      Sub['super'] = Super;

      // For props and computed properties, we define the proxy getters on
      // the Vue instances at extension time, on the extended prototype. This
      // avoids Object.defineProperty calls for each instance created.
      if (Sub.options.props) {
        initProps$1(Sub);
      }
      if (Sub.options.computed) {
        initComputed$1(Sub);
      }

      // allow further extension/mixin/plugin usage
      Sub.extend = Super.extend;
      Sub.mixin = Super.mixin;
      Sub.use = Super.use;

      // create asset registers, so extended classes
      // can have their private assets too.
      ASSET_TYPES.forEach(function (type) {
        Sub[type] = Super[type];
      });
      // enable recursive self-lookup
      if (name) {
        Sub.options.components[name] = Sub;
      }

      // keep a reference to the super options at extension time.
      // later at instantiation we can check if Super's options have
      // been updated.
      Sub.superOptions = Super.options;
      Sub.extendOptions = extendOptions;
      Sub.sealedOptions = extend({}, Sub.options);

      // cache constructor
      cachedCtors[SuperId] = Sub;
      return Sub;
    };
  }

  function initProps$1(Comp) {
    var props = Comp.options.props;
    for (var key in props) {
      proxy(Comp.prototype, "_props", key);
    }
  }

  function initComputed$1(Comp) {
    var computed = Comp.options.computed;
    for (var key in computed) {
      defineComputed(Comp.prototype, key, computed[key]);
    }
  }

  /*  */

  function initAssetRegisters(Vue) {
    /**
     * Create asset registration methods.
     */
    ASSET_TYPES.forEach(function (type) {
      Vue[type] = function (id, definition) {
        if (!definition) {
          return this.options[type + 's'][id];
        } else {
          /* istanbul ignore if */
          if ('production' !== 'production') {
            if (type === 'component' && config.isReservedTag(id)) {
              warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);
            }
          }
          if (type === 'component' && isPlainObject(definition)) {
            definition.name = definition.name || id;
            definition = this.options._base.extend(definition);
          }
          if (type === 'directive' && typeof definition === 'function') {
            definition = { bind: definition, update: definition };
          }
          this.options[type + 's'][id] = definition;
          return definition;
        }
      };
    });
  }

  /*  */

  var patternTypes = [String, RegExp, Array];

  function getComponentName(opts) {
    return opts && (opts.Ctor.options.name || opts.tag);
  }

  function matches(pattern, name) {
    if (Array.isArray(pattern)) {
      return pattern.indexOf(name) > -1;
    } else if (typeof pattern === 'string') {
      return pattern.split(',').indexOf(name) > -1;
    } else if (isRegExp(pattern)) {
      return pattern.test(name);
    }
    /* istanbul ignore next */
    return false;
  }

  function pruneCache(cache, current, filter) {
    for (var key in cache) {
      var cachedNode = cache[key];
      if (cachedNode) {
        var name = getComponentName(cachedNode.componentOptions);
        if (name && !filter(name)) {
          if (cachedNode !== current) {
            pruneCacheEntry(cachedNode);
          }
          cache[key] = null;
        }
      }
    }
  }

  function pruneCacheEntry(vnode) {
    if (vnode) {
      vnode.componentInstance.$destroy();
    }
  }

  var KeepAlive = {
    name: 'keep-alive',
    abstract: true,

    props: {
      include: patternTypes,
      exclude: patternTypes
    },

    created: function created() {
      this.cache = Object.create(null);
    },

    destroyed: function destroyed() {
      var this$1 = this;

      for (var key in this$1.cache) {
        pruneCacheEntry(this$1.cache[key]);
      }
    },

    watch: {
      include: function include(val) {
        pruneCache(this.cache, this._vnode, function (name) {
          return matches(val, name);
        });
      },
      exclude: function exclude(val) {
        pruneCache(this.cache, this._vnode, function (name) {
          return !matches(val, name);
        });
      }
    },

    render: function render() {
      var vnode = getFirstComponentChild(this.$slots.default);
      var componentOptions = vnode && vnode.componentOptions;
      if (componentOptions) {
        // check pattern
        var name = getComponentName(componentOptions);
        if (name && (this.include && !matches(this.include, name) || this.exclude && matches(this.exclude, name))) {
          return vnode;
        }
        var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? "::" + componentOptions.tag : '') : vnode.key;
        if (this.cache[key]) {
          vnode.componentInstance = this.cache[key].componentInstance;
        } else {
          this.cache[key] = vnode;
        }
        vnode.data.keepAlive = true;
      }
      return vnode;
    }
  };

  var builtInComponents = {
    KeepAlive: KeepAlive
  };

  /*  */

  function initGlobalAPI(Vue) {
    // config
    var configDef = {};
    configDef.get = function () {
      return config;
    };
    if ('production' !== 'production') {
      configDef.set = function () {
        warn('Do not replace the Vue.config object, set individual fields instead.');
      };
    }
    Object.defineProperty(Vue, 'config', configDef);

    // exposed util methods.
    // NOTE: these are not considered part of the public API - avoid relying on
    // them unless you are aware of the risk.
    Vue.util = {
      warn: warn,
      extend: extend,
      mergeOptions: mergeOptions,
      defineReactive: defineReactive$$1
    };

    Vue.set = set;
    Vue.delete = del;
    Vue.nextTick = nextTick;

    Vue.options = Object.create(null);
    ASSET_TYPES.forEach(function (type) {
      Vue.options[type + 's'] = Object.create(null);
    });

    // this is used to identify the "base" constructor to extend all plain-object
    // components with in Weex's multi-instance scenarios.
    Vue.options._base = Vue;

    extend(Vue.options.components, builtInComponents);

    initUse(Vue);
    initMixin$1(Vue);
    initExtend(Vue);
    initAssetRegisters(Vue);
  }

  initGlobalAPI(Vue$3);

  Object.defineProperty(Vue$3.prototype, '$isServer', {
    get: isServerRendering
  });

  Object.defineProperty(Vue$3.prototype, '$ssrContext', {
    get: function get() {
      /* istanbul ignore next */
      return this.$vnode && this.$vnode.ssrContext;
    }
  });

  Vue$3.version = '2.4.2';

  /*  */

  // these are reserved for web because they are directly compiled away
  // during template compilation
  var isReservedAttr = makeMap('style,class');

  // attributes that should be using props for binding
  var acceptValue = makeMap('input,textarea,option,select');
  var mustUseProp = function (tag, type, attr) {
    return attr === 'value' && acceptValue(tag) && type !== 'button' || attr === 'selected' && tag === 'option' || attr === 'checked' && tag === 'input' || attr === 'muted' && tag === 'video';
  };

  var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

  var isBooleanAttr = makeMap('allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' + 'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' + 'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' + 'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' + 'required,reversed,scoped,seamless,selected,sortable,translate,' + 'truespeed,typemustmatch,visible');

  var xlinkNS = 'http://www.w3.org/1999/xlink';

  var isXlink = function (name) {
    return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink';
  };

  var getXlinkProp = function (name) {
    return isXlink(name) ? name.slice(6, name.length) : '';
  };

  var isFalsyAttrValue = function (val) {
    return val == null || val === false;
  };

  /*  */

  function genClassForVnode(vnode) {
    var data = vnode.data;
    var parentNode = vnode;
    var childNode = vnode;
    while (isDef(childNode.componentInstance)) {
      childNode = childNode.componentInstance._vnode;
      if (childNode.data) {
        data = mergeClassData(childNode.data, data);
      }
    }
    while (isDef(parentNode = parentNode.parent)) {
      if (parentNode.data) {
        data = mergeClassData(data, parentNode.data);
      }
    }
    return renderClass(data.staticClass, data.class);
  }

  function mergeClassData(child, parent) {
    return {
      staticClass: concat(child.staticClass, parent.staticClass),
      class: isDef(child.class) ? [child.class, parent.class] : parent.class
    };
  }

  function renderClass(staticClass, dynamicClass) {
    if (isDef(staticClass) || isDef(dynamicClass)) {
      return concat(staticClass, stringifyClass(dynamicClass));
    }
    /* istanbul ignore next */
    return '';
  }

  function concat(a, b) {
    return a ? b ? a + ' ' + b : a : b || '';
  }

  function stringifyClass(value) {
    if (Array.isArray(value)) {
      return stringifyArray(value);
    }
    if (isObject(value)) {
      return stringifyObject(value);
    }
    if (typeof value === 'string') {
      return value;
    }
    /* istanbul ignore next */
    return '';
  }

  function stringifyArray(value) {
    var res = '';
    var stringified;
    for (var i = 0, l = value.length; i < l; i++) {
      if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
        if (res) {
          res += ' ';
        }
        res += stringified;
      }
    }
    return res;
  }

  function stringifyObject(value) {
    var res = '';
    for (var key in value) {
      if (value[key]) {
        if (res) {
          res += ' ';
        }
        res += key;
      }
    }
    return res;
  }

  /*  */

  var namespaceMap = {
    svg: 'http://www.w3.org/2000/svg',
    math: 'http://www.w3.org/1998/Math/MathML'
  };

  var isHTMLTag = makeMap('html,body,base,head,link,meta,style,title,' + 'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' + 'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' + 'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' + 's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' + 'embed,object,param,source,canvas,script,noscript,del,ins,' + 'caption,col,colgroup,table,thead,tbody,td,th,tr,' + 'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' + 'output,progress,select,textarea,' + 'details,dialog,menu,menuitem,summary,' + 'content,element,shadow,template,blockquote,iframe,tfoot');

  // this map is intentionally selective, only covering SVG elements that may
  // contain child elements.
  var isSVG = makeMap('svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' + 'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' + 'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view', true);

  var isPreTag = function (tag) {
    return tag === 'pre';
  };

  var isReservedTag = function (tag) {
    return isHTMLTag(tag) || isSVG(tag);
  };

  function getTagNamespace(tag) {
    if (isSVG(tag)) {
      return 'svg';
    }
    // basic support for MathML
    // note it doesn't support other MathML elements being component roots
    if (tag === 'math') {
      return 'math';
    }
  }

  var unknownElementCache = Object.create(null);
  function isUnknownElement(tag) {
    /* istanbul ignore if */
    if (!inBrowser) {
      return true;
    }
    if (isReservedTag(tag)) {
      return false;
    }
    tag = tag.toLowerCase();
    /* istanbul ignore if */
    if (unknownElementCache[tag] != null) {
      return unknownElementCache[tag];
    }
    var el = document.createElement(tag);
    if (tag.indexOf('-') > -1) {
      // http://stackoverflow.com/a/28210364/1070244
      return unknownElementCache[tag] = el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;
    } else {
      return unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString());
    }
  }

  /*  */

  /**
   * Query an element selector if it's not an element already.
   */
  function query(el) {
    if (typeof el === 'string') {
      var selected = document.querySelector(el);
      if (!selected) {
        'production' !== 'production' && warn('Cannot find element: ' + el);
        return document.createElement('div');
      }
      return selected;
    } else {
      return el;
    }
  }

  /*  */

  function createElement$1(tagName, vnode) {
    var elm = document.createElement(tagName);
    if (tagName !== 'select') {
      return elm;
    }
    // false or null will remove the attribute but undefined will not
    if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
      elm.setAttribute('multiple', 'multiple');
    }
    return elm;
  }

  function createElementNS(namespace, tagName) {
    return document.createElementNS(namespaceMap[namespace], tagName);
  }

  function createTextNode(text) {
    return document.createTextNode(text);
  }

  function createComment(text) {
    return document.createComment(text);
  }

  function insertBefore(parentNode, newNode, referenceNode) {
    parentNode.insertBefore(newNode, referenceNode);
  }

  function removeChild(node, child) {
    node.removeChild(child);
  }

  function appendChild(node, child) {
    node.appendChild(child);
  }

  function parentNode(node) {
    return node.parentNode;
  }

  function nextSibling(node) {
    return node.nextSibling;
  }

  function tagName(node) {
    return node.tagName;
  }

  function setTextContent(node, text) {
    node.textContent = text;
  }

  function setAttribute(node, key, val) {
    node.setAttribute(key, val);
  }

  var nodeOps = Object.freeze({
    createElement: createElement$1,
    createElementNS: createElementNS,
    createTextNode: createTextNode,
    createComment: createComment,
    insertBefore: insertBefore,
    removeChild: removeChild,
    appendChild: appendChild,
    parentNode: parentNode,
    nextSibling: nextSibling,
    tagName: tagName,
    setTextContent: setTextContent,
    setAttribute: setAttribute
  });

  /*  */

  var ref = {
    create: function create(_, vnode) {
      registerRef(vnode);
    },
    update: function update(oldVnode, vnode) {
      if (oldVnode.data.ref !== vnode.data.ref) {
        registerRef(oldVnode, true);
        registerRef(vnode);
      }
    },
    destroy: function destroy(vnode) {
      registerRef(vnode, true);
    }
  };

  function registerRef(vnode, isRemoval) {
    var key = vnode.data.ref;
    if (!key) {
      return;
    }

    var vm = vnode.context;
    var ref = vnode.componentInstance || vnode.elm;
    var refs = vm.$refs;
    if (isRemoval) {
      if (Array.isArray(refs[key])) {
        remove(refs[key], ref);
      } else if (refs[key] === ref) {
        refs[key] = undefined;
      }
    } else {
      if (vnode.data.refInFor) {
        if (!Array.isArray(refs[key])) {
          refs[key] = [ref];
        } else if (refs[key].indexOf(ref) < 0) {
          // $flow-disable-line
          refs[key].push(ref);
        }
      } else {
        refs[key] = ref;
      }
    }
  }

  /**
   * Virtual DOM patching algorithm based on Snabbdom by
   * Simon Friis Vindum (@paldepind)
   * Licensed under the MIT License
   * https://github.com/paldepind/snabbdom/blob/master/LICENSE
   *
   * modified by Evan You (@yyx990803)
   *
  
  /*
   * Not type-checking this because this file is perf-critical and the cost
   * of making flow understand it is not worth it.
   */

  var emptyNode = new VNode('', {}, []);

  var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

  function sameVnode(a, b) {
    return a.key === b.key && (a.tag === b.tag && a.isComment === b.isComment && isDef(a.data) === isDef(b.data) && sameInputType(a, b) || isTrue(a.isAsyncPlaceholder) && a.asyncFactory === b.asyncFactory && isUndef(b.asyncFactory.error));
  }

  // Some browsers do not support dynamically changing type for <input>
  // so they need to be treated as different nodes
  function sameInputType(a, b) {
    if (a.tag !== 'input') {
      return true;
    }
    var i;
    var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
    var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
    return typeA === typeB;
  }

  function createKeyToOldIdx(children, beginIdx, endIdx) {
    var i, key;
    var map = {};
    for (i = beginIdx; i <= endIdx; ++i) {
      key = children[i].key;
      if (isDef(key)) {
        map[key] = i;
      }
    }
    return map;
  }

  function createPatchFunction(backend) {
    var i, j;
    var cbs = {};

    var modules = backend.modules;
    var nodeOps = backend.nodeOps;

    for (i = 0; i < hooks.length; ++i) {
      cbs[hooks[i]] = [];
      for (j = 0; j < modules.length; ++j) {
        if (isDef(modules[j][hooks[i]])) {
          cbs[hooks[i]].push(modules[j][hooks[i]]);
        }
      }
    }

    function emptyNodeAt(elm) {
      return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm);
    }

    function createRmCb(childElm, listeners) {
      function remove$$1() {
        if (--remove$$1.listeners === 0) {
          removeNode(childElm);
        }
      }
      remove$$1.listeners = listeners;
      return remove$$1;
    }

    function removeNode(el) {
      var parent = nodeOps.parentNode(el);
      // element may have already been removed due to v-html / v-text
      if (isDef(parent)) {
        nodeOps.removeChild(parent, el);
      }
    }

    var inPre = 0;
    function createElm(vnode, insertedVnodeQueue, parentElm, refElm, nested) {
      vnode.isRootInsert = !nested; // for transition enter check
      if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
        return;
      }

      var data = vnode.data;
      var children = vnode.children;
      var tag = vnode.tag;
      if (isDef(tag)) {
        if ('production' !== 'production') {
          if (data && data.pre) {
            inPre++;
          }
          if (!inPre && !vnode.ns && !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) && config.isUnknownElement(tag)) {
            warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the "name" option.', vnode.context);
          }
        }
        vnode.elm = vnode.ns ? nodeOps.createElementNS(vnode.ns, tag) : nodeOps.createElement(tag, vnode);
        setScope(vnode);

        /* istanbul ignore if */
        {
          createChildren(vnode, children, insertedVnodeQueue);
          if (isDef(data)) {
            invokeCreateHooks(vnode, insertedVnodeQueue);
          }
          insert(parentElm, vnode.elm, refElm);
        }

        if ('production' !== 'production' && data && data.pre) {
          inPre--;
        }
      } else if (isTrue(vnode.isComment)) {
        vnode.elm = nodeOps.createComment(vnode.text);
        insert(parentElm, vnode.elm, refElm);
      } else {
        vnode.elm = nodeOps.createTextNode(vnode.text);
        insert(parentElm, vnode.elm, refElm);
      }
    }

    function createComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
      var i = vnode.data;
      if (isDef(i)) {
        var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
        if (isDef(i = i.hook) && isDef(i = i.init)) {
          i(vnode, false /* hydrating */, parentElm, refElm);
        }
        // after calling the init hook, if the vnode is a child component
        // it should've created a child instance and mounted it. the child
        // component also has set the placeholder vnode's elm.
        // in that case we can just return the element and be done.
        if (isDef(vnode.componentInstance)) {
          initComponent(vnode, insertedVnodeQueue);
          if (isTrue(isReactivated)) {
            reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
          }
          return true;
        }
      }
    }

    function initComponent(vnode, insertedVnodeQueue) {
      if (isDef(vnode.data.pendingInsert)) {
        insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
        vnode.data.pendingInsert = null;
      }
      vnode.elm = vnode.componentInstance.$el;
      if (isPatchable(vnode)) {
        invokeCreateHooks(vnode, insertedVnodeQueue);
        setScope(vnode);
      } else {
        // empty component root.
        // skip all element-related modules except for ref (#3455)
        registerRef(vnode);
        // make sure to invoke the insert hook
        insertedVnodeQueue.push(vnode);
      }
    }

    function reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
      var i;
      // hack for #4339: a reactivated component with inner transition
      // does not trigger because the inner node's created hooks are not called
      // again. It's not ideal to involve module-specific logic in here but
      // there doesn't seem to be a better way to do it.
      var innerNode = vnode;
      while (innerNode.componentInstance) {
        innerNode = innerNode.componentInstance._vnode;
        if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
          for (i = 0; i < cbs.activate.length; ++i) {
            cbs.activate[i](emptyNode, innerNode);
          }
          insertedVnodeQueue.push(innerNode);
          break;
        }
      }
      // unlike a newly created component,
      // a reactivated keep-alive component doesn't insert itself
      insert(parentElm, vnode.elm, refElm);
    }

    function insert(parent, elm, ref$$1) {
      if (isDef(parent)) {
        if (isDef(ref$$1)) {
          if (ref$$1.parentNode === parent) {
            nodeOps.insertBefore(parent, elm, ref$$1);
          }
        } else {
          nodeOps.appendChild(parent, elm);
        }
      }
    }

    function createChildren(vnode, children, insertedVnodeQueue) {
      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; ++i) {
          createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);
        }
      } else if (isPrimitive(vnode.text)) {
        nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));
      }
    }

    function isPatchable(vnode) {
      while (vnode.componentInstance) {
        vnode = vnode.componentInstance._vnode;
      }
      return isDef(vnode.tag);
    }

    function invokeCreateHooks(vnode, insertedVnodeQueue) {
      for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
        cbs.create[i$1](emptyNode, vnode);
      }
      i = vnode.data.hook; // Reuse variable
      if (isDef(i)) {
        if (isDef(i.create)) {
          i.create(emptyNode, vnode);
        }
        if (isDef(i.insert)) {
          insertedVnodeQueue.push(vnode);
        }
      }
    }

    // set scope id attribute for scoped CSS.
    // this is implemented as a special case to avoid the overhead
    // of going through the normal attribute patching process.
    function setScope(vnode) {
      var i;
      var ancestor = vnode;
      while (ancestor) {
        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
          nodeOps.setAttribute(vnode.elm, i, '');
        }
        ancestor = ancestor.parent;
      }
      // for slot content they should also get the scopeId from the host instance.
      if (isDef(i = activeInstance) && i !== vnode.context && isDef(i = i.$options._scopeId)) {
        nodeOps.setAttribute(vnode.elm, i, '');
      }
    }

    function addVnodes(parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
      for (; startIdx <= endIdx; ++startIdx) {
        createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);
      }
    }

    function invokeDestroyHook(vnode) {
      var i, j;
      var data = vnode.data;
      if (isDef(data)) {
        if (isDef(i = data.hook) && isDef(i = i.destroy)) {
          i(vnode);
        }
        for (i = 0; i < cbs.destroy.length; ++i) {
          cbs.destroy[i](vnode);
        }
      }
      if (isDef(i = vnode.children)) {
        for (j = 0; j < vnode.children.length; ++j) {
          invokeDestroyHook(vnode.children[j]);
        }
      }
    }

    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {
      for (; startIdx <= endIdx; ++startIdx) {
        var ch = vnodes[startIdx];
        if (isDef(ch)) {
          if (isDef(ch.tag)) {
            removeAndInvokeRemoveHook(ch);
            invokeDestroyHook(ch);
          } else {
            // Text node
            removeNode(ch.elm);
          }
        }
      }
    }

    function removeAndInvokeRemoveHook(vnode, rm) {
      if (isDef(rm) || isDef(vnode.data)) {
        var i;
        var listeners = cbs.remove.length + 1;
        if (isDef(rm)) {
          // we have a recursively passed down rm callback
          // increase the listeners count
          rm.listeners += listeners;
        } else {
          // directly removing
          rm = createRmCb(vnode.elm, listeners);
        }
        // recursively invoke hooks on child component root node
        if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
          removeAndInvokeRemoveHook(i, rm);
        }
        for (i = 0; i < cbs.remove.length; ++i) {
          cbs.remove[i](vnode, rm);
        }
        if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
          i(vnode, rm);
        } else {
          rm();
        }
      } else {
        removeNode(vnode.elm);
      }
    }

    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
      var oldStartIdx = 0;
      var newStartIdx = 0;
      var oldEndIdx = oldCh.length - 1;
      var oldStartVnode = oldCh[0];
      var oldEndVnode = oldCh[oldEndIdx];
      var newEndIdx = newCh.length - 1;
      var newStartVnode = newCh[0];
      var newEndVnode = newCh[newEndIdx];
      var oldKeyToIdx, idxInOld, elmToMove, refElm;

      // removeOnly is a special flag used only by <transition-group>
      // to ensure removed elements stay in correct relative positions
      // during leaving transitions
      var canMove = !removeOnly;

      while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
        if (isUndef(oldStartVnode)) {
          oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
        } else if (isUndef(oldEndVnode)) {
          oldEndVnode = oldCh[--oldEndIdx];
        } else if (sameVnode(oldStartVnode, newStartVnode)) {
          patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
          oldStartVnode = oldCh[++oldStartIdx];
          newStartVnode = newCh[++newStartIdx];
        } else if (sameVnode(oldEndVnode, newEndVnode)) {
          patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
          oldEndVnode = oldCh[--oldEndIdx];
          newEndVnode = newCh[--newEndIdx];
        } else if (sameVnode(oldStartVnode, newEndVnode)) {
          // Vnode moved right
          patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
          canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
          oldStartVnode = oldCh[++oldStartIdx];
          newEndVnode = newCh[--newEndIdx];
        } else if (sameVnode(oldEndVnode, newStartVnode)) {
          // Vnode moved left
          patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
          canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
          oldEndVnode = oldCh[--oldEndIdx];
          newStartVnode = newCh[++newStartIdx];
        } else {
          if (isUndef(oldKeyToIdx)) {
            oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
          }
          idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;
          if (isUndef(idxInOld)) {
            // New element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
            newStartVnode = newCh[++newStartIdx];
          } else {
            elmToMove = oldCh[idxInOld];
            /* istanbul ignore if */
            if ('production' !== 'production' && !elmToMove) {
              warn('It seems there are duplicate keys that is causing an update error. ' + 'Make sure each v-for item has a unique key.');
            }
            if (sameVnode(elmToMove, newStartVnode)) {
              patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);
              oldCh[idxInOld] = undefined;
              canMove && nodeOps.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);
              newStartVnode = newCh[++newStartIdx];
            } else {
              // same key but different element. treat as new element
              createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
              newStartVnode = newCh[++newStartIdx];
            }
          }
        }
      }
      if (oldStartIdx > oldEndIdx) {
        refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
        addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
      } else if (newStartIdx > newEndIdx) {
        removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
      }
    }

    function patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly) {
      if (oldVnode === vnode) {
        return;
      }

      var elm = vnode.elm = oldVnode.elm;

      if (isTrue(oldVnode.isAsyncPlaceholder)) {
        if (isDef(vnode.asyncFactory.resolved)) {
          hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
        } else {
          vnode.isAsyncPlaceholder = true;
        }
        return;
      }

      // reuse element for static trees.
      // note we only do this if the vnode is cloned -
      // if the new node is not cloned it means the render functions have been
      // reset by the hot-reload-api and we need to do a proper re-render.
      if (isTrue(vnode.isStatic) && isTrue(oldVnode.isStatic) && vnode.key === oldVnode.key && (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))) {
        vnode.componentInstance = oldVnode.componentInstance;
        return;
      }

      var i;
      var data = vnode.data;
      if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
        i(oldVnode, vnode);
      }

      var oldCh = oldVnode.children;
      var ch = vnode.children;
      if (isDef(data) && isPatchable(vnode)) {
        for (i = 0; i < cbs.update.length; ++i) {
          cbs.update[i](oldVnode, vnode);
        }
        if (isDef(i = data.hook) && isDef(i = i.update)) {
          i(oldVnode, vnode);
        }
      }
      if (isUndef(vnode.text)) {
        if (isDef(oldCh) && isDef(ch)) {
          if (oldCh !== ch) {
            updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly);
          }
        } else if (isDef(ch)) {
          if (isDef(oldVnode.text)) {
            nodeOps.setTextContent(elm, '');
          }
          addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
        } else if (isDef(oldCh)) {
          removeVnodes(elm, oldCh, 0, oldCh.length - 1);
        } else if (isDef(oldVnode.text)) {
          nodeOps.setTextContent(elm, '');
        }
      } else if (oldVnode.text !== vnode.text) {
        nodeOps.setTextContent(elm, vnode.text);
      }
      if (isDef(data)) {
        if (isDef(i = data.hook) && isDef(i = i.postpatch)) {
          i(oldVnode, vnode);
        }
      }
    }

    function invokeInsertHook(vnode, queue, initial) {
      // delay insert hooks for component root nodes, invoke them after the
      // element is really inserted
      if (isTrue(initial) && isDef(vnode.parent)) {
        vnode.parent.data.pendingInsert = queue;
      } else {
        for (var i = 0; i < queue.length; ++i) {
          queue[i].data.hook.insert(queue[i]);
        }
      }
    }

    var bailed = false;
    // list of modules that can skip create hook during hydration because they
    // are already rendered on the client or has no need for initialization
    var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');

    // Note: this is a browser-only function so we can assume elms are DOM nodes.
    function hydrate(elm, vnode, insertedVnodeQueue) {
      if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
        vnode.elm = elm;
        vnode.isAsyncPlaceholder = true;
        return true;
      }
      if ('production' !== 'production') {
        if (!assertNodeMatch(elm, vnode)) {
          return false;
        }
      }
      vnode.elm = elm;
      var tag = vnode.tag;
      var data = vnode.data;
      var children = vnode.children;
      if (isDef(data)) {
        if (isDef(i = data.hook) && isDef(i = i.init)) {
          i(vnode, true /* hydrating */);
        }
        if (isDef(i = vnode.componentInstance)) {
          // child component. it should have hydrated its own tree.
          initComponent(vnode, insertedVnodeQueue);
          return true;
        }
      }
      if (isDef(tag)) {
        if (isDef(children)) {
          // empty element, allow client to pick up and populate children
          if (!elm.hasChildNodes()) {
            createChildren(vnode, children, insertedVnodeQueue);
          } else {
            var childrenMatch = true;
            var childNode = elm.firstChild;
            for (var i$1 = 0; i$1 < children.length; i$1++) {
              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {
                childrenMatch = false;
                break;
              }
              childNode = childNode.nextSibling;
            }
            // if childNode is not null, it means the actual childNodes list is
            // longer than the virtual children list.
            if (!childrenMatch || childNode) {
              if ('production' !== 'production' && typeof console !== 'undefined' && !bailed) {
                bailed = true;
                console.warn('Parent: ', elm);
                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
              }
              return false;
            }
          }
        }
        if (isDef(data)) {
          for (var key in data) {
            if (!isRenderedModule(key)) {
              invokeCreateHooks(vnode, insertedVnodeQueue);
              break;
            }
          }
        }
      } else if (elm.data !== vnode.text) {
        elm.data = vnode.text;
      }
      return true;
    }

    function assertNodeMatch(node, vnode) {
      if (isDef(vnode.tag)) {
        return vnode.tag.indexOf('vue-component') === 0 || vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase());
      } else {
        return node.nodeType === (vnode.isComment ? 8 : 3);
      }
    }

    return function patch(oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {
      if (isUndef(vnode)) {
        if (isDef(oldVnode)) {
          invokeDestroyHook(oldVnode);
        }
        return;
      }

      var isInitialPatch = false;
      var insertedVnodeQueue = [];

      if (isUndef(oldVnode)) {
        // empty mount (likely as component), create new root element
        isInitialPatch = true;
        createElm(vnode, insertedVnodeQueue, parentElm, refElm);
      } else {
        var isRealElement = isDef(oldVnode.nodeType);
        if (!isRealElement && sameVnode(oldVnode, vnode)) {
          // patch existing root node
          patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);
        } else {
          if (isRealElement) {
            // mounting to a real element
            // check if this is server-rendered content and if we can perform
            // a successful hydration.
            if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
              oldVnode.removeAttribute(SSR_ATTR);
              hydrating = true;
            }
            if (isTrue(hydrating)) {
              if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
                invokeInsertHook(vnode, insertedVnodeQueue, true);
                return oldVnode;
              } else if ('production' !== 'production') {
                warn('The client-side rendered virtual DOM tree is not matching ' + 'server-rendered content. This is likely caused by incorrect ' + 'HTML markup, for example nesting block-level elements inside ' + '<p>, or missing <tbody>. Bailing hydration and performing ' + 'full client-side render.');
              }
            }
            // either not server-rendered, or hydration failed.
            // create an empty node and replace it
            oldVnode = emptyNodeAt(oldVnode);
          }
          // replacing existing element
          var oldElm = oldVnode.elm;
          var parentElm$1 = nodeOps.parentNode(oldElm);
          createElm(vnode, insertedVnodeQueue,
          // extremely rare edge case: do not insert if old element is in a
          // leaving transition. Only happens when combining transition +
          // keep-alive + HOCs. (#4590)
          oldElm._leaveCb ? null : parentElm$1, nodeOps.nextSibling(oldElm));

          if (isDef(vnode.parent)) {
            // component root element replaced.
            // update parent placeholder node element, recursively
            var ancestor = vnode.parent;
            while (ancestor) {
              ancestor.elm = vnode.elm;
              ancestor = ancestor.parent;
            }
            if (isPatchable(vnode)) {
              for (var i = 0; i < cbs.create.length; ++i) {
                cbs.create[i](emptyNode, vnode.parent);
              }
            }
          }

          if (isDef(parentElm$1)) {
            removeVnodes(parentElm$1, [oldVnode], 0, 0);
          } else if (isDef(oldVnode.tag)) {
            invokeDestroyHook(oldVnode);
          }
        }
      }

      invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
      return vnode.elm;
    };
  }

  /*  */

  var directives = {
    create: updateDirectives,
    update: updateDirectives,
    destroy: function unbindDirectives(vnode) {
      updateDirectives(vnode, emptyNode);
    }
  };

  function updateDirectives(oldVnode, vnode) {
    if (oldVnode.data.directives || vnode.data.directives) {
      _update(oldVnode, vnode);
    }
  }

  function _update(oldVnode, vnode) {
    var isCreate = oldVnode === emptyNode;
    var isDestroy = vnode === emptyNode;
    var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
    var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

    var dirsWithInsert = [];
    var dirsWithPostpatch = [];

    var key, oldDir, dir;
    for (key in newDirs) {
      oldDir = oldDirs[key];
      dir = newDirs[key];
      if (!oldDir) {
        // new directive, bind
        callHook$1(dir, 'bind', vnode, oldVnode);
        if (dir.def && dir.def.inserted) {
          dirsWithInsert.push(dir);
        }
      } else {
        // existing directive, update
        dir.oldValue = oldDir.value;
        callHook$1(dir, 'update', vnode, oldVnode);
        if (dir.def && dir.def.componentUpdated) {
          dirsWithPostpatch.push(dir);
        }
      }
    }

    if (dirsWithInsert.length) {
      var callInsert = function () {
        for (var i = 0; i < dirsWithInsert.length; i++) {
          callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
        }
      };
      if (isCreate) {
        mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);
      } else {
        callInsert();
      }
    }

    if (dirsWithPostpatch.length) {
      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {
        for (var i = 0; i < dirsWithPostpatch.length; i++) {
          callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
        }
      });
    }

    if (!isCreate) {
      for (key in oldDirs) {
        if (!newDirs[key]) {
          // no longer present, unbind
          callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
        }
      }
    }
  }

  var emptyModifiers = Object.create(null);

  function normalizeDirectives$1(dirs, vm) {
    var res = Object.create(null);
    if (!dirs) {
      return res;
    }
    var i, dir;
    for (i = 0; i < dirs.length; i++) {
      dir = dirs[i];
      if (!dir.modifiers) {
        dir.modifiers = emptyModifiers;
      }
      res[getRawDirName(dir)] = dir;
      dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
    }
    return res;
  }

  function getRawDirName(dir) {
    return dir.rawName || dir.name + "." + Object.keys(dir.modifiers || {}).join('.');
  }

  function callHook$1(dir, hook, vnode, oldVnode, isDestroy) {
    var fn = dir.def && dir.def[hook];
    if (fn) {
      try {
        fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
      } catch (e) {
        handleError(e, vnode.context, "directive " + dir.name + " " + hook + " hook");
      }
    }
  }

  var baseModules = [ref, directives];

  /*  */

  function updateAttrs(oldVnode, vnode) {
    var opts = vnode.componentOptions;
    if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
      return;
    }
    if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
      return;
    }
    var key, cur, old;
    var elm = vnode.elm;
    var oldAttrs = oldVnode.data.attrs || {};
    var attrs = vnode.data.attrs || {};
    // clone observed objects, as the user probably wants to mutate it
    if (isDef(attrs.__ob__)) {
      attrs = vnode.data.attrs = extend({}, attrs);
    }

    for (key in attrs) {
      cur = attrs[key];
      old = oldAttrs[key];
      if (old !== cur) {
        setAttr(elm, key, cur);
      }
    }
    // #4391: in IE9, setting type can reset value for input[type=radio]
    /* istanbul ignore if */
    if (isIE9 && attrs.value !== oldAttrs.value) {
      setAttr(elm, 'value', attrs.value);
    }
    for (key in oldAttrs) {
      if (isUndef(attrs[key])) {
        if (isXlink(key)) {
          elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
        } else if (!isEnumeratedAttr(key)) {
          elm.removeAttribute(key);
        }
      }
    }
  }

  function setAttr(el, key, value) {
    if (isBooleanAttr(key)) {
      // set attribute for blank value
      // e.g. <option disabled>Select one</option>
      if (isFalsyAttrValue(value)) {
        el.removeAttribute(key);
      } else {
        el.setAttribute(key, key);
      }
    } else if (isEnumeratedAttr(key)) {
      el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');
    } else if (isXlink(key)) {
      if (isFalsyAttrValue(value)) {
        el.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else {
        el.setAttributeNS(xlinkNS, key, value);
      }
    } else {
      if (isFalsyAttrValue(value)) {
        el.removeAttribute(key);
      } else {
        el.setAttribute(key, value);
      }
    }
  }

  var attrs = {
    create: updateAttrs,
    update: updateAttrs
  };

  /*  */

  function updateClass(oldVnode, vnode) {
    var el = vnode.elm;
    var data = vnode.data;
    var oldData = oldVnode.data;
    if (isUndef(data.staticClass) && isUndef(data.class) && (isUndef(oldData) || isUndef(oldData.staticClass) && isUndef(oldData.class))) {
      return;
    }

    var cls = genClassForVnode(vnode);

    // handle transition classes
    var transitionClass = el._transitionClasses;
    if (isDef(transitionClass)) {
      cls = concat(cls, stringifyClass(transitionClass));
    }

    // set the class
    if (cls !== el._prevClass) {
      el.setAttribute('class', cls);
      el._prevClass = cls;
    }
  }

  var klass = {
    create: updateClass,
    update: updateClass
  };

  /*  */

  var validDivisionCharRE = /[\w).+\-_$\]]/;

  function parseFilters(exp) {
    var inSingle = false;
    var inDouble = false;
    var inTemplateString = false;
    var inRegex = false;
    var curly = 0;
    var square = 0;
    var paren = 0;
    var lastFilterIndex = 0;
    var c, prev, i, expression, filters;

    for (i = 0; i < exp.length; i++) {
      prev = c;
      c = exp.charCodeAt(i);
      if (inSingle) {
        if (c === 0x27 && prev !== 0x5C) {
          inSingle = false;
        }
      } else if (inDouble) {
        if (c === 0x22 && prev !== 0x5C) {
          inDouble = false;
        }
      } else if (inTemplateString) {
        if (c === 0x60 && prev !== 0x5C) {
          inTemplateString = false;
        }
      } else if (inRegex) {
        if (c === 0x2f && prev !== 0x5C) {
          inRegex = false;
        }
      } else if (c === 0x7C && // pipe
      exp.charCodeAt(i + 1) !== 0x7C && exp.charCodeAt(i - 1) !== 0x7C && !curly && !square && !paren) {
        if (expression === undefined) {
          // first filter, end of expression
          lastFilterIndex = i + 1;
          expression = exp.slice(0, i).trim();
        } else {
          pushFilter();
        }
      } else {
        switch (c) {
          case 0x22:
            inDouble = true;break; // "
          case 0x27:
            inSingle = true;break; // '
          case 0x60:
            inTemplateString = true;break; // `
          case 0x28:
            paren++;break; // (
          case 0x29:
            paren--;break; // )
          case 0x5B:
            square++;break; // [
          case 0x5D:
            square--;break; // ]
          case 0x7B:
            curly++;break; // {
          case 0x7D:
            curly--;break; // }
        }
        if (c === 0x2f) {
          // /
          var j = i - 1;
          var p = void 0;
          // find first non-whitespace prev char
          for (; j >= 0; j--) {
            p = exp.charAt(j);
            if (p !== ' ') {
              break;
            }
          }
          if (!p || !validDivisionCharRE.test(p)) {
            inRegex = true;
          }
        }
      }
    }

    if (expression === undefined) {
      expression = exp.slice(0, i).trim();
    } else if (lastFilterIndex !== 0) {
      pushFilter();
    }

    function pushFilter() {
      (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
      lastFilterIndex = i + 1;
    }

    if (filters) {
      for (i = 0; i < filters.length; i++) {
        expression = wrapFilter(expression, filters[i]);
      }
    }

    return expression;
  }

  function wrapFilter(exp, filter) {
    var i = filter.indexOf('(');
    if (i < 0) {
      // _f: resolveFilter
      return "_f(\"" + filter + "\")(" + exp + ")";
    } else {
      var name = filter.slice(0, i);
      var args = filter.slice(i + 1);
      return "_f(\"" + name + "\")(" + exp + "," + args;
    }
  }

  /*  */

  function baseWarn(msg) {
    console.error("[Vue compiler]: " + msg);
  }

  function pluckModuleFunction(modules, key) {
    return modules ? modules.map(function (m) {
      return m[key];
    }).filter(function (_) {
      return _;
    }) : [];
  }

  function addProp(el, name, value) {
    (el.props || (el.props = [])).push({ name: name, value: value });
  }

  function addAttr(el, name, value) {
    (el.attrs || (el.attrs = [])).push({ name: name, value: value });
  }

  function addDirective(el, name, rawName, value, arg, modifiers) {
    (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });
  }

  function addHandler(el, name, value, modifiers, important, warn) {
    // warn prevent and passive modifier
    /* istanbul ignore if */
    if ('production' !== 'production' && warn && modifiers && modifiers.prevent && modifiers.passive) {
      warn('passive and prevent can\'t be used together. ' + 'Passive handler can\'t prevent default event.');
    }
    // check capture modifier
    if (modifiers && modifiers.capture) {
      delete modifiers.capture;
      name = '!' + name; // mark the event as captured
    }
    if (modifiers && modifiers.once) {
      delete modifiers.once;
      name = '~' + name; // mark the event as once
    }
    /* istanbul ignore if */
    if (modifiers && modifiers.passive) {
      delete modifiers.passive;
      name = '&' + name; // mark the event as passive
    }
    var events;
    if (modifiers && modifiers.native) {
      delete modifiers.native;
      events = el.nativeEvents || (el.nativeEvents = {});
    } else {
      events = el.events || (el.events = {});
    }
    var newHandler = { value: value, modifiers: modifiers };
    var handlers = events[name];
    /* istanbul ignore if */
    if (Array.isArray(handlers)) {
      important ? handlers.unshift(newHandler) : handlers.push(newHandler);
    } else if (handlers) {
      events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
    } else {
      events[name] = newHandler;
    }
  }

  function getBindingAttr(el, name, getStatic) {
    var dynamicValue = getAndRemoveAttr(el, ':' + name) || getAndRemoveAttr(el, 'v-bind:' + name);
    if (dynamicValue != null) {
      return parseFilters(dynamicValue);
    } else if (getStatic !== false) {
      var staticValue = getAndRemoveAttr(el, name);
      if (staticValue != null) {
        return JSON.stringify(staticValue);
      }
    }
  }

  function getAndRemoveAttr(el, name) {
    var val;
    if ((val = el.attrsMap[name]) != null) {
      var list = el.attrsList;
      for (var i = 0, l = list.length; i < l; i++) {
        if (list[i].name === name) {
          list.splice(i, 1);
          break;
        }
      }
    }
    return val;
  }

  /*  */

  /**
   * Cross-platform code generation for component v-model
   */
  function genComponentModel(el, value, modifiers) {
    var ref = modifiers || {};
    var number = ref.number;
    var trim = ref.trim;

    var baseValueExpression = '$$v';
    var valueExpression = baseValueExpression;
    if (trim) {
      valueExpression = "(typeof " + baseValueExpression + " === 'string'" + "? " + baseValueExpression + ".trim()" + ": " + baseValueExpression + ")";
    }
    if (number) {
      valueExpression = "_n(" + valueExpression + ")";
    }
    var assignment = genAssignmentCode(value, valueExpression);

    el.model = {
      value: "(" + value + ")",
      expression: "\"" + value + "\"",
      callback: "function (" + baseValueExpression + ") {" + assignment + "}"
    };
  }

  /**
   * Cross-platform codegen helper for generating v-model value assignment code.
   */
  function genAssignmentCode(value, assignment) {
    var modelRs = parseModel(value);
    if (modelRs.idx === null) {
      return value + "=" + assignment;
    } else {
      return "$set(" + modelRs.exp + ", " + modelRs.idx + ", " + assignment + ")";
    }
  }

  /**
   * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)
   *
   * for loop possible cases:
   *
   * - test
   * - test[idx]
   * - test[test1[idx]]
   * - test["a"][idx]
   * - xxx.test[a[a].test1[idx]]
   * - test.xxx.a["asa"][test1[idx]]
   *
   */

  var len;
  var str;
  var chr;
  var index$1;
  var expressionPos;
  var expressionEndPos;

  function parseModel(val) {
    str = val;
    len = str.length;
    index$1 = expressionPos = expressionEndPos = 0;

    if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
      return {
        exp: val,
        idx: null
      };
    }

    while (!eof()) {
      chr = next();
      /* istanbul ignore if */
      if (isStringStart(chr)) {
        parseString(chr);
      } else if (chr === 0x5B) {
        parseBracket(chr);
      }
    }

    return {
      exp: val.substring(0, expressionPos),
      idx: val.substring(expressionPos + 1, expressionEndPos)
    };
  }

  function next() {
    return str.charCodeAt(++index$1);
  }

  function eof() {
    return index$1 >= len;
  }

  function isStringStart(chr) {
    return chr === 0x22 || chr === 0x27;
  }

  function parseBracket(chr) {
    var inBracket = 1;
    expressionPos = index$1;
    while (!eof()) {
      chr = next();
      if (isStringStart(chr)) {
        parseString(chr);
        continue;
      }
      if (chr === 0x5B) {
        inBracket++;
      }
      if (chr === 0x5D) {
        inBracket--;
      }
      if (inBracket === 0) {
        expressionEndPos = index$1;
        break;
      }
    }
  }

  function parseString(chr) {
    var stringQuote = chr;
    while (!eof()) {
      chr = next();
      if (chr === stringQuote) {
        break;
      }
    }
  }

  /*  */

  var warn$1;

  // in some cases, the event used has to be determined at runtime
  // so we used some reserved tokens during compile.
  var RANGE_TOKEN = '__r';
  var CHECKBOX_RADIO_TOKEN = '__c';

  function model(el, dir, _warn) {
    warn$1 = _warn;
    var value = dir.value;
    var modifiers = dir.modifiers;
    var tag = el.tag;
    var type = el.attrsMap.type;

    if ('production' !== 'production') {
      var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];
      if (tag === 'input' && dynamicType) {
        warn$1("<input :type=\"" + dynamicType + "\" v-model=\"" + value + "\">:\n" + "v-model does not support dynamic input types. Use v-if branches instead.");
      }
      // inputs with type="file" are read only and setting the input's
      // value will throw an error.
      if (tag === 'input' && type === 'file') {
        warn$1("<" + el.tag + " v-model=\"" + value + "\" type=\"file\">:\n" + "File inputs are read only. Use a v-on:change listener instead.");
      }
    }

    if (el.component) {
      genComponentModel(el, value, modifiers);
      // component v-model doesn't need extra runtime
      return false;
    } else if (tag === 'select') {
      genSelect(el, value, modifiers);
    } else if (tag === 'input' && type === 'checkbox') {
      genCheckboxModel(el, value, modifiers);
    } else if (tag === 'input' && type === 'radio') {
      genRadioModel(el, value, modifiers);
    } else if (tag === 'input' || tag === 'textarea') {
      genDefaultModel(el, value, modifiers);
    } else if (!config.isReservedTag(tag)) {
      genComponentModel(el, value, modifiers);
      // component v-model doesn't need extra runtime
      return false;
    } else if ('production' !== 'production') {
      warn$1("<" + el.tag + " v-model=\"" + value + "\">: " + "v-model is not supported on this element type. " + 'If you are working with contenteditable, it\'s recommended to ' + 'wrap a library dedicated for that purpose inside a custom component.');
    }

    // ensure runtime directive metadata
    return true;
  }

  function genCheckboxModel(el, value, modifiers) {
    var number = modifiers && modifiers.number;
    var valueBinding = getBindingAttr(el, 'value') || 'null';
    var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
    var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
    addProp(el, 'checked', "Array.isArray(" + value + ")" + "?_i(" + value + "," + valueBinding + ")>-1" + (trueValueBinding === 'true' ? ":(" + value + ")" : ":_q(" + value + "," + trueValueBinding + ")"));
    addHandler(el, CHECKBOX_RADIO_TOKEN, "var $$a=" + value + "," + '$$el=$event.target,' + "$$c=$$el.checked?(" + trueValueBinding + "):(" + falseValueBinding + ");" + 'if(Array.isArray($$a)){' + "var $$v=" + (number ? '_n(' + valueBinding + ')' : valueBinding) + "," + '$$i=_i($$a,$$v);' + "if($$el.checked){$$i<0&&(" + value + "=$$a.concat($$v))}" + "else{$$i>-1&&(" + value + "=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}" + "}else{" + genAssignmentCode(value, '$$c') + "}", null, true);
  }

  function genRadioModel(el, value, modifiers) {
    var number = modifiers && modifiers.number;
    var valueBinding = getBindingAttr(el, 'value') || 'null';
    valueBinding = number ? "_n(" + valueBinding + ")" : valueBinding;
    addProp(el, 'checked', "_q(" + value + "," + valueBinding + ")");
    addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);
  }

  function genSelect(el, value, modifiers) {
    var number = modifiers && modifiers.number;
    var selectedVal = "Array.prototype.filter" + ".call($event.target.options,function(o){return o.selected})" + ".map(function(o){var val = \"_value\" in o ? o._value : o.value;" + "return " + (number ? '_n(val)' : 'val') + "})";

    var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
    var code = "var $$selectedVal = " + selectedVal + ";";
    code = code + " " + genAssignmentCode(value, assignment);
    addHandler(el, 'change', code, null, true);
  }

  function genDefaultModel(el, value, modifiers) {
    var type = el.attrsMap.type;
    var ref = modifiers || {};
    var lazy = ref.lazy;
    var number = ref.number;
    var trim = ref.trim;
    var needCompositionGuard = !lazy && type !== 'range';
    var event = lazy ? 'change' : type === 'range' ? RANGE_TOKEN : 'input';

    var valueExpression = '$event.target.value';
    if (trim) {
      valueExpression = "$event.target.value.trim()";
    }
    if (number) {
      valueExpression = "_n(" + valueExpression + ")";
    }

    var code = genAssignmentCode(value, valueExpression);
    if (needCompositionGuard) {
      code = "if($event.target.composing)return;" + code;
    }

    addProp(el, 'value', "(" + value + ")");
    addHandler(el, event, code, null, true);
    if (trim || number) {
      addHandler(el, 'blur', '$forceUpdate()');
    }
  }

  /*  */

  // normalize v-model event tokens that can only be determined at runtime.
  // it's important to place the event as the first in the array because
  // the whole point is ensuring the v-model callback gets called before
  // user-attached handlers.
  function normalizeEvents(on) {
    var event;
    /* istanbul ignore if */
    if (isDef(on[RANGE_TOKEN])) {
      // IE input[type=range] only supports `change` event
      event = isIE ? 'change' : 'input';
      on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
      delete on[RANGE_TOKEN];
    }
    if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
      // Chrome fires microtasks in between click/change, leads to #4521
      event = isChrome ? 'click' : 'change';
      on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);
      delete on[CHECKBOX_RADIO_TOKEN];
    }
  }

  var target$1;

  function add$1(event, handler, once$$1, capture, passive) {
    if (once$$1) {
      var oldHandler = handler;
      var _target = target$1; // save current target element in closure
      handler = function (ev) {
        var res = arguments.length === 1 ? oldHandler(ev) : oldHandler.apply(null, arguments);
        if (res !== null) {
          remove$2(event, handler, capture, _target);
        }
      };
    }
    target$1.addEventListener(event, handler, supportsPassive ? { capture: capture, passive: passive } : capture);
  }

  function remove$2(event, handler, capture, _target) {
    (_target || target$1).removeEventListener(event, handler, capture);
  }

  function updateDOMListeners(oldVnode, vnode) {
    if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
      return;
    }
    var on = vnode.data.on || {};
    var oldOn = oldVnode.data.on || {};
    target$1 = vnode.elm;
    normalizeEvents(on);
    updateListeners(on, oldOn, add$1, remove$2, vnode.context);
  }

  var events = {
    create: updateDOMListeners,
    update: updateDOMListeners
  };

  /*  */

  function updateDOMProps(oldVnode, vnode) {
    if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
      return;
    }
    var key, cur;
    var elm = vnode.elm;
    var oldProps = oldVnode.data.domProps || {};
    var props = vnode.data.domProps || {};
    // clone observed objects, as the user probably wants to mutate it
    if (isDef(props.__ob__)) {
      props = vnode.data.domProps = extend({}, props);
    }

    for (key in oldProps) {
      if (isUndef(props[key])) {
        elm[key] = '';
      }
    }
    for (key in props) {
      cur = props[key];
      // ignore children if the node has textContent or innerHTML,
      // as these will throw away existing DOM nodes and cause removal errors
      // on subsequent patches (#3360)
      if (key === 'textContent' || key === 'innerHTML') {
        if (vnode.children) {
          vnode.children.length = 0;
        }
        if (cur === oldProps[key]) {
          continue;
        }
      }

      if (key === 'value') {
        // store value as _value as well since
        // non-string values will be stringified
        elm._value = cur;
        // avoid resetting cursor position when value is the same
        var strCur = isUndef(cur) ? '' : String(cur);
        if (shouldUpdateValue(elm, vnode, strCur)) {
          elm.value = strCur;
        }
      } else {
        elm[key] = cur;
      }
    }
  }

  // check platforms/web/util/attrs.js acceptValue


  function shouldUpdateValue(elm, vnode, checkVal) {
    return !elm.composing && (vnode.tag === 'option' || isDirty(elm, checkVal) || isInputChanged(elm, checkVal));
  }

  function isDirty(elm, checkVal) {
    // return true when textbox (.number and .trim) loses focus and its value is
    // not equal to the updated value
    var notInFocus = true;
    // #6157
    // work around IE bug when accessing document.activeElement in an iframe
    try {
      notInFocus = document.activeElement !== elm;
    } catch (e) {}
    return notInFocus && elm.value !== checkVal;
  }

  function isInputChanged(elm, newVal) {
    var value = elm.value;
    var modifiers = elm._vModifiers; // injected by v-model runtime
    if (isDef(modifiers) && modifiers.number) {
      return toNumber(value) !== toNumber(newVal);
    }
    if (isDef(modifiers) && modifiers.trim) {
      return value.trim() !== newVal.trim();
    }
    return value !== newVal;
  }

  var domProps = {
    create: updateDOMProps,
    update: updateDOMProps
  };

  /*  */

  var parseStyleText = cached(function (cssText) {
    var res = {};
    var listDelimiter = /;(?![^(]*\))/g;
    var propertyDelimiter = /:(.+)/;
    cssText.split(listDelimiter).forEach(function (item) {
      if (item) {
        var tmp = item.split(propertyDelimiter);
        tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
      }
    });
    return res;
  });

  // merge static and dynamic style data on the same vnode
  function normalizeStyleData(data) {
    var style = normalizeStyleBinding(data.style);
    // static style is pre-processed into an object during compilation
    // and is always a fresh object, so it's safe to merge into it
    return data.staticStyle ? extend(data.staticStyle, style) : style;
  }

  // normalize possible array / string values into Object
  function normalizeStyleBinding(bindingStyle) {
    if (Array.isArray(bindingStyle)) {
      return toObject(bindingStyle);
    }
    if (typeof bindingStyle === 'string') {
      return parseStyleText(bindingStyle);
    }
    return bindingStyle;
  }

  /**
   * parent component style should be after child's
   * so that parent component's style could override it
   */
  function getStyle(vnode, checkChild) {
    var res = {};
    var styleData;

    if (checkChild) {
      var childNode = vnode;
      while (childNode.componentInstance) {
        childNode = childNode.componentInstance._vnode;
        if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {
          extend(res, styleData);
        }
      }
    }

    if (styleData = normalizeStyleData(vnode.data)) {
      extend(res, styleData);
    }

    var parentNode = vnode;
    while (parentNode = parentNode.parent) {
      if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
        extend(res, styleData);
      }
    }
    return res;
  }

  /*  */

  var cssVarRE = /^--/;
  var importantRE = /\s*!important$/;
  var setProp = function (el, name, val) {
    /* istanbul ignore if */
    if (cssVarRE.test(name)) {
      el.style.setProperty(name, val);
    } else if (importantRE.test(val)) {
      el.style.setProperty(name, val.replace(importantRE, ''), 'important');
    } else {
      var normalizedName = normalize(name);
      if (Array.isArray(val)) {
        // Support values array created by autoprefixer, e.g.
        // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
        // Set them one by one, and the browser will only set those it can recognize
        for (var i = 0, len = val.length; i < len; i++) {
          el.style[normalizedName] = val[i];
        }
      } else {
        el.style[normalizedName] = val;
      }
    }
  };

  var vendorNames = ['Webkit', 'Moz', 'ms'];

  var emptyStyle;
  var normalize = cached(function (prop) {
    emptyStyle = emptyStyle || document.createElement('div').style;
    prop = camelize(prop);
    if (prop !== 'filter' && prop in emptyStyle) {
      return prop;
    }
    var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
    for (var i = 0; i < vendorNames.length; i++) {
      var name = vendorNames[i] + capName;
      if (name in emptyStyle) {
        return name;
      }
    }
  });

  function updateStyle(oldVnode, vnode) {
    var data = vnode.data;
    var oldData = oldVnode.data;

    if (isUndef(data.staticStyle) && isUndef(data.style) && isUndef(oldData.staticStyle) && isUndef(oldData.style)) {
      return;
    }

    var cur, name;
    var el = vnode.elm;
    var oldStaticStyle = oldData.staticStyle;
    var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

    // if static style exists, stylebinding already merged into it when doing normalizeStyleData
    var oldStyle = oldStaticStyle || oldStyleBinding;

    var style = normalizeStyleBinding(vnode.data.style) || {};

    // store normalized style under a different key for next diff
    // make sure to clone it if it's reactive, since the user likley wants
    // to mutate it.
    vnode.data.normalizedStyle = isDef(style.__ob__) ? extend({}, style) : style;

    var newStyle = getStyle(vnode, true);

    for (name in oldStyle) {
      if (isUndef(newStyle[name])) {
        setProp(el, name, '');
      }
    }
    for (name in newStyle) {
      cur = newStyle[name];
      if (cur !== oldStyle[name]) {
        // ie9 setting to null has no effect, must use empty string
        setProp(el, name, cur == null ? '' : cur);
      }
    }
  }

  var style = {
    create: updateStyle,
    update: updateStyle
  };

  /*  */

  /**
   * Add class with compatibility for SVG since classList is not supported on
   * SVG elements in IE
   */
  function addClass(el, cls) {
    /* istanbul ignore if */
    if (!cls || !(cls = cls.trim())) {
      return;
    }

    /* istanbul ignore else */
    if (el.classList) {
      if (cls.indexOf(' ') > -1) {
        cls.split(/\s+/).forEach(function (c) {
          return el.classList.add(c);
        });
      } else {
        el.classList.add(cls);
      }
    } else {
      var cur = " " + (el.getAttribute('class') || '') + " ";
      if (cur.indexOf(' ' + cls + ' ') < 0) {
        el.setAttribute('class', (cur + cls).trim());
      }
    }
  }

  /**
   * Remove class with compatibility for SVG since classList is not supported on
   * SVG elements in IE
   */
  function removeClass(el, cls) {
    /* istanbul ignore if */
    if (!cls || !(cls = cls.trim())) {
      return;
    }

    /* istanbul ignore else */
    if (el.classList) {
      if (cls.indexOf(' ') > -1) {
        cls.split(/\s+/).forEach(function (c) {
          return el.classList.remove(c);
        });
      } else {
        el.classList.remove(cls);
      }
      if (!el.classList.length) {
        el.removeAttribute('class');
      }
    } else {
      var cur = " " + (el.getAttribute('class') || '') + " ";
      var tar = ' ' + cls + ' ';
      while (cur.indexOf(tar) >= 0) {
        cur = cur.replace(tar, ' ');
      }
      cur = cur.trim();
      if (cur) {
        el.setAttribute('class', cur);
      } else {
        el.removeAttribute('class');
      }
    }
  }

  /*  */

  function resolveTransition(def$$1) {
    if (!def$$1) {
      return;
    }
    /* istanbul ignore else */
    if (typeof def$$1 === 'object') {
      var res = {};
      if (def$$1.css !== false) {
        extend(res, autoCssTransition(def$$1.name || 'v'));
      }
      extend(res, def$$1);
      return res;
    } else if (typeof def$$1 === 'string') {
      return autoCssTransition(def$$1);
    }
  }

  var autoCssTransition = cached(function (name) {
    return {
      enterClass: name + "-enter",
      enterToClass: name + "-enter-to",
      enterActiveClass: name + "-enter-active",
      leaveClass: name + "-leave",
      leaveToClass: name + "-leave-to",
      leaveActiveClass: name + "-leave-active"
    };
  });

  var hasTransition = inBrowser && !isIE9;
  var TRANSITION = 'transition';
  var ANIMATION = 'animation';

  // Transition property/event sniffing
  var transitionProp = 'transition';
  var transitionEndEvent = 'transitionend';
  var animationProp = 'animation';
  var animationEndEvent = 'animationend';
  if (hasTransition) {
    /* istanbul ignore if */
    if (window.ontransitionend === undefined && window.onwebkittransitionend !== undefined) {
      transitionProp = 'WebkitTransition';
      transitionEndEvent = 'webkitTransitionEnd';
    }
    if (window.onanimationend === undefined && window.onwebkitanimationend !== undefined) {
      animationProp = 'WebkitAnimation';
      animationEndEvent = 'webkitAnimationEnd';
    }
  }

  // binding to window is necessary to make hot reload work in IE in strict mode
  var raf = inBrowser && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout;

  function nextFrame(fn) {
    raf(function () {
      raf(fn);
    });
  }

  function addTransitionClass(el, cls) {
    var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
    if (transitionClasses.indexOf(cls) < 0) {
      transitionClasses.push(cls);
      addClass(el, cls);
    }
  }

  function removeTransitionClass(el, cls) {
    if (el._transitionClasses) {
      remove(el._transitionClasses, cls);
    }
    removeClass(el, cls);
  }

  function whenTransitionEnds(el, expectedType, cb) {
    var ref = getTransitionInfo(el, expectedType);
    var type = ref.type;
    var timeout = ref.timeout;
    var propCount = ref.propCount;
    if (!type) {
      return cb();
    }
    var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
    var ended = 0;
    var end = function () {
      el.removeEventListener(event, onEnd);
      cb();
    };
    var onEnd = function (e) {
      if (e.target === el) {
        if (++ended >= propCount) {
          end();
        }
      }
    };
    setTimeout(function () {
      if (ended < propCount) {
        end();
      }
    }, timeout + 1);
    el.addEventListener(event, onEnd);
  }

  var transformRE = /\b(transform|all)(,|$)/;

  function getTransitionInfo(el, expectedType) {
    var styles = window.getComputedStyle(el);
    var transitionDelays = styles[transitionProp + 'Delay'].split(', ');
    var transitionDurations = styles[transitionProp + 'Duration'].split(', ');
    var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
    var animationDelays = styles[animationProp + 'Delay'].split(', ');
    var animationDurations = styles[animationProp + 'Duration'].split(', ');
    var animationTimeout = getTimeout(animationDelays, animationDurations);

    var type;
    var timeout = 0;
    var propCount = 0;
    /* istanbul ignore if */
    if (expectedType === TRANSITION) {
      if (transitionTimeout > 0) {
        type = TRANSITION;
        timeout = transitionTimeout;
        propCount = transitionDurations.length;
      }
    } else if (expectedType === ANIMATION) {
      if (animationTimeout > 0) {
        type = ANIMATION;
        timeout = animationTimeout;
        propCount = animationDurations.length;
      }
    } else {
      timeout = Math.max(transitionTimeout, animationTimeout);
      type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;
      propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;
    }
    var hasTransform = type === TRANSITION && transformRE.test(styles[transitionProp + 'Property']);
    return {
      type: type,
      timeout: timeout,
      propCount: propCount,
      hasTransform: hasTransform
    };
  }

  function getTimeout(delays, durations) {
    /* istanbul ignore next */
    while (delays.length < durations.length) {
      delays = delays.concat(delays);
    }

    return Math.max.apply(null, durations.map(function (d, i) {
      return toMs(d) + toMs(delays[i]);
    }));
  }

  function toMs(s) {
    return Number(s.slice(0, -1)) * 1000;
  }

  /*  */

  function enter(vnode, toggleDisplay) {
    var el = vnode.elm;

    // call leave callback now
    if (isDef(el._leaveCb)) {
      el._leaveCb.cancelled = true;
      el._leaveCb();
    }

    var data = resolveTransition(vnode.data.transition);
    if (isUndef(data)) {
      return;
    }

    /* istanbul ignore if */
    if (isDef(el._enterCb) || el.nodeType !== 1) {
      return;
    }

    var css = data.css;
    var type = data.type;
    var enterClass = data.enterClass;
    var enterToClass = data.enterToClass;
    var enterActiveClass = data.enterActiveClass;
    var appearClass = data.appearClass;
    var appearToClass = data.appearToClass;
    var appearActiveClass = data.appearActiveClass;
    var beforeEnter = data.beforeEnter;
    var enter = data.enter;
    var afterEnter = data.afterEnter;
    var enterCancelled = data.enterCancelled;
    var beforeAppear = data.beforeAppear;
    var appear = data.appear;
    var afterAppear = data.afterAppear;
    var appearCancelled = data.appearCancelled;
    var duration = data.duration;

    // activeInstance will always be the <transition> component managing this
    // transition. One edge case to check is when the <transition> is placed
    // as the root node of a child component. In that case we need to check
    // <transition>'s parent for appear check.
    var context = activeInstance;
    var transitionNode = activeInstance.$vnode;
    while (transitionNode && transitionNode.parent) {
      transitionNode = transitionNode.parent;
      context = transitionNode.context;
    }

    var isAppear = !context._isMounted || !vnode.isRootInsert;

    if (isAppear && !appear && appear !== '') {
      return;
    }

    var startClass = isAppear && appearClass ? appearClass : enterClass;
    var activeClass = isAppear && appearActiveClass ? appearActiveClass : enterActiveClass;
    var toClass = isAppear && appearToClass ? appearToClass : enterToClass;

    var beforeEnterHook = isAppear ? beforeAppear || beforeEnter : beforeEnter;
    var enterHook = isAppear ? typeof appear === 'function' ? appear : enter : enter;
    var afterEnterHook = isAppear ? afterAppear || afterEnter : afterEnter;
    var enterCancelledHook = isAppear ? appearCancelled || enterCancelled : enterCancelled;

    var explicitEnterDuration = toNumber(isObject(duration) ? duration.enter : duration);

    if ('production' !== 'production' && explicitEnterDuration != null) {
      checkDuration(explicitEnterDuration, 'enter', vnode);
    }

    var expectsCSS = css !== false && !isIE9;
    var userWantsControl = getHookArgumentsLength(enterHook);

    var cb = el._enterCb = once(function () {
      if (expectsCSS) {
        removeTransitionClass(el, toClass);
        removeTransitionClass(el, activeClass);
      }
      if (cb.cancelled) {
        if (expectsCSS) {
          removeTransitionClass(el, startClass);
        }
        enterCancelledHook && enterCancelledHook(el);
      } else {
        afterEnterHook && afterEnterHook(el);
      }
      el._enterCb = null;
    });

    if (!vnode.data.show) {
      // remove pending leave element on enter by injecting an insert hook
      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {
        var parent = el.parentNode;
        var pendingNode = parent && parent._pending && parent._pending[vnode.key];
        if (pendingNode && pendingNode.tag === vnode.tag && pendingNode.elm._leaveCb) {
          pendingNode.elm._leaveCb();
        }
        enterHook && enterHook(el, cb);
      });
    }

    // start enter transition
    beforeEnterHook && beforeEnterHook(el);
    if (expectsCSS) {
      addTransitionClass(el, startClass);
      addTransitionClass(el, activeClass);
      nextFrame(function () {
        addTransitionClass(el, toClass);
        removeTransitionClass(el, startClass);
        if (!cb.cancelled && !userWantsControl) {
          if (isValidDuration(explicitEnterDuration)) {
            setTimeout(cb, explicitEnterDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      });
    }

    if (vnode.data.show) {
      toggleDisplay && toggleDisplay();
      enterHook && enterHook(el, cb);
    }

    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }

  function leave(vnode, rm) {
    var el = vnode.elm;

    // call enter callback now
    if (isDef(el._enterCb)) {
      el._enterCb.cancelled = true;
      el._enterCb();
    }

    var data = resolveTransition(vnode.data.transition);
    if (isUndef(data)) {
      return rm();
    }

    /* istanbul ignore if */
    if (isDef(el._leaveCb) || el.nodeType !== 1) {
      return;
    }

    var css = data.css;
    var type = data.type;
    var leaveClass = data.leaveClass;
    var leaveToClass = data.leaveToClass;
    var leaveActiveClass = data.leaveActiveClass;
    var beforeLeave = data.beforeLeave;
    var leave = data.leave;
    var afterLeave = data.afterLeave;
    var leaveCancelled = data.leaveCancelled;
    var delayLeave = data.delayLeave;
    var duration = data.duration;

    var expectsCSS = css !== false && !isIE9;
    var userWantsControl = getHookArgumentsLength(leave);

    var explicitLeaveDuration = toNumber(isObject(duration) ? duration.leave : duration);

    if ('production' !== 'production' && isDef(explicitLeaveDuration)) {
      checkDuration(explicitLeaveDuration, 'leave', vnode);
    }

    var cb = el._leaveCb = once(function () {
      if (el.parentNode && el.parentNode._pending) {
        el.parentNode._pending[vnode.key] = null;
      }
      if (expectsCSS) {
        removeTransitionClass(el, leaveToClass);
        removeTransitionClass(el, leaveActiveClass);
      }
      if (cb.cancelled) {
        if (expectsCSS) {
          removeTransitionClass(el, leaveClass);
        }
        leaveCancelled && leaveCancelled(el);
      } else {
        rm();
        afterLeave && afterLeave(el);
      }
      el._leaveCb = null;
    });

    if (delayLeave) {
      delayLeave(performLeave);
    } else {
      performLeave();
    }

    function performLeave() {
      // the delayed leave may have already been cancelled
      if (cb.cancelled) {
        return;
      }
      // record leaving element
      if (!vnode.data.show) {
        (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;
      }
      beforeLeave && beforeLeave(el);
      if (expectsCSS) {
        addTransitionClass(el, leaveClass);
        addTransitionClass(el, leaveActiveClass);
        nextFrame(function () {
          addTransitionClass(el, leaveToClass);
          removeTransitionClass(el, leaveClass);
          if (!cb.cancelled && !userWantsControl) {
            if (isValidDuration(explicitLeaveDuration)) {
              setTimeout(cb, explicitLeaveDuration);
            } else {
              whenTransitionEnds(el, type, cb);
            }
          }
        });
      }
      leave && leave(el, cb);
      if (!expectsCSS && !userWantsControl) {
        cb();
      }
    }
  }

  // only used in dev mode
  function checkDuration(val, name, vnode) {
    if (typeof val !== 'number') {
      warn("<transition> explicit " + name + " duration is not a valid number - " + "got " + JSON.stringify(val) + ".", vnode.context);
    } else if (isNaN(val)) {
      warn("<transition> explicit " + name + " duration is NaN - " + 'the duration expression might be incorrect.', vnode.context);
    }
  }

  function isValidDuration(val) {
    return typeof val === 'number' && !isNaN(val);
  }

  /**
   * Normalize a transition hook's argument length. The hook may be:
   * - a merged hook (invoker) with the original in .fns
   * - a wrapped component method (check ._length)
   * - a plain function (.length)
   */
  function getHookArgumentsLength(fn) {
    if (isUndef(fn)) {
      return false;
    }
    var invokerFns = fn.fns;
    if (isDef(invokerFns)) {
      // invoker
      return getHookArgumentsLength(Array.isArray(invokerFns) ? invokerFns[0] : invokerFns);
    } else {
      return (fn._length || fn.length) > 1;
    }
  }

  function _enter(_, vnode) {
    if (vnode.data.show !== true) {
      enter(vnode);
    }
  }

  var transition = inBrowser ? {
    create: _enter,
    activate: _enter,
    remove: function remove$$1(vnode, rm) {
      /* istanbul ignore else */
      if (vnode.data.show !== true) {
        leave(vnode, rm);
      } else {
        rm();
      }
    }
  } : {};

  var platformModules = [attrs, klass, events, domProps, style, transition];

  /*  */

  // the directive module should be applied last, after all
  // built-in modules have been applied.
  var modules = platformModules.concat(baseModules);

  var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

  /**
   * Not type checking this file because flow doesn't like attaching
   * properties to Elements.
   */

  var isTextInputType = makeMap('text,number,password,search,email,tel,url');

  /* istanbul ignore if */
  if (isIE9) {
    // http://www.matts411.com/post/internet-explorer-9-oninput/
    document.addEventListener('selectionchange', function () {
      var el = document.activeElement;
      if (el && el.vmodel) {
        trigger(el, 'input');
      }
    });
  }

  var model$1 = {
    inserted: function inserted(el, binding, vnode) {
      if (vnode.tag === 'select') {
        var cb = function () {
          setSelected(el, binding, vnode.context);
        };
        cb();
        /* istanbul ignore if */
        if (isIE || isEdge) {
          setTimeout(cb, 0);
        }
        el._vOptions = [].map.call(el.options, getValue);
      } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
        el._vModifiers = binding.modifiers;
        if (!binding.modifiers.lazy) {
          // Safari < 10.2 & UIWebView doesn't fire compositionend when
          // switching focus before confirming composition choice
          // this also fixes the issue where some browsers e.g. iOS Chrome
          // fires "change" instead of "input" on autocomplete.
          el.addEventListener('change', onCompositionEnd);
          if (!isAndroid) {
            el.addEventListener('compositionstart', onCompositionStart);
            el.addEventListener('compositionend', onCompositionEnd);
          }
          /* istanbul ignore if */
          if (isIE9) {
            el.vmodel = true;
          }
        }
      }
    },
    componentUpdated: function componentUpdated(el, binding, vnode) {
      if (vnode.tag === 'select') {
        setSelected(el, binding, vnode.context);
        // in case the options rendered by v-for have changed,
        // it's possible that the value is out-of-sync with the rendered options.
        // detect such cases and filter out values that no longer has a matching
        // option in the DOM.
        var prevOptions = el._vOptions;
        var curOptions = el._vOptions = [].map.call(el.options, getValue);
        if (curOptions.some(function (o, i) {
          return !looseEqual(o, prevOptions[i]);
        })) {
          trigger(el, 'change');
        }
      }
    }
  };

  function setSelected(el, binding, vm) {
    var value = binding.value;
    var isMultiple = el.multiple;
    if (isMultiple && !Array.isArray(value)) {
      'production' !== 'production' && warn("<select multiple v-model=\"" + binding.expression + "\"> " + "expects an Array value for its binding, but got " + Object.prototype.toString.call(value).slice(8, -1), vm);
      return;
    }
    var selected, option;
    for (var i = 0, l = el.options.length; i < l; i++) {
      option = el.options[i];
      if (isMultiple) {
        selected = looseIndexOf(value, getValue(option)) > -1;
        if (option.selected !== selected) {
          option.selected = selected;
        }
      } else {
        if (looseEqual(getValue(option), value)) {
          if (el.selectedIndex !== i) {
            el.selectedIndex = i;
          }
          return;
        }
      }
    }
    if (!isMultiple) {
      el.selectedIndex = -1;
    }
  }

  function getValue(option) {
    return '_value' in option ? option._value : option.value;
  }

  function onCompositionStart(e) {
    e.target.composing = true;
  }

  function onCompositionEnd(e) {
    // prevent triggering an input event for no reason
    if (!e.target.composing) {
      return;
    }
    e.target.composing = false;
    trigger(e.target, 'input');
  }

  function trigger(el, type) {
    var e = document.createEvent('HTMLEvents');
    e.initEvent(type, true, true);
    el.dispatchEvent(e);
  }

  /*  */

  // recursively search for possible transition defined inside the component root
  function locateNode(vnode) {
    return vnode.componentInstance && (!vnode.data || !vnode.data.transition) ? locateNode(vnode.componentInstance._vnode) : vnode;
  }

  var show = {
    bind: function bind(el, ref, vnode) {
      var value = ref.value;

      vnode = locateNode(vnode);
      var transition$$1 = vnode.data && vnode.data.transition;
      var originalDisplay = el.__vOriginalDisplay = el.style.display === 'none' ? '' : el.style.display;
      if (value && transition$$1) {
        vnode.data.show = true;
        enter(vnode, function () {
          el.style.display = originalDisplay;
        });
      } else {
        el.style.display = value ? originalDisplay : 'none';
      }
    },

    update: function update(el, ref, vnode) {
      var value = ref.value;
      var oldValue = ref.oldValue;

      /* istanbul ignore if */
      if (value === oldValue) {
        return;
      }
      vnode = locateNode(vnode);
      var transition$$1 = vnode.data && vnode.data.transition;
      if (transition$$1) {
        vnode.data.show = true;
        if (value) {
          enter(vnode, function () {
            el.style.display = el.__vOriginalDisplay;
          });
        } else {
          leave(vnode, function () {
            el.style.display = 'none';
          });
        }
      } else {
        el.style.display = value ? el.__vOriginalDisplay : 'none';
      }
    },

    unbind: function unbind(el, binding, vnode, oldVnode, isDestroy) {
      if (!isDestroy) {
        el.style.display = el.__vOriginalDisplay;
      }
    }
  };

  var platformDirectives = {
    model: model$1,
    show: show
  };

  /*  */

  // Provides transition support for a single element/component.
  // supports transition mode (out-in / in-out)

  var transitionProps = {
    name: String,
    appear: Boolean,
    css: Boolean,
    mode: String,
    type: String,
    enterClass: String,
    leaveClass: String,
    enterToClass: String,
    leaveToClass: String,
    enterActiveClass: String,
    leaveActiveClass: String,
    appearClass: String,
    appearActiveClass: String,
    appearToClass: String,
    duration: [Number, String, Object]
  };

  // in case the child is also an abstract component, e.g. <keep-alive>
  // we want to recursively retrieve the real component to be rendered
  function getRealChild(vnode) {
    var compOptions = vnode && vnode.componentOptions;
    if (compOptions && compOptions.Ctor.options.abstract) {
      return getRealChild(getFirstComponentChild(compOptions.children));
    } else {
      return vnode;
    }
  }

  function extractTransitionData(comp) {
    var data = {};
    var options = comp.$options;
    // props
    for (var key in options.propsData) {
      data[key] = comp[key];
    }
    // events.
    // extract listeners and pass them directly to the transition methods
    var listeners = options._parentListeners;
    for (var key$1 in listeners) {
      data[camelize(key$1)] = listeners[key$1];
    }
    return data;
  }

  function placeholder(h, rawChild) {
    if (/\d-keep-alive$/.test(rawChild.tag)) {
      return h('keep-alive', {
        props: rawChild.componentOptions.propsData
      });
    }
  }

  function hasParentTransition(vnode) {
    while (vnode = vnode.parent) {
      if (vnode.data.transition) {
        return true;
      }
    }
  }

  function isSameChild(child, oldChild) {
    return oldChild.key === child.key && oldChild.tag === child.tag;
  }

  function isAsyncPlaceholder(node) {
    return node.isComment && node.asyncFactory;
  }

  var Transition = {
    name: 'transition',
    props: transitionProps,
    abstract: true,

    render: function render(h) {
      var this$1 = this;

      var children = this.$options._renderChildren;
      if (!children) {
        return;
      }

      // filter out text nodes (possible whitespaces)
      children = children.filter(function (c) {
        return c.tag || isAsyncPlaceholder(c);
      });
      /* istanbul ignore if */
      if (!children.length) {
        return;
      }

      // warn multiple elements
      if ('production' !== 'production' && children.length > 1) {
        warn('<transition> can only be used on a single element. Use ' + '<transition-group> for lists.', this.$parent);
      }

      var mode = this.mode;

      // warn invalid mode
      if ('production' !== 'production' && mode && mode !== 'in-out' && mode !== 'out-in') {
        warn('invalid <transition> mode: ' + mode, this.$parent);
      }

      var rawChild = children[0];

      // if this is a component root node and the component's
      // parent container node also has transition, skip.
      if (hasParentTransition(this.$vnode)) {
        return rawChild;
      }

      // apply transition data to child
      // use getRealChild() to ignore abstract components e.g. keep-alive
      var child = getRealChild(rawChild);
      /* istanbul ignore if */
      if (!child) {
        return rawChild;
      }

      if (this._leaving) {
        return placeholder(h, rawChild);
      }

      // ensure a key that is unique to the vnode type and to this transition
      // component instance. This key will be used to remove pending leaving nodes
      // during entering.
      var id = "__transition-" + this._uid + "-";
      child.key = child.key == null ? child.isComment ? id + 'comment' : id + child.tag : isPrimitive(child.key) ? String(child.key).indexOf(id) === 0 ? child.key : id + child.key : child.key;

      var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
      var oldRawChild = this._vnode;
      var oldChild = getRealChild(oldRawChild);

      // mark v-show
      // so that the transition module can hand over the control to the directive
      if (child.data.directives && child.data.directives.some(function (d) {
        return d.name === 'show';
      })) {
        child.data.show = true;
      }

      if (oldChild && oldChild.data && !isSameChild(child, oldChild) && !isAsyncPlaceholder(oldChild)) {
        // replace old child transition data with fresh one
        // important for dynamic transitions!
        var oldData = oldChild && (oldChild.data.transition = extend({}, data));
        // handle transition mode
        if (mode === 'out-in') {
          // return placeholder node and queue update when leave finishes
          this._leaving = true;
          mergeVNodeHook(oldData, 'afterLeave', function () {
            this$1._leaving = false;
            this$1.$forceUpdate();
          });
          return placeholder(h, rawChild);
        } else if (mode === 'in-out') {
          if (isAsyncPlaceholder(child)) {
            return oldRawChild;
          }
          var delayedLeave;
          var performLeave = function () {
            delayedLeave();
          };
          mergeVNodeHook(data, 'afterEnter', performLeave);
          mergeVNodeHook(data, 'enterCancelled', performLeave);
          mergeVNodeHook(oldData, 'delayLeave', function (leave) {
            delayedLeave = leave;
          });
        }
      }

      return rawChild;
    }
  };

  /*  */

  // Provides transition support for list items.
  // supports move transitions using the FLIP technique.

  // Because the vdom's children update algorithm is "unstable" - i.e.
  // it doesn't guarantee the relative positioning of removed elements,
  // we force transition-group to update its children into two passes:
  // in the first pass, we remove all nodes that need to be removed,
  // triggering their leaving transition; in the second pass, we insert/move
  // into the final desired state. This way in the second pass removed
  // nodes will remain where they should be.

  var props = extend({
    tag: String,
    moveClass: String
  }, transitionProps);

  delete props.mode;

  var TransitionGroup = {
    props: props,

    render: function render(h) {
      var tag = this.tag || this.$vnode.data.tag || 'span';
      var map = Object.create(null);
      var prevChildren = this.prevChildren = this.children;
      var rawChildren = this.$slots.default || [];
      var children = this.children = [];
      var transitionData = extractTransitionData(this);

      for (var i = 0; i < rawChildren.length; i++) {
        var c = rawChildren[i];
        if (c.tag) {
          if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
            children.push(c);
            map[c.key] = c;(c.data || (c.data = {})).transition = transitionData;
          } else if ('production' !== 'production') {
            var opts = c.componentOptions;
            var name = opts ? opts.Ctor.options.name || opts.tag || '' : c.tag;
            warn("<transition-group> children must be keyed: <" + name + ">");
          }
        }
      }

      if (prevChildren) {
        var kept = [];
        var removed = [];
        for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
          var c$1 = prevChildren[i$1];
          c$1.data.transition = transitionData;
          c$1.data.pos = c$1.elm.getBoundingClientRect();
          if (map[c$1.key]) {
            kept.push(c$1);
          } else {
            removed.push(c$1);
          }
        }
        this.kept = h(tag, null, kept);
        this.removed = removed;
      }

      return h(tag, null, children);
    },

    beforeUpdate: function beforeUpdate() {
      // force removing pass
      this.__patch__(this._vnode, this.kept, false, // hydrating
      true // removeOnly (!important, avoids unnecessary moves)
      );
      this._vnode = this.kept;
    },

    updated: function updated() {
      var children = this.prevChildren;
      var moveClass = this.moveClass || (this.name || 'v') + '-move';
      if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
        return;
      }

      // we divide the work into three loops to avoid mixing DOM reads and writes
      // in each iteration - which helps prevent layout thrashing.
      children.forEach(callPendingCbs);
      children.forEach(recordPosition);
      children.forEach(applyTranslation);

      // force reflow to put everything in position
      var body = document.body;
      var f = body.offsetHeight; // eslint-disable-line

      children.forEach(function (c) {
        if (c.data.moved) {
          var el = c.elm;
          var s = el.style;
          addTransitionClass(el, moveClass);
          s.transform = s.WebkitTransform = s.transitionDuration = '';
          el.addEventListener(transitionEndEvent, el._moveCb = function cb(e) {
            if (!e || /transform$/.test(e.propertyName)) {
              el.removeEventListener(transitionEndEvent, cb);
              el._moveCb = null;
              removeTransitionClass(el, moveClass);
            }
          });
        }
      });
    },

    methods: {
      hasMove: function hasMove(el, moveClass) {
        /* istanbul ignore if */
        if (!hasTransition) {
          return false;
        }
        /* istanbul ignore if */
        if (this._hasMove) {
          return this._hasMove;
        }
        // Detect whether an element with the move class applied has
        // CSS transitions. Since the element may be inside an entering
        // transition at this very moment, we make a clone of it and remove
        // all other transition classes applied to ensure only the move class
        // is applied.
        var clone = el.cloneNode();
        if (el._transitionClasses) {
          el._transitionClasses.forEach(function (cls) {
            removeClass(clone, cls);
          });
        }
        addClass(clone, moveClass);
        clone.style.display = 'none';
        this.$el.appendChild(clone);
        var info = getTransitionInfo(clone);
        this.$el.removeChild(clone);
        return this._hasMove = info.hasTransform;
      }
    }
  };

  function callPendingCbs(c) {
    /* istanbul ignore if */
    if (c.elm._moveCb) {
      c.elm._moveCb();
    }
    /* istanbul ignore if */
    if (c.elm._enterCb) {
      c.elm._enterCb();
    }
  }

  function recordPosition(c) {
    c.data.newPos = c.elm.getBoundingClientRect();
  }

  function applyTranslation(c) {
    var oldPos = c.data.pos;
    var newPos = c.data.newPos;
    var dx = oldPos.left - newPos.left;
    var dy = oldPos.top - newPos.top;
    if (dx || dy) {
      c.data.moved = true;
      var s = c.elm.style;
      s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
      s.transitionDuration = '0s';
    }
  }

  var platformComponents = {
    Transition: Transition,
    TransitionGroup: TransitionGroup
  };

  /*  */

  // install platform specific utils
  Vue$3.config.mustUseProp = mustUseProp;
  Vue$3.config.isReservedTag = isReservedTag;
  Vue$3.config.isReservedAttr = isReservedAttr;
  Vue$3.config.getTagNamespace = getTagNamespace;
  Vue$3.config.isUnknownElement = isUnknownElement;

  // install platform runtime directives & components
  extend(Vue$3.options.directives, platformDirectives);
  extend(Vue$3.options.components, platformComponents);

  // install platform patch function
  Vue$3.prototype.__patch__ = inBrowser ? patch : noop;

  // public mount method
  Vue$3.prototype.$mount = function (el, hydrating) {
    el = el && inBrowser ? query(el) : undefined;
    return mountComponent(this, el, hydrating);
  };

  // devtools global hook
  /* istanbul ignore next */
  setTimeout(function () {
    if (config.devtools) {
      if (devtools) {
        devtools.emit('init', Vue$3);
      } else if ('production' !== 'production' && isChrome) {
        console[console.info ? 'info' : 'log']('Download the Vue Devtools extension for a better development experience:\n' + 'https://github.com/vuejs/vue-devtools');
      }
    }
    if ('production' !== 'production' && config.productionTip !== false && inBrowser && typeof console !== 'undefined') {
      console[console.info ? 'info' : 'log']("You are running Vue in development mode.\n" + "Make sure to turn on production mode when deploying for production.\n" + "See more tips at https://vuejs.org/guide/deployment.html");
    }
  }, 0);

  /*  */

  // check whether current browser encodes a char inside attribute values
  function shouldDecode(content, encoded) {
    var div = document.createElement('div');
    div.innerHTML = "<div a=\"" + content + "\"/>";
    return div.innerHTML.indexOf(encoded) > 0;
  }

  // #3663
  // IE encodes newlines inside attribute values while other browsers don't
  var shouldDecodeNewlines = inBrowser ? shouldDecode('\n', '&#10;') : false;

  /*  */

  var defaultTagRE = /\{\{((?:.|\n)+?)\}\}/g;
  var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;

  var buildRegex = cached(function (delimiters) {
    var open = delimiters[0].replace(regexEscapeRE, '\\$&');
    var close = delimiters[1].replace(regexEscapeRE, '\\$&');
    return new RegExp(open + '((?:.|\\n)+?)' + close, 'g');
  });

  function parseText(text, delimiters) {
    var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;
    if (!tagRE.test(text)) {
      return;
    }
    var tokens = [];
    var lastIndex = tagRE.lastIndex = 0;
    var match, index;
    while (match = tagRE.exec(text)) {
      index = match.index;
      // push text token
      if (index > lastIndex) {
        tokens.push(JSON.stringify(text.slice(lastIndex, index)));
      }
      // tag token
      var exp = parseFilters(match[1].trim());
      tokens.push("_s(" + exp + ")");
      lastIndex = index + match[0].length;
    }
    if (lastIndex < text.length) {
      tokens.push(JSON.stringify(text.slice(lastIndex)));
    }
    return tokens.join('+');
  }

  /*  */

  function transformNode(el, options) {
    var warn = options.warn || baseWarn;
    var staticClass = getAndRemoveAttr(el, 'class');
    if ('production' !== 'production' && staticClass) {
      var expression = parseText(staticClass, options.delimiters);
      if (expression) {
        warn("class=\"" + staticClass + "\": " + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div class="{{ val }}">, use <div :class="val">.');
      }
    }
    if (staticClass) {
      el.staticClass = JSON.stringify(staticClass);
    }
    var classBinding = getBindingAttr(el, 'class', false /* getStatic */);
    if (classBinding) {
      el.classBinding = classBinding;
    }
  }

  function genData(el) {
    var data = '';
    if (el.staticClass) {
      data += "staticClass:" + el.staticClass + ",";
    }
    if (el.classBinding) {
      data += "class:" + el.classBinding + ",";
    }
    return data;
  }

  var klass$1 = {
    staticKeys: ['staticClass'],
    transformNode: transformNode,
    genData: genData
  };

  /*  */

  function transformNode$1(el, options) {
    var warn = options.warn || baseWarn;
    var staticStyle = getAndRemoveAttr(el, 'style');
    if (staticStyle) {
      /* istanbul ignore if */
      if ('production' !== 'production') {
        var expression = parseText(staticStyle, options.delimiters);
        if (expression) {
          warn("style=\"" + staticStyle + "\": " + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div style="{{ val }}">, use <div :style="val">.');
        }
      }
      el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
    }

    var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);
    if (styleBinding) {
      el.styleBinding = styleBinding;
    }
  }

  function genData$1(el) {
    var data = '';
    if (el.staticStyle) {
      data += "staticStyle:" + el.staticStyle + ",";
    }
    if (el.styleBinding) {
      data += "style:(" + el.styleBinding + "),";
    }
    return data;
  }

  var style$1 = {
    staticKeys: ['staticStyle'],
    transformNode: transformNode$1,
    genData: genData$1
  };

  var modules$1 = [klass$1, style$1];

  /*  */

  function text(el, dir) {
    if (dir.value) {
      addProp(el, 'textContent', "_s(" + dir.value + ")");
    }
  }

  /*  */

  function html(el, dir) {
    if (dir.value) {
      addProp(el, 'innerHTML', "_s(" + dir.value + ")");
    }
  }

  var directives$1 = {
    model: model,
    text: text,
    html: html
  };

  /*  */

  var isUnaryTag = makeMap('area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' + 'link,meta,param,source,track,wbr');

  // Elements that you can, intentionally, leave open
  // (and which close themselves)
  var canBeLeftOpenTag = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source');

  // HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
  // Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
  var isNonPhrasingTag = makeMap('address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' + 'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' + 'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' + 'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' + 'title,tr,track');

  /*  */

  var baseOptions = {
    expectHTML: true,
    modules: modules$1,
    directives: directives$1,
    isPreTag: isPreTag,
    isUnaryTag: isUnaryTag,
    mustUseProp: mustUseProp,
    canBeLeftOpenTag: canBeLeftOpenTag,
    isReservedTag: isReservedTag,
    getTagNamespace: getTagNamespace,
    staticKeys: genStaticKeys(modules$1)
  };

  /*  */

  var decoder;

  var he = {
    decode: function decode(html) {
      decoder = decoder || document.createElement('div');
      decoder.innerHTML = html;
      return decoder.textContent;
    }
  };

  /**
   * Not type-checking this file because it's mostly vendor code.
   */

  /*!
   * HTML Parser By John Resig (ejohn.org)
   * Modified by Juriy "kangax" Zaytsev
   * Original code by Erik Arvidsson, Mozilla Public License
   * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js
   */

  // Regular Expressions for parsing tags and attributes
  var singleAttrIdentifier = /([^\s"'<>/=]+)/;
  var singleAttrAssign = /(?:=)/;
  var singleAttrValues = [
  // attr value double quotes
  /"([^"]*)"+/.source,
  // attr value, single quotes
  /'([^']*)'+/.source,
  // attr value, no quotes
  /([^\s"'=<>`]+)/.source];
  var attribute = new RegExp('^\\s*' + singleAttrIdentifier.source + '(?:\\s*(' + singleAttrAssign.source + ')' + '\\s*(?:' + singleAttrValues.join('|') + '))?');

  // could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName
  // but for Vue templates we can enforce a simple charset
  var ncname = '[a-zA-Z_][\\w\\-\\.]*';
  var qnameCapture = '((?:' + ncname + '\\:)?' + ncname + ')';
  var startTagOpen = new RegExp('^<' + qnameCapture);
  var startTagClose = /^\s*(\/?)>/;
  var endTag = new RegExp('^<\\/' + qnameCapture + '[^>]*>');
  var doctype = /^<!DOCTYPE [^>]+>/i;
  var comment = /^<!--/;
  var conditionalComment = /^<!\[/;

  var IS_REGEX_CAPTURING_BROKEN = false;
  'x'.replace(/x(.)?/g, function (m, g) {
    IS_REGEX_CAPTURING_BROKEN = g === '';
  });

  // Special Elements (can contain anything)
  var isPlainTextElement = makeMap('script,style,textarea', true);
  var reCache = {};

  var decodingMap = {
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&amp;': '&',
    '&#10;': '\n'
  };
  var encodedAttr = /&(?:lt|gt|quot|amp);/g;
  var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;

  // #5992
  var isIgnoreNewlineTag = makeMap('pre,textarea', true);
  var shouldIgnoreFirstNewline = function (tag, html) {
    return tag && isIgnoreNewlineTag(tag) && html[0] === '\n';
  };

  function decodeAttr(value, shouldDecodeNewlines) {
    var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
    return value.replace(re, function (match) {
      return decodingMap[match];
    });
  }

  function parseHTML(html, options) {
    var stack = [];
    var expectHTML = options.expectHTML;
    var isUnaryTag$$1 = options.isUnaryTag || no;
    var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
    var index = 0;
    var last, lastTag;
    while (html) {
      last = html;
      // Make sure we're not in a plaintext content element like script/style
      if (!lastTag || !isPlainTextElement(lastTag)) {
        var textEnd = html.indexOf('<');
        if (textEnd === 0) {
          // Comment:
          if (comment.test(html)) {
            var commentEnd = html.indexOf('-->');

            if (commentEnd >= 0) {
              if (options.shouldKeepComment) {
                options.comment(html.substring(4, commentEnd));
              }
              advance(commentEnd + 3);
              continue;
            }
          }

          // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
          if (conditionalComment.test(html)) {
            var conditionalEnd = html.indexOf(']>');

            if (conditionalEnd >= 0) {
              advance(conditionalEnd + 2);
              continue;
            }
          }

          // Doctype:
          var doctypeMatch = html.match(doctype);
          if (doctypeMatch) {
            advance(doctypeMatch[0].length);
            continue;
          }

          // End tag:
          var endTagMatch = html.match(endTag);
          if (endTagMatch) {
            var curIndex = index;
            advance(endTagMatch[0].length);
            parseEndTag(endTagMatch[1], curIndex, index);
            continue;
          }

          // Start tag:
          var startTagMatch = parseStartTag();
          if (startTagMatch) {
            handleStartTag(startTagMatch);
            if (shouldIgnoreFirstNewline(lastTag, html)) {
              advance(1);
            }
            continue;
          }
        }

        var text = void 0,
            rest = void 0,
            next = void 0;
        if (textEnd >= 0) {
          rest = html.slice(textEnd);
          while (!endTag.test(rest) && !startTagOpen.test(rest) && !comment.test(rest) && !conditionalComment.test(rest)) {
            // < in plain text, be forgiving and treat it as text
            next = rest.indexOf('<', 1);
            if (next < 0) {
              break;
            }
            textEnd += next;
            rest = html.slice(textEnd);
          }
          text = html.substring(0, textEnd);
          advance(textEnd);
        }

        if (textEnd < 0) {
          text = html;
          html = '';
        }

        if (options.chars && text) {
          options.chars(text);
        }
      } else {
        var endTagLength = 0;
        var stackedTag = lastTag.toLowerCase();
        var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
        var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {
          endTagLength = endTag.length;
          if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
            text = text.replace(/<!--([\s\S]*?)-->/g, '$1').replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
          }
          if (shouldIgnoreFirstNewline(stackedTag, text)) {
            text = text.slice(1);
          }
          if (options.chars) {
            options.chars(text);
          }
          return '';
        });
        index += html.length - rest$1.length;
        html = rest$1;
        parseEndTag(stackedTag, index - endTagLength, index);
      }

      if (html === last) {
        options.chars && options.chars(html);
        if ('production' !== 'production' && !stack.length && options.warn) {
          options.warn("Mal-formatted tag at end of template: \"" + html + "\"");
        }
        break;
      }
    }

    // Clean up any remaining tags
    parseEndTag();

    function advance(n) {
      index += n;
      html = html.substring(n);
    }

    function parseStartTag() {
      var start = html.match(startTagOpen);
      if (start) {
        var match = {
          tagName: start[1],
          attrs: [],
          start: index
        };
        advance(start[0].length);
        var end, attr;
        while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {
          advance(attr[0].length);
          match.attrs.push(attr);
        }
        if (end) {
          match.unarySlash = end[1];
          advance(end[0].length);
          match.end = index;
          return match;
        }
      }
    }

    function handleStartTag(match) {
      var tagName = match.tagName;
      var unarySlash = match.unarySlash;

      if (expectHTML) {
        if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
          parseEndTag(lastTag);
        }
        if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
          parseEndTag(tagName);
        }
      }

      var unary = isUnaryTag$$1(tagName) || !!unarySlash;

      var l = match.attrs.length;
      var attrs = new Array(l);
      for (var i = 0; i < l; i++) {
        var args = match.attrs[i];
        // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778
        if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('""') === -1) {
          if (args[3] === '') {
            delete args[3];
          }
          if (args[4] === '') {
            delete args[4];
          }
          if (args[5] === '') {
            delete args[5];
          }
        }
        var value = args[3] || args[4] || args[5] || '';
        attrs[i] = {
          name: args[1],
          value: decodeAttr(value, options.shouldDecodeNewlines)
        };
      }

      if (!unary) {
        stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });
        lastTag = tagName;
      }

      if (options.start) {
        options.start(tagName, attrs, unary, match.start, match.end);
      }
    }

    function parseEndTag(tagName, start, end) {
      var pos, lowerCasedTagName;
      if (start == null) {
        start = index;
      }
      if (end == null) {
        end = index;
      }

      if (tagName) {
        lowerCasedTagName = tagName.toLowerCase();
      }

      // Find the closest opened tag of the same type
      if (tagName) {
        for (pos = stack.length - 1; pos >= 0; pos--) {
          if (stack[pos].lowerCasedTag === lowerCasedTagName) {
            break;
          }
        }
      } else {
        // If no tag name is provided, clean shop
        pos = 0;
      }

      if (pos >= 0) {
        // Close all the open elements, up the stack
        for (var i = stack.length - 1; i >= pos; i--) {
          if ('production' !== 'production' && (i > pos || !tagName) && options.warn) {
            options.warn("tag <" + stack[i].tag + "> has no matching end tag.");
          }
          if (options.end) {
            options.end(stack[i].tag, start, end);
          }
        }

        // Remove the open elements from the stack
        stack.length = pos;
        lastTag = pos && stack[pos - 1].tag;
      } else if (lowerCasedTagName === 'br') {
        if (options.start) {
          options.start(tagName, [], true, start, end);
        }
      } else if (lowerCasedTagName === 'p') {
        if (options.start) {
          options.start(tagName, [], false, start, end);
        }
        if (options.end) {
          options.end(tagName, start, end);
        }
      }
    }
  }

  /*  */

  var onRE = /^@|^v-on:/;
  var dirRE = /^v-|^@|^:/;
  var forAliasRE = /(.*?)\s+(?:in|of)\s+(.*)/;
  var forIteratorRE = /\((\{[^}]*\}|[^,]*),([^,]*)(?:,([^,]*))?\)/;

  var argRE = /:(.*)$/;
  var bindRE = /^:|^v-bind:/;
  var modifierRE = /\.[^.]+/g;

  var decodeHTMLCached = cached(he.decode);

  // configurable state
  var warn$2;
  var delimiters;
  var transforms;
  var preTransforms;
  var postTransforms;
  var platformIsPreTag;
  var platformMustUseProp;
  var platformGetTagNamespace;

  /**
   * Convert HTML string to AST.
   */
  function parse(template, options) {
    warn$2 = options.warn || baseWarn;

    platformIsPreTag = options.isPreTag || no;
    platformMustUseProp = options.mustUseProp || no;
    platformGetTagNamespace = options.getTagNamespace || no;

    transforms = pluckModuleFunction(options.modules, 'transformNode');
    preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
    postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');

    delimiters = options.delimiters;

    var stack = [];
    var preserveWhitespace = options.preserveWhitespace !== false;
    var root;
    var currentParent;
    var inVPre = false;
    var inPre = false;
    var warned = false;

    function warnOnce(msg) {
      if (!warned) {
        warned = true;
        warn$2(msg);
      }
    }

    function endPre(element) {
      // check pre state
      if (element.pre) {
        inVPre = false;
      }
      if (platformIsPreTag(element.tag)) {
        inPre = false;
      }
    }

    parseHTML(template, {
      warn: warn$2,
      expectHTML: options.expectHTML,
      isUnaryTag: options.isUnaryTag,
      canBeLeftOpenTag: options.canBeLeftOpenTag,
      shouldDecodeNewlines: options.shouldDecodeNewlines,
      shouldKeepComment: options.comments,
      start: function start(tag, attrs, unary) {
        // check namespace.
        // inherit parent ns if there is one
        var ns = currentParent && currentParent.ns || platformGetTagNamespace(tag);

        // handle IE svg bug
        /* istanbul ignore if */
        if (isIE && ns === 'svg') {
          attrs = guardIESVGBug(attrs);
        }

        var element = {
          type: 1,
          tag: tag,
          attrsList: attrs,
          attrsMap: makeAttrsMap(attrs),
          parent: currentParent,
          children: []
        };
        if (ns) {
          element.ns = ns;
        }

        if (isForbiddenTag(element) && !isServerRendering()) {
          element.forbidden = true;
          'production' !== 'production' && warn$2('Templates should only be responsible for mapping the state to the ' + 'UI. Avoid placing tags with side-effects in your templates, such as ' + "<" + tag + ">" + ', as they will not be parsed.');
        }

        // apply pre-transforms
        for (var i = 0; i < preTransforms.length; i++) {
          preTransforms[i](element, options);
        }

        if (!inVPre) {
          processPre(element);
          if (element.pre) {
            inVPre = true;
          }
        }
        if (platformIsPreTag(element.tag)) {
          inPre = true;
        }
        if (inVPre) {
          processRawAttrs(element);
        } else {
          processFor(element);
          processIf(element);
          processOnce(element);
          processKey(element);

          // determine whether this is a plain element after
          // removing structural attributes
          element.plain = !element.key && !attrs.length;

          processRef(element);
          processSlot(element);
          processComponent(element);
          for (var i$1 = 0; i$1 < transforms.length; i$1++) {
            transforms[i$1](element, options);
          }
          processAttrs(element);
        }

        function checkRootConstraints(el) {
          if ('production' !== 'production') {
            if (el.tag === 'slot' || el.tag === 'template') {
              warnOnce("Cannot use <" + el.tag + "> as component root element because it may " + 'contain multiple nodes.');
            }
            if (el.attrsMap.hasOwnProperty('v-for')) {
              warnOnce('Cannot use v-for on stateful component root element because ' + 'it renders multiple elements.');
            }
          }
        }

        // tree management
        if (!root) {
          root = element;
          checkRootConstraints(root);
        } else if (!stack.length) {
          // allow root elements with v-if, v-else-if and v-else
          if (root.if && (element.elseif || element.else)) {
            checkRootConstraints(element);
            addIfCondition(root, {
              exp: element.elseif,
              block: element
            });
          } else if ('production' !== 'production') {
            warnOnce("Component template should contain exactly one root element. " + "If you are using v-if on multiple elements, " + "use v-else-if to chain them instead.");
          }
        }
        if (currentParent && !element.forbidden) {
          if (element.elseif || element.else) {
            processIfConditions(element, currentParent);
          } else if (element.slotScope) {
            // scoped slot
            currentParent.plain = false;
            var name = element.slotTarget || '"default"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
          } else {
            currentParent.children.push(element);
            element.parent = currentParent;
          }
        }
        if (!unary) {
          currentParent = element;
          stack.push(element);
        } else {
          endPre(element);
        }
        // apply post-transforms
        for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {
          postTransforms[i$2](element, options);
        }
      },

      end: function end() {
        // remove trailing whitespace
        var element = stack[stack.length - 1];
        var lastNode = element.children[element.children.length - 1];
        if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {
          element.children.pop();
        }
        // pop stack
        stack.length -= 1;
        currentParent = stack[stack.length - 1];
        endPre(element);
      },

      chars: function chars(text) {
        if (!currentParent) {
          if ('production' !== 'production') {
            if (text === template) {
              warnOnce('Component template requires a root element, rather than just text.');
            } else if (text = text.trim()) {
              warnOnce("text \"" + text + "\" outside root element will be ignored.");
            }
          }
          return;
        }
        // IE textarea placeholder bug
        /* istanbul ignore if */
        if (isIE && currentParent.tag === 'textarea' && currentParent.attrsMap.placeholder === text) {
          return;
        }
        var children = currentParent.children;
        text = inPre || text.trim() ? isTextTag(currentParent) ? text : decodeHTMLCached(text)
        // only preserve whitespace if its not right after a starting tag
        : preserveWhitespace && children.length ? ' ' : '';
        if (text) {
          var expression;
          if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {
            children.push({
              type: 2,
              expression: expression,
              text: text
            });
          } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
            children.push({
              type: 3,
              text: text
            });
          }
        }
      },
      comment: function comment(text) {
        currentParent.children.push({
          type: 3,
          text: text,
          isComment: true
        });
      }
    });
    return root;
  }

  function processPre(el) {
    if (getAndRemoveAttr(el, 'v-pre') != null) {
      el.pre = true;
    }
  }

  function processRawAttrs(el) {
    var l = el.attrsList.length;
    if (l) {
      var attrs = el.attrs = new Array(l);
      for (var i = 0; i < l; i++) {
        attrs[i] = {
          name: el.attrsList[i].name,
          value: JSON.stringify(el.attrsList[i].value)
        };
      }
    } else if (!el.pre) {
      // non root node in pre blocks with no attributes
      el.plain = true;
    }
  }

  function processKey(el) {
    var exp = getBindingAttr(el, 'key');
    if (exp) {
      if ('production' !== 'production' && el.tag === 'template') {
        warn$2("<template> cannot be keyed. Place the key on real elements instead.");
      }
      el.key = exp;
    }
  }

  function processRef(el) {
    var ref = getBindingAttr(el, 'ref');
    if (ref) {
      el.ref = ref;
      el.refInFor = checkInFor(el);
    }
  }

  function processFor(el) {
    var exp;
    if (exp = getAndRemoveAttr(el, 'v-for')) {
      var inMatch = exp.match(forAliasRE);
      if (!inMatch) {
        'production' !== 'production' && warn$2("Invalid v-for expression: " + exp);
        return;
      }
      el.for = inMatch[2].trim();
      var alias = inMatch[1].trim();
      var iteratorMatch = alias.match(forIteratorRE);
      if (iteratorMatch) {
        el.alias = iteratorMatch[1].trim();
        el.iterator1 = iteratorMatch[2].trim();
        if (iteratorMatch[3]) {
          el.iterator2 = iteratorMatch[3].trim();
        }
      } else {
        el.alias = alias;
      }
    }
  }

  function processIf(el) {
    var exp = getAndRemoveAttr(el, 'v-if');
    if (exp) {
      el.if = exp;
      addIfCondition(el, {
        exp: exp,
        block: el
      });
    } else {
      if (getAndRemoveAttr(el, 'v-else') != null) {
        el.else = true;
      }
      var elseif = getAndRemoveAttr(el, 'v-else-if');
      if (elseif) {
        el.elseif = elseif;
      }
    }
  }

  function processIfConditions(el, parent) {
    var prev = findPrevElement(parent.children);
    if (prev && prev.if) {
      addIfCondition(prev, {
        exp: el.elseif,
        block: el
      });
    } else if ('production' !== 'production') {
      warn$2("v-" + (el.elseif ? 'else-if="' + el.elseif + '"' : 'else') + " " + "used on element <" + el.tag + "> without corresponding v-if.");
    }
  }

  function findPrevElement(children) {
    var i = children.length;
    while (i--) {
      if (children[i].type === 1) {
        return children[i];
      } else {
        if ('production' !== 'production' && children[i].text !== ' ') {
          warn$2("text \"" + children[i].text.trim() + "\" between v-if and v-else(-if) " + "will be ignored.");
        }
        children.pop();
      }
    }
  }

  function addIfCondition(el, condition) {
    if (!el.ifConditions) {
      el.ifConditions = [];
    }
    el.ifConditions.push(condition);
  }

  function processOnce(el) {
    var once$$1 = getAndRemoveAttr(el, 'v-once');
    if (once$$1 != null) {
      el.once = true;
    }
  }

  function processSlot(el) {
    if (el.tag === 'slot') {
      el.slotName = getBindingAttr(el, 'name');
      if ('production' !== 'production' && el.key) {
        warn$2("`key` does not work on <slot> because slots are abstract outlets " + "and can possibly expand into multiple elements. " + "Use the key on a wrapping element instead.");
      }
    } else {
      var slotTarget = getBindingAttr(el, 'slot');
      if (slotTarget) {
        el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget;
      }
      if (el.tag === 'template') {
        el.slotScope = getAndRemoveAttr(el, 'scope');
      }
    }
  }

  function processComponent(el) {
    var binding;
    if (binding = getBindingAttr(el, 'is')) {
      el.component = binding;
    }
    if (getAndRemoveAttr(el, 'inline-template') != null) {
      el.inlineTemplate = true;
    }
  }

  function processAttrs(el) {
    var list = el.attrsList;
    var i, l, name, rawName, value, modifiers, isProp;
    for (i = 0, l = list.length; i < l; i++) {
      name = rawName = list[i].name;
      value = list[i].value;
      if (dirRE.test(name)) {
        // mark element as dynamic
        el.hasBindings = true;
        // modifiers
        modifiers = parseModifiers(name);
        if (modifiers) {
          name = name.replace(modifierRE, '');
        }
        if (bindRE.test(name)) {
          // v-bind
          name = name.replace(bindRE, '');
          value = parseFilters(value);
          isProp = false;
          if (modifiers) {
            if (modifiers.prop) {
              isProp = true;
              name = camelize(name);
              if (name === 'innerHtml') {
                name = 'innerHTML';
              }
            }
            if (modifiers.camel) {
              name = camelize(name);
            }
            if (modifiers.sync) {
              addHandler(el, "update:" + camelize(name), genAssignmentCode(value, "$event"));
            }
          }
          if (isProp || !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)) {
            addProp(el, name, value);
          } else {
            addAttr(el, name, value);
          }
        } else if (onRE.test(name)) {
          // v-on
          name = name.replace(onRE, '');
          addHandler(el, name, value, modifiers, false, warn$2);
        } else {
          // normal directives
          name = name.replace(dirRE, '');
          // parse arg
          var argMatch = name.match(argRE);
          var arg = argMatch && argMatch[1];
          if (arg) {
            name = name.slice(0, -(arg.length + 1));
          }
          addDirective(el, name, rawName, value, arg, modifiers);
          if ('production' !== 'production' && name === 'model') {
            checkForAliasModel(el, value);
          }
        }
      } else {
        // literal attribute
        if ('production' !== 'production') {
          var expression = parseText(value, delimiters);
          if (expression) {
            warn$2(name + "=\"" + value + "\": " + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div id="{{ val }}">, use <div :id="val">.');
          }
        }
        addAttr(el, name, JSON.stringify(value));
      }
    }
  }

  function checkInFor(el) {
    var parent = el;
    while (parent) {
      if (parent.for !== undefined) {
        return true;
      }
      parent = parent.parent;
    }
    return false;
  }

  function parseModifiers(name) {
    var match = name.match(modifierRE);
    if (match) {
      var ret = {};
      match.forEach(function (m) {
        ret[m.slice(1)] = true;
      });
      return ret;
    }
  }

  function makeAttrsMap(attrs) {
    var map = {};
    for (var i = 0, l = attrs.length; i < l; i++) {
      if ('production' !== 'production' && map[attrs[i].name] && !isIE && !isEdge) {
        warn$2('duplicate attribute: ' + attrs[i].name);
      }
      map[attrs[i].name] = attrs[i].value;
    }
    return map;
  }

  // for script (e.g. type="x/template") or style, do not decode content
  function isTextTag(el) {
    return el.tag === 'script' || el.tag === 'style';
  }

  function isForbiddenTag(el) {
    return el.tag === 'style' || el.tag === 'script' && (!el.attrsMap.type || el.attrsMap.type === 'text/javascript');
  }

  var ieNSBug = /^xmlns:NS\d+/;
  var ieNSPrefix = /^NS\d+:/;

  /* istanbul ignore next */
  function guardIESVGBug(attrs) {
    var res = [];
    for (var i = 0; i < attrs.length; i++) {
      var attr = attrs[i];
      if (!ieNSBug.test(attr.name)) {
        attr.name = attr.name.replace(ieNSPrefix, '');
        res.push(attr);
      }
    }
    return res;
  }

  function checkForAliasModel(el, value) {
    var _el = el;
    while (_el) {
      if (_el.for && _el.alias === value) {
        warn$2("<" + el.tag + " v-model=\"" + value + "\">: " + "You are binding v-model directly to a v-for iteration alias. " + "This will not be able to modify the v-for source array because " + "writing to the alias is like modifying a function local variable. " + "Consider using an array of objects and use v-model on an object property instead.");
      }
      _el = _el.parent;
    }
  }

  /*  */

  var isStaticKey;
  var isPlatformReservedTag;

  var genStaticKeysCached = cached(genStaticKeys$1);

  /**
   * Goal of the optimizer: walk the generated template AST tree
   * and detect sub-trees that are purely static, i.e. parts of
   * the DOM that never needs to change.
   *
   * Once we detect these sub-trees, we can:
   *
   * 1. Hoist them into constants, so that we no longer need to
   *    create fresh nodes for them on each re-render;
   * 2. Completely skip them in the patching process.
   */
  function optimize(root, options) {
    if (!root) {
      return;
    }
    isStaticKey = genStaticKeysCached(options.staticKeys || '');
    isPlatformReservedTag = options.isReservedTag || no;
    // first pass: mark all non-static nodes.
    markStatic$1(root);
    // second pass: mark static roots.
    markStaticRoots(root, false);
  }

  function genStaticKeys$1(keys) {
    return makeMap('type,tag,attrsList,attrsMap,plain,parent,children,attrs' + (keys ? ',' + keys : ''));
  }

  function markStatic$1(node) {
    node.static = isStatic(node);
    if (node.type === 1) {
      // do not make component slot content static. this avoids
      // 1. components not able to mutate slot nodes
      // 2. static slot content fails for hot-reloading
      if (!isPlatformReservedTag(node.tag) && node.tag !== 'slot' && node.attrsMap['inline-template'] == null) {
        return;
      }
      for (var i = 0, l = node.children.length; i < l; i++) {
        var child = node.children[i];
        markStatic$1(child);
        if (!child.static) {
          node.static = false;
        }
      }
      if (node.ifConditions) {
        for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
          var block = node.ifConditions[i$1].block;
          markStatic$1(block);
          if (!block.static) {
            node.static = false;
          }
        }
      }
    }
  }

  function markStaticRoots(node, isInFor) {
    if (node.type === 1) {
      if (node.static || node.once) {
        node.staticInFor = isInFor;
      }
      // For a node to qualify as a static root, it should have children that
      // are not just static text. Otherwise the cost of hoisting out will
      // outweigh the benefits and it's better off to just always render it fresh.
      if (node.static && node.children.length && !(node.children.length === 1 && node.children[0].type === 3)) {
        node.staticRoot = true;
        return;
      } else {
        node.staticRoot = false;
      }
      if (node.children) {
        for (var i = 0, l = node.children.length; i < l; i++) {
          markStaticRoots(node.children[i], isInFor || !!node.for);
        }
      }
      if (node.ifConditions) {
        for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
          markStaticRoots(node.ifConditions[i$1].block, isInFor);
        }
      }
    }
  }

  function isStatic(node) {
    if (node.type === 2) {
      // expression
      return false;
    }
    if (node.type === 3) {
      // text
      return true;
    }
    return !!(node.pre || !node.hasBindings && // no dynamic bindings
    !node.if && !node.for && // not v-if or v-for or v-else
    !isBuiltInTag(node.tag) && // not a built-in
    isPlatformReservedTag(node.tag) && // not a component
    !isDirectChildOfTemplateFor(node) && Object.keys(node).every(isStaticKey));
  }

  function isDirectChildOfTemplateFor(node) {
    while (node.parent) {
      node = node.parent;
      if (node.tag !== 'template') {
        return false;
      }
      if (node.for) {
        return true;
      }
    }
    return false;
  }

  /*  */

  var fnExpRE = /^\s*([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/;
  var simplePathRE = /^\s*[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['.*?']|\[".*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*\s*$/;

  // keyCode aliases
  var keyCodes = {
    esc: 27,
    tab: 9,
    enter: 13,
    space: 32,
    up: 38,
    left: 37,
    right: 39,
    down: 40,
    'delete': [8, 46]
  };

  // #4868: modifiers that prevent the execution of the listener
  // need to explicitly return null so that we can determine whether to remove
  // the listener for .once
  var genGuard = function (condition) {
    return "if(" + condition + ")return null;";
  };

  var modifierCode = {
    stop: '$event.stopPropagation();',
    prevent: '$event.preventDefault();',
    self: genGuard("$event.target !== $event.currentTarget"),
    ctrl: genGuard("!$event.ctrlKey"),
    shift: genGuard("!$event.shiftKey"),
    alt: genGuard("!$event.altKey"),
    meta: genGuard("!$event.metaKey"),
    left: genGuard("'button' in $event && $event.button !== 0"),
    middle: genGuard("'button' in $event && $event.button !== 1"),
    right: genGuard("'button' in $event && $event.button !== 2")
  };

  function genHandlers(events, isNative, warn) {
    var res = isNative ? 'nativeOn:{' : 'on:{';
    for (var name in events) {
      var handler = events[name];
      // #5330: warn click.right, since right clicks do not actually fire click events.
      if ('production' !== 'production' && name === 'click' && handler && handler.modifiers && handler.modifiers.right) {
        warn("Use \"contextmenu\" instead of \"click.right\" since right clicks " + "do not actually fire \"click\" events.");
      }
      res += "\"" + name + "\":" + genHandler(name, handler) + ",";
    }
    return res.slice(0, -1) + '}';
  }

  function genHandler(name, handler) {
    if (!handler) {
      return 'function(){}';
    }

    if (Array.isArray(handler)) {
      return "[" + handler.map(function (handler) {
        return genHandler(name, handler);
      }).join(',') + "]";
    }

    var isMethodPath = simplePathRE.test(handler.value);
    var isFunctionExpression = fnExpRE.test(handler.value);

    if (!handler.modifiers) {
      return isMethodPath || isFunctionExpression ? handler.value : "function($event){" + handler.value + "}"; // inline statement
    } else {
      var code = '';
      var genModifierCode = '';
      var keys = [];
      for (var key in handler.modifiers) {
        if (modifierCode[key]) {
          genModifierCode += modifierCode[key];
          // left/right
          if (keyCodes[key]) {
            keys.push(key);
          }
        } else {
          keys.push(key);
        }
      }
      if (keys.length) {
        code += genKeyFilter(keys);
      }
      // Make sure modifiers like prevent and stop get executed after key filtering
      if (genModifierCode) {
        code += genModifierCode;
      }
      var handlerCode = isMethodPath ? handler.value + '($event)' : isFunctionExpression ? "(" + handler.value + ")($event)" : handler.value;
      return "function($event){" + code + handlerCode + "}";
    }
  }

  function genKeyFilter(keys) {
    return "if(!('button' in $event)&&" + keys.map(genFilterCode).join('&&') + ")return null;";
  }

  function genFilterCode(key) {
    var keyVal = parseInt(key, 10);
    if (keyVal) {
      return "$event.keyCode!==" + keyVal;
    }
    var alias = keyCodes[key];
    return "_k($event.keyCode," + JSON.stringify(key) + (alias ? ',' + JSON.stringify(alias) : '') + ")";
  }

  /*  */

  function on(el, dir) {
    if ('production' !== 'production' && dir.modifiers) {
      warn("v-on without argument does not support modifiers.");
    }
    el.wrapListeners = function (code) {
      return "_g(" + code + "," + dir.value + ")";
    };
  }

  /*  */

  function bind$1(el, dir) {
    el.wrapData = function (code) {
      return "_b(" + code + ",'" + el.tag + "'," + dir.value + "," + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + ")";
    };
  }

  /*  */

  var baseDirectives = {
    on: on,
    bind: bind$1,
    cloak: noop
  };

  /*  */

  var CodegenState = function CodegenState(options) {
    this.options = options;
    this.warn = options.warn || baseWarn;
    this.transforms = pluckModuleFunction(options.modules, 'transformCode');
    this.dataGenFns = pluckModuleFunction(options.modules, 'genData');
    this.directives = extend(extend({}, baseDirectives), options.directives);
    var isReservedTag = options.isReservedTag || no;
    this.maybeComponent = function (el) {
      return !isReservedTag(el.tag);
    };
    this.onceId = 0;
    this.staticRenderFns = [];
  };

  function generate(ast, options) {
    var state = new CodegenState(options);
    var code = ast ? genElement(ast, state) : '_c("div")';
    return {
      render: "with(this){return " + code + "}",
      staticRenderFns: state.staticRenderFns
    };
  }

  function genElement(el, state) {
    if (el.staticRoot && !el.staticProcessed) {
      return genStatic(el, state);
    } else if (el.once && !el.onceProcessed) {
      return genOnce(el, state);
    } else if (el.for && !el.forProcessed) {
      return genFor(el, state);
    } else if (el.if && !el.ifProcessed) {
      return genIf(el, state);
    } else if (el.tag === 'template' && !el.slotTarget) {
      return genChildren(el, state) || 'void 0';
    } else if (el.tag === 'slot') {
      return genSlot(el, state);
    } else {
      // component or element
      var code;
      if (el.component) {
        code = genComponent(el.component, el, state);
      } else {
        var data = el.plain ? undefined : genData$2(el, state);

        var children = el.inlineTemplate ? null : genChildren(el, state, true);
        code = "_c('" + el.tag + "'" + (data ? "," + data : '') + (children ? "," + children : '') + ")";
      }
      // module transforms
      for (var i = 0; i < state.transforms.length; i++) {
        code = state.transforms[i](el, code);
      }
      return code;
    }
  }

  // hoist static sub-trees out
  function genStatic(el, state) {
    el.staticProcessed = true;
    state.staticRenderFns.push("with(this){return " + genElement(el, state) + "}");
    return "_m(" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + ")";
  }

  // v-once
  function genOnce(el, state) {
    el.onceProcessed = true;
    if (el.if && !el.ifProcessed) {
      return genIf(el, state);
    } else if (el.staticInFor) {
      var key = '';
      var parent = el.parent;
      while (parent) {
        if (parent.for) {
          key = parent.key;
          break;
        }
        parent = parent.parent;
      }
      if (!key) {
        'production' !== 'production' && state.warn("v-once can only be used inside v-for that is keyed. ");
        return genElement(el, state);
      }
      return "_o(" + genElement(el, state) + "," + state.onceId++ + (key ? "," + key : "") + ")";
    } else {
      return genStatic(el, state);
    }
  }

  function genIf(el, state, altGen, altEmpty) {
    el.ifProcessed = true; // avoid recursion
    return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty);
  }

  function genIfConditions(conditions, state, altGen, altEmpty) {
    if (!conditions.length) {
      return altEmpty || '_e()';
    }

    var condition = conditions.shift();
    if (condition.exp) {
      return "(" + condition.exp + ")?" + genTernaryExp(condition.block) + ":" + genIfConditions(conditions, state, altGen, altEmpty);
    } else {
      return "" + genTernaryExp(condition.block);
    }

    // v-if with v-once should generate code like (a)?_m(0):_m(1)
    function genTernaryExp(el) {
      return altGen ? altGen(el, state) : el.once ? genOnce(el, state) : genElement(el, state);
    }
  }

  function genFor(el, state, altGen, altHelper) {
    var exp = el.for;
    var alias = el.alias;
    var iterator1 = el.iterator1 ? "," + el.iterator1 : '';
    var iterator2 = el.iterator2 ? "," + el.iterator2 : '';

    if ('production' !== 'production' && state.maybeComponent(el) && el.tag !== 'slot' && el.tag !== 'template' && !el.key) {
      state.warn("<" + el.tag + " v-for=\"" + alias + " in " + exp + "\">: component lists rendered with " + "v-for should have explicit keys. " + "See https://vuejs.org/guide/list.html#key for more info.", true /* tip */
      );
    }

    el.forProcessed = true; // avoid recursion
    return (altHelper || '_l') + "((" + exp + ")," + "function(" + alias + iterator1 + iterator2 + "){" + "return " + (altGen || genElement)(el, state) + '})';
  }

  function genData$2(el, state) {
    var data = '{';

    // directives first.
    // directives may mutate the el's other properties before they are generated.
    var dirs = genDirectives(el, state);
    if (dirs) {
      data += dirs + ',';
    }

    // key
    if (el.key) {
      data += "key:" + el.key + ",";
    }
    // ref
    if (el.ref) {
      data += "ref:" + el.ref + ",";
    }
    if (el.refInFor) {
      data += "refInFor:true,";
    }
    // pre
    if (el.pre) {
      data += "pre:true,";
    }
    // record original tag name for components using "is" attribute
    if (el.component) {
      data += "tag:\"" + el.tag + "\",";
    }
    // module data generation functions
    for (var i = 0; i < state.dataGenFns.length; i++) {
      data += state.dataGenFns[i](el);
    }
    // attributes
    if (el.attrs) {
      data += "attrs:{" + genProps(el.attrs) + "},";
    }
    // DOM props
    if (el.props) {
      data += "domProps:{" + genProps(el.props) + "},";
    }
    // event handlers
    if (el.events) {
      data += genHandlers(el.events, false, state.warn) + ",";
    }
    if (el.nativeEvents) {
      data += genHandlers(el.nativeEvents, true, state.warn) + ",";
    }
    // slot target
    if (el.slotTarget) {
      data += "slot:" + el.slotTarget + ",";
    }
    // scoped slots
    if (el.scopedSlots) {
      data += genScopedSlots(el.scopedSlots, state) + ",";
    }
    // component v-model
    if (el.model) {
      data += "model:{value:" + el.model.value + ",callback:" + el.model.callback + ",expression:" + el.model.expression + "},";
    }
    // inline-template
    if (el.inlineTemplate) {
      var inlineTemplate = genInlineTemplate(el, state);
      if (inlineTemplate) {
        data += inlineTemplate + ",";
      }
    }
    data = data.replace(/,$/, '') + '}';
    // v-bind data wrap
    if (el.wrapData) {
      data = el.wrapData(data);
    }
    // v-on data wrap
    if (el.wrapListeners) {
      data = el.wrapListeners(data);
    }
    return data;
  }

  function genDirectives(el, state) {
    var dirs = el.directives;
    if (!dirs) {
      return;
    }
    var res = 'directives:[';
    var hasRuntime = false;
    var i, l, dir, needRuntime;
    for (i = 0, l = dirs.length; i < l; i++) {
      dir = dirs[i];
      needRuntime = true;
      var gen = state.directives[dir.name];
      if (gen) {
        // compile-time directive that manipulates AST.
        // returns true if it also needs a runtime counterpart.
        needRuntime = !!gen(el, dir, state.warn);
      }
      if (needRuntime) {
        hasRuntime = true;
        res += "{name:\"" + dir.name + "\",rawName:\"" + dir.rawName + "\"" + (dir.value ? ",value:(" + dir.value + "),expression:" + JSON.stringify(dir.value) : '') + (dir.arg ? ",arg:\"" + dir.arg + "\"" : '') + (dir.modifiers ? ",modifiers:" + JSON.stringify(dir.modifiers) : '') + "},";
      }
    }
    if (hasRuntime) {
      return res.slice(0, -1) + ']';
    }
  }

  function genInlineTemplate(el, state) {
    var ast = el.children[0];
    if ('production' !== 'production' && (el.children.length > 1 || ast.type !== 1)) {
      state.warn('Inline-template components must have exactly one child element.');
    }
    if (ast.type === 1) {
      var inlineRenderFns = generate(ast, state.options);
      return "inlineTemplate:{render:function(){" + inlineRenderFns.render + "},staticRenderFns:[" + inlineRenderFns.staticRenderFns.map(function (code) {
        return "function(){" + code + "}";
      }).join(',') + "]}";
    }
  }

  function genScopedSlots(slots, state) {
    return "scopedSlots:_u([" + Object.keys(slots).map(function (key) {
      return genScopedSlot(key, slots[key], state);
    }).join(',') + "])";
  }

  function genScopedSlot(key, el, state) {
    if (el.for && !el.forProcessed) {
      return genForScopedSlot(key, el, state);
    }
    return "{key:" + key + ",fn:function(" + String(el.attrsMap.scope) + "){" + "return " + (el.tag === 'template' ? genChildren(el, state) || 'void 0' : genElement(el, state)) + "}}";
  }

  function genForScopedSlot(key, el, state) {
    var exp = el.for;
    var alias = el.alias;
    var iterator1 = el.iterator1 ? "," + el.iterator1 : '';
    var iterator2 = el.iterator2 ? "," + el.iterator2 : '';
    el.forProcessed = true; // avoid recursion
    return "_l((" + exp + ")," + "function(" + alias + iterator1 + iterator2 + "){" + "return " + genScopedSlot(key, el, state) + '})';
  }

  function genChildren(el, state, checkSkip, altGenElement, altGenNode) {
    var children = el.children;
    if (children.length) {
      var el$1 = children[0];
      // optimize single v-for
      if (children.length === 1 && el$1.for && el$1.tag !== 'template' && el$1.tag !== 'slot') {
        return (altGenElement || genElement)(el$1, state);
      }
      var normalizationType = checkSkip ? getNormalizationType(children, state.maybeComponent) : 0;
      var gen = altGenNode || genNode;
      return "[" + children.map(function (c) {
        return gen(c, state);
      }).join(',') + "]" + (normalizationType ? "," + normalizationType : '');
    }
  }

  // determine the normalization needed for the children array.
  // 0: no normalization needed
  // 1: simple normalization needed (possible 1-level deep nested array)
  // 2: full normalization needed
  function getNormalizationType(children, maybeComponent) {
    var res = 0;
    for (var i = 0; i < children.length; i++) {
      var el = children[i];
      if (el.type !== 1) {
        continue;
      }
      if (needsNormalization(el) || el.ifConditions && el.ifConditions.some(function (c) {
        return needsNormalization(c.block);
      })) {
        res = 2;
        break;
      }
      if (maybeComponent(el) || el.ifConditions && el.ifConditions.some(function (c) {
        return maybeComponent(c.block);
      })) {
        res = 1;
      }
    }
    return res;
  }

  function needsNormalization(el) {
    return el.for !== undefined || el.tag === 'template' || el.tag === 'slot';
  }

  function genNode(node, state) {
    if (node.type === 1) {
      return genElement(node, state);
    }if (node.type === 3 && node.isComment) {
      return genComment(node);
    } else {
      return genText(node);
    }
  }

  function genText(text) {
    return "_v(" + (text.type === 2 ? text.expression // no need for () because already wrapped in _s()
    : transformSpecialNewlines(JSON.stringify(text.text))) + ")";
  }

  function genComment(comment) {
    return "_e(" + JSON.stringify(comment.text) + ")";
  }

  function genSlot(el, state) {
    var slotName = el.slotName || '"default"';
    var children = genChildren(el, state);
    var res = "_t(" + slotName + (children ? "," + children : '');
    var attrs = el.attrs && "{" + el.attrs.map(function (a) {
      return camelize(a.name) + ":" + a.value;
    }).join(',') + "}";
    var bind$$1 = el.attrsMap['v-bind'];
    if ((attrs || bind$$1) && !children) {
      res += ",null";
    }
    if (attrs) {
      res += "," + attrs;
    }
    if (bind$$1) {
      res += (attrs ? '' : ',null') + "," + bind$$1;
    }
    return res + ')';
  }

  // componentName is el.component, take it as argument to shun flow's pessimistic refinement
  function genComponent(componentName, el, state) {
    var children = el.inlineTemplate ? null : genChildren(el, state, true);
    return "_c(" + componentName + "," + genData$2(el, state) + (children ? "," + children : '') + ")";
  }

  function genProps(props) {
    var res = '';
    for (var i = 0; i < props.length; i++) {
      var prop = props[i];
      res += "\"" + prop.name + "\":" + transformSpecialNewlines(prop.value) + ",";
    }
    return res.slice(0, -1);
  }

  // #3895, #4268
  function transformSpecialNewlines(text) {
    return text.replace(/\u2028/g, '\\u2028').replace(/\u2029/g, '\\u2029');
  }

  /*  */

  // these keywords should not appear inside expressions, but operators like
  // typeof, instanceof and in are allowed
  var prohibitedKeywordRE = new RegExp('\\b' + ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' + 'super,throw,while,yield,delete,export,import,return,switch,default,' + 'extends,finally,continue,debugger,function,arguments').split(',').join('\\b|\\b') + '\\b');

  // these unary operators should not be used as property/method names
  var unaryOperatorsRE = new RegExp('\\b' + 'delete,typeof,void'.split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)');

  // check valid identifier for v-for
  var identRE = /[A-Za-z_$][\w$]*/;

  // strip strings in expressions
  var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;

  // detect problematic expressions in a template
  function detectErrors(ast) {
    var errors = [];
    if (ast) {
      checkNode(ast, errors);
    }
    return errors;
  }

  function checkNode(node, errors) {
    if (node.type === 1) {
      for (var name in node.attrsMap) {
        if (dirRE.test(name)) {
          var value = node.attrsMap[name];
          if (value) {
            if (name === 'v-for') {
              checkFor(node, "v-for=\"" + value + "\"", errors);
            } else if (onRE.test(name)) {
              checkEvent(value, name + "=\"" + value + "\"", errors);
            } else {
              checkExpression(value, name + "=\"" + value + "\"", errors);
            }
          }
        }
      }
      if (node.children) {
        for (var i = 0; i < node.children.length; i++) {
          checkNode(node.children[i], errors);
        }
      }
    } else if (node.type === 2) {
      checkExpression(node.expression, node.text, errors);
    }
  }

  function checkEvent(exp, text, errors) {
    var stipped = exp.replace(stripStringRE, '');
    var keywordMatch = stipped.match(unaryOperatorsRE);
    if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {
      errors.push("avoid using JavaScript unary operator as property name: " + "\"" + keywordMatch[0] + "\" in expression " + text.trim());
    }
    checkExpression(exp, text, errors);
  }

  function checkFor(node, text, errors) {
    checkExpression(node.for || '', text, errors);
    checkIdentifier(node.alias, 'v-for alias', text, errors);
    checkIdentifier(node.iterator1, 'v-for iterator', text, errors);
    checkIdentifier(node.iterator2, 'v-for iterator', text, errors);
  }

  function checkIdentifier(ident, type, text, errors) {
    if (typeof ident === 'string' && !identRE.test(ident)) {
      errors.push("invalid " + type + " \"" + ident + "\" in expression: " + text.trim());
    }
  }

  function checkExpression(exp, text, errors) {
    try {
      new Function("return " + exp);
    } catch (e) {
      var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);
      if (keywordMatch) {
        errors.push("avoid using JavaScript keyword as property name: " + "\"" + keywordMatch[0] + "\" in expression " + text.trim());
      } else {
        errors.push("invalid expression: " + text.trim());
      }
    }
  }

  /*  */

  function createFunction(code, errors) {
    try {
      return new Function(code);
    } catch (err) {
      errors.push({ err: err, code: code });
      return noop;
    }
  }

  function createCompileToFunctionFn(compile) {
    var cache = Object.create(null);

    return function compileToFunctions(template, options, vm) {
      options = options || {};

      /* istanbul ignore if */
      if ('production' !== 'production') {
        // detect possible CSP restriction
        try {
          new Function('return 1');
        } catch (e) {
          if (e.toString().match(/unsafe-eval|CSP/)) {
            warn('It seems you are using the standalone build of Vue.js in an ' + 'environment with Content Security Policy that prohibits unsafe-eval. ' + 'The template compiler cannot work in this environment. Consider ' + 'relaxing the policy to allow unsafe-eval or pre-compiling your ' + 'templates into render functions.');
          }
        }
      }

      // check cache
      var key = options.delimiters ? String(options.delimiters) + template : template;
      if (cache[key]) {
        return cache[key];
      }

      // compile
      var compiled = compile(template, options);

      // check compilation errors/tips
      if ('production' !== 'production') {
        if (compiled.errors && compiled.errors.length) {
          warn("Error compiling template:\n\n" + template + "\n\n" + compiled.errors.map(function (e) {
            return "- " + e;
          }).join('\n') + '\n', vm);
        }
        if (compiled.tips && compiled.tips.length) {
          compiled.tips.forEach(function (msg) {
            return tip(msg, vm);
          });
        }
      }

      // turn code into functions
      var res = {};
      var fnGenErrors = [];
      res.render = createFunction(compiled.render, fnGenErrors);
      res.staticRenderFns = compiled.staticRenderFns.map(function (code) {
        return createFunction(code, fnGenErrors);
      });

      // check function generation errors.
      // this should only happen if there is a bug in the compiler itself.
      // mostly for codegen development use
      /* istanbul ignore if */
      if ('production' !== 'production') {
        if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
          warn("Failed to generate render function:\n\n" + fnGenErrors.map(function (ref) {
            var err = ref.err;
            var code = ref.code;

            return err.toString() + " in\n\n" + code + "\n";
          }).join('\n'), vm);
        }
      }

      return cache[key] = res;
    };
  }

  /*  */

  function createCompilerCreator(baseCompile) {
    return function createCompiler(baseOptions) {
      function compile(template, options) {
        var finalOptions = Object.create(baseOptions);
        var errors = [];
        var tips = [];
        finalOptions.warn = function (msg, tip) {
          (tip ? tips : errors).push(msg);
        };

        if (options) {
          // merge custom modules
          if (options.modules) {
            finalOptions.modules = (baseOptions.modules || []).concat(options.modules);
          }
          // merge custom directives
          if (options.directives) {
            finalOptions.directives = extend(Object.create(baseOptions.directives), options.directives);
          }
          // copy other options
          for (var key in options) {
            if (key !== 'modules' && key !== 'directives') {
              finalOptions[key] = options[key];
            }
          }
        }

        var compiled = baseCompile(template, finalOptions);
        if ('production' !== 'production') {
          errors.push.apply(errors, detectErrors(compiled.ast));
        }
        compiled.errors = errors;
        compiled.tips = tips;
        return compiled;
      }

      return {
        compile: compile,
        compileToFunctions: createCompileToFunctionFn(compile)
      };
    };
  }

  /*  */

  // `createCompilerCreator` allows creating compilers that use alternative
  // parser/optimizer/codegen, e.g the SSR optimizing compiler.
  // Here we just export a default compiler using the default parts.
  var createCompiler = createCompilerCreator(function baseCompile(template, options) {
    var ast = parse(template.trim(), options);
    optimize(ast, options);
    var code = generate(ast, options);
    return {
      ast: ast,
      render: code.render,
      staticRenderFns: code.staticRenderFns
    };
  });

  /*  */

  var ref$1 = createCompiler(baseOptions);
  var compileToFunctions = ref$1.compileToFunctions;

  /*  */

  var idToTemplate = cached(function (id) {
    var el = query(id);
    return el && el.innerHTML;
  });

  var mount = Vue$3.prototype.$mount;
  Vue$3.prototype.$mount = function (el, hydrating) {
    el = el && query(el);

    /* istanbul ignore if */
    if (el === document.body || el === document.documentElement) {
      'production' !== 'production' && warn("Do not mount Vue to <html> or <body> - mount to normal elements instead.");
      return this;
    }

    var options = this.$options;
    // resolve template/el and convert to render function
    if (!options.render) {
      var template = options.template;
      if (template) {
        if (typeof template === 'string') {
          if (template.charAt(0) === '#') {
            template = idToTemplate(template);
            /* istanbul ignore if */
            if ('production' !== 'production' && !template) {
              warn("Template element not found or is empty: " + options.template, this);
            }
          }
        } else if (template.nodeType) {
          template = template.innerHTML;
        } else {
          if ('production' !== 'production') {
            warn('invalid template option:' + template, this);
          }
          return this;
        }
      } else if (el) {
        template = getOuterHTML(el);
      }
      if (template) {
        /* istanbul ignore if */
        if ('production' !== 'production' && config.performance && mark) {
          mark('compile');
        }

        var ref = compileToFunctions(template, {
          shouldDecodeNewlines: shouldDecodeNewlines,
          delimiters: options.delimiters,
          comments: options.comments
        }, this);
        var render = ref.render;
        var staticRenderFns = ref.staticRenderFns;
        options.render = render;
        options.staticRenderFns = staticRenderFns;

        /* istanbul ignore if */
        if ('production' !== 'production' && config.performance && mark) {
          mark('compile end');
          measure(this._name + " compile", 'compile', 'compile end');
        }
      }
    }
    return mount.call(this, el, hydrating);
  };

  /**
   * Get outerHTML of elements, taking care
   * of SVG elements in IE as well.
   */
  function getOuterHTML(el) {
    if (el.outerHTML) {
      return el.outerHTML;
    } else {
      var container = document.createElement('div');
      container.appendChild(el.cloneNode(true));
      return container.innerHTML;
    }
  }

  Vue$3.compile = compileToFunctions;

  module.exports = Vue$3;
  return module.exports;
});
System.register('OpenGroup/plugins/multichat/plugin.js', ['npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/createClass.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js', 'OpenGroup/core/Plugin', 'vue-chat-scroll', 'vue/dist/vue.common'], function (_export, _context) {
    "use strict";

    var _classCallCheck, _createClass, _possibleConstructorReturn, _inherits, Plugin, VueChatScroll, Vue, MultiChat;

    return {
        setters: [function (_npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs) {
            _classCallCheck = _npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersCreateClassJs) {
            _createClass = _npmSystemjsPluginBabel0017BabelHelpersCreateClassJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs) {
            _possibleConstructorReturn = _npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersInheritsJs) {
            _inherits = _npmSystemjsPluginBabel0017BabelHelpersInheritsJs.default;
        }, function (_OpenGroupCorePlugin) {
            Plugin = _OpenGroupCorePlugin.default;
        }, function (_vueChatScroll) {
            VueChatScroll = _vueChatScroll.default;
        }, function (_vueDistVueCommon) {
            Vue = _vueDistVueCommon.default;
        }],
        execute: function () {
            MultiChat = function (_Plugin) {
                _inherits(MultiChat, _Plugin);

                /**
                 * @param group.
                 * @param config.
                 * @constructor
                 */
                function MultiChat(group) {
                    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

                    _classCallCheck(this, MultiChat);

                    var _this = _possibleConstructorReturn(this, (MultiChat.__proto__ || Object.getPrototypeOf(MultiChat)).call(this));

                    _this.label = 'MultiChat';
                    _this.description = 'Lorem ipsum';
                    _this.name = 'multichat';
                    _this.config = {};
                    _this.messages = [];
                    _this.componentNames = ['multichat'];

                    _this.group = group;
                    Object.assign(_this.config, config);
                    Vue.use(VueChatScroll);
                    return _this;
                }

                _createClass(MultiChat, [{
                    key: 'getMenuItems',
                    value: function getMenuItems() {
                        return [{
                            title: 'Chat',
                            component: 'multichat',
                            subPath: 'chat',
                            weight: -9999
                        }];
                    }
                }]);

                return MultiChat;
            }(Plugin);

            _export('default', MultiChat);
        }
    };
});
System.register('OpenGroup/plugins/multiconnect/plugin.js', ['npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js', 'OpenGroup/core/Plugin'], function (_export, _context) {
    "use strict";

    var _classCallCheck, _possibleConstructorReturn, _inherits, Plugin, MultiConnect;

    return {
        setters: [function (_npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs) {
            _classCallCheck = _npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs) {
            _possibleConstructorReturn = _npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersInheritsJs) {
            _inherits = _npmSystemjsPluginBabel0017BabelHelpersInheritsJs.default;
        }, function (_OpenGroupCorePlugin) {
            Plugin = _OpenGroupCorePlugin.default;
        }],
        execute: function () {
            MultiConnect = function (_Plugin) {
                _inherits(MultiConnect, _Plugin);

                /**
                 * @param group.
                 * @param config.
                 * @constructor
                 */
                function MultiConnect(group) {
                    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

                    _classCallCheck(this, MultiConnect);

                    var _this = _possibleConstructorReturn(this, (MultiConnect.__proto__ || Object.getPrototypeOf(MultiConnect)).call(this));

                    _this.label = 'MultiConnect';
                    _this.description = 'Lorem ipsum';
                    _this.name = 'multiconnect';
                    _this.config = {};

                    Object.assign(_this.config, config);
                    _this.group = group;

                    _this.channeledConnections = {};

                    // Middleman gets a new connection and introduces the friend to all the other friends.
                    _this.group.on('newConnection', function (newConnection) {
                        _this.newConnection = newConnection;

                        _this.group.connections.forEach(function (connection) {
                            if (connection.uuid != newConnection.uuid) {
                                connection.sendMessage({
                                    owner: _this.getName(),
                                    command: 'sendOffer',
                                    uuid: newConnection.uuid
                                });
                            }
                        });
                    });

                    _this.group.on(_this.getName() + '.message', function (message, connection) {
                        // Left person gets a request if she knows a certain person.
                        if (message.command === 'sendOffer') {
                            var connectedUuids = _this.group.connections.map(function (myConnection) {
                                return myConnection.uuid;
                            });

                            if (!connectedUuids.includes(message.uuid)) {
                                _this.group.addPeer({
                                    connectionType: 'og-webrtc',
                                    signalerType: 'manual',
                                    uuid: message.uuid,
                                    signalerInfo: {
                                        role: 'initiator',
                                        offerCreated: function offerCreated(offer, returnAnswerCallback) {
                                            _this.returnAnswerCallback = returnAnswerCallback;
                                            connection.sendMessage({
                                                owner: _this.getName(),
                                                command: 'passThroughOffer',
                                                uuid: _this.group.uuid,
                                                offer: btoa(JSON.stringify(offer.toJSON()))
                                            });
                                        }
                                    }
                                });
                            }
                        }

                        // Middleman
                        if (message.command === 'passThroughOffer') {
                            _this.channeledConnections[connection.uuid] = connection;

                            _this.newConnection.sendMessage({
                                owner: _this.getName(),
                                command: 'createAnswer',
                                offer: message.offer,
                                uuid: message.uuid
                            });
                        }

                        // Right person.
                        if (message.command === 'createAnswer') {
                            var offer = JSON.parse(atob(message.offer));
                            _this.group.addPeer({
                                connectionType: 'og-webrtc',
                                uuid: message.uuid,
                                signalerType: 'manual',
                                signalerInfo: {
                                    role: 'answerer',
                                    offer: offer,
                                    answerCreated: function answerCreated(answer) {
                                        connection.sendMessage({
                                            owner: _this.getName(),
                                            command: 'passThroughAnswer',
                                            answer: btoa(JSON.stringify(answer.toJSON())),
                                            uuid: _this.group.uuid
                                        });
                                    }
                                }
                            });
                        }

                        // Middleman
                        if (message.command === 'passThroughAnswer') {
                            _this.channeledConnections[message.uuid].sendMessage({
                                owner: _this.getName(),
                                command: 'acceptAnswer',
                                answer: message.answer
                            });
                        }

                        // Left person
                        if (message.command === 'acceptAnswer') {
                            var answer = JSON.parse(atob(message.answer));
                            _this.returnAnswerCallback(answer);
                        }
                    });
                    return _this;
                }

                return MultiConnect;
            }(Plugin);

            _export('default', MultiConnect);
        }
    };
});
System.register('OpenGroup/plugins/og-signaler/plugin.js', ['npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/createClass.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js', 'OpenGroup/core/Plugin'], function (_export, _context) {
    "use strict";

    var _classCallCheck, _createClass, _possibleConstructorReturn, _inherits, Plugin, OgSignaler;

    return {
        setters: [function (_npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs) {
            _classCallCheck = _npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersCreateClassJs) {
            _createClass = _npmSystemjsPluginBabel0017BabelHelpersCreateClassJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs) {
            _possibleConstructorReturn = _npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersInheritsJs) {
            _inherits = _npmSystemjsPluginBabel0017BabelHelpersInheritsJs.default;
        }, function (_OpenGroupCorePlugin) {
            Plugin = _OpenGroupCorePlugin.default;
        }],
        execute: function () {
            OgSignaler = function (_Plugin) {
                _inherits(OgSignaler, _Plugin);

                /**
                 * @param group.
                 * @param config.
                 * @constructor
                 */
                function OgSignaler(group) {
                    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

                    _classCallCheck(this, OgSignaler);

                    var _this = _possibleConstructorReturn(this, (OgSignaler.__proto__ || Object.getPrototypeOf(OgSignaler)).call(this));

                    _this.label = 'Signaler via URL';
                    _this.description = 'Lorem ipsum';
                    _this.name = 'og-signaler';
                    _this.endpoints = [];
                    _this.returnAnswerCallbacks = {};
                    _this.config = {};
                    _this.connectedUrls = [];

                    Object.assign(_this.config, config);
                    _this.group = group;
                    _this.pluginData = group.config.plugins['og-signaler'];
                    if (!_this.pluginData.url) {
                        _this.pluginData.url = '';
                    }

                    if (_this.validWebsocketsUrl(_this.config.url)) {
                        _this.group.on('ready', function () {
                            _this.addUrl(_this.config.url);
                        });
                    }
                    return _this;
                }

                // TODO add validation on the url.


                _createClass(OgSignaler, [{
                    key: 'validWebsocketsUrl',
                    value: function validWebsocketsUrl(url) {
                        return typeof url === 'string' && !!url;
                    }
                }, {
                    key: 'settingsForm',
                    value: function settingsForm() {
                        return {
                            path: 'signaler-url',
                            title: 'Connect via an URL',
                            schema: [{
                                type: 'input',
                                inputType: 'text',
                                label: 'Group URL',
                                placeholder: 'wss://connect.opengroup.io/my-group',
                                model: 'url',
                                required: true
                            }]
                        };
                    }
                }, {
                    key: 'saveSettings',
                    value: function saveSettings() {
                        if (!this.connectedUrls.includes(this.pluginData.url) && this.validWebsocketsUrl(this.pluginData.url)) {
                            this.addUrl(this.pluginData.url);
                        }
                    }
                }, {
                    key: 'addUrl',
                    value: function addUrl(url) {
                        var _this2 = this;

                        var ws = new WebSocket(url);
                        this.endpoints.push(ws);
                        this.connectedUrls.push(url);

                        ws.onopen = function (event) {
                            ws.send(JSON.stringify({
                                command: 'identify',
                                uuid: _this2.group.lid
                            }));
                        };

                        ws.onmessage = function (event) {
                            var message = JSON.parse(event.data);

                            if (message.command === 'create-offer') {
                                var connectedUuids = _this2.group.connections.map(function (connection) {
                                    return connection.uuid;
                                });
                                if (!connectedUuids.includes(message.uuid)) {

                                    _this2.group.addPeer({
                                        connectionType: 'og-webrtc',
                                        signalerType: 'manual',
                                        uuid: message.uuid,
                                        signalerInfo: {
                                            role: 'initiator',
                                            offerCreated: function offerCreated(offer, returnAnswerCallback) {
                                                _this2.returnAnswerCallbacks[message.uuid] = returnAnswerCallback;
                                                ws.send(JSON.stringify({
                                                    command: 'pass-offer',
                                                    uuid: _this2.group.lid,
                                                    toUuid: message.uuid,
                                                    offer: btoa(JSON.stringify(offer.toJSON()))
                                                }));
                                            }
                                        }
                                    });
                                }
                            }

                            if (message.command === 'create-answer') {
                                var offer = JSON.parse(atob(message.offer));

                                _this2.group.addPeer({
                                    connectionType: 'og-webrtc',
                                    uuid: message.uuid,
                                    signalerType: 'manual',
                                    signalerInfo: {
                                        role: 'answerer',
                                        offer: offer,
                                        answerCreated: function answerCreated(answer) {
                                            ws.send(JSON.stringify({
                                                command: 'pass-answer',
                                                uuid: _this2.group.lid,
                                                toUuid: message.uuid,
                                                answer: btoa(JSON.stringify(answer.toJSON()))
                                            }));
                                        }
                                    }
                                });
                            }

                            if (message.command === 'accept-answer') {
                                var answer = JSON.parse(atob(message.answer));
                                _this2.returnAnswerCallbacks[message.uuid](answer);
                            }
                        };
                    }
                }]);

                return OgSignaler;
            }(Plugin);

            _export('default', OgSignaler);
        }
    };
});
System.register('OpenGroup/core/Plugin.js', ['npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/createClass.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js', 'events'], function (_export, _context) {
    "use strict";

    var _classCallCheck, _createClass, _possibleConstructorReturn, _inherits, EventEmitter, Plugin;

    return {
        setters: [function (_npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs) {
            _classCallCheck = _npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersCreateClassJs) {
            _createClass = _npmSystemjsPluginBabel0017BabelHelpersCreateClassJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs) {
            _possibleConstructorReturn = _npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersInheritsJs) {
            _inherits = _npmSystemjsPluginBabel0017BabelHelpersInheritsJs.default;
        }, function (_events) {
            EventEmitter = _events.default;
        }],
        execute: function () {
            Plugin = function (_EventEmitter) {
                _inherits(Plugin, _EventEmitter);

                /**
                 * @param group.
                 * @param config.
                 * @constructor
                 */
                function Plugin(group) {
                    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

                    _classCallCheck(this, Plugin);

                    return _possibleConstructorReturn(this, (Plugin.__proto__ || Object.getPrototypeOf(Plugin)).call(this));
                }

                _createClass(Plugin, [{
                    key: 'getName',
                    value: function getName() {
                        return this.name ? this.name : 'undefined';
                    }
                }, {
                    key: 'getMenuItems',
                    value: function getMenuItems() {
                        return [];
                    }
                }]);

                return Plugin;
            }(EventEmitter);

            _export('default', Plugin);
        }
    };
});
System.register('OpenGroup/plugins/webrtc/EasyWebRtc.js', ['npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/createClass.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js', 'events'], function (_export, _context) {
    "use strict";

    var _classCallCheck, _createClass, _possibleConstructorReturn, _inherits, EventEmitter, EasyWebRtc;

    return {
        setters: [function (_npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs) {
            _classCallCheck = _npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersCreateClassJs) {
            _createClass = _npmSystemjsPluginBabel0017BabelHelpersCreateClassJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs) {
            _possibleConstructorReturn = _npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersInheritsJs) {
            _inherits = _npmSystemjsPluginBabel0017BabelHelpersInheritsJs.default;
        }, function (_events) {
            EventEmitter = _events.default;
        }],
        execute: function () {
            EasyWebRtc = function (_EventEmitter) {
                _inherits(EasyWebRtc, _EventEmitter);

                /**
                 * @param config, may hold iceServers.
                 * @constructor
                 */
                function EasyWebRtc(config) {
                    _classCallCheck(this, EasyWebRtc);

                    var _this = _possibleConstructorReturn(this, (EasyWebRtc.__proto__ || Object.getPrototypeOf(EasyWebRtc)).call(this));

                    _this.config = {
                        'iceServers': [{
                            urls: 'turn:connect.opengroup.io',
                            username: 'lorem',
                            credential: 'ipsum'
                        }, {
                            urls: ['stun:connect.opengroup.io']
                        }]
                    };

                    _this.constraints = {};

                    Object.assign(_this.config, config);
                    /* global RTCPeerConnection */
                    _this.RtcPeerConnection = new RTCPeerConnection(_this.config, _this.constraints);
                    _this.RtcPeerConnection.easyWebRtc = _this;
                    _this.RtcPeerConnection.onicecandidate = _this.onIceCandidate;
                    return _this;
                }

                /**
                 * The first step of creating a connection between peers.
                 * It needs to be done at the initiator.
                 * The datachannel is created here and is sent over the line.
                 *
                 * @param callback A function that will run after a successful offer with candidates has been made.
                 */

                _createClass(EasyWebRtc, [{
                    key: 'getOffer',
                    value: function getOffer(callback) {
                        var _this2 = this;

                        if (typeof callback === 'function') {
                            this.once('sdpComplete', callback);
                        }

                        this.dataChannel = this.RtcPeerConnection.createDataChannel('opengroup', {});
                        this.dataChannel.easyWebRtc = this;

                        this.dataChannel.onopen = this.onDataChannelOpen;
                        this.dataChannel.onmessage = this.onDataChannelMessage;
                        this.dataChannel.onclose = this.onDataChannelClose;
                        this.dataChannel.onerror = this.onDataChannelError;

                        this.RtcPeerConnection.createOffer().then(function (offer) {
                            return _this2.RtcPeerConnection.setLocalDescription(offer);
                        }).catch(function () {
                            return console.log('error while creating an offer');
                        });
                    }

                    /**
                     * The second step of creating a connection between peers.
                     * It needs to be done at the second peer.
                     * The datachannel is received here.
                     *
                     * @param offer The IDP offer from the getOffer function.
                     * @param callback A function that will run after a successful answer with candidates has been made.
                     * @returns IDP answer as a Promise.
                     */

                }, {
                    key: 'getAnswer',
                    value: function getAnswer(offer) {
                        var _this3 = this;

                        var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

                        if (typeof callback === 'function') {
                            this.once('sdpComplete', callback);
                        }

                        this.RtcPeerConnection.ondatachannel = function (event) {
                            _this3.dataChannel = event.channel;
                            _this3.dataChannel.easyWebRtc = _this3;

                            _this3.dataChannel.onmessage = _this3.onDataChannelMessage;
                            _this3.dataChannel.onopen = _this3.onDataChannelOpen;
                            _this3.dataChannel.onclose = _this3.onDataChannelClose;
                            _this3.dataChannel.onerror = _this3.onDataChannelError;
                        };

                        this.offer = new RTCSessionDescription(offer);
                        this.RtcPeerConnection.setRemoteDescription(this.offer);

                        return this.RtcPeerConnection.createAnswer().then(function (answer) {
                            return _this3.RtcPeerConnection.setLocalDescription(answer);
                        }).catch(function () {
                            return console.log('error while creating an answer');
                        });
                    }

                    /**
                     * The third step of creating a connection between peers.
                     * It needs to be done at the initiator.
                     *
                     * @param answer The IDP answer
                     * @returns The promise of setRemoteDescription.
                     */

                }, {
                    key: 'acceptAnswer',
                    value: function acceptAnswer(answer) {
                        this.answer = new RTCSessionDescription(answer);
                        return this.RtcPeerConnection.setRemoteDescription(this.answer);
                    }

                    /**
                     * Send a message to the peer.
                     * This will mostly be called from the group to broadcast something to all peers.
                     *
                     * @param message The things you want to send over.
                     */

                }, {
                    key: 'sendMessage',
                    value: function sendMessage(message) {
                        var _this4 = this;

                        if (typeof this.dataChannel !== 'undefined' && this.dataChannel.readyState === 'open') {
                            this.dataChannel.send(JSON.stringify(message));
                        } else {
                            this.once('connected', function () {
                                _this4.sendMessage(message);
                            });
                        }
                    }

                    /**
                     * When candidates are added to the IDP.
                     * This makes the abstraction easy to use.
                     * Higher up you can simply use peer.getOffer(function (offer) {})
                     *
                     * @param event The event
                     */

                }, {
                    key: 'onIceCandidate',
                    value: function onIceCandidate(event) {
                        if (event.candidate) {
                            this.easyWebRtc.emit('sdpComplete', this.localDescription);
                        }
                    }

                    /**
                     * The event callback when the webRTC datachannel is opened.
                     * This function starts the signaling of all the other connected peers to the newly connected peer.
                     *
                     * @param event Event with the webRTC data.
                     */

                }, {
                    key: 'onDataChannelOpen',
                    value: function onDataChannelOpen(event) {
                        this.easyWebRtc.emit('connected', event);
                    }

                    /**
                     * The event callback when the webRTC datachannel receives a message.
                     * @param event Event with the webRTC data.
                     */

                }, {
                    key: 'onDataChannelMessage',
                    value: function onDataChannelMessage(event) {
                        if (event.data) {
                            // TODO If the message is to long if breaks in firefox.
                            var data = JSON.parse(event.data);
                            this.easyWebRtc.emit('message', data);
                        }
                    }

                    /**
                     * The event callback when the webRTC datachannel closes.
                     * @param event Event with the webRTC data.
                     */

                }, {
                    key: 'onDataChannelClose',
                    value: function onDataChannelClose(event) {
                        this.easyWebRtc.emit('closed', event);
                    }
                }, {
                    key: 'onDataChannelError',

                    /**
                     * The event callback when the webRTC datachannel receives an error.
                     * @param error The error.
                     */
                    value: function onDataChannelError(error) {
                        this.easyWebRtc.emit('error', error);
                    }
                }]);

                return EasyWebRtc;
            }(EventEmitter);

            _export('default', EasyWebRtc);
        }
    };
});
System.register('OpenGroup/plugins/webrtc/EasyWebRtcManualSignaler.js', ['npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/createClass.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js', 'events', './EasyWebRtc.js'], function (_export, _context) {
    "use strict";

    var _classCallCheck, _createClass, _possibleConstructorReturn, _inherits, EventEmitter, EasyWebRtc, EasyWebRtcManualSignaler;

    return {
        setters: [function (_npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs) {
            _classCallCheck = _npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersCreateClassJs) {
            _createClass = _npmSystemjsPluginBabel0017BabelHelpersCreateClassJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs) {
            _possibleConstructorReturn = _npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersInheritsJs) {
            _inherits = _npmSystemjsPluginBabel0017BabelHelpersInheritsJs.default;
        }, function (_events) {
            EventEmitter = _events.default;
        }, function (_EasyWebRtcJs) {
            EasyWebRtc = _EasyWebRtcJs.default;
        }],
        execute: function () {
            EasyWebRtcManualSignaler = function (_EventEmitter) {
                _inherits(EasyWebRtcManualSignaler, _EventEmitter);

                /**
                 * @param config.
                 * @constructor
                 */
                function EasyWebRtcManualSignaler() {
                    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

                    _classCallCheck(this, EasyWebRtcManualSignaler);

                    var _this = _possibleConstructorReturn(this, (EasyWebRtcManualSignaler.__proto__ || Object.getPrototypeOf(EasyWebRtcManualSignaler)).call(this));

                    _this.config = {};
                    Object.assign(_this.config, config);

                    _this.connection = new EasyWebRtc();
                    if (typeof _this[_this.config.role] === 'function') {
                        _this[_this.config.role]();
                    }
                    return _this;
                }

                _createClass(EasyWebRtcManualSignaler, [{
                    key: 'initiator',
                    value: function initiator() {
                        var _this2 = this;

                        this.connection.getOffer(function (offer) {
                            if (typeof _this2.config.offerCreated === 'function') {
                                _this2.config.offerCreated(offer, function (answer) {
                                    _this2.connection.acceptAnswer(answer);
                                });
                            }
                        });
                    }
                }, {
                    key: 'answerer',
                    value: function answerer() {
                        var _this3 = this;

                        this.connection.getAnswer(this.config.offer, function (answer) {
                            if (typeof _this3.config.answerCreated === 'function') {
                                _this3.config.answerCreated(answer);
                            }
                        });
                    }
                }]);

                return EasyWebRtcManualSignaler;
            }(EventEmitter);

            _export('default', EasyWebRtcManualSignaler);
        }
    };
});
/*
 *  Copyright (c) 2014 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */

/* More information about these options at jshint.com/docs/options */
/* jshint browser: true, camelcase: true, curly: true, devel: true,
 eqeqeq: true, forin: false, globalstrict: true, node: true,
 quotmark: single, undef: true, unused: strict */
/* global mozRTCIceCandidate, mozRTCPeerConnection, Promise,
 mozRTCSessionDescription, webkitRTCPeerConnection, MediaStreamTrack */
/* exported trace,requestUserMedia */
/*ignore jslint start*/
'use strict';

System.register('OpenGroup/plugins/webrtc/webrtc.polyfill.js', [], function (_export, _context) {
    "use strict";

    var getUserMedia, attachMediaStream, reattachMediaStream, webrtcDetectedBrowser, webrtcDetectedVersion, webrtcMinimumVersion, webrtcUtils, orgEnumerateDevices, constraintsToChrome, origGetUserMedia, webrtcTesting, RTCPeerConnection;


    function trace(text) {
        // This function is used for logging.
        if (text[text.length - 1] === '\n') {
            text = text.substring(0, text.length - 1);
        }
        if (window.performance) {
            var now = (window.performance.now() / 1000).toFixed(3);
            webrtcUtils.log(now + ': ' + text);
        } else {
            webrtcUtils.log(text);
        }
    }

    // Returns the result of getUserMedia as a Promise.
    function requestUserMedia(constraints) {
        return new Promise(function (resolve, reject) {
            getUserMedia(constraints, resolve, reject);
        });
    }

    return {
        setters: [],
        execute: function () {
            getUserMedia = null;
            attachMediaStream = null;
            reattachMediaStream = null;
            webrtcDetectedBrowser = null;
            webrtcDetectedVersion = null;
            webrtcMinimumVersion = null;
            webrtcUtils = {
                log: function log() {
                    // suppress console.log output when being included as a module.
                    if (typeof module !== 'undefined' || typeof require === 'function' && typeof define === 'function') {
                        return;
                    }
                    //console.log.apply(console, arguments);
                },
                extractVersion: function extractVersion(uastring, expr, pos) {
                    var match = uastring.match(expr);
                    return match && match.length >= pos && parseInt(match[pos]);
                }
            };
            if (typeof window === 'object') {
                if (window.HTMLMediaElement && !('srcObject' in window.HTMLMediaElement.prototype)) {
                    // Shim the srcObject property, once, when HTMLMediaElement is found.
                    Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {
                        get: function get() {
                            // If prefixed srcObject property exists, return it.
                            // Otherwise use the shimmed property, _srcObject
                            return 'mozSrcObject' in this ? this.mozSrcObject : this._srcObject;
                        },
                        set: function set(stream) {
                            if ('mozSrcObject' in this) {
                                this.mozSrcObject = stream;
                            } else {
                                // Use _srcObject as a private property for this shim
                                this._srcObject = stream;
                                // TODO: revokeObjectUrl(this.src) when !stream to release resources?
                                this.src = URL.createObjectURL(stream);
                            }
                        }
                    });
                }
                // Proxy existing globals
                getUserMedia = window.navigator && window.navigator.getUserMedia;
            }

            // Attach a media stream to an element.
            attachMediaStream = function attachMediaStream(element, stream) {
                element.srcObject = stream;
            };

            reattachMediaStream = function reattachMediaStream(to, from) {
                to.srcObject = from.srcObject;
            };

            if (typeof window === 'undefined' || !window.navigator) {
                webrtcUtils.log('This does not appear to be a browser');
                webrtcDetectedBrowser = 'not a browser';
            } else if (navigator.mozGetUserMedia && window.mozRTCPeerConnection) {
                webrtcUtils.log('This appears to be Firefox');

                webrtcDetectedBrowser = 'firefox';

                // the detected firefox version.
                webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent, /Firefox\/([0-9]+)\./, 1);

                // the minimum firefox version still supported by adapter.
                webrtcMinimumVersion = 31;

                // The RTCPeerConnection object.
                window.RTCPeerConnection = function (pcConfig, pcConstraints) {
                    if (webrtcDetectedVersion < 38) {
                        // .urls is not supported in FF < 38.
                        // create RTCIceServers with a single url.
                        if (pcConfig && pcConfig.iceServers) {
                            var newIceServers = [];
                            for (var i = 0; i < pcConfig.iceServers.length; i++) {
                                var server = pcConfig.iceServers[i];
                                if (server.hasOwnProperty('urls')) {
                                    for (var j = 0; j < server.urls.length; j++) {
                                        var newServer = {
                                            url: server.urls[j]
                                        };
                                        if (server.urls[j].indexOf('turn') === 0) {
                                            newServer.username = server.username;
                                            newServer.credential = server.credential;
                                        }
                                        newIceServers.push(newServer);
                                    }
                                } else {
                                    newIceServers.push(pcConfig.iceServers[i]);
                                }
                            }
                            pcConfig.iceServers = newIceServers;
                        }
                    }
                    return new mozRTCPeerConnection(pcConfig, pcConstraints); // jscs:ignore requireCapitalizedConstructors
                };

                // The RTCSessionDescription object.
                if (!window.RTCSessionDescription) {
                    window.RTCSessionDescription = mozRTCSessionDescription;
                }

                // The RTCIceCandidate object.
                if (!window.RTCIceCandidate) {
                    window.RTCIceCandidate = mozRTCIceCandidate;
                }

                // getUserMedia constraints shim.
                getUserMedia = function getUserMedia(constraints, onSuccess, onError) {
                    var constraintsToFF37 = function constraintsToFF37(c) {
                        if (typeof c !== 'object' || c.require) {
                            return c;
                        }
                        var require = [];
                        Object.keys(c).forEach(function (key) {
                            if (key === 'require' || key === 'advanced' || key === 'mediaSource') {
                                return;
                            }
                            var r = c[key] = typeof c[key] === 'object' ? c[key] : { ideal: c[key] };
                            if (r.min !== undefined || r.max !== undefined || r.exact !== undefined) {
                                require.push(key);
                            }
                            if (r.exact !== undefined) {
                                if (typeof r.exact === 'number') {
                                    r.min = r.max = r.exact;
                                } else {
                                    c[key] = r.exact;
                                }
                                delete r.exact;
                            }
                            if (r.ideal !== undefined) {
                                c.advanced = c.advanced || [];
                                var oc = {};
                                if (typeof r.ideal === 'number') {
                                    oc[key] = { min: r.ideal, max: r.ideal };
                                } else {
                                    oc[key] = r.ideal;
                                }
                                c.advanced.push(oc);
                                delete r.ideal;
                                if (!Object.keys(r).length) {
                                    delete c[key];
                                }
                            }
                        });
                        if (require.length) {
                            c.require = require;
                        }
                        return c;
                    };
                    if (webrtcDetectedVersion < 38) {
                        webrtcUtils.log('spec: ' + JSON.stringify(constraints));
                        if (constraints.audio) {
                            constraints.audio = constraintsToFF37(constraints.audio);
                        }
                        if (constraints.video) {
                            constraints.video = constraintsToFF37(constraints.video);
                        }
                        webrtcUtils.log('ff37: ' + JSON.stringify(constraints));
                    }
                    return navigator.mozGetUserMedia(constraints, onSuccess, onError);
                };

                navigator.getUserMedia = getUserMedia;

                // Shim for mediaDevices on older versions.
                if (!navigator.mediaDevices) {
                    navigator.mediaDevices = { getUserMedia: requestUserMedia,
                        addEventListener: function addEventListener() {},
                        removeEventListener: function removeEventListener() {}
                    };
                }
                navigator.mediaDevices.enumerateDevices = navigator.mediaDevices.enumerateDevices || function () {
                    return new Promise(function (resolve) {
                        var infos = [{ kind: 'audioinput', deviceId: 'default', label: '', groupId: '' }, { kind: 'videoinput', deviceId: 'default', label: '', groupId: '' }];
                        resolve(infos);
                    });
                };

                if (webrtcDetectedVersion < 41) {
                    orgEnumerateDevices = navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);

                    navigator.mediaDevices.enumerateDevices = function () {
                        return orgEnumerateDevices().then(undefined, function (e) {
                            if (e.name === 'NotFoundError') {
                                return [];
                            }
                            throw e;
                        });
                    };
                }
            } else if (navigator.webkitGetUserMedia && window.webkitRTCPeerConnection) {
                webrtcUtils.log('This appears to be Chrome');

                webrtcDetectedBrowser = 'chrome';

                // the detected chrome version.
                webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent, /Chrom(e|ium)\/([0-9]+)\./, 2);

                // the minimum chrome version still supported by adapter.
                webrtcMinimumVersion = 38;

                // The RTCPeerConnection object.
                window.RTCPeerConnection = function (pcConfig, pcConstraints) {
                    // Translate iceTransportPolicy to iceTransports,
                    // see https://code.google.com/p/webrtc/issues/detail?id=4869
                    if (pcConfig && pcConfig.iceTransportPolicy) {
                        pcConfig.iceTransports = pcConfig.iceTransportPolicy;
                    }

                    var pc = new webkitRTCPeerConnection(pcConfig, pcConstraints); // jscs:ignore requireCapitalizedConstructors
                    var origGetStats = pc.getStats.bind(pc);
                    pc.getStats = function (selector, successCallback, errorCallback) {
                        // jshint ignore: line
                        var self = this;
                        var args = arguments;

                        // If selector is a function then we are in the old style stats so just
                        // pass back the original getStats format to avoid breaking old users.
                        if (arguments.length > 0 && typeof selector === 'function') {
                            return origGetStats(selector, successCallback);
                        }

                        var fixChromeStats = function fixChromeStats(response) {
                            var standardReport = {};
                            var reports = response.result();
                            reports.forEach(function (report) {
                                var standardStats = {
                                    id: report.id,
                                    timestamp: report.timestamp,
                                    type: report.type
                                };
                                report.names().forEach(function (name) {
                                    standardStats[name] = report.stat(name);
                                });
                                standardReport[standardStats.id] = standardStats;
                            });

                            return standardReport;
                        };

                        if (arguments.length >= 2) {
                            var successCallbackWrapper = function successCallbackWrapper(response) {
                                args[1](fixChromeStats(response));
                            };

                            return origGetStats.apply(this, [successCallbackWrapper, arguments[0]]);
                        }

                        // promise-support
                        return new Promise(function (resolve, reject) {
                            if (args.length === 1 && selector === null) {
                                origGetStats.apply(self, [function (response) {
                                    resolve.apply(null, [fixChromeStats(response)]);
                                }, reject]);
                            } else {
                                origGetStats.apply(self, [resolve, reject]);
                            }
                        });
                    };

                    return pc;
                };

                // add promise support
                ['createOffer', 'createAnswer'].forEach(function (method) {
                    var nativeMethod = webkitRTCPeerConnection.prototype[method];
                    webkitRTCPeerConnection.prototype[method] = function () {
                        var self = this;
                        if (arguments.length < 1 || arguments.length === 1 && typeof arguments[0] === 'object') {
                            var opts = arguments.length === 1 ? arguments[0] : undefined;
                            return new Promise(function (resolve, reject) {
                                nativeMethod.apply(self, [resolve, reject, opts]);
                            });
                        } else {
                            return nativeMethod.apply(this, arguments);
                        }
                    };
                });

                ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (method) {
                    var nativeMethod = webkitRTCPeerConnection.prototype[method];
                    webkitRTCPeerConnection.prototype[method] = function () {
                        var args = arguments;
                        var self = this;
                        return new Promise(function (resolve, reject) {
                            nativeMethod.apply(self, [args[0], function () {
                                resolve();
                                if (args.length >= 2) {
                                    args[1].apply(null, []);
                                }
                            }, function (err) {
                                reject(err);
                                if (args.length >= 3) {
                                    args[2].apply(null, [err]);
                                }
                            }]);
                        });
                    };
                });

                // getUserMedia constraints shim.

                constraintsToChrome = function constraintsToChrome(c) {
                    if (typeof c !== 'object' || c.mandatory || c.optional) {
                        return c;
                    }
                    var cc = {};
                    Object.keys(c).forEach(function (key) {
                        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {
                            return;
                        }
                        var r = typeof c[key] === 'object' ? c[key] : { ideal: c[key] };
                        if (r.exact !== undefined && typeof r.exact === 'number') {
                            r.min = r.max = r.exact;
                        }
                        var oldname = function oldname(prefix, name) {
                            if (prefix) {
                                return prefix + name.charAt(0).toUpperCase() + name.slice(1);
                            }
                            return name === 'deviceId' ? 'sourceId' : name;
                        };
                        if (r.ideal !== undefined) {
                            cc.optional = cc.optional || [];
                            var oc = {};
                            if (typeof r.ideal === 'number') {
                                oc[oldname('min', key)] = r.ideal;
                                cc.optional.push(oc);
                                oc = {};
                                oc[oldname('max', key)] = r.ideal;
                                cc.optional.push(oc);
                            } else {
                                oc[oldname('', key)] = r.ideal;
                                cc.optional.push(oc);
                            }
                        }
                        if (r.exact !== undefined && typeof r.exact !== 'number') {
                            cc.mandatory = cc.mandatory || {};
                            cc.mandatory[oldname('', key)] = r.exact;
                        } else {
                            ['min', 'max'].forEach(function (mix) {
                                if (r[mix] !== undefined) {
                                    cc.mandatory = cc.mandatory || {};
                                    cc.mandatory[oldname(mix, key)] = r[mix];
                                }
                            });
                        }
                    });
                    if (c.advanced) {
                        cc.optional = (cc.optional || []).concat(c.advanced);
                    }
                    return cc;
                };

                getUserMedia = function getUserMedia(constraints, onSuccess, onError) {
                    if (constraints.audio) {
                        constraints.audio = constraintsToChrome(constraints.audio);
                    }
                    if (constraints.video) {
                        constraints.video = constraintsToChrome(constraints.video);
                    }
                    webrtcUtils.log('chrome: ' + JSON.stringify(constraints));
                    return navigator.webkitGetUserMedia(constraints, onSuccess, onError);
                };
                navigator.getUserMedia = getUserMedia;

                if (!navigator.mediaDevices) {
                    navigator.mediaDevices = { getUserMedia: requestUserMedia,
                        enumerateDevices: function enumerateDevices() {
                            return new Promise(function (resolve) {
                                var kinds = { audio: 'audioinput', video: 'videoinput' };
                                return MediaStreamTrack.getSources(function (devices) {
                                    resolve(devices.map(function (device) {
                                        return { label: device.label,
                                            kind: kinds[device.kind],
                                            deviceId: device.id,
                                            groupId: '' };
                                    }));
                                });
                            });
                        } };
                }

                // A shim for getUserMedia method on the mediaDevices object.
                // TODO(KaptenJansson) remove once implemented in Chrome stable.
                if (!navigator.mediaDevices.getUserMedia) {
                    navigator.mediaDevices.getUserMedia = function (constraints) {
                        return requestUserMedia(constraints);
                    };
                } else {
                    origGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);

                    navigator.mediaDevices.getUserMedia = function (c) {
                        webrtcUtils.log('spec:   ' + JSON.stringify(c)); // whitespace for alignment
                        c.audio = constraintsToChrome(c.audio);
                        c.video = constraintsToChrome(c.video);
                        webrtcUtils.log('chrome: ' + JSON.stringify(c));
                        return origGetUserMedia(c);
                    };
                }

                // Dummy devicechange event methods.
                // TODO(KaptenJansson) remove once implemented in Chrome stable.
                if (typeof navigator.mediaDevices.addEventListener === 'undefined') {
                    navigator.mediaDevices.addEventListener = function () {
                        webrtcUtils.log('Dummy mediaDevices.addEventListener called.');
                    };
                }
                if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {
                    navigator.mediaDevices.removeEventListener = function () {
                        webrtcUtils.log('Dummy mediaDevices.removeEventListener called.');
                    };
                }

                // Attach a media stream to an element.
                attachMediaStream = function attachMediaStream(element, stream) {
                    if (webrtcDetectedVersion >= 43) {
                        element.srcObject = stream;
                    } else if (typeof element.src !== 'undefined') {
                        element.src = URL.createObjectURL(stream);
                    } else {
                        webrtcUtils.log('Error attaching stream to element.');
                    }
                };
                reattachMediaStream = function reattachMediaStream(to, from) {
                    if (webrtcDetectedVersion >= 43) {
                        to.srcObject = from.srcObject;
                    } else {
                        to.src = from.src;
                    }
                };
            } else if (navigator.mediaDevices && navigator.userAgent.match(/Edge\/(\d+).(\d+)$/)) {
                webrtcUtils.log('This appears to be Edge');
                webrtcDetectedBrowser = 'edge';

                webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent, /Edge\/(\d+).(\d+)$/, 2);

                // the minimum version still supported by adapter.
                webrtcMinimumVersion = 12;
            } else {
                webrtcUtils.log('Browser does not appear to be WebRTC-capable');
            }webrtcTesting = {};

            try {
                Object.defineProperty(webrtcTesting, 'version', {
                    set: function set(version) {
                        webrtcDetectedVersion = version;
                    }
                });
            } catch (e) {}

            if (typeof module !== 'undefined') {
                if (typeof window !== 'undefined') {
                    RTCPeerConnection = window.RTCPeerConnection;
                }
                module.exports = {
                    RTCPeerConnection: RTCPeerConnection,
                    getUserMedia: getUserMedia,
                    attachMediaStream: attachMediaStream,
                    reattachMediaStream: reattachMediaStream,
                    webrtcDetectedBrowser: webrtcDetectedBrowser,
                    webrtcDetectedVersion: webrtcDetectedVersion,
                    webrtcMinimumVersion: webrtcMinimumVersion,
                    webrtcTesting: webrtcTesting,
                    webrtcUtils: webrtcUtils
                    //requestUserMedia: not exposed on purpose.
                    //trace: not exposed on purpose.
                };
            } else if (typeof require === 'function' && typeof define === 'function') {
                // Expose objects and functions when RequireJS is doing the loading.
                define([], function () {
                    return {
                        RTCPeerConnection: window.RTCPeerConnection,
                        getUserMedia: getUserMedia,
                        attachMediaStream: attachMediaStream,
                        reattachMediaStream: reattachMediaStream,
                        webrtcDetectedBrowser: webrtcDetectedBrowser,
                        webrtcDetectedVersion: webrtcDetectedVersion,
                        webrtcMinimumVersion: webrtcMinimumVersion,
                        webrtcTesting: webrtcTesting,
                        webrtcUtils: webrtcUtils
                        //requestUserMedia: not exposed on purpose.
                        //trace: not exposed on purpose.
                    };
                });
            }
            /*ignore jslint end*/
        }
    };
});
System.register('OpenGroup/plugins/webrtc/OgWebRtc.js', ['npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/createClass.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js', 'events', './EasyWebRtcManualSignaler.js', './webrtc.polyfill.js'], function (_export, _context) {
    "use strict";

    var _classCallCheck, _createClass, _possibleConstructorReturn, _inherits, EventEmitter, EasyWebRtcManualSignaler, OgWebRtc;

    return {
        setters: [function (_npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs) {
            _classCallCheck = _npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersCreateClassJs) {
            _createClass = _npmSystemjsPluginBabel0017BabelHelpersCreateClassJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs) {
            _possibleConstructorReturn = _npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersInheritsJs) {
            _inherits = _npmSystemjsPluginBabel0017BabelHelpersInheritsJs.default;
        }, function (_events) {
            EventEmitter = _events.default;
        }, function (_EasyWebRtcManualSignalerJs) {
            EasyWebRtcManualSignaler = _EasyWebRtcManualSignalerJs.default;
        }, function (_webrtcPolyfillJs) {}],
        execute: function () {
            OgWebRtc = function (_EventEmitter) {
                _inherits(OgWebRtc, _EventEmitter);

                /**
                 * @param config.
                 * @constructor
                 */
                function OgWebRtc() {
                    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

                    _classCallCheck(this, OgWebRtc);

                    var _this = _possibleConstructorReturn(this, (OgWebRtc.__proto__ || Object.getPrototypeOf(OgWebRtc)).call(this));

                    _this.signalerTypes = { 'manual': EasyWebRtcManualSignaler };

                    _this.config = {};
                    Object.assign(_this.config, config);

                    if (_this.signalerTypes[config.signalerType]) {
                        var signalerType = _this.signalerTypes[config.signalerType];
                        _this.signaler = new signalerType(config.signalerInfo);

                        var proxyEvents = ['message', 'closed', 'connected', 'error'];

                        proxyEvents.forEach(function (proxyEvent) {
                            _this.signaler.connection.on(proxyEvent, function () {
                                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                                    args[_key] = arguments[_key];
                                }

                                _this.emit.apply(_this, [proxyEvent].concat(args));
                            });
                        });
                    }
                    return _this;
                }

                _createClass(OgWebRtc, [{
                    key: 'sendMessage',
                    value: function sendMessage(message) {
                        this.signaler.connection.sendMessage(message);
                    }
                }]);

                return OgWebRtc;
            }(EventEmitter);

            _export('default', OgWebRtc);
        }
    };
});
System.register('OpenGroup/plugins/webrtc/plugin.js', ['npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/createClass.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js', 'OpenGroup/core/Plugin', './OgWebRtc.js'], function (_export, _context) {
    "use strict";

    var _classCallCheck, _createClass, _possibleConstructorReturn, _inherits, Plugin, OgWebRtc, WebRtc;

    return {
        setters: [function (_npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs) {
            _classCallCheck = _npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersCreateClassJs) {
            _createClass = _npmSystemjsPluginBabel0017BabelHelpersCreateClassJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs) {
            _possibleConstructorReturn = _npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersInheritsJs) {
            _inherits = _npmSystemjsPluginBabel0017BabelHelpersInheritsJs.default;
        }, function (_OpenGroupCorePlugin) {
            Plugin = _OpenGroupCorePlugin.default;
        }, function (_OgWebRtcJs) {
            OgWebRtc = _OgWebRtcJs.default;
        }],
        execute: function () {
            WebRtc = function (_Plugin) {
                _inherits(WebRtc, _Plugin);

                /**
                 * @param group.
                 * @param config.
                 * @constructor
                 */
                function WebRtc(group) {
                    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

                    _classCallCheck(this, WebRtc);

                    var _this = _possibleConstructorReturn(this, (WebRtc.__proto__ || Object.getPrototypeOf(WebRtc)).call(this));

                    _this.label = 'WebRTC';
                    _this.description = 'Lorem ipsum';
                    _this.name = 'webrtc';
                    _this.config = {};
                    _this.componentNames = ['manual-signaling'];

                    Object.assign(_this.config, config);
                    group.connectionTypes['og-webrtc'] = OgWebRtc;
                    return _this;
                }

                _createClass(WebRtc, [{
                    key: 'getMenuItems',
                    value: function getMenuItems() {
                        return [{
                            title: 'Connect via text',
                            component: 'manual-signaling',
                            subPath: 'settings/signaling-manual',
                            weight: -9999
                        }];
                    }
                }]);

                return WebRtc;
            }(Plugin);

            _export('default', WebRtc);
        }
    };
});
System.register("npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js", [], function (_export, _context) {
  "use strict";

  return {
    setters: [],
    execute: function () {
      _export("default", function (instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      });
    }
  };
});
System.register("npm:systemjs-plugin-babel@0.0.17/babel-helpers/createClass.js", [], function (_export, _context) {
  "use strict";

  return {
    setters: [],
    execute: function () {
      _export("default", function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }());
    }
  };
});
System.register("npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js", [], function (_export, _context) {
  "use strict";

  return {
    setters: [],
    execute: function () {
      _export("default", function (self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (typeof call === "object" || typeof call === "function") ? call : self;
      });
    }
  };
});
System.register("npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js", [], function (_export, _context) {
  "use strict";

  return {
    setters: [],
    execute: function () {
      _export("default", function (subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      });
    }
  };
});
System.registerDynamic("npm:jspm-nodelibs-events@0.2.0.json", [], false, function() {
  return {
    "main": "./events.js"
  };
});

System.registerDynamic('npm:jspm-nodelibs-events@0.2.0/events.js', [], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  // Copyright Joyent, Inc. and other Node contributors.
  //
  // Permission is hereby granted, free of charge, to any person obtaining a
  // copy of this software and associated documentation files (the
  // "Software"), to deal in the Software without restriction, including
  // without limitation the rights to use, copy, modify, merge, publish,
  // distribute, sublicense, and/or sell copies of the Software, and to permit
  // persons to whom the Software is furnished to do so, subject to the
  // following conditions:
  //
  // The above copyright notice and this permission notice shall be included
  // in all copies or substantial portions of the Software.
  //
  // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
  // USE OR OTHER DEALINGS IN THE SOFTWARE.

  function EventEmitter() {
    this._events = this._events || {};
    this._maxListeners = this._maxListeners || undefined;
  }
  module.exports = EventEmitter;

  // Backwards-compat with node 0.10.x
  EventEmitter.EventEmitter = EventEmitter;

  EventEmitter.prototype._events = undefined;
  EventEmitter.prototype._maxListeners = undefined;

  // By default EventEmitters will print a warning if more than 10 listeners are
  // added to it. This is a useful default which helps finding memory leaks.
  EventEmitter.defaultMaxListeners = 10;

  // Obviously not all Emitters should be limited to 10. This function allows
  // that to be increased. Set to zero for unlimited.
  EventEmitter.prototype.setMaxListeners = function (n) {
    if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError('n must be a positive number');
    this._maxListeners = n;
    return this;
  };

  EventEmitter.prototype.emit = function (type) {
    var er, handler, len, args, i, listeners;

    if (!this._events) this._events = {};

    // If there is no 'error' event listener then throw.
    if (type === 'error') {
      if (!this._events.error || isObject(this._events.error) && !this._events.error.length) {
        er = arguments[1];
        if (er instanceof Error) {
          throw er; // Unhandled 'error' event
        }
        throw TypeError('Uncaught, unspecified "error" event.');
      }
    }

    handler = this._events[type];

    if (isUndefined(handler)) return false;

    if (isFunction(handler)) {
      switch (arguments.length) {
        // fast cases
        case 1:
          handler.call(this);
          break;
        case 2:
          handler.call(this, arguments[1]);
          break;
        case 3:
          handler.call(this, arguments[1], arguments[2]);
          break;
        // slower
        default:
          args = Array.prototype.slice.call(arguments, 1);
          handler.apply(this, args);
      }
    } else if (isObject(handler)) {
      args = Array.prototype.slice.call(arguments, 1);
      listeners = handler.slice();
      len = listeners.length;
      for (i = 0; i < len; i++) listeners[i].apply(this, args);
    }

    return true;
  };

  EventEmitter.prototype.addListener = function (type, listener) {
    var m;

    if (!isFunction(listener)) throw TypeError('listener must be a function');

    if (!this._events) this._events = {};

    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (this._events.newListener) this.emit('newListener', type, isFunction(listener.listener) ? listener.listener : listener);

    if (!this._events[type])
      // Optimize the case of one listener. Don't need the extra array object.
      this._events[type] = listener;else if (isObject(this._events[type]))
      // If we've already got an array, just append.
      this._events[type].push(listener);else
      // Adding the second element, need to change to array.
      this._events[type] = [this._events[type], listener];

    // Check for listener leak
    if (isObject(this._events[type]) && !this._events[type].warned) {
      if (!isUndefined(this._maxListeners)) {
        m = this._maxListeners;
      } else {
        m = EventEmitter.defaultMaxListeners;
      }

      if (m && m > 0 && this._events[type].length > m) {
        this._events[type].warned = true;
        console.error('(node) warning: possible EventEmitter memory ' + 'leak detected. %d listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.', this._events[type].length);
        if (typeof console.trace === 'function') {
          // not supported in IE 10
          console.trace();
        }
      }
    }

    return this;
  };

  EventEmitter.prototype.on = EventEmitter.prototype.addListener;

  EventEmitter.prototype.once = function (type, listener) {
    if (!isFunction(listener)) throw TypeError('listener must be a function');

    var fired = false;

    function g() {
      this.removeListener(type, g);

      if (!fired) {
        fired = true;
        listener.apply(this, arguments);
      }
    }

    g.listener = listener;
    this.on(type, g);

    return this;
  };

  // emits a 'removeListener' event iff the listener was removed
  EventEmitter.prototype.removeListener = function (type, listener) {
    var list, position, length, i;

    if (!isFunction(listener)) throw TypeError('listener must be a function');

    if (!this._events || !this._events[type]) return this;

    list = this._events[type];
    length = list.length;
    position = -1;

    if (list === listener || isFunction(list.listener) && list.listener === listener) {
      delete this._events[type];
      if (this._events.removeListener) this.emit('removeListener', type, listener);
    } else if (isObject(list)) {
      for (i = length; i-- > 0;) {
        if (list[i] === listener || list[i].listener && list[i].listener === listener) {
          position = i;
          break;
        }
      }

      if (position < 0) return this;

      if (list.length === 1) {
        list.length = 0;
        delete this._events[type];
      } else {
        list.splice(position, 1);
      }

      if (this._events.removeListener) this.emit('removeListener', type, listener);
    }

    return this;
  };

  EventEmitter.prototype.removeAllListeners = function (type) {
    var key, listeners;

    if (!this._events) return this;

    // not listening for removeListener, no need to emit
    if (!this._events.removeListener) {
      if (arguments.length === 0) this._events = {};else if (this._events[type]) delete this._events[type];
      return this;
    }

    // emit removeListener for all listeners on all events
    if (arguments.length === 0) {
      for (key in this._events) {
        if (key === 'removeListener') continue;
        this.removeAllListeners(key);
      }
      this.removeAllListeners('removeListener');
      this._events = {};
      return this;
    }

    listeners = this._events[type];

    if (isFunction(listeners)) {
      this.removeListener(type, listeners);
    } else if (listeners) {
      // LIFO order
      while (listeners.length) this.removeListener(type, listeners[listeners.length - 1]);
    }
    delete this._events[type];

    return this;
  };

  EventEmitter.prototype.listeners = function (type) {
    var ret;
    if (!this._events || !this._events[type]) ret = [];else if (isFunction(this._events[type])) ret = [this._events[type]];else ret = this._events[type].slice();
    return ret;
  };

  EventEmitter.prototype.listenerCount = function (type) {
    if (this._events) {
      var evlistener = this._events[type];

      if (isFunction(evlistener)) return 1;else if (evlistener) return evlistener.length;
    }
    return 0;
  };

  EventEmitter.listenerCount = function (emitter, type) {
    return emitter.listenerCount(type);
  };

  function isFunction(arg) {
    return typeof arg === 'function';
  }

  function isNumber(arg) {
    return typeof arg === 'number';
  }

  function isObject(arg) {
    return typeof arg === 'object' && arg !== null;
  }

  function isUndefined(arg) {
    return arg === void 0;
  }
  return module.exports;
});
System.registerDynamic("npm:bluebird@3.4.7.json", [], false, function() {
  return {
    "main": "js/release/bluebird.js",
    "meta": {
      "js/browser/bluebird.js": {
        "format": "global"
      },
      "js/browser/bluebird.min.js": {
        "format": "global"
      }
    },
    "format": "cjs",
    "map": {
      "./js/release/bluebird.js": {
        "browser": "./js/browser/bluebird.js"
      }
    }
  };
});

System.registerDynamic("npm:bluebird@3.4.7/js/browser/bluebird.js", [], false, function ($__require, $__exports, $__module) {
    var _retrieveGlobal = System.get("@@global-helpers").prepareGlobal($__module.id, null, null);

    (function ($__global) {
        /* @preserve
         * The MIT License (MIT)
         * 
         * Copyright (c) 2013-2015 Petka Antonov
         * 
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         * 
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         * 
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
         * THE SOFTWARE.
         * 
         */
        /**
         * bluebird build version 3.4.7
         * Features enabled: core, race, call_get, generators, map, nodeify, promisify, props, reduce, settle, some, using, timers, filter, any, each
        */
        !function (e) {
            if ("object" == typeof exports && "undefined" != typeof module) module.exports = e();else if ("function" == typeof define && define.amd) define([], e);else {
                var f;"undefined" != typeof window ? f = window : "undefined" != typeof global ? f = global : "undefined" != typeof self && (f = self), f.Promise = e();
            }
        }(function () {
            var define, module, exports;return function e(t, n, r) {
                function s(o, u) {
                    if (!n[o]) {
                        if (!t[o]) {
                            var a = typeof _dereq_ == "function" && _dereq_;if (!u && a) return a(o, !0);if (i) return i(o, !0);var f = new Error("Cannot find module '" + o + "'");throw f.code = "MODULE_NOT_FOUND", f;
                        }var l = n[o] = { exports: {} };t[o][0].call(l.exports, function (e) {
                            var n = t[o][1][e];return s(n ? n : e);
                        }, l, l.exports, e, t, n, r);
                    }return n[o].exports;
                }var i = typeof _dereq_ == "function" && _dereq_;for (var o = 0; o < r.length; o++) s(r[o]);return s;
            }({ 1: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise) {
                        var SomePromiseArray = Promise._SomePromiseArray;
                        function any(promises) {
                            var ret = new SomePromiseArray(promises);
                            var promise = ret.promise();
                            ret.setHowMany(1);
                            ret.setUnwrap();
                            ret.init();
                            return promise;
                        }

                        Promise.any = function (promises) {
                            return any(promises);
                        };

                        Promise.prototype.any = function () {
                            return any(this);
                        };
                    };
                }, {}], 2: [function (_dereq_, module, exports) {
                    "use strict";

                    var firstLineError;
                    try {
                        throw new Error();
                    } catch (e) {
                        firstLineError = e;
                    }
                    var schedule = _dereq_("./schedule");
                    var Queue = _dereq_("./queue");
                    var util = _dereq_("./util");

                    function Async() {
                        this._customScheduler = false;
                        this._isTickUsed = false;
                        this._lateQueue = new Queue(16);
                        this._normalQueue = new Queue(16);
                        this._haveDrainedQueues = false;
                        this._trampolineEnabled = true;
                        var self = this;
                        this.drainQueues = function () {
                            self._drainQueues();
                        };
                        this._schedule = schedule;
                    }

                    Async.prototype.setScheduler = function (fn) {
                        var prev = this._schedule;
                        this._schedule = fn;
                        this._customScheduler = true;
                        return prev;
                    };

                    Async.prototype.hasCustomScheduler = function () {
                        return this._customScheduler;
                    };

                    Async.prototype.enableTrampoline = function () {
                        this._trampolineEnabled = true;
                    };

                    Async.prototype.disableTrampolineIfNecessary = function () {
                        if (util.hasDevTools) {
                            this._trampolineEnabled = false;
                        }
                    };

                    Async.prototype.haveItemsQueued = function () {
                        return this._isTickUsed || this._haveDrainedQueues;
                    };

                    Async.prototype.fatalError = function (e, isNode) {
                        if (isNode) {
                            process.stderr.write("Fatal " + (e instanceof Error ? e.stack : e) + "\n");
                            process.exit(2);
                        } else {
                            this.throwLater(e);
                        }
                    };

                    Async.prototype.throwLater = function (fn, arg) {
                        if (arguments.length === 1) {
                            arg = fn;
                            fn = function () {
                                throw arg;
                            };
                        }
                        if (typeof setTimeout !== "undefined") {
                            setTimeout(function () {
                                fn(arg);
                            }, 0);
                        } else try {
                            this._schedule(function () {
                                fn(arg);
                            });
                        } catch (e) {
                            throw new Error("No async scheduler available\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
                        }
                    };

                    function AsyncInvokeLater(fn, receiver, arg) {
                        this._lateQueue.push(fn, receiver, arg);
                        this._queueTick();
                    }

                    function AsyncInvoke(fn, receiver, arg) {
                        this._normalQueue.push(fn, receiver, arg);
                        this._queueTick();
                    }

                    function AsyncSettlePromises(promise) {
                        this._normalQueue._pushOne(promise);
                        this._queueTick();
                    }

                    if (!util.hasDevTools) {
                        Async.prototype.invokeLater = AsyncInvokeLater;
                        Async.prototype.invoke = AsyncInvoke;
                        Async.prototype.settlePromises = AsyncSettlePromises;
                    } else {
                        Async.prototype.invokeLater = function (fn, receiver, arg) {
                            if (this._trampolineEnabled) {
                                AsyncInvokeLater.call(this, fn, receiver, arg);
                            } else {
                                this._schedule(function () {
                                    setTimeout(function () {
                                        fn.call(receiver, arg);
                                    }, 100);
                                });
                            }
                        };

                        Async.prototype.invoke = function (fn, receiver, arg) {
                            if (this._trampolineEnabled) {
                                AsyncInvoke.call(this, fn, receiver, arg);
                            } else {
                                this._schedule(function () {
                                    fn.call(receiver, arg);
                                });
                            }
                        };

                        Async.prototype.settlePromises = function (promise) {
                            if (this._trampolineEnabled) {
                                AsyncSettlePromises.call(this, promise);
                            } else {
                                this._schedule(function () {
                                    promise._settlePromises();
                                });
                            }
                        };
                    }

                    Async.prototype._drainQueue = function (queue) {
                        while (queue.length() > 0) {
                            var fn = queue.shift();
                            if (typeof fn !== "function") {
                                fn._settlePromises();
                                continue;
                            }
                            var receiver = queue.shift();
                            var arg = queue.shift();
                            fn.call(receiver, arg);
                        }
                    };

                    Async.prototype._drainQueues = function () {
                        this._drainQueue(this._normalQueue);
                        this._reset();
                        this._haveDrainedQueues = true;
                        this._drainQueue(this._lateQueue);
                    };

                    Async.prototype._queueTick = function () {
                        if (!this._isTickUsed) {
                            this._isTickUsed = true;
                            this._schedule(this.drainQueues);
                        }
                    };

                    Async.prototype._reset = function () {
                        this._isTickUsed = false;
                    };

                    module.exports = Async;
                    module.exports.firstLineError = firstLineError;
                }, { "./queue": 26, "./schedule": 29, "./util": 36 }], 3: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, INTERNAL, tryConvertToPromise, debug) {
                        var calledBind = false;
                        var rejectThis = function (_, e) {
                            this._reject(e);
                        };

                        var targetRejected = function (e, context) {
                            context.promiseRejectionQueued = true;
                            context.bindingPromise._then(rejectThis, rejectThis, null, this, e);
                        };

                        var bindingResolved = function (thisArg, context) {
                            if ((this._bitField & 50397184) === 0) {
                                this._resolveCallback(context.target);
                            }
                        };

                        var bindingRejected = function (e, context) {
                            if (!context.promiseRejectionQueued) this._reject(e);
                        };

                        Promise.prototype.bind = function (thisArg) {
                            if (!calledBind) {
                                calledBind = true;
                                Promise.prototype._propagateFrom = debug.propagateFromFunction();
                                Promise.prototype._boundValue = debug.boundValueFunction();
                            }
                            var maybePromise = tryConvertToPromise(thisArg);
                            var ret = new Promise(INTERNAL);
                            ret._propagateFrom(this, 1);
                            var target = this._target();
                            ret._setBoundTo(maybePromise);
                            if (maybePromise instanceof Promise) {
                                var context = {
                                    promiseRejectionQueued: false,
                                    promise: ret,
                                    target: target,
                                    bindingPromise: maybePromise
                                };
                                target._then(INTERNAL, targetRejected, undefined, ret, context);
                                maybePromise._then(bindingResolved, bindingRejected, undefined, ret, context);
                                ret._setOnCancel(maybePromise);
                            } else {
                                ret._resolveCallback(target);
                            }
                            return ret;
                        };

                        Promise.prototype._setBoundTo = function (obj) {
                            if (obj !== undefined) {
                                this._bitField = this._bitField | 2097152;
                                this._boundTo = obj;
                            } else {
                                this._bitField = this._bitField & ~2097152;
                            }
                        };

                        Promise.prototype._isBound = function () {
                            return (this._bitField & 2097152) === 2097152;
                        };

                        Promise.bind = function (thisArg, value) {
                            return Promise.resolve(value).bind(thisArg);
                        };
                    };
                }, {}], 4: [function (_dereq_, module, exports) {
                    "use strict";

                    var old;
                    if (typeof Promise !== "undefined") old = Promise;
                    function noConflict() {
                        try {
                            if (Promise === bluebird) Promise = old;
                        } catch (e) {}
                        return bluebird;
                    }
                    var bluebird = _dereq_("./promise")();
                    bluebird.noConflict = noConflict;
                    module.exports = bluebird;
                }, { "./promise": 22 }], 5: [function (_dereq_, module, exports) {
                    "use strict";

                    var cr = Object.create;
                    if (cr) {
                        var callerCache = cr(null);
                        var getterCache = cr(null);
                        callerCache[" size"] = getterCache[" size"] = 0;
                    }

                    module.exports = function (Promise) {
                        var util = _dereq_("./util");
                        var canEvaluate = util.canEvaluate;
                        var isIdentifier = util.isIdentifier;

                        var getMethodCaller;
                        var getGetter;
                        if (!true) {
                            var makeMethodCaller = function (methodName) {
                                return new Function("ensureMethod", "                                    \n\
        return function(obj) {                                               \n\
            'use strict'                                                     \n\
            var len = this.length;                                           \n\
            ensureMethod(obj, 'methodName');                                 \n\
            switch(len) {                                                    \n\
                case 1: return obj.methodName(this[0]);                      \n\
                case 2: return obj.methodName(this[0], this[1]);             \n\
                case 3: return obj.methodName(this[0], this[1], this[2]);    \n\
                case 0: return obj.methodName();                             \n\
                default:                                                     \n\
                    return obj.methodName.apply(obj, this);                  \n\
            }                                                                \n\
        };                                                                   \n\
        ".replace(/methodName/g, methodName))(ensureMethod);
                            };

                            var makeGetter = function (propertyName) {
                                return new Function("obj", "                                             \n\
        'use strict';                                                        \n\
        return obj.propertyName;                                             \n\
        ".replace("propertyName", propertyName));
                            };

                            var getCompiled = function (name, compiler, cache) {
                                var ret = cache[name];
                                if (typeof ret !== "function") {
                                    if (!isIdentifier(name)) {
                                        return null;
                                    }
                                    ret = compiler(name);
                                    cache[name] = ret;
                                    cache[" size"]++;
                                    if (cache[" size"] > 512) {
                                        var keys = Object.keys(cache);
                                        for (var i = 0; i < 256; ++i) delete cache[keys[i]];
                                        cache[" size"] = keys.length - 256;
                                    }
                                }
                                return ret;
                            };

                            getMethodCaller = function (name) {
                                return getCompiled(name, makeMethodCaller, callerCache);
                            };

                            getGetter = function (name) {
                                return getCompiled(name, makeGetter, getterCache);
                            };
                        }

                        function ensureMethod(obj, methodName) {
                            var fn;
                            if (obj != null) fn = obj[methodName];
                            if (typeof fn !== "function") {
                                var message = "Object " + util.classString(obj) + " has no method '" + util.toString(methodName) + "'";
                                throw new Promise.TypeError(message);
                            }
                            return fn;
                        }

                        function caller(obj) {
                            var methodName = this.pop();
                            var fn = ensureMethod(obj, methodName);
                            return fn.apply(obj, this);
                        }
                        Promise.prototype.call = function (methodName) {
                            var args = [].slice.call(arguments, 1);;
                            if (!true) {
                                if (canEvaluate) {
                                    var maybeCaller = getMethodCaller(methodName);
                                    if (maybeCaller !== null) {
                                        return this._then(maybeCaller, undefined, undefined, args, undefined);
                                    }
                                }
                            }
                            args.push(methodName);
                            return this._then(caller, undefined, undefined, args, undefined);
                        };

                        function namedGetter(obj) {
                            return obj[this];
                        }
                        function indexedGetter(obj) {
                            var index = +this;
                            if (index < 0) index = Math.max(0, index + obj.length);
                            return obj[index];
                        }
                        Promise.prototype.get = function (propertyName) {
                            var isIndex = typeof propertyName === "number";
                            var getter;
                            if (!isIndex) {
                                if (canEvaluate) {
                                    var maybeGetter = getGetter(propertyName);
                                    getter = maybeGetter !== null ? maybeGetter : namedGetter;
                                } else {
                                    getter = namedGetter;
                                }
                            } else {
                                getter = indexedGetter;
                            }
                            return this._then(getter, undefined, undefined, propertyName, undefined);
                        };
                    };
                }, { "./util": 36 }], 6: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, PromiseArray, apiRejection, debug) {
                        var util = _dereq_("./util");
                        var tryCatch = util.tryCatch;
                        var errorObj = util.errorObj;
                        var async = Promise._async;

                        Promise.prototype["break"] = Promise.prototype.cancel = function () {
                            if (!debug.cancellation()) return this._warn("cancellation is disabled");

                            var promise = this;
                            var child = promise;
                            while (promise._isCancellable()) {
                                if (!promise._cancelBy(child)) {
                                    if (child._isFollowing()) {
                                        child._followee().cancel();
                                    } else {
                                        child._cancelBranched();
                                    }
                                    break;
                                }

                                var parent = promise._cancellationParent;
                                if (parent == null || !parent._isCancellable()) {
                                    if (promise._isFollowing()) {
                                        promise._followee().cancel();
                                    } else {
                                        promise._cancelBranched();
                                    }
                                    break;
                                } else {
                                    if (promise._isFollowing()) promise._followee().cancel();
                                    promise._setWillBeCancelled();
                                    child = promise;
                                    promise = parent;
                                }
                            }
                        };

                        Promise.prototype._branchHasCancelled = function () {
                            this._branchesRemainingToCancel--;
                        };

                        Promise.prototype._enoughBranchesHaveCancelled = function () {
                            return this._branchesRemainingToCancel === undefined || this._branchesRemainingToCancel <= 0;
                        };

                        Promise.prototype._cancelBy = function (canceller) {
                            if (canceller === this) {
                                this._branchesRemainingToCancel = 0;
                                this._invokeOnCancel();
                                return true;
                            } else {
                                this._branchHasCancelled();
                                if (this._enoughBranchesHaveCancelled()) {
                                    this._invokeOnCancel();
                                    return true;
                                }
                            }
                            return false;
                        };

                        Promise.prototype._cancelBranched = function () {
                            if (this._enoughBranchesHaveCancelled()) {
                                this._cancel();
                            }
                        };

                        Promise.prototype._cancel = function () {
                            if (!this._isCancellable()) return;
                            this._setCancelled();
                            async.invoke(this._cancelPromises, this, undefined);
                        };

                        Promise.prototype._cancelPromises = function () {
                            if (this._length() > 0) this._settlePromises();
                        };

                        Promise.prototype._unsetOnCancel = function () {
                            this._onCancelField = undefined;
                        };

                        Promise.prototype._isCancellable = function () {
                            return this.isPending() && !this._isCancelled();
                        };

                        Promise.prototype.isCancellable = function () {
                            return this.isPending() && !this.isCancelled();
                        };

                        Promise.prototype._doInvokeOnCancel = function (onCancelCallback, internalOnly) {
                            if (util.isArray(onCancelCallback)) {
                                for (var i = 0; i < onCancelCallback.length; ++i) {
                                    this._doInvokeOnCancel(onCancelCallback[i], internalOnly);
                                }
                            } else if (onCancelCallback !== undefined) {
                                if (typeof onCancelCallback === "function") {
                                    if (!internalOnly) {
                                        var e = tryCatch(onCancelCallback).call(this._boundValue());
                                        if (e === errorObj) {
                                            this._attachExtraTrace(e.e);
                                            async.throwLater(e.e);
                                        }
                                    }
                                } else {
                                    onCancelCallback._resultCancelled(this);
                                }
                            }
                        };

                        Promise.prototype._invokeOnCancel = function () {
                            var onCancelCallback = this._onCancel();
                            this._unsetOnCancel();
                            async.invoke(this._doInvokeOnCancel, this, onCancelCallback);
                        };

                        Promise.prototype._invokeInternalOnCancel = function () {
                            if (this._isCancellable()) {
                                this._doInvokeOnCancel(this._onCancel(), true);
                                this._unsetOnCancel();
                            }
                        };

                        Promise.prototype._resultCancelled = function () {
                            this.cancel();
                        };
                    };
                }, { "./util": 36 }], 7: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (NEXT_FILTER) {
                        var util = _dereq_("./util");
                        var getKeys = _dereq_("./es5").keys;
                        var tryCatch = util.tryCatch;
                        var errorObj = util.errorObj;

                        function catchFilter(instances, cb, promise) {
                            return function (e) {
                                var boundTo = promise._boundValue();
                                predicateLoop: for (var i = 0; i < instances.length; ++i) {
                                    var item = instances[i];

                                    if (item === Error || item != null && item.prototype instanceof Error) {
                                        if (e instanceof item) {
                                            return tryCatch(cb).call(boundTo, e);
                                        }
                                    } else if (typeof item === "function") {
                                        var matchesPredicate = tryCatch(item).call(boundTo, e);
                                        if (matchesPredicate === errorObj) {
                                            return matchesPredicate;
                                        } else if (matchesPredicate) {
                                            return tryCatch(cb).call(boundTo, e);
                                        }
                                    } else if (util.isObject(e)) {
                                        var keys = getKeys(item);
                                        for (var j = 0; j < keys.length; ++j) {
                                            var key = keys[j];
                                            if (item[key] != e[key]) {
                                                continue predicateLoop;
                                            }
                                        }
                                        return tryCatch(cb).call(boundTo, e);
                                    }
                                }
                                return NEXT_FILTER;
                            };
                        }

                        return catchFilter;
                    };
                }, { "./es5": 13, "./util": 36 }], 8: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise) {
                        var longStackTraces = false;
                        var contextStack = [];

                        Promise.prototype._promiseCreated = function () {};
                        Promise.prototype._pushContext = function () {};
                        Promise.prototype._popContext = function () {
                            return null;
                        };
                        Promise._peekContext = Promise.prototype._peekContext = function () {};

                        function Context() {
                            this._trace = new Context.CapturedTrace(peekContext());
                        }
                        Context.prototype._pushContext = function () {
                            if (this._trace !== undefined) {
                                this._trace._promiseCreated = null;
                                contextStack.push(this._trace);
                            }
                        };

                        Context.prototype._popContext = function () {
                            if (this._trace !== undefined) {
                                var trace = contextStack.pop();
                                var ret = trace._promiseCreated;
                                trace._promiseCreated = null;
                                return ret;
                            }
                            return null;
                        };

                        function createContext() {
                            if (longStackTraces) return new Context();
                        }

                        function peekContext() {
                            var lastIndex = contextStack.length - 1;
                            if (lastIndex >= 0) {
                                return contextStack[lastIndex];
                            }
                            return undefined;
                        }
                        Context.CapturedTrace = null;
                        Context.create = createContext;
                        Context.deactivateLongStackTraces = function () {};
                        Context.activateLongStackTraces = function () {
                            var Promise_pushContext = Promise.prototype._pushContext;
                            var Promise_popContext = Promise.prototype._popContext;
                            var Promise_PeekContext = Promise._peekContext;
                            var Promise_peekContext = Promise.prototype._peekContext;
                            var Promise_promiseCreated = Promise.prototype._promiseCreated;
                            Context.deactivateLongStackTraces = function () {
                                Promise.prototype._pushContext = Promise_pushContext;
                                Promise.prototype._popContext = Promise_popContext;
                                Promise._peekContext = Promise_PeekContext;
                                Promise.prototype._peekContext = Promise_peekContext;
                                Promise.prototype._promiseCreated = Promise_promiseCreated;
                                longStackTraces = false;
                            };
                            longStackTraces = true;
                            Promise.prototype._pushContext = Context.prototype._pushContext;
                            Promise.prototype._popContext = Context.prototype._popContext;
                            Promise._peekContext = Promise.prototype._peekContext = peekContext;
                            Promise.prototype._promiseCreated = function () {
                                var ctx = this._peekContext();
                                if (ctx && ctx._promiseCreated == null) ctx._promiseCreated = this;
                            };
                        };
                        return Context;
                    };
                }, {}], 9: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, Context) {
                        var getDomain = Promise._getDomain;
                        var async = Promise._async;
                        var Warning = _dereq_("./errors").Warning;
                        var util = _dereq_("./util");
                        var canAttachTrace = util.canAttachTrace;
                        var unhandledRejectionHandled;
                        var possiblyUnhandledRejection;
                        var bluebirdFramePattern = /[\\\/]bluebird[\\\/]js[\\\/](release|debug|instrumented)/;
                        var nodeFramePattern = /\((?:timers\.js):\d+:\d+\)/;
                        var parseLinePattern = /[\/<\(](.+?):(\d+):(\d+)\)?\s*$/;
                        var stackFramePattern = null;
                        var formatStack = null;
                        var indentStackFrames = false;
                        var printWarning;
                        var debugging = !!(util.env("BLUEBIRD_DEBUG") != 0 && (true || util.env("BLUEBIRD_DEBUG") || util.env("NODE_ENV") === "development"));

                        var warnings = !!(util.env("BLUEBIRD_WARNINGS") != 0 && (debugging || util.env("BLUEBIRD_WARNINGS")));

                        var longStackTraces = !!(util.env("BLUEBIRD_LONG_STACK_TRACES") != 0 && (debugging || util.env("BLUEBIRD_LONG_STACK_TRACES")));

                        var wForgottenReturn = util.env("BLUEBIRD_W_FORGOTTEN_RETURN") != 0 && (warnings || !!util.env("BLUEBIRD_W_FORGOTTEN_RETURN"));

                        Promise.prototype.suppressUnhandledRejections = function () {
                            var target = this._target();
                            target._bitField = target._bitField & ~1048576 | 524288;
                        };

                        Promise.prototype._ensurePossibleRejectionHandled = function () {
                            if ((this._bitField & 524288) !== 0) return;
                            this._setRejectionIsUnhandled();
                            async.invokeLater(this._notifyUnhandledRejection, this, undefined);
                        };

                        Promise.prototype._notifyUnhandledRejectionIsHandled = function () {
                            fireRejectionEvent("rejectionHandled", unhandledRejectionHandled, undefined, this);
                        };

                        Promise.prototype._setReturnedNonUndefined = function () {
                            this._bitField = this._bitField | 268435456;
                        };

                        Promise.prototype._returnedNonUndefined = function () {
                            return (this._bitField & 268435456) !== 0;
                        };

                        Promise.prototype._notifyUnhandledRejection = function () {
                            if (this._isRejectionUnhandled()) {
                                var reason = this._settledValue();
                                this._setUnhandledRejectionIsNotified();
                                fireRejectionEvent("unhandledRejection", possiblyUnhandledRejection, reason, this);
                            }
                        };

                        Promise.prototype._setUnhandledRejectionIsNotified = function () {
                            this._bitField = this._bitField | 262144;
                        };

                        Promise.prototype._unsetUnhandledRejectionIsNotified = function () {
                            this._bitField = this._bitField & ~262144;
                        };

                        Promise.prototype._isUnhandledRejectionNotified = function () {
                            return (this._bitField & 262144) > 0;
                        };

                        Promise.prototype._setRejectionIsUnhandled = function () {
                            this._bitField = this._bitField | 1048576;
                        };

                        Promise.prototype._unsetRejectionIsUnhandled = function () {
                            this._bitField = this._bitField & ~1048576;
                            if (this._isUnhandledRejectionNotified()) {
                                this._unsetUnhandledRejectionIsNotified();
                                this._notifyUnhandledRejectionIsHandled();
                            }
                        };

                        Promise.prototype._isRejectionUnhandled = function () {
                            return (this._bitField & 1048576) > 0;
                        };

                        Promise.prototype._warn = function (message, shouldUseOwnTrace, promise) {
                            return warn(message, shouldUseOwnTrace, promise || this);
                        };

                        Promise.onPossiblyUnhandledRejection = function (fn) {
                            var domain = getDomain();
                            possiblyUnhandledRejection = typeof fn === "function" ? domain === null ? fn : util.domainBind(domain, fn) : undefined;
                        };

                        Promise.onUnhandledRejectionHandled = function (fn) {
                            var domain = getDomain();
                            unhandledRejectionHandled = typeof fn === "function" ? domain === null ? fn : util.domainBind(domain, fn) : undefined;
                        };

                        var disableLongStackTraces = function () {};
                        Promise.longStackTraces = function () {
                            if (async.haveItemsQueued() && !config.longStackTraces) {
                                throw new Error("cannot enable long stack traces after promises have been created\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
                            }
                            if (!config.longStackTraces && longStackTracesIsSupported()) {
                                var Promise_captureStackTrace = Promise.prototype._captureStackTrace;
                                var Promise_attachExtraTrace = Promise.prototype._attachExtraTrace;
                                config.longStackTraces = true;
                                disableLongStackTraces = function () {
                                    if (async.haveItemsQueued() && !config.longStackTraces) {
                                        throw new Error("cannot enable long stack traces after promises have been created\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
                                    }
                                    Promise.prototype._captureStackTrace = Promise_captureStackTrace;
                                    Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;
                                    Context.deactivateLongStackTraces();
                                    async.enableTrampoline();
                                    config.longStackTraces = false;
                                };
                                Promise.prototype._captureStackTrace = longStackTracesCaptureStackTrace;
                                Promise.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;
                                Context.activateLongStackTraces();
                                async.disableTrampolineIfNecessary();
                            }
                        };

                        Promise.hasLongStackTraces = function () {
                            return config.longStackTraces && longStackTracesIsSupported();
                        };

                        var fireDomEvent = function () {
                            try {
                                if (typeof CustomEvent === "function") {
                                    var event = new CustomEvent("CustomEvent");
                                    util.global.dispatchEvent(event);
                                    return function (name, event) {
                                        var domEvent = new CustomEvent(name.toLowerCase(), {
                                            detail: event,
                                            cancelable: true
                                        });
                                        return !util.global.dispatchEvent(domEvent);
                                    };
                                } else if (typeof Event === "function") {
                                    var event = new Event("CustomEvent");
                                    util.global.dispatchEvent(event);
                                    return function (name, event) {
                                        var domEvent = new Event(name.toLowerCase(), {
                                            cancelable: true
                                        });
                                        domEvent.detail = event;
                                        return !util.global.dispatchEvent(domEvent);
                                    };
                                } else {
                                    var event = document.createEvent("CustomEvent");
                                    event.initCustomEvent("testingtheevent", false, true, {});
                                    util.global.dispatchEvent(event);
                                    return function (name, event) {
                                        var domEvent = document.createEvent("CustomEvent");
                                        domEvent.initCustomEvent(name.toLowerCase(), false, true, event);
                                        return !util.global.dispatchEvent(domEvent);
                                    };
                                }
                            } catch (e) {}
                            return function () {
                                return false;
                            };
                        }();

                        var fireGlobalEvent = function () {
                            if (util.isNode) {
                                return function () {
                                    return process.emit.apply(process, arguments);
                                };
                            } else {
                                if (!util.global) {
                                    return function () {
                                        return false;
                                    };
                                }
                                return function (name) {
                                    var methodName = "on" + name.toLowerCase();
                                    var method = util.global[methodName];
                                    if (!method) return false;
                                    method.apply(util.global, [].slice.call(arguments, 1));
                                    return true;
                                };
                            }
                        }();

                        function generatePromiseLifecycleEventObject(name, promise) {
                            return { promise: promise };
                        }

                        var eventToObjectGenerator = {
                            promiseCreated: generatePromiseLifecycleEventObject,
                            promiseFulfilled: generatePromiseLifecycleEventObject,
                            promiseRejected: generatePromiseLifecycleEventObject,
                            promiseResolved: generatePromiseLifecycleEventObject,
                            promiseCancelled: generatePromiseLifecycleEventObject,
                            promiseChained: function (name, promise, child) {
                                return { promise: promise, child: child };
                            },
                            warning: function (name, warning) {
                                return { warning: warning };
                            },
                            unhandledRejection: function (name, reason, promise) {
                                return { reason: reason, promise: promise };
                            },
                            rejectionHandled: generatePromiseLifecycleEventObject
                        };

                        var activeFireEvent = function (name) {
                            var globalEventFired = false;
                            try {
                                globalEventFired = fireGlobalEvent.apply(null, arguments);
                            } catch (e) {
                                async.throwLater(e);
                                globalEventFired = true;
                            }

                            var domEventFired = false;
                            try {
                                domEventFired = fireDomEvent(name, eventToObjectGenerator[name].apply(null, arguments));
                            } catch (e) {
                                async.throwLater(e);
                                domEventFired = true;
                            }

                            return domEventFired || globalEventFired;
                        };

                        Promise.config = function (opts) {
                            opts = Object(opts);
                            if ("longStackTraces" in opts) {
                                if (opts.longStackTraces) {
                                    Promise.longStackTraces();
                                } else if (!opts.longStackTraces && Promise.hasLongStackTraces()) {
                                    disableLongStackTraces();
                                }
                            }
                            if ("warnings" in opts) {
                                var warningsOption = opts.warnings;
                                config.warnings = !!warningsOption;
                                wForgottenReturn = config.warnings;

                                if (util.isObject(warningsOption)) {
                                    if ("wForgottenReturn" in warningsOption) {
                                        wForgottenReturn = !!warningsOption.wForgottenReturn;
                                    }
                                }
                            }
                            if ("cancellation" in opts && opts.cancellation && !config.cancellation) {
                                if (async.haveItemsQueued()) {
                                    throw new Error("cannot enable cancellation after promises are in use");
                                }
                                Promise.prototype._clearCancellationData = cancellationClearCancellationData;
                                Promise.prototype._propagateFrom = cancellationPropagateFrom;
                                Promise.prototype._onCancel = cancellationOnCancel;
                                Promise.prototype._setOnCancel = cancellationSetOnCancel;
                                Promise.prototype._attachCancellationCallback = cancellationAttachCancellationCallback;
                                Promise.prototype._execute = cancellationExecute;
                                propagateFromFunction = cancellationPropagateFrom;
                                config.cancellation = true;
                            }
                            if ("monitoring" in opts) {
                                if (opts.monitoring && !config.monitoring) {
                                    config.monitoring = true;
                                    Promise.prototype._fireEvent = activeFireEvent;
                                } else if (!opts.monitoring && config.monitoring) {
                                    config.monitoring = false;
                                    Promise.prototype._fireEvent = defaultFireEvent;
                                }
                            }
                            return Promise;
                        };

                        function defaultFireEvent() {
                            return false;
                        }

                        Promise.prototype._fireEvent = defaultFireEvent;
                        Promise.prototype._execute = function (executor, resolve, reject) {
                            try {
                                executor(resolve, reject);
                            } catch (e) {
                                return e;
                            }
                        };
                        Promise.prototype._onCancel = function () {};
                        Promise.prototype._setOnCancel = function (handler) {
                            ;
                        };
                        Promise.prototype._attachCancellationCallback = function (onCancel) {
                            ;
                        };
                        Promise.prototype._captureStackTrace = function () {};
                        Promise.prototype._attachExtraTrace = function () {};
                        Promise.prototype._clearCancellationData = function () {};
                        Promise.prototype._propagateFrom = function (parent, flags) {
                            ;
                            ;
                        };

                        function cancellationExecute(executor, resolve, reject) {
                            var promise = this;
                            try {
                                executor(resolve, reject, function (onCancel) {
                                    if (typeof onCancel !== "function") {
                                        throw new TypeError("onCancel must be a function, got: " + util.toString(onCancel));
                                    }
                                    promise._attachCancellationCallback(onCancel);
                                });
                            } catch (e) {
                                return e;
                            }
                        }

                        function cancellationAttachCancellationCallback(onCancel) {
                            if (!this._isCancellable()) return this;

                            var previousOnCancel = this._onCancel();
                            if (previousOnCancel !== undefined) {
                                if (util.isArray(previousOnCancel)) {
                                    previousOnCancel.push(onCancel);
                                } else {
                                    this._setOnCancel([previousOnCancel, onCancel]);
                                }
                            } else {
                                this._setOnCancel(onCancel);
                            }
                        }

                        function cancellationOnCancel() {
                            return this._onCancelField;
                        }

                        function cancellationSetOnCancel(onCancel) {
                            this._onCancelField = onCancel;
                        }

                        function cancellationClearCancellationData() {
                            this._cancellationParent = undefined;
                            this._onCancelField = undefined;
                        }

                        function cancellationPropagateFrom(parent, flags) {
                            if ((flags & 1) !== 0) {
                                this._cancellationParent = parent;
                                var branchesRemainingToCancel = parent._branchesRemainingToCancel;
                                if (branchesRemainingToCancel === undefined) {
                                    branchesRemainingToCancel = 0;
                                }
                                parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;
                            }
                            if ((flags & 2) !== 0 && parent._isBound()) {
                                this._setBoundTo(parent._boundTo);
                            }
                        }

                        function bindingPropagateFrom(parent, flags) {
                            if ((flags & 2) !== 0 && parent._isBound()) {
                                this._setBoundTo(parent._boundTo);
                            }
                        }
                        var propagateFromFunction = bindingPropagateFrom;

                        function boundValueFunction() {
                            var ret = this._boundTo;
                            if (ret !== undefined) {
                                if (ret instanceof Promise) {
                                    if (ret.isFulfilled()) {
                                        return ret.value();
                                    } else {
                                        return undefined;
                                    }
                                }
                            }
                            return ret;
                        }

                        function longStackTracesCaptureStackTrace() {
                            this._trace = new CapturedTrace(this._peekContext());
                        }

                        function longStackTracesAttachExtraTrace(error, ignoreSelf) {
                            if (canAttachTrace(error)) {
                                var trace = this._trace;
                                if (trace !== undefined) {
                                    if (ignoreSelf) trace = trace._parent;
                                }
                                if (trace !== undefined) {
                                    trace.attachExtraTrace(error);
                                } else if (!error.__stackCleaned__) {
                                    var parsed = parseStackAndMessage(error);
                                    util.notEnumerableProp(error, "stack", parsed.message + "\n" + parsed.stack.join("\n"));
                                    util.notEnumerableProp(error, "__stackCleaned__", true);
                                }
                            }
                        }

                        function checkForgottenReturns(returnValue, promiseCreated, name, promise, parent) {
                            if (returnValue === undefined && promiseCreated !== null && wForgottenReturn) {
                                if (parent !== undefined && parent._returnedNonUndefined()) return;
                                if ((promise._bitField & 65535) === 0) return;

                                if (name) name = name + " ";
                                var handlerLine = "";
                                var creatorLine = "";
                                if (promiseCreated._trace) {
                                    var traceLines = promiseCreated._trace.stack.split("\n");
                                    var stack = cleanStack(traceLines);
                                    for (var i = stack.length - 1; i >= 0; --i) {
                                        var line = stack[i];
                                        if (!nodeFramePattern.test(line)) {
                                            var lineMatches = line.match(parseLinePattern);
                                            if (lineMatches) {
                                                handlerLine = "at " + lineMatches[1] + ":" + lineMatches[2] + ":" + lineMatches[3] + " ";
                                            }
                                            break;
                                        }
                                    }

                                    if (stack.length > 0) {
                                        var firstUserLine = stack[0];
                                        for (var i = 0; i < traceLines.length; ++i) {

                                            if (traceLines[i] === firstUserLine) {
                                                if (i > 0) {
                                                    creatorLine = "\n" + traceLines[i - 1];
                                                }
                                                break;
                                            }
                                        }
                                    }
                                }
                                var msg = "a promise was created in a " + name + "handler " + handlerLine + "but was not returned from it, " + "see http://goo.gl/rRqMUw" + creatorLine;
                                promise._warn(msg, true, promiseCreated);
                            }
                        }

                        function deprecated(name, replacement) {
                            var message = name + " is deprecated and will be removed in a future version.";
                            if (replacement) message += " Use " + replacement + " instead.";
                            return warn(message);
                        }

                        function warn(message, shouldUseOwnTrace, promise) {
                            if (!config.warnings) return;
                            var warning = new Warning(message);
                            var ctx;
                            if (shouldUseOwnTrace) {
                                promise._attachExtraTrace(warning);
                            } else if (config.longStackTraces && (ctx = Promise._peekContext())) {
                                ctx.attachExtraTrace(warning);
                            } else {
                                var parsed = parseStackAndMessage(warning);
                                warning.stack = parsed.message + "\n" + parsed.stack.join("\n");
                            }

                            if (!activeFireEvent("warning", warning)) {
                                formatAndLogError(warning, "", true);
                            }
                        }

                        function reconstructStack(message, stacks) {
                            for (var i = 0; i < stacks.length - 1; ++i) {
                                stacks[i].push("From previous event:");
                                stacks[i] = stacks[i].join("\n");
                            }
                            if (i < stacks.length) {
                                stacks[i] = stacks[i].join("\n");
                            }
                            return message + "\n" + stacks.join("\n");
                        }

                        function removeDuplicateOrEmptyJumps(stacks) {
                            for (var i = 0; i < stacks.length; ++i) {
                                if (stacks[i].length === 0 || i + 1 < stacks.length && stacks[i][0] === stacks[i + 1][0]) {
                                    stacks.splice(i, 1);
                                    i--;
                                }
                            }
                        }

                        function removeCommonRoots(stacks) {
                            var current = stacks[0];
                            for (var i = 1; i < stacks.length; ++i) {
                                var prev = stacks[i];
                                var currentLastIndex = current.length - 1;
                                var currentLastLine = current[currentLastIndex];
                                var commonRootMeetPoint = -1;

                                for (var j = prev.length - 1; j >= 0; --j) {
                                    if (prev[j] === currentLastLine) {
                                        commonRootMeetPoint = j;
                                        break;
                                    }
                                }

                                for (var j = commonRootMeetPoint; j >= 0; --j) {
                                    var line = prev[j];
                                    if (current[currentLastIndex] === line) {
                                        current.pop();
                                        currentLastIndex--;
                                    } else {
                                        break;
                                    }
                                }
                                current = prev;
                            }
                        }

                        function cleanStack(stack) {
                            var ret = [];
                            for (var i = 0; i < stack.length; ++i) {
                                var line = stack[i];
                                var isTraceLine = "    (No stack trace)" === line || stackFramePattern.test(line);
                                var isInternalFrame = isTraceLine && shouldIgnore(line);
                                if (isTraceLine && !isInternalFrame) {
                                    if (indentStackFrames && line.charAt(0) !== " ") {
                                        line = "    " + line;
                                    }
                                    ret.push(line);
                                }
                            }
                            return ret;
                        }

                        function stackFramesAsArray(error) {
                            var stack = error.stack.replace(/\s+$/g, "").split("\n");
                            for (var i = 0; i < stack.length; ++i) {
                                var line = stack[i];
                                if ("    (No stack trace)" === line || stackFramePattern.test(line)) {
                                    break;
                                }
                            }
                            if (i > 0 && error.name != "SyntaxError") {
                                stack = stack.slice(i);
                            }
                            return stack;
                        }

                        function parseStackAndMessage(error) {
                            var stack = error.stack;
                            var message = error.toString();
                            stack = typeof stack === "string" && stack.length > 0 ? stackFramesAsArray(error) : ["    (No stack trace)"];
                            return {
                                message: message,
                                stack: error.name == "SyntaxError" ? stack : cleanStack(stack)
                            };
                        }

                        function formatAndLogError(error, title, isSoft) {
                            if (typeof console !== "undefined") {
                                var message;
                                if (util.isObject(error)) {
                                    var stack = error.stack;
                                    message = title + formatStack(stack, error);
                                } else {
                                    message = title + String(error);
                                }
                                if (typeof printWarning === "function") {
                                    printWarning(message, isSoft);
                                } else if (typeof console.log === "function" || typeof console.log === "object") {
                                    console.log(message);
                                }
                            }
                        }

                        function fireRejectionEvent(name, localHandler, reason, promise) {
                            var localEventFired = false;
                            try {
                                if (typeof localHandler === "function") {
                                    localEventFired = true;
                                    if (name === "rejectionHandled") {
                                        localHandler(promise);
                                    } else {
                                        localHandler(reason, promise);
                                    }
                                }
                            } catch (e) {
                                async.throwLater(e);
                            }

                            if (name === "unhandledRejection") {
                                if (!activeFireEvent(name, reason, promise) && !localEventFired) {
                                    formatAndLogError(reason, "Unhandled rejection ");
                                }
                            } else {
                                activeFireEvent(name, promise);
                            }
                        }

                        function formatNonError(obj) {
                            var str;
                            if (typeof obj === "function") {
                                str = "[function " + (obj.name || "anonymous") + "]";
                            } else {
                                str = obj && typeof obj.toString === "function" ? obj.toString() : util.toString(obj);
                                var ruselessToString = /\[object [a-zA-Z0-9$_]+\]/;
                                if (ruselessToString.test(str)) {
                                    try {
                                        var newStr = JSON.stringify(obj);
                                        str = newStr;
                                    } catch (e) {}
                                }
                                if (str.length === 0) {
                                    str = "(empty array)";
                                }
                            }
                            return "(<" + snip(str) + ">, no stack trace)";
                        }

                        function snip(str) {
                            var maxChars = 41;
                            if (str.length < maxChars) {
                                return str;
                            }
                            return str.substr(0, maxChars - 3) + "...";
                        }

                        function longStackTracesIsSupported() {
                            return typeof captureStackTrace === "function";
                        }

                        var shouldIgnore = function () {
                            return false;
                        };
                        var parseLineInfoRegex = /[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;
                        function parseLineInfo(line) {
                            var matches = line.match(parseLineInfoRegex);
                            if (matches) {
                                return {
                                    fileName: matches[1],
                                    line: parseInt(matches[2], 10)
                                };
                            }
                        }

                        function setBounds(firstLineError, lastLineError) {
                            if (!longStackTracesIsSupported()) return;
                            var firstStackLines = firstLineError.stack.split("\n");
                            var lastStackLines = lastLineError.stack.split("\n");
                            var firstIndex = -1;
                            var lastIndex = -1;
                            var firstFileName;
                            var lastFileName;
                            for (var i = 0; i < firstStackLines.length; ++i) {
                                var result = parseLineInfo(firstStackLines[i]);
                                if (result) {
                                    firstFileName = result.fileName;
                                    firstIndex = result.line;
                                    break;
                                }
                            }
                            for (var i = 0; i < lastStackLines.length; ++i) {
                                var result = parseLineInfo(lastStackLines[i]);
                                if (result) {
                                    lastFileName = result.fileName;
                                    lastIndex = result.line;
                                    break;
                                }
                            }
                            if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName || firstFileName !== lastFileName || firstIndex >= lastIndex) {
                                return;
                            }

                            shouldIgnore = function (line) {
                                if (bluebirdFramePattern.test(line)) return true;
                                var info = parseLineInfo(line);
                                if (info) {
                                    if (info.fileName === firstFileName && firstIndex <= info.line && info.line <= lastIndex) {
                                        return true;
                                    }
                                }
                                return false;
                            };
                        }

                        function CapturedTrace(parent) {
                            this._parent = parent;
                            this._promisesCreated = 0;
                            var length = this._length = 1 + (parent === undefined ? 0 : parent._length);
                            captureStackTrace(this, CapturedTrace);
                            if (length > 32) this.uncycle();
                        }
                        util.inherits(CapturedTrace, Error);
                        Context.CapturedTrace = CapturedTrace;

                        CapturedTrace.prototype.uncycle = function () {
                            var length = this._length;
                            if (length < 2) return;
                            var nodes = [];
                            var stackToIndex = {};

                            for (var i = 0, node = this; node !== undefined; ++i) {
                                nodes.push(node);
                                node = node._parent;
                            }
                            length = this._length = i;
                            for (var i = length - 1; i >= 0; --i) {
                                var stack = nodes[i].stack;
                                if (stackToIndex[stack] === undefined) {
                                    stackToIndex[stack] = i;
                                }
                            }
                            for (var i = 0; i < length; ++i) {
                                var currentStack = nodes[i].stack;
                                var index = stackToIndex[currentStack];
                                if (index !== undefined && index !== i) {
                                    if (index > 0) {
                                        nodes[index - 1]._parent = undefined;
                                        nodes[index - 1]._length = 1;
                                    }
                                    nodes[i]._parent = undefined;
                                    nodes[i]._length = 1;
                                    var cycleEdgeNode = i > 0 ? nodes[i - 1] : this;

                                    if (index < length - 1) {
                                        cycleEdgeNode._parent = nodes[index + 1];
                                        cycleEdgeNode._parent.uncycle();
                                        cycleEdgeNode._length = cycleEdgeNode._parent._length + 1;
                                    } else {
                                        cycleEdgeNode._parent = undefined;
                                        cycleEdgeNode._length = 1;
                                    }
                                    var currentChildLength = cycleEdgeNode._length + 1;
                                    for (var j = i - 2; j >= 0; --j) {
                                        nodes[j]._length = currentChildLength;
                                        currentChildLength++;
                                    }
                                    return;
                                }
                            }
                        };

                        CapturedTrace.prototype.attachExtraTrace = function (error) {
                            if (error.__stackCleaned__) return;
                            this.uncycle();
                            var parsed = parseStackAndMessage(error);
                            var message = parsed.message;
                            var stacks = [parsed.stack];

                            var trace = this;
                            while (trace !== undefined) {
                                stacks.push(cleanStack(trace.stack.split("\n")));
                                trace = trace._parent;
                            }
                            removeCommonRoots(stacks);
                            removeDuplicateOrEmptyJumps(stacks);
                            util.notEnumerableProp(error, "stack", reconstructStack(message, stacks));
                            util.notEnumerableProp(error, "__stackCleaned__", true);
                        };

                        var captureStackTrace = function stackDetection() {
                            var v8stackFramePattern = /^\s*at\s*/;
                            var v8stackFormatter = function (stack, error) {
                                if (typeof stack === "string") return stack;

                                if (error.name !== undefined && error.message !== undefined) {
                                    return error.toString();
                                }
                                return formatNonError(error);
                            };

                            if (typeof Error.stackTraceLimit === "number" && typeof Error.captureStackTrace === "function") {
                                Error.stackTraceLimit += 6;
                                stackFramePattern = v8stackFramePattern;
                                formatStack = v8stackFormatter;
                                var captureStackTrace = Error.captureStackTrace;

                                shouldIgnore = function (line) {
                                    return bluebirdFramePattern.test(line);
                                };
                                return function (receiver, ignoreUntil) {
                                    Error.stackTraceLimit += 6;
                                    captureStackTrace(receiver, ignoreUntil);
                                    Error.stackTraceLimit -= 6;
                                };
                            }
                            var err = new Error();

                            if (typeof err.stack === "string" && err.stack.split("\n")[0].indexOf("stackDetection@") >= 0) {
                                stackFramePattern = /@/;
                                formatStack = v8stackFormatter;
                                indentStackFrames = true;
                                return function captureStackTrace(o) {
                                    o.stack = new Error().stack;
                                };
                            }

                            var hasStackAfterThrow;
                            try {
                                throw new Error();
                            } catch (e) {
                                hasStackAfterThrow = "stack" in e;
                            }
                            if (!("stack" in err) && hasStackAfterThrow && typeof Error.stackTraceLimit === "number") {
                                stackFramePattern = v8stackFramePattern;
                                formatStack = v8stackFormatter;
                                return function captureStackTrace(o) {
                                    Error.stackTraceLimit += 6;
                                    try {
                                        throw new Error();
                                    } catch (e) {
                                        o.stack = e.stack;
                                    }
                                    Error.stackTraceLimit -= 6;
                                };
                            }

                            formatStack = function (stack, error) {
                                if (typeof stack === "string") return stack;

                                if ((typeof error === "object" || typeof error === "function") && error.name !== undefined && error.message !== undefined) {
                                    return error.toString();
                                }
                                return formatNonError(error);
                            };

                            return null;
                        }([]);

                        if (typeof console !== "undefined" && typeof console.warn !== "undefined") {
                            printWarning = function (message) {
                                console.warn(message);
                            };
                            if (util.isNode && process.stderr.isTTY) {
                                printWarning = function (message, isSoft) {
                                    var color = isSoft ? "\u001b[33m" : "\u001b[31m";
                                    console.warn(color + message + "\u001b[0m\n");
                                };
                            } else if (!util.isNode && typeof new Error().stack === "string") {
                                printWarning = function (message, isSoft) {
                                    console.warn("%c" + message, isSoft ? "color: darkorange" : "color: red");
                                };
                            }
                        }

                        var config = {
                            warnings: warnings,
                            longStackTraces: false,
                            cancellation: false,
                            monitoring: false
                        };

                        if (longStackTraces) Promise.longStackTraces();

                        return {
                            longStackTraces: function () {
                                return config.longStackTraces;
                            },
                            warnings: function () {
                                return config.warnings;
                            },
                            cancellation: function () {
                                return config.cancellation;
                            },
                            monitoring: function () {
                                return config.monitoring;
                            },
                            propagateFromFunction: function () {
                                return propagateFromFunction;
                            },
                            boundValueFunction: function () {
                                return boundValueFunction;
                            },
                            checkForgottenReturns: checkForgottenReturns,
                            setBounds: setBounds,
                            warn: warn,
                            deprecated: deprecated,
                            CapturedTrace: CapturedTrace,
                            fireDomEvent: fireDomEvent,
                            fireGlobalEvent: fireGlobalEvent
                        };
                    };
                }, { "./errors": 12, "./util": 36 }], 10: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise) {
                        function returner() {
                            return this.value;
                        }
                        function thrower() {
                            throw this.reason;
                        }

                        Promise.prototype["return"] = Promise.prototype.thenReturn = function (value) {
                            if (value instanceof Promise) value.suppressUnhandledRejections();
                            return this._then(returner, undefined, undefined, { value: value }, undefined);
                        };

                        Promise.prototype["throw"] = Promise.prototype.thenThrow = function (reason) {
                            return this._then(thrower, undefined, undefined, { reason: reason }, undefined);
                        };

                        Promise.prototype.catchThrow = function (reason) {
                            if (arguments.length <= 1) {
                                return this._then(undefined, thrower, undefined, { reason: reason }, undefined);
                            } else {
                                var _reason = arguments[1];
                                var handler = function () {
                                    throw _reason;
                                };
                                return this.caught(reason, handler);
                            }
                        };

                        Promise.prototype.catchReturn = function (value) {
                            if (arguments.length <= 1) {
                                if (value instanceof Promise) value.suppressUnhandledRejections();
                                return this._then(undefined, returner, undefined, { value: value }, undefined);
                            } else {
                                var _value = arguments[1];
                                if (_value instanceof Promise) _value.suppressUnhandledRejections();
                                var handler = function () {
                                    return _value;
                                };
                                return this.caught(value, handler);
                            }
                        };
                    };
                }, {}], 11: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, INTERNAL) {
                        var PromiseReduce = Promise.reduce;
                        var PromiseAll = Promise.all;

                        function promiseAllThis() {
                            return PromiseAll(this);
                        }

                        function PromiseMapSeries(promises, fn) {
                            return PromiseReduce(promises, fn, INTERNAL, INTERNAL);
                        }

                        Promise.prototype.each = function (fn) {
                            return PromiseReduce(this, fn, INTERNAL, 0)._then(promiseAllThis, undefined, undefined, this, undefined);
                        };

                        Promise.prototype.mapSeries = function (fn) {
                            return PromiseReduce(this, fn, INTERNAL, INTERNAL);
                        };

                        Promise.each = function (promises, fn) {
                            return PromiseReduce(promises, fn, INTERNAL, 0)._then(promiseAllThis, undefined, undefined, promises, undefined);
                        };

                        Promise.mapSeries = PromiseMapSeries;
                    };
                }, {}], 12: [function (_dereq_, module, exports) {
                    "use strict";

                    var es5 = _dereq_("./es5");
                    var Objectfreeze = es5.freeze;
                    var util = _dereq_("./util");
                    var inherits = util.inherits;
                    var notEnumerableProp = util.notEnumerableProp;

                    function subError(nameProperty, defaultMessage) {
                        function SubError(message) {
                            if (!(this instanceof SubError)) return new SubError(message);
                            notEnumerableProp(this, "message", typeof message === "string" ? message : defaultMessage);
                            notEnumerableProp(this, "name", nameProperty);
                            if (Error.captureStackTrace) {
                                Error.captureStackTrace(this, this.constructor);
                            } else {
                                Error.call(this);
                            }
                        }
                        inherits(SubError, Error);
                        return SubError;
                    }

                    var _TypeError, _RangeError;
                    var Warning = subError("Warning", "warning");
                    var CancellationError = subError("CancellationError", "cancellation error");
                    var TimeoutError = subError("TimeoutError", "timeout error");
                    var AggregateError = subError("AggregateError", "aggregate error");
                    try {
                        _TypeError = TypeError;
                        _RangeError = RangeError;
                    } catch (e) {
                        _TypeError = subError("TypeError", "type error");
                        _RangeError = subError("RangeError", "range error");
                    }

                    var methods = ("join pop push shift unshift slice filter forEach some " + "every map indexOf lastIndexOf reduce reduceRight sort reverse").split(" ");

                    for (var i = 0; i < methods.length; ++i) {
                        if (typeof Array.prototype[methods[i]] === "function") {
                            AggregateError.prototype[methods[i]] = Array.prototype[methods[i]];
                        }
                    }

                    es5.defineProperty(AggregateError.prototype, "length", {
                        value: 0,
                        configurable: false,
                        writable: true,
                        enumerable: true
                    });
                    AggregateError.prototype["isOperational"] = true;
                    var level = 0;
                    AggregateError.prototype.toString = function () {
                        var indent = Array(level * 4 + 1).join(" ");
                        var ret = "\n" + indent + "AggregateError of:" + "\n";
                        level++;
                        indent = Array(level * 4 + 1).join(" ");
                        for (var i = 0; i < this.length; ++i) {
                            var str = this[i] === this ? "[Circular AggregateError]" : this[i] + "";
                            var lines = str.split("\n");
                            for (var j = 0; j < lines.length; ++j) {
                                lines[j] = indent + lines[j];
                            }
                            str = lines.join("\n");
                            ret += str + "\n";
                        }
                        level--;
                        return ret;
                    };

                    function OperationalError(message) {
                        if (!(this instanceof OperationalError)) return new OperationalError(message);
                        notEnumerableProp(this, "name", "OperationalError");
                        notEnumerableProp(this, "message", message);
                        this.cause = message;
                        this["isOperational"] = true;

                        if (message instanceof Error) {
                            notEnumerableProp(this, "message", message.message);
                            notEnumerableProp(this, "stack", message.stack);
                        } else if (Error.captureStackTrace) {
                            Error.captureStackTrace(this, this.constructor);
                        }
                    }
                    inherits(OperationalError, Error);

                    var errorTypes = Error["__BluebirdErrorTypes__"];
                    if (!errorTypes) {
                        errorTypes = Objectfreeze({
                            CancellationError: CancellationError,
                            TimeoutError: TimeoutError,
                            OperationalError: OperationalError,
                            RejectionError: OperationalError,
                            AggregateError: AggregateError
                        });
                        es5.defineProperty(Error, "__BluebirdErrorTypes__", {
                            value: errorTypes,
                            writable: false,
                            enumerable: false,
                            configurable: false
                        });
                    }

                    module.exports = {
                        Error: Error,
                        TypeError: _TypeError,
                        RangeError: _RangeError,
                        CancellationError: errorTypes.CancellationError,
                        OperationalError: errorTypes.OperationalError,
                        TimeoutError: errorTypes.TimeoutError,
                        AggregateError: errorTypes.AggregateError,
                        Warning: Warning
                    };
                }, { "./es5": 13, "./util": 36 }], 13: [function (_dereq_, module, exports) {
                    var isES5 = function () {
                        "use strict";

                        return this === undefined;
                    }();

                    if (isES5) {
                        module.exports = {
                            freeze: Object.freeze,
                            defineProperty: Object.defineProperty,
                            getDescriptor: Object.getOwnPropertyDescriptor,
                            keys: Object.keys,
                            names: Object.getOwnPropertyNames,
                            getPrototypeOf: Object.getPrototypeOf,
                            isArray: Array.isArray,
                            isES5: isES5,
                            propertyIsWritable: function (obj, prop) {
                                var descriptor = Object.getOwnPropertyDescriptor(obj, prop);
                                return !!(!descriptor || descriptor.writable || descriptor.set);
                            }
                        };
                    } else {
                        var has = {}.hasOwnProperty;
                        var str = {}.toString;
                        var proto = {}.constructor.prototype;

                        var ObjectKeys = function (o) {
                            var ret = [];
                            for (var key in o) {
                                if (has.call(o, key)) {
                                    ret.push(key);
                                }
                            }
                            return ret;
                        };

                        var ObjectGetDescriptor = function (o, key) {
                            return { value: o[key] };
                        };

                        var ObjectDefineProperty = function (o, key, desc) {
                            o[key] = desc.value;
                            return o;
                        };

                        var ObjectFreeze = function (obj) {
                            return obj;
                        };

                        var ObjectGetPrototypeOf = function (obj) {
                            try {
                                return Object(obj).constructor.prototype;
                            } catch (e) {
                                return proto;
                            }
                        };

                        var ArrayIsArray = function (obj) {
                            try {
                                return str.call(obj) === "[object Array]";
                            } catch (e) {
                                return false;
                            }
                        };

                        module.exports = {
                            isArray: ArrayIsArray,
                            keys: ObjectKeys,
                            names: ObjectKeys,
                            defineProperty: ObjectDefineProperty,
                            getDescriptor: ObjectGetDescriptor,
                            freeze: ObjectFreeze,
                            getPrototypeOf: ObjectGetPrototypeOf,
                            isES5: isES5,
                            propertyIsWritable: function () {
                                return true;
                            }
                        };
                    }
                }, {}], 14: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, INTERNAL) {
                        var PromiseMap = Promise.map;

                        Promise.prototype.filter = function (fn, options) {
                            return PromiseMap(this, fn, options, INTERNAL);
                        };

                        Promise.filter = function (promises, fn, options) {
                            return PromiseMap(promises, fn, options, INTERNAL);
                        };
                    };
                }, {}], 15: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, tryConvertToPromise) {
                        var util = _dereq_("./util");
                        var CancellationError = Promise.CancellationError;
                        var errorObj = util.errorObj;

                        function PassThroughHandlerContext(promise, type, handler) {
                            this.promise = promise;
                            this.type = type;
                            this.handler = handler;
                            this.called = false;
                            this.cancelPromise = null;
                        }

                        PassThroughHandlerContext.prototype.isFinallyHandler = function () {
                            return this.type === 0;
                        };

                        function FinallyHandlerCancelReaction(finallyHandler) {
                            this.finallyHandler = finallyHandler;
                        }

                        FinallyHandlerCancelReaction.prototype._resultCancelled = function () {
                            checkCancel(this.finallyHandler);
                        };

                        function checkCancel(ctx, reason) {
                            if (ctx.cancelPromise != null) {
                                if (arguments.length > 1) {
                                    ctx.cancelPromise._reject(reason);
                                } else {
                                    ctx.cancelPromise._cancel();
                                }
                                ctx.cancelPromise = null;
                                return true;
                            }
                            return false;
                        }

                        function succeed() {
                            return finallyHandler.call(this, this.promise._target()._settledValue());
                        }
                        function fail(reason) {
                            if (checkCancel(this, reason)) return;
                            errorObj.e = reason;
                            return errorObj;
                        }
                        function finallyHandler(reasonOrValue) {
                            var promise = this.promise;
                            var handler = this.handler;

                            if (!this.called) {
                                this.called = true;
                                var ret = this.isFinallyHandler() ? handler.call(promise._boundValue()) : handler.call(promise._boundValue(), reasonOrValue);
                                if (ret !== undefined) {
                                    promise._setReturnedNonUndefined();
                                    var maybePromise = tryConvertToPromise(ret, promise);
                                    if (maybePromise instanceof Promise) {
                                        if (this.cancelPromise != null) {
                                            if (maybePromise._isCancelled()) {
                                                var reason = new CancellationError("late cancellation observer");
                                                promise._attachExtraTrace(reason);
                                                errorObj.e = reason;
                                                return errorObj;
                                            } else if (maybePromise.isPending()) {
                                                maybePromise._attachCancellationCallback(new FinallyHandlerCancelReaction(this));
                                            }
                                        }
                                        return maybePromise._then(succeed, fail, undefined, this, undefined);
                                    }
                                }
                            }

                            if (promise.isRejected()) {
                                checkCancel(this);
                                errorObj.e = reasonOrValue;
                                return errorObj;
                            } else {
                                checkCancel(this);
                                return reasonOrValue;
                            }
                        }

                        Promise.prototype._passThrough = function (handler, type, success, fail) {
                            if (typeof handler !== "function") return this.then();
                            return this._then(success, fail, undefined, new PassThroughHandlerContext(this, type, handler), undefined);
                        };

                        Promise.prototype.lastly = Promise.prototype["finally"] = function (handler) {
                            return this._passThrough(handler, 0, finallyHandler, finallyHandler);
                        };

                        Promise.prototype.tap = function (handler) {
                            return this._passThrough(handler, 1, finallyHandler);
                        };

                        return PassThroughHandlerContext;
                    };
                }, { "./util": 36 }], 16: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug) {
                        var errors = _dereq_("./errors");
                        var TypeError = errors.TypeError;
                        var util = _dereq_("./util");
                        var errorObj = util.errorObj;
                        var tryCatch = util.tryCatch;
                        var yieldHandlers = [];

                        function promiseFromYieldHandler(value, yieldHandlers, traceParent) {
                            for (var i = 0; i < yieldHandlers.length; ++i) {
                                traceParent._pushContext();
                                var result = tryCatch(yieldHandlers[i])(value);
                                traceParent._popContext();
                                if (result === errorObj) {
                                    traceParent._pushContext();
                                    var ret = Promise.reject(errorObj.e);
                                    traceParent._popContext();
                                    return ret;
                                }
                                var maybePromise = tryConvertToPromise(result, traceParent);
                                if (maybePromise instanceof Promise) return maybePromise;
                            }
                            return null;
                        }

                        function PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {
                            if (debug.cancellation()) {
                                var internal = new Promise(INTERNAL);
                                var _finallyPromise = this._finallyPromise = new Promise(INTERNAL);
                                this._promise = internal.lastly(function () {
                                    return _finallyPromise;
                                });
                                internal._captureStackTrace();
                                internal._setOnCancel(this);
                            } else {
                                var promise = this._promise = new Promise(INTERNAL);
                                promise._captureStackTrace();
                            }
                            this._stack = stack;
                            this._generatorFunction = generatorFunction;
                            this._receiver = receiver;
                            this._generator = undefined;
                            this._yieldHandlers = typeof yieldHandler === "function" ? [yieldHandler].concat(yieldHandlers) : yieldHandlers;
                            this._yieldedPromise = null;
                            this._cancellationPhase = false;
                        }
                        util.inherits(PromiseSpawn, Proxyable);

                        PromiseSpawn.prototype._isResolved = function () {
                            return this._promise === null;
                        };

                        PromiseSpawn.prototype._cleanup = function () {
                            this._promise = this._generator = null;
                            if (debug.cancellation() && this._finallyPromise !== null) {
                                this._finallyPromise._fulfill();
                                this._finallyPromise = null;
                            }
                        };

                        PromiseSpawn.prototype._promiseCancelled = function () {
                            if (this._isResolved()) return;
                            var implementsReturn = typeof this._generator["return"] !== "undefined";

                            var result;
                            if (!implementsReturn) {
                                var reason = new Promise.CancellationError("generator .return() sentinel");
                                Promise.coroutine.returnSentinel = reason;
                                this._promise._attachExtraTrace(reason);
                                this._promise._pushContext();
                                result = tryCatch(this._generator["throw"]).call(this._generator, reason);
                                this._promise._popContext();
                            } else {
                                this._promise._pushContext();
                                result = tryCatch(this._generator["return"]).call(this._generator, undefined);
                                this._promise._popContext();
                            }
                            this._cancellationPhase = true;
                            this._yieldedPromise = null;
                            this._continue(result);
                        };

                        PromiseSpawn.prototype._promiseFulfilled = function (value) {
                            this._yieldedPromise = null;
                            this._promise._pushContext();
                            var result = tryCatch(this._generator.next).call(this._generator, value);
                            this._promise._popContext();
                            this._continue(result);
                        };

                        PromiseSpawn.prototype._promiseRejected = function (reason) {
                            this._yieldedPromise = null;
                            this._promise._attachExtraTrace(reason);
                            this._promise._pushContext();
                            var result = tryCatch(this._generator["throw"]).call(this._generator, reason);
                            this._promise._popContext();
                            this._continue(result);
                        };

                        PromiseSpawn.prototype._resultCancelled = function () {
                            if (this._yieldedPromise instanceof Promise) {
                                var promise = this._yieldedPromise;
                                this._yieldedPromise = null;
                                promise.cancel();
                            }
                        };

                        PromiseSpawn.prototype.promise = function () {
                            return this._promise;
                        };

                        PromiseSpawn.prototype._run = function () {
                            this._generator = this._generatorFunction.call(this._receiver);
                            this._receiver = this._generatorFunction = undefined;
                            this._promiseFulfilled(undefined);
                        };

                        PromiseSpawn.prototype._continue = function (result) {
                            var promise = this._promise;
                            if (result === errorObj) {
                                this._cleanup();
                                if (this._cancellationPhase) {
                                    return promise.cancel();
                                } else {
                                    return promise._rejectCallback(result.e, false);
                                }
                            }

                            var value = result.value;
                            if (result.done === true) {
                                this._cleanup();
                                if (this._cancellationPhase) {
                                    return promise.cancel();
                                } else {
                                    return promise._resolveCallback(value);
                                }
                            } else {
                                var maybePromise = tryConvertToPromise(value, this._promise);
                                if (!(maybePromise instanceof Promise)) {
                                    maybePromise = promiseFromYieldHandler(maybePromise, this._yieldHandlers, this._promise);
                                    if (maybePromise === null) {
                                        this._promiseRejected(new TypeError("A value %s was yielded that could not be treated as a promise\u000a\u000a    See http://goo.gl/MqrFmX\u000a\u000a".replace("%s", value) + "From coroutine:\u000a" + this._stack.split("\n").slice(1, -7).join("\n")));
                                        return;
                                    }
                                }
                                maybePromise = maybePromise._target();
                                var bitField = maybePromise._bitField;
                                ;
                                if ((bitField & 50397184) === 0) {
                                    this._yieldedPromise = maybePromise;
                                    maybePromise._proxy(this, null);
                                } else if ((bitField & 33554432) !== 0) {
                                    Promise._async.invoke(this._promiseFulfilled, this, maybePromise._value());
                                } else if ((bitField & 16777216) !== 0) {
                                    Promise._async.invoke(this._promiseRejected, this, maybePromise._reason());
                                } else {
                                    this._promiseCancelled();
                                }
                            }
                        };

                        Promise.coroutine = function (generatorFunction, options) {
                            if (typeof generatorFunction !== "function") {
                                throw new TypeError("generatorFunction must be a function\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
                            }
                            var yieldHandler = Object(options).yieldHandler;
                            var PromiseSpawn$ = PromiseSpawn;
                            var stack = new Error().stack;
                            return function () {
                                var generator = generatorFunction.apply(this, arguments);
                                var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler, stack);
                                var ret = spawn.promise();
                                spawn._generator = generator;
                                spawn._promiseFulfilled(undefined);
                                return ret;
                            };
                        };

                        Promise.coroutine.addYieldHandler = function (fn) {
                            if (typeof fn !== "function") {
                                throw new TypeError("expecting a function but got " + util.classString(fn));
                            }
                            yieldHandlers.push(fn);
                        };

                        Promise.spawn = function (generatorFunction) {
                            debug.deprecated("Promise.spawn()", "Promise.coroutine()");
                            if (typeof generatorFunction !== "function") {
                                return apiRejection("generatorFunction must be a function\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
                            }
                            var spawn = new PromiseSpawn(generatorFunction, this);
                            var ret = spawn.promise();
                            spawn._run(Promise.spawn);
                            return ret;
                        };
                    };
                }, { "./errors": 12, "./util": 36 }], 17: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain) {
                        var util = _dereq_("./util");
                        var canEvaluate = util.canEvaluate;
                        var tryCatch = util.tryCatch;
                        var errorObj = util.errorObj;
                        var reject;

                        if (!true) {
                            if (canEvaluate) {
                                var thenCallback = function (i) {
                                    return new Function("value", "holder", "                             \n\
            'use strict';                                                    \n\
            holder.pIndex = value;                                           \n\
            holder.checkFulfillment(this);                                   \n\
            ".replace(/Index/g, i));
                                };

                                var promiseSetter = function (i) {
                                    return new Function("promise", "holder", "                           \n\
            'use strict';                                                    \n\
            holder.pIndex = promise;                                         \n\
            ".replace(/Index/g, i));
                                };

                                var generateHolderClass = function (total) {
                                    var props = new Array(total);
                                    for (var i = 0; i < props.length; ++i) {
                                        props[i] = "this.p" + (i + 1);
                                    }
                                    var assignment = props.join(" = ") + " = null;";
                                    var cancellationCode = "var promise;\n" + props.map(function (prop) {
                                        return "                                                         \n\
                promise = " + prop + ";                                      \n\
                if (promise instanceof Promise) {                            \n\
                    promise.cancel();                                        \n\
                }                                                            \n\
            ";
                                    }).join("\n");
                                    var passedArguments = props.join(", ");
                                    var name = "Holder$" + total;

                                    var code = "return function(tryCatch, errorObj, Promise, async) {    \n\
            'use strict';                                                    \n\
            function [TheName](fn) {                                         \n\
                [TheProperties]                                              \n\
                this.fn = fn;                                                \n\
                this.asyncNeeded = true;                                     \n\
                this.now = 0;                                                \n\
            }                                                                \n\
                                                                             \n\
            [TheName].prototype._callFunction = function(promise) {          \n\
                promise._pushContext();                                      \n\
                var ret = tryCatch(this.fn)([ThePassedArguments]);           \n\
                promise._popContext();                                       \n\
                if (ret === errorObj) {                                      \n\
                    promise._rejectCallback(ret.e, false);                   \n\
                } else {                                                     \n\
                    promise._resolveCallback(ret);                           \n\
                }                                                            \n\
            };                                                               \n\
                                                                             \n\
            [TheName].prototype.checkFulfillment = function(promise) {       \n\
                var now = ++this.now;                                        \n\
                if (now === [TheTotal]) {                                    \n\
                    if (this.asyncNeeded) {                                  \n\
                        async.invoke(this._callFunction, this, promise);     \n\
                    } else {                                                 \n\
                        this._callFunction(promise);                         \n\
                    }                                                        \n\
                                                                             \n\
                }                                                            \n\
            };                                                               \n\
                                                                             \n\
            [TheName].prototype._resultCancelled = function() {              \n\
                [CancellationCode]                                           \n\
            };                                                               \n\
                                                                             \n\
            return [TheName];                                                \n\
        }(tryCatch, errorObj, Promise, async);                               \n\
        ";

                                    code = code.replace(/\[TheName\]/g, name).replace(/\[TheTotal\]/g, total).replace(/\[ThePassedArguments\]/g, passedArguments).replace(/\[TheProperties\]/g, assignment).replace(/\[CancellationCode\]/g, cancellationCode);

                                    return new Function("tryCatch", "errorObj", "Promise", "async", code)(tryCatch, errorObj, Promise, async);
                                };

                                var holderClasses = [];
                                var thenCallbacks = [];
                                var promiseSetters = [];

                                for (var i = 0; i < 8; ++i) {
                                    holderClasses.push(generateHolderClass(i + 1));
                                    thenCallbacks.push(thenCallback(i + 1));
                                    promiseSetters.push(promiseSetter(i + 1));
                                }

                                reject = function (reason) {
                                    this._reject(reason);
                                };
                            }
                        }

                        Promise.join = function () {
                            var last = arguments.length - 1;
                            var fn;
                            if (last > 0 && typeof arguments[last] === "function") {
                                fn = arguments[last];
                                if (!true) {
                                    if (last <= 8 && canEvaluate) {
                                        var ret = new Promise(INTERNAL);
                                        ret._captureStackTrace();
                                        var HolderClass = holderClasses[last - 1];
                                        var holder = new HolderClass(fn);
                                        var callbacks = thenCallbacks;

                                        for (var i = 0; i < last; ++i) {
                                            var maybePromise = tryConvertToPromise(arguments[i], ret);
                                            if (maybePromise instanceof Promise) {
                                                maybePromise = maybePromise._target();
                                                var bitField = maybePromise._bitField;
                                                ;
                                                if ((bitField & 50397184) === 0) {
                                                    maybePromise._then(callbacks[i], reject, undefined, ret, holder);
                                                    promiseSetters[i](maybePromise, holder);
                                                    holder.asyncNeeded = false;
                                                } else if ((bitField & 33554432) !== 0) {
                                                    callbacks[i].call(ret, maybePromise._value(), holder);
                                                } else if ((bitField & 16777216) !== 0) {
                                                    ret._reject(maybePromise._reason());
                                                } else {
                                                    ret._cancel();
                                                }
                                            } else {
                                                callbacks[i].call(ret, maybePromise, holder);
                                            }
                                        }

                                        if (!ret._isFateSealed()) {
                                            if (holder.asyncNeeded) {
                                                var domain = getDomain();
                                                if (domain !== null) {
                                                    holder.fn = util.domainBind(domain, holder.fn);
                                                }
                                            }
                                            ret._setAsyncGuaranteed();
                                            ret._setOnCancel(holder);
                                        }
                                        return ret;
                                    }
                                }
                            }
                            var args = [].slice.call(arguments);;
                            if (fn) args.pop();
                            var ret = new PromiseArray(args).promise();
                            return fn !== undefined ? ret.spread(fn) : ret;
                        };
                    };
                }, { "./util": 36 }], 18: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug) {
                        var getDomain = Promise._getDomain;
                        var util = _dereq_("./util");
                        var tryCatch = util.tryCatch;
                        var errorObj = util.errorObj;
                        var async = Promise._async;

                        function MappingPromiseArray(promises, fn, limit, _filter) {
                            this.constructor$(promises);
                            this._promise._captureStackTrace();
                            var domain = getDomain();
                            this._callback = domain === null ? fn : util.domainBind(domain, fn);
                            this._preservedValues = _filter === INTERNAL ? new Array(this.length()) : null;
                            this._limit = limit;
                            this._inFlight = 0;
                            this._queue = [];
                            async.invoke(this._asyncInit, this, undefined);
                        }
                        util.inherits(MappingPromiseArray, PromiseArray);

                        MappingPromiseArray.prototype._asyncInit = function () {
                            this._init$(undefined, -2);
                        };

                        MappingPromiseArray.prototype._init = function () {};

                        MappingPromiseArray.prototype._promiseFulfilled = function (value, index) {
                            var values = this._values;
                            var length = this.length();
                            var preservedValues = this._preservedValues;
                            var limit = this._limit;

                            if (index < 0) {
                                index = index * -1 - 1;
                                values[index] = value;
                                if (limit >= 1) {
                                    this._inFlight--;
                                    this._drainQueue();
                                    if (this._isResolved()) return true;
                                }
                            } else {
                                if (limit >= 1 && this._inFlight >= limit) {
                                    values[index] = value;
                                    this._queue.push(index);
                                    return false;
                                }
                                if (preservedValues !== null) preservedValues[index] = value;

                                var promise = this._promise;
                                var callback = this._callback;
                                var receiver = promise._boundValue();
                                promise._pushContext();
                                var ret = tryCatch(callback).call(receiver, value, index, length);
                                var promiseCreated = promise._popContext();
                                debug.checkForgottenReturns(ret, promiseCreated, preservedValues !== null ? "Promise.filter" : "Promise.map", promise);
                                if (ret === errorObj) {
                                    this._reject(ret.e);
                                    return true;
                                }

                                var maybePromise = tryConvertToPromise(ret, this._promise);
                                if (maybePromise instanceof Promise) {
                                    maybePromise = maybePromise._target();
                                    var bitField = maybePromise._bitField;
                                    ;
                                    if ((bitField & 50397184) === 0) {
                                        if (limit >= 1) this._inFlight++;
                                        values[index] = maybePromise;
                                        maybePromise._proxy(this, (index + 1) * -1);
                                        return false;
                                    } else if ((bitField & 33554432) !== 0) {
                                        ret = maybePromise._value();
                                    } else if ((bitField & 16777216) !== 0) {
                                        this._reject(maybePromise._reason());
                                        return true;
                                    } else {
                                        this._cancel();
                                        return true;
                                    }
                                }
                                values[index] = ret;
                            }
                            var totalResolved = ++this._totalResolved;
                            if (totalResolved >= length) {
                                if (preservedValues !== null) {
                                    this._filter(values, preservedValues);
                                } else {
                                    this._resolve(values);
                                }
                                return true;
                            }
                            return false;
                        };

                        MappingPromiseArray.prototype._drainQueue = function () {
                            var queue = this._queue;
                            var limit = this._limit;
                            var values = this._values;
                            while (queue.length > 0 && this._inFlight < limit) {
                                if (this._isResolved()) return;
                                var index = queue.pop();
                                this._promiseFulfilled(values[index], index);
                            }
                        };

                        MappingPromiseArray.prototype._filter = function (booleans, values) {
                            var len = values.length;
                            var ret = new Array(len);
                            var j = 0;
                            for (var i = 0; i < len; ++i) {
                                if (booleans[i]) ret[j++] = values[i];
                            }
                            ret.length = j;
                            this._resolve(ret);
                        };

                        MappingPromiseArray.prototype.preservedValues = function () {
                            return this._preservedValues;
                        };

                        function map(promises, fn, options, _filter) {
                            if (typeof fn !== "function") {
                                return apiRejection("expecting a function but got " + util.classString(fn));
                            }

                            var limit = 0;
                            if (options !== undefined) {
                                if (typeof options === "object" && options !== null) {
                                    if (typeof options.concurrency !== "number") {
                                        return Promise.reject(new TypeError("'concurrency' must be a number but it is " + util.classString(options.concurrency)));
                                    }
                                    limit = options.concurrency;
                                } else {
                                    return Promise.reject(new TypeError("options argument must be an object but it is " + util.classString(options)));
                                }
                            }
                            limit = typeof limit === "number" && isFinite(limit) && limit >= 1 ? limit : 0;
                            return new MappingPromiseArray(promises, fn, limit, _filter).promise();
                        }

                        Promise.prototype.map = function (fn, options) {
                            return map(this, fn, options, null);
                        };

                        Promise.map = function (promises, fn, options, _filter) {
                            return map(promises, fn, options, _filter);
                        };
                    };
                }, { "./util": 36 }], 19: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {
                        var util = _dereq_("./util");
                        var tryCatch = util.tryCatch;

                        Promise.method = function (fn) {
                            if (typeof fn !== "function") {
                                throw new Promise.TypeError("expecting a function but got " + util.classString(fn));
                            }
                            return function () {
                                var ret = new Promise(INTERNAL);
                                ret._captureStackTrace();
                                ret._pushContext();
                                var value = tryCatch(fn).apply(this, arguments);
                                var promiseCreated = ret._popContext();
                                debug.checkForgottenReturns(value, promiseCreated, "Promise.method", ret);
                                ret._resolveFromSyncValue(value);
                                return ret;
                            };
                        };

                        Promise.attempt = Promise["try"] = function (fn) {
                            if (typeof fn !== "function") {
                                return apiRejection("expecting a function but got " + util.classString(fn));
                            }
                            var ret = new Promise(INTERNAL);
                            ret._captureStackTrace();
                            ret._pushContext();
                            var value;
                            if (arguments.length > 1) {
                                debug.deprecated("calling Promise.try with more than 1 argument");
                                var arg = arguments[1];
                                var ctx = arguments[2];
                                value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg) : tryCatch(fn).call(ctx, arg);
                            } else {
                                value = tryCatch(fn)();
                            }
                            var promiseCreated = ret._popContext();
                            debug.checkForgottenReturns(value, promiseCreated, "Promise.try", ret);
                            ret._resolveFromSyncValue(value);
                            return ret;
                        };

                        Promise.prototype._resolveFromSyncValue = function (value) {
                            if (value === util.errorObj) {
                                this._rejectCallback(value.e, false);
                            } else {
                                this._resolveCallback(value, true);
                            }
                        };
                    };
                }, { "./util": 36 }], 20: [function (_dereq_, module, exports) {
                    "use strict";

                    var util = _dereq_("./util");
                    var maybeWrapAsError = util.maybeWrapAsError;
                    var errors = _dereq_("./errors");
                    var OperationalError = errors.OperationalError;
                    var es5 = _dereq_("./es5");

                    function isUntypedError(obj) {
                        return obj instanceof Error && es5.getPrototypeOf(obj) === Error.prototype;
                    }

                    var rErrorKey = /^(?:name|message|stack|cause)$/;
                    function wrapAsOperationalError(obj) {
                        var ret;
                        if (isUntypedError(obj)) {
                            ret = new OperationalError(obj);
                            ret.name = obj.name;
                            ret.message = obj.message;
                            ret.stack = obj.stack;
                            var keys = es5.keys(obj);
                            for (var i = 0; i < keys.length; ++i) {
                                var key = keys[i];
                                if (!rErrorKey.test(key)) {
                                    ret[key] = obj[key];
                                }
                            }
                            return ret;
                        }
                        util.markAsOriginatingFromRejection(obj);
                        return obj;
                    }

                    function nodebackForPromise(promise, multiArgs) {
                        return function (err, value) {
                            if (promise === null) return;
                            if (err) {
                                var wrapped = wrapAsOperationalError(maybeWrapAsError(err));
                                promise._attachExtraTrace(wrapped);
                                promise._reject(wrapped);
                            } else if (!multiArgs) {
                                promise._fulfill(value);
                            } else {
                                var args = [].slice.call(arguments, 1);;
                                promise._fulfill(args);
                            }
                            promise = null;
                        };
                    }

                    module.exports = nodebackForPromise;
                }, { "./errors": 12, "./es5": 13, "./util": 36 }], 21: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise) {
                        var util = _dereq_("./util");
                        var async = Promise._async;
                        var tryCatch = util.tryCatch;
                        var errorObj = util.errorObj;

                        function spreadAdapter(val, nodeback) {
                            var promise = this;
                            if (!util.isArray(val)) return successAdapter.call(promise, val, nodeback);
                            var ret = tryCatch(nodeback).apply(promise._boundValue(), [null].concat(val));
                            if (ret === errorObj) {
                                async.throwLater(ret.e);
                            }
                        }

                        function successAdapter(val, nodeback) {
                            var promise = this;
                            var receiver = promise._boundValue();
                            var ret = val === undefined ? tryCatch(nodeback).call(receiver, null) : tryCatch(nodeback).call(receiver, null, val);
                            if (ret === errorObj) {
                                async.throwLater(ret.e);
                            }
                        }
                        function errorAdapter(reason, nodeback) {
                            var promise = this;
                            if (!reason) {
                                var newReason = new Error(reason + "");
                                newReason.cause = reason;
                                reason = newReason;
                            }
                            var ret = tryCatch(nodeback).call(promise._boundValue(), reason);
                            if (ret === errorObj) {
                                async.throwLater(ret.e);
                            }
                        }

                        Promise.prototype.asCallback = Promise.prototype.nodeify = function (nodeback, options) {
                            if (typeof nodeback == "function") {
                                var adapter = successAdapter;
                                if (options !== undefined && Object(options).spread) {
                                    adapter = spreadAdapter;
                                }
                                this._then(adapter, errorAdapter, undefined, this, nodeback);
                            }
                            return this;
                        };
                    };
                }, { "./util": 36 }], 22: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function () {
                        var makeSelfResolutionError = function () {
                            return new TypeError("circular promise resolution chain\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
                        };
                        var reflectHandler = function () {
                            return new Promise.PromiseInspection(this._target());
                        };
                        var apiRejection = function (msg) {
                            return Promise.reject(new TypeError(msg));
                        };
                        function Proxyable() {}
                        var UNDEFINED_BINDING = {};
                        var util = _dereq_("./util");

                        var getDomain;
                        if (util.isNode) {
                            getDomain = function () {
                                var ret = process.domain;
                                if (ret === undefined) ret = null;
                                return ret;
                            };
                        } else {
                            getDomain = function () {
                                return null;
                            };
                        }
                        util.notEnumerableProp(Promise, "_getDomain", getDomain);

                        var es5 = _dereq_("./es5");
                        var Async = _dereq_("./async");
                        var async = new Async();
                        es5.defineProperty(Promise, "_async", { value: async });
                        var errors = _dereq_("./errors");
                        var TypeError = Promise.TypeError = errors.TypeError;
                        Promise.RangeError = errors.RangeError;
                        var CancellationError = Promise.CancellationError = errors.CancellationError;
                        Promise.TimeoutError = errors.TimeoutError;
                        Promise.OperationalError = errors.OperationalError;
                        Promise.RejectionError = errors.OperationalError;
                        Promise.AggregateError = errors.AggregateError;
                        var INTERNAL = function () {};
                        var APPLY = {};
                        var NEXT_FILTER = {};
                        var tryConvertToPromise = _dereq_("./thenables")(Promise, INTERNAL);
                        var PromiseArray = _dereq_("./promise_array")(Promise, INTERNAL, tryConvertToPromise, apiRejection, Proxyable);
                        var Context = _dereq_("./context")(Promise);
                        /*jshint unused:false*/
                        var createContext = Context.create;
                        var debug = _dereq_("./debuggability")(Promise, Context);
                        var CapturedTrace = debug.CapturedTrace;
                        var PassThroughHandlerContext = _dereq_("./finally")(Promise, tryConvertToPromise);
                        var catchFilter = _dereq_("./catch_filter")(NEXT_FILTER);
                        var nodebackForPromise = _dereq_("./nodeback");
                        var errorObj = util.errorObj;
                        var tryCatch = util.tryCatch;
                        function check(self, executor) {
                            if (typeof executor !== "function") {
                                throw new TypeError("expecting a function but got " + util.classString(executor));
                            }
                            if (self.constructor !== Promise) {
                                throw new TypeError("the promise constructor cannot be invoked directly\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
                            }
                        }

                        function Promise(executor) {
                            this._bitField = 0;
                            this._fulfillmentHandler0 = undefined;
                            this._rejectionHandler0 = undefined;
                            this._promise0 = undefined;
                            this._receiver0 = undefined;
                            if (executor !== INTERNAL) {
                                check(this, executor);
                                this._resolveFromExecutor(executor);
                            }
                            this._promiseCreated();
                            this._fireEvent("promiseCreated", this);
                        }

                        Promise.prototype.toString = function () {
                            return "[object Promise]";
                        };

                        Promise.prototype.caught = Promise.prototype["catch"] = function (fn) {
                            var len = arguments.length;
                            if (len > 1) {
                                var catchInstances = new Array(len - 1),
                                    j = 0,
                                    i;
                                for (i = 0; i < len - 1; ++i) {
                                    var item = arguments[i];
                                    if (util.isObject(item)) {
                                        catchInstances[j++] = item;
                                    } else {
                                        return apiRejection("expecting an object but got " + "A catch statement predicate " + util.classString(item));
                                    }
                                }
                                catchInstances.length = j;
                                fn = arguments[i];
                                return this.then(undefined, catchFilter(catchInstances, fn, this));
                            }
                            return this.then(undefined, fn);
                        };

                        Promise.prototype.reflect = function () {
                            return this._then(reflectHandler, reflectHandler, undefined, this, undefined);
                        };

                        Promise.prototype.then = function (didFulfill, didReject) {
                            if (debug.warnings() && arguments.length > 0 && typeof didFulfill !== "function" && typeof didReject !== "function") {
                                var msg = ".then() only accepts functions but was passed: " + util.classString(didFulfill);
                                if (arguments.length > 1) {
                                    msg += ", " + util.classString(didReject);
                                }
                                this._warn(msg);
                            }
                            return this._then(didFulfill, didReject, undefined, undefined, undefined);
                        };

                        Promise.prototype.done = function (didFulfill, didReject) {
                            var promise = this._then(didFulfill, didReject, undefined, undefined, undefined);
                            promise._setIsFinal();
                        };

                        Promise.prototype.spread = function (fn) {
                            if (typeof fn !== "function") {
                                return apiRejection("expecting a function but got " + util.classString(fn));
                            }
                            return this.all()._then(fn, undefined, undefined, APPLY, undefined);
                        };

                        Promise.prototype.toJSON = function () {
                            var ret = {
                                isFulfilled: false,
                                isRejected: false,
                                fulfillmentValue: undefined,
                                rejectionReason: undefined
                            };
                            if (this.isFulfilled()) {
                                ret.fulfillmentValue = this.value();
                                ret.isFulfilled = true;
                            } else if (this.isRejected()) {
                                ret.rejectionReason = this.reason();
                                ret.isRejected = true;
                            }
                            return ret;
                        };

                        Promise.prototype.all = function () {
                            if (arguments.length > 0) {
                                this._warn(".all() was passed arguments but it does not take any");
                            }
                            return new PromiseArray(this).promise();
                        };

                        Promise.prototype.error = function (fn) {
                            return this.caught(util.originatesFromRejection, fn);
                        };

                        Promise.getNewLibraryCopy = module.exports;

                        Promise.is = function (val) {
                            return val instanceof Promise;
                        };

                        Promise.fromNode = Promise.fromCallback = function (fn) {
                            var ret = new Promise(INTERNAL);
                            ret._captureStackTrace();
                            var multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs : false;
                            var result = tryCatch(fn)(nodebackForPromise(ret, multiArgs));
                            if (result === errorObj) {
                                ret._rejectCallback(result.e, true);
                            }
                            if (!ret._isFateSealed()) ret._setAsyncGuaranteed();
                            return ret;
                        };

                        Promise.all = function (promises) {
                            return new PromiseArray(promises).promise();
                        };

                        Promise.cast = function (obj) {
                            var ret = tryConvertToPromise(obj);
                            if (!(ret instanceof Promise)) {
                                ret = new Promise(INTERNAL);
                                ret._captureStackTrace();
                                ret._setFulfilled();
                                ret._rejectionHandler0 = obj;
                            }
                            return ret;
                        };

                        Promise.resolve = Promise.fulfilled = Promise.cast;

                        Promise.reject = Promise.rejected = function (reason) {
                            var ret = new Promise(INTERNAL);
                            ret._captureStackTrace();
                            ret._rejectCallback(reason, true);
                            return ret;
                        };

                        Promise.setScheduler = function (fn) {
                            if (typeof fn !== "function") {
                                throw new TypeError("expecting a function but got " + util.classString(fn));
                            }
                            return async.setScheduler(fn);
                        };

                        Promise.prototype._then = function (didFulfill, didReject, _, receiver, internalData) {
                            var haveInternalData = internalData !== undefined;
                            var promise = haveInternalData ? internalData : new Promise(INTERNAL);
                            var target = this._target();
                            var bitField = target._bitField;

                            if (!haveInternalData) {
                                promise._propagateFrom(this, 3);
                                promise._captureStackTrace();
                                if (receiver === undefined && (this._bitField & 2097152) !== 0) {
                                    if (!((bitField & 50397184) === 0)) {
                                        receiver = this._boundValue();
                                    } else {
                                        receiver = target === this ? undefined : this._boundTo;
                                    }
                                }
                                this._fireEvent("promiseChained", this, promise);
                            }

                            var domain = getDomain();
                            if (!((bitField & 50397184) === 0)) {
                                var handler,
                                    value,
                                    settler = target._settlePromiseCtx;
                                if ((bitField & 33554432) !== 0) {
                                    value = target._rejectionHandler0;
                                    handler = didFulfill;
                                } else if ((bitField & 16777216) !== 0) {
                                    value = target._fulfillmentHandler0;
                                    handler = didReject;
                                    target._unsetRejectionIsUnhandled();
                                } else {
                                    settler = target._settlePromiseLateCancellationObserver;
                                    value = new CancellationError("late cancellation observer");
                                    target._attachExtraTrace(value);
                                    handler = didReject;
                                }

                                async.invoke(settler, target, {
                                    handler: domain === null ? handler : typeof handler === "function" && util.domainBind(domain, handler),
                                    promise: promise,
                                    receiver: receiver,
                                    value: value
                                });
                            } else {
                                target._addCallbacks(didFulfill, didReject, promise, receiver, domain);
                            }

                            return promise;
                        };

                        Promise.prototype._length = function () {
                            return this._bitField & 65535;
                        };

                        Promise.prototype._isFateSealed = function () {
                            return (this._bitField & 117506048) !== 0;
                        };

                        Promise.prototype._isFollowing = function () {
                            return (this._bitField & 67108864) === 67108864;
                        };

                        Promise.prototype._setLength = function (len) {
                            this._bitField = this._bitField & -65536 | len & 65535;
                        };

                        Promise.prototype._setFulfilled = function () {
                            this._bitField = this._bitField | 33554432;
                            this._fireEvent("promiseFulfilled", this);
                        };

                        Promise.prototype._setRejected = function () {
                            this._bitField = this._bitField | 16777216;
                            this._fireEvent("promiseRejected", this);
                        };

                        Promise.prototype._setFollowing = function () {
                            this._bitField = this._bitField | 67108864;
                            this._fireEvent("promiseResolved", this);
                        };

                        Promise.prototype._setIsFinal = function () {
                            this._bitField = this._bitField | 4194304;
                        };

                        Promise.prototype._isFinal = function () {
                            return (this._bitField & 4194304) > 0;
                        };

                        Promise.prototype._unsetCancelled = function () {
                            this._bitField = this._bitField & ~65536;
                        };

                        Promise.prototype._setCancelled = function () {
                            this._bitField = this._bitField | 65536;
                            this._fireEvent("promiseCancelled", this);
                        };

                        Promise.prototype._setWillBeCancelled = function () {
                            this._bitField = this._bitField | 8388608;
                        };

                        Promise.prototype._setAsyncGuaranteed = function () {
                            if (async.hasCustomScheduler()) return;
                            this._bitField = this._bitField | 134217728;
                        };

                        Promise.prototype._receiverAt = function (index) {
                            var ret = index === 0 ? this._receiver0 : this[index * 4 - 4 + 3];
                            if (ret === UNDEFINED_BINDING) {
                                return undefined;
                            } else if (ret === undefined && this._isBound()) {
                                return this._boundValue();
                            }
                            return ret;
                        };

                        Promise.prototype._promiseAt = function (index) {
                            return this[index * 4 - 4 + 2];
                        };

                        Promise.prototype._fulfillmentHandlerAt = function (index) {
                            return this[index * 4 - 4 + 0];
                        };

                        Promise.prototype._rejectionHandlerAt = function (index) {
                            return this[index * 4 - 4 + 1];
                        };

                        Promise.prototype._boundValue = function () {};

                        Promise.prototype._migrateCallback0 = function (follower) {
                            var bitField = follower._bitField;
                            var fulfill = follower._fulfillmentHandler0;
                            var reject = follower._rejectionHandler0;
                            var promise = follower._promise0;
                            var receiver = follower._receiverAt(0);
                            if (receiver === undefined) receiver = UNDEFINED_BINDING;
                            this._addCallbacks(fulfill, reject, promise, receiver, null);
                        };

                        Promise.prototype._migrateCallbackAt = function (follower, index) {
                            var fulfill = follower._fulfillmentHandlerAt(index);
                            var reject = follower._rejectionHandlerAt(index);
                            var promise = follower._promiseAt(index);
                            var receiver = follower._receiverAt(index);
                            if (receiver === undefined) receiver = UNDEFINED_BINDING;
                            this._addCallbacks(fulfill, reject, promise, receiver, null);
                        };

                        Promise.prototype._addCallbacks = function (fulfill, reject, promise, receiver, domain) {
                            var index = this._length();

                            if (index >= 65535 - 4) {
                                index = 0;
                                this._setLength(0);
                            }

                            if (index === 0) {
                                this._promise0 = promise;
                                this._receiver0 = receiver;
                                if (typeof fulfill === "function") {
                                    this._fulfillmentHandler0 = domain === null ? fulfill : util.domainBind(domain, fulfill);
                                }
                                if (typeof reject === "function") {
                                    this._rejectionHandler0 = domain === null ? reject : util.domainBind(domain, reject);
                                }
                            } else {
                                var base = index * 4 - 4;
                                this[base + 2] = promise;
                                this[base + 3] = receiver;
                                if (typeof fulfill === "function") {
                                    this[base + 0] = domain === null ? fulfill : util.domainBind(domain, fulfill);
                                }
                                if (typeof reject === "function") {
                                    this[base + 1] = domain === null ? reject : util.domainBind(domain, reject);
                                }
                            }
                            this._setLength(index + 1);
                            return index;
                        };

                        Promise.prototype._proxy = function (proxyable, arg) {
                            this._addCallbacks(undefined, undefined, arg, proxyable, null);
                        };

                        Promise.prototype._resolveCallback = function (value, shouldBind) {
                            if ((this._bitField & 117506048) !== 0) return;
                            if (value === this) return this._rejectCallback(makeSelfResolutionError(), false);
                            var maybePromise = tryConvertToPromise(value, this);
                            if (!(maybePromise instanceof Promise)) return this._fulfill(value);

                            if (shouldBind) this._propagateFrom(maybePromise, 2);

                            var promise = maybePromise._target();

                            if (promise === this) {
                                this._reject(makeSelfResolutionError());
                                return;
                            }

                            var bitField = promise._bitField;
                            if ((bitField & 50397184) === 0) {
                                var len = this._length();
                                if (len > 0) promise._migrateCallback0(this);
                                for (var i = 1; i < len; ++i) {
                                    promise._migrateCallbackAt(this, i);
                                }
                                this._setFollowing();
                                this._setLength(0);
                                this._setFollowee(promise);
                            } else if ((bitField & 33554432) !== 0) {
                                this._fulfill(promise._value());
                            } else if ((bitField & 16777216) !== 0) {
                                this._reject(promise._reason());
                            } else {
                                var reason = new CancellationError("late cancellation observer");
                                promise._attachExtraTrace(reason);
                                this._reject(reason);
                            }
                        };

                        Promise.prototype._rejectCallback = function (reason, synchronous, ignoreNonErrorWarnings) {
                            var trace = util.ensureErrorObject(reason);
                            var hasStack = trace === reason;
                            if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {
                                var message = "a promise was rejected with a non-error: " + util.classString(reason);
                                this._warn(message, true);
                            }
                            this._attachExtraTrace(trace, synchronous ? hasStack : false);
                            this._reject(reason);
                        };

                        Promise.prototype._resolveFromExecutor = function (executor) {
                            var promise = this;
                            this._captureStackTrace();
                            this._pushContext();
                            var synchronous = true;
                            var r = this._execute(executor, function (value) {
                                promise._resolveCallback(value);
                            }, function (reason) {
                                promise._rejectCallback(reason, synchronous);
                            });
                            synchronous = false;
                            this._popContext();

                            if (r !== undefined) {
                                promise._rejectCallback(r, true);
                            }
                        };

                        Promise.prototype._settlePromiseFromHandler = function (handler, receiver, value, promise) {
                            var bitField = promise._bitField;
                            if ((bitField & 65536) !== 0) return;
                            promise._pushContext();
                            var x;
                            if (receiver === APPLY) {
                                if (!value || typeof value.length !== "number") {
                                    x = errorObj;
                                    x.e = new TypeError("cannot .spread() a non-array: " + util.classString(value));
                                } else {
                                    x = tryCatch(handler).apply(this._boundValue(), value);
                                }
                            } else {
                                x = tryCatch(handler).call(receiver, value);
                            }
                            var promiseCreated = promise._popContext();
                            bitField = promise._bitField;
                            if ((bitField & 65536) !== 0) return;

                            if (x === NEXT_FILTER) {
                                promise._reject(value);
                            } else if (x === errorObj) {
                                promise._rejectCallback(x.e, false);
                            } else {
                                debug.checkForgottenReturns(x, promiseCreated, "", promise, this);
                                promise._resolveCallback(x);
                            }
                        };

                        Promise.prototype._target = function () {
                            var ret = this;
                            while (ret._isFollowing()) ret = ret._followee();
                            return ret;
                        };

                        Promise.prototype._followee = function () {
                            return this._rejectionHandler0;
                        };

                        Promise.prototype._setFollowee = function (promise) {
                            this._rejectionHandler0 = promise;
                        };

                        Promise.prototype._settlePromise = function (promise, handler, receiver, value) {
                            var isPromise = promise instanceof Promise;
                            var bitField = this._bitField;
                            var asyncGuaranteed = (bitField & 134217728) !== 0;
                            if ((bitField & 65536) !== 0) {
                                if (isPromise) promise._invokeInternalOnCancel();

                                if (receiver instanceof PassThroughHandlerContext && receiver.isFinallyHandler()) {
                                    receiver.cancelPromise = promise;
                                    if (tryCatch(handler).call(receiver, value) === errorObj) {
                                        promise._reject(errorObj.e);
                                    }
                                } else if (handler === reflectHandler) {
                                    promise._fulfill(reflectHandler.call(receiver));
                                } else if (receiver instanceof Proxyable) {
                                    receiver._promiseCancelled(promise);
                                } else if (isPromise || promise instanceof PromiseArray) {
                                    promise._cancel();
                                } else {
                                    receiver.cancel();
                                }
                            } else if (typeof handler === "function") {
                                if (!isPromise) {
                                    handler.call(receiver, value, promise);
                                } else {
                                    if (asyncGuaranteed) promise._setAsyncGuaranteed();
                                    this._settlePromiseFromHandler(handler, receiver, value, promise);
                                }
                            } else if (receiver instanceof Proxyable) {
                                if (!receiver._isResolved()) {
                                    if ((bitField & 33554432) !== 0) {
                                        receiver._promiseFulfilled(value, promise);
                                    } else {
                                        receiver._promiseRejected(value, promise);
                                    }
                                }
                            } else if (isPromise) {
                                if (asyncGuaranteed) promise._setAsyncGuaranteed();
                                if ((bitField & 33554432) !== 0) {
                                    promise._fulfill(value);
                                } else {
                                    promise._reject(value);
                                }
                            }
                        };

                        Promise.prototype._settlePromiseLateCancellationObserver = function (ctx) {
                            var handler = ctx.handler;
                            var promise = ctx.promise;
                            var receiver = ctx.receiver;
                            var value = ctx.value;
                            if (typeof handler === "function") {
                                if (!(promise instanceof Promise)) {
                                    handler.call(receiver, value, promise);
                                } else {
                                    this._settlePromiseFromHandler(handler, receiver, value, promise);
                                }
                            } else if (promise instanceof Promise) {
                                promise._reject(value);
                            }
                        };

                        Promise.prototype._settlePromiseCtx = function (ctx) {
                            this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);
                        };

                        Promise.prototype._settlePromise0 = function (handler, value, bitField) {
                            var promise = this._promise0;
                            var receiver = this._receiverAt(0);
                            this._promise0 = undefined;
                            this._receiver0 = undefined;
                            this._settlePromise(promise, handler, receiver, value);
                        };

                        Promise.prototype._clearCallbackDataAtIndex = function (index) {
                            var base = index * 4 - 4;
                            this[base + 2] = this[base + 3] = this[base + 0] = this[base + 1] = undefined;
                        };

                        Promise.prototype._fulfill = function (value) {
                            var bitField = this._bitField;
                            if ((bitField & 117506048) >>> 16) return;
                            if (value === this) {
                                var err = makeSelfResolutionError();
                                this._attachExtraTrace(err);
                                return this._reject(err);
                            }
                            this._setFulfilled();
                            this._rejectionHandler0 = value;

                            if ((bitField & 65535) > 0) {
                                if ((bitField & 134217728) !== 0) {
                                    this._settlePromises();
                                } else {
                                    async.settlePromises(this);
                                }
                            }
                        };

                        Promise.prototype._reject = function (reason) {
                            var bitField = this._bitField;
                            if ((bitField & 117506048) >>> 16) return;
                            this._setRejected();
                            this._fulfillmentHandler0 = reason;

                            if (this._isFinal()) {
                                return async.fatalError(reason, util.isNode);
                            }

                            if ((bitField & 65535) > 0) {
                                async.settlePromises(this);
                            } else {
                                this._ensurePossibleRejectionHandled();
                            }
                        };

                        Promise.prototype._fulfillPromises = function (len, value) {
                            for (var i = 1; i < len; i++) {
                                var handler = this._fulfillmentHandlerAt(i);
                                var promise = this._promiseAt(i);
                                var receiver = this._receiverAt(i);
                                this._clearCallbackDataAtIndex(i);
                                this._settlePromise(promise, handler, receiver, value);
                            }
                        };

                        Promise.prototype._rejectPromises = function (len, reason) {
                            for (var i = 1; i < len; i++) {
                                var handler = this._rejectionHandlerAt(i);
                                var promise = this._promiseAt(i);
                                var receiver = this._receiverAt(i);
                                this._clearCallbackDataAtIndex(i);
                                this._settlePromise(promise, handler, receiver, reason);
                            }
                        };

                        Promise.prototype._settlePromises = function () {
                            var bitField = this._bitField;
                            var len = bitField & 65535;

                            if (len > 0) {
                                if ((bitField & 16842752) !== 0) {
                                    var reason = this._fulfillmentHandler0;
                                    this._settlePromise0(this._rejectionHandler0, reason, bitField);
                                    this._rejectPromises(len, reason);
                                } else {
                                    var value = this._rejectionHandler0;
                                    this._settlePromise0(this._fulfillmentHandler0, value, bitField);
                                    this._fulfillPromises(len, value);
                                }
                                this._setLength(0);
                            }
                            this._clearCancellationData();
                        };

                        Promise.prototype._settledValue = function () {
                            var bitField = this._bitField;
                            if ((bitField & 33554432) !== 0) {
                                return this._rejectionHandler0;
                            } else if ((bitField & 16777216) !== 0) {
                                return this._fulfillmentHandler0;
                            }
                        };

                        function deferResolve(v) {
                            this.promise._resolveCallback(v);
                        }
                        function deferReject(v) {
                            this.promise._rejectCallback(v, false);
                        }

                        Promise.defer = Promise.pending = function () {
                            debug.deprecated("Promise.defer", "new Promise");
                            var promise = new Promise(INTERNAL);
                            return {
                                promise: promise,
                                resolve: deferResolve,
                                reject: deferReject
                            };
                        };

                        util.notEnumerableProp(Promise, "_makeSelfResolutionError", makeSelfResolutionError);

                        _dereq_("./method")(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug);
                        _dereq_("./bind")(Promise, INTERNAL, tryConvertToPromise, debug);
                        _dereq_("./cancel")(Promise, PromiseArray, apiRejection, debug);
                        _dereq_("./direct_resolve")(Promise);
                        _dereq_("./synchronous_inspection")(Promise);
                        _dereq_("./join")(Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain);
                        Promise.Promise = Promise;
                        Promise.version = "3.4.7";
                        _dereq_('./map.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);
                        _dereq_('./call_get.js')(Promise);
                        _dereq_('./using.js')(Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug);
                        _dereq_('./timers.js')(Promise, INTERNAL, debug);
                        _dereq_('./generators.js')(Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug);
                        _dereq_('./nodeify.js')(Promise);
                        _dereq_('./promisify.js')(Promise, INTERNAL);
                        _dereq_('./props.js')(Promise, PromiseArray, tryConvertToPromise, apiRejection);
                        _dereq_('./race.js')(Promise, INTERNAL, tryConvertToPromise, apiRejection);
                        _dereq_('./reduce.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);
                        _dereq_('./settle.js')(Promise, PromiseArray, debug);
                        _dereq_('./some.js')(Promise, PromiseArray, apiRejection);
                        _dereq_('./filter.js')(Promise, INTERNAL);
                        _dereq_('./each.js')(Promise, INTERNAL);
                        _dereq_('./any.js')(Promise);

                        util.toFastProperties(Promise);
                        util.toFastProperties(Promise.prototype);
                        function fillTypes(value) {
                            var p = new Promise(INTERNAL);
                            p._fulfillmentHandler0 = value;
                            p._rejectionHandler0 = value;
                            p._promise0 = value;
                            p._receiver0 = value;
                        }
                        // Complete slack tracking, opt out of field-type tracking and           
                        // stabilize map                                                         
                        fillTypes({ a: 1 });
                        fillTypes({ b: 2 });
                        fillTypes({ c: 3 });
                        fillTypes(1);
                        fillTypes(function () {});
                        fillTypes(undefined);
                        fillTypes(false);
                        fillTypes(new Promise(INTERNAL));
                        debug.setBounds(Async.firstLineError, util.lastLineError);
                        return Promise;
                    };
                }, { "./any.js": 1, "./async": 2, "./bind": 3, "./call_get.js": 5, "./cancel": 6, "./catch_filter": 7, "./context": 8, "./debuggability": 9, "./direct_resolve": 10, "./each.js": 11, "./errors": 12, "./es5": 13, "./filter.js": 14, "./finally": 15, "./generators.js": 16, "./join": 17, "./map.js": 18, "./method": 19, "./nodeback": 20, "./nodeify.js": 21, "./promise_array": 23, "./promisify.js": 24, "./props.js": 25, "./race.js": 27, "./reduce.js": 28, "./settle.js": 30, "./some.js": 31, "./synchronous_inspection": 32, "./thenables": 33, "./timers.js": 34, "./using.js": 35, "./util": 36 }], 23: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, INTERNAL, tryConvertToPromise, apiRejection, Proxyable) {
                        var util = _dereq_("./util");
                        var isArray = util.isArray;

                        function toResolutionValue(val) {
                            switch (val) {
                                case -2:
                                    return [];
                                case -3:
                                    return {};
                            }
                        }

                        function PromiseArray(values) {
                            var promise = this._promise = new Promise(INTERNAL);
                            if (values instanceof Promise) {
                                promise._propagateFrom(values, 3);
                            }
                            promise._setOnCancel(this);
                            this._values = values;
                            this._length = 0;
                            this._totalResolved = 0;
                            this._init(undefined, -2);
                        }
                        util.inherits(PromiseArray, Proxyable);

                        PromiseArray.prototype.length = function () {
                            return this._length;
                        };

                        PromiseArray.prototype.promise = function () {
                            return this._promise;
                        };

                        PromiseArray.prototype._init = function init(_, resolveValueIfEmpty) {
                            var values = tryConvertToPromise(this._values, this._promise);
                            if (values instanceof Promise) {
                                values = values._target();
                                var bitField = values._bitField;
                                ;
                                this._values = values;

                                if ((bitField & 50397184) === 0) {
                                    this._promise._setAsyncGuaranteed();
                                    return values._then(init, this._reject, undefined, this, resolveValueIfEmpty);
                                } else if ((bitField & 33554432) !== 0) {
                                    values = values._value();
                                } else if ((bitField & 16777216) !== 0) {
                                    return this._reject(values._reason());
                                } else {
                                    return this._cancel();
                                }
                            }
                            values = util.asArray(values);
                            if (values === null) {
                                var err = apiRejection("expecting an array or an iterable object but got " + util.classString(values)).reason();
                                this._promise._rejectCallback(err, false);
                                return;
                            }

                            if (values.length === 0) {
                                if (resolveValueIfEmpty === -5) {
                                    this._resolveEmptyArray();
                                } else {
                                    this._resolve(toResolutionValue(resolveValueIfEmpty));
                                }
                                return;
                            }
                            this._iterate(values);
                        };

                        PromiseArray.prototype._iterate = function (values) {
                            var len = this.getActualLength(values.length);
                            this._length = len;
                            this._values = this.shouldCopyValues() ? new Array(len) : this._values;
                            var result = this._promise;
                            var isResolved = false;
                            var bitField = null;
                            for (var i = 0; i < len; ++i) {
                                var maybePromise = tryConvertToPromise(values[i], result);

                                if (maybePromise instanceof Promise) {
                                    maybePromise = maybePromise._target();
                                    bitField = maybePromise._bitField;
                                } else {
                                    bitField = null;
                                }

                                if (isResolved) {
                                    if (bitField !== null) {
                                        maybePromise.suppressUnhandledRejections();
                                    }
                                } else if (bitField !== null) {
                                    if ((bitField & 50397184) === 0) {
                                        maybePromise._proxy(this, i);
                                        this._values[i] = maybePromise;
                                    } else if ((bitField & 33554432) !== 0) {
                                        isResolved = this._promiseFulfilled(maybePromise._value(), i);
                                    } else if ((bitField & 16777216) !== 0) {
                                        isResolved = this._promiseRejected(maybePromise._reason(), i);
                                    } else {
                                        isResolved = this._promiseCancelled(i);
                                    }
                                } else {
                                    isResolved = this._promiseFulfilled(maybePromise, i);
                                }
                            }
                            if (!isResolved) result._setAsyncGuaranteed();
                        };

                        PromiseArray.prototype._isResolved = function () {
                            return this._values === null;
                        };

                        PromiseArray.prototype._resolve = function (value) {
                            this._values = null;
                            this._promise._fulfill(value);
                        };

                        PromiseArray.prototype._cancel = function () {
                            if (this._isResolved() || !this._promise._isCancellable()) return;
                            this._values = null;
                            this._promise._cancel();
                        };

                        PromiseArray.prototype._reject = function (reason) {
                            this._values = null;
                            this._promise._rejectCallback(reason, false);
                        };

                        PromiseArray.prototype._promiseFulfilled = function (value, index) {
                            this._values[index] = value;
                            var totalResolved = ++this._totalResolved;
                            if (totalResolved >= this._length) {
                                this._resolve(this._values);
                                return true;
                            }
                            return false;
                        };

                        PromiseArray.prototype._promiseCancelled = function () {
                            this._cancel();
                            return true;
                        };

                        PromiseArray.prototype._promiseRejected = function (reason) {
                            this._totalResolved++;
                            this._reject(reason);
                            return true;
                        };

                        PromiseArray.prototype._resultCancelled = function () {
                            if (this._isResolved()) return;
                            var values = this._values;
                            this._cancel();
                            if (values instanceof Promise) {
                                values.cancel();
                            } else {
                                for (var i = 0; i < values.length; ++i) {
                                    if (values[i] instanceof Promise) {
                                        values[i].cancel();
                                    }
                                }
                            }
                        };

                        PromiseArray.prototype.shouldCopyValues = function () {
                            return true;
                        };

                        PromiseArray.prototype.getActualLength = function (len) {
                            return len;
                        };

                        return PromiseArray;
                    };
                }, { "./util": 36 }], 24: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, INTERNAL) {
                        var THIS = {};
                        var util = _dereq_("./util");
                        var nodebackForPromise = _dereq_("./nodeback");
                        var withAppended = util.withAppended;
                        var maybeWrapAsError = util.maybeWrapAsError;
                        var canEvaluate = util.canEvaluate;
                        var TypeError = _dereq_("./errors").TypeError;
                        var defaultSuffix = "Async";
                        var defaultPromisified = { __isPromisified__: true };
                        var noCopyProps = ["arity", "length", "name", "arguments", "caller", "callee", "prototype", "__isPromisified__"];
                        var noCopyPropsPattern = new RegExp("^(?:" + noCopyProps.join("|") + ")$");

                        var defaultFilter = function (name) {
                            return util.isIdentifier(name) && name.charAt(0) !== "_" && name !== "constructor";
                        };

                        function propsFilter(key) {
                            return !noCopyPropsPattern.test(key);
                        }

                        function isPromisified(fn) {
                            try {
                                return fn.__isPromisified__ === true;
                            } catch (e) {
                                return false;
                            }
                        }

                        function hasPromisified(obj, key, suffix) {
                            var val = util.getDataPropertyOrDefault(obj, key + suffix, defaultPromisified);
                            return val ? isPromisified(val) : false;
                        }
                        function checkValid(ret, suffix, suffixRegexp) {
                            for (var i = 0; i < ret.length; i += 2) {
                                var key = ret[i];
                                if (suffixRegexp.test(key)) {
                                    var keyWithoutAsyncSuffix = key.replace(suffixRegexp, "");
                                    for (var j = 0; j < ret.length; j += 2) {
                                        if (ret[j] === keyWithoutAsyncSuffix) {
                                            throw new TypeError("Cannot promisify an API that has normal methods with '%s'-suffix\u000a\u000a    See http://goo.gl/MqrFmX\u000a".replace("%s", suffix));
                                        }
                                    }
                                }
                            }
                        }

                        function promisifiableMethods(obj, suffix, suffixRegexp, filter) {
                            var keys = util.inheritedDataKeys(obj);
                            var ret = [];
                            for (var i = 0; i < keys.length; ++i) {
                                var key = keys[i];
                                var value = obj[key];
                                var passesDefaultFilter = filter === defaultFilter ? true : defaultFilter(key, value, obj);
                                if (typeof value === "function" && !isPromisified(value) && !hasPromisified(obj, key, suffix) && filter(key, value, obj, passesDefaultFilter)) {
                                    ret.push(key, value);
                                }
                            }
                            checkValid(ret, suffix, suffixRegexp);
                            return ret;
                        }

                        var escapeIdentRegex = function (str) {
                            return str.replace(/([$])/, "\\$");
                        };

                        var makeNodePromisifiedEval;
                        if (!true) {
                            var switchCaseArgumentOrder = function (likelyArgumentCount) {
                                var ret = [likelyArgumentCount];
                                var min = Math.max(0, likelyArgumentCount - 1 - 3);
                                for (var i = likelyArgumentCount - 1; i >= min; --i) {
                                    ret.push(i);
                                }
                                for (var i = likelyArgumentCount + 1; i <= 3; ++i) {
                                    ret.push(i);
                                }
                                return ret;
                            };

                            var argumentSequence = function (argumentCount) {
                                return util.filledRange(argumentCount, "_arg", "");
                            };

                            var parameterDeclaration = function (parameterCount) {
                                return util.filledRange(Math.max(parameterCount, 3), "_arg", "");
                            };

                            var parameterCount = function (fn) {
                                if (typeof fn.length === "number") {
                                    return Math.max(Math.min(fn.length, 1023 + 1), 0);
                                }
                                return 0;
                            };

                            makeNodePromisifiedEval = function (callback, receiver, originalName, fn, _, multiArgs) {
                                var newParameterCount = Math.max(0, parameterCount(fn) - 1);
                                var argumentOrder = switchCaseArgumentOrder(newParameterCount);
                                var shouldProxyThis = typeof callback === "string" || receiver === THIS;

                                function generateCallForArgumentCount(count) {
                                    var args = argumentSequence(count).join(", ");
                                    var comma = count > 0 ? ", " : "";
                                    var ret;
                                    if (shouldProxyThis) {
                                        ret = "ret = callback.call(this, {{args}}, nodeback); break;\n";
                                    } else {
                                        ret = receiver === undefined ? "ret = callback({{args}}, nodeback); break;\n" : "ret = callback.call(receiver, {{args}}, nodeback); break;\n";
                                    }
                                    return ret.replace("{{args}}", args).replace(", ", comma);
                                }

                                function generateArgumentSwitchCase() {
                                    var ret = "";
                                    for (var i = 0; i < argumentOrder.length; ++i) {
                                        ret += "case " + argumentOrder[i] + ":" + generateCallForArgumentCount(argumentOrder[i]);
                                    }

                                    ret += "                                                             \n\
        default:                                                             \n\
            var args = new Array(len + 1);                                   \n\
            var i = 0;                                                       \n\
            for (var i = 0; i < len; ++i) {                                  \n\
               args[i] = arguments[i];                                       \n\
            }                                                                \n\
            args[i] = nodeback;                                              \n\
            [CodeForCall]                                                    \n\
            break;                                                           \n\
        ".replace("[CodeForCall]", shouldProxyThis ? "ret = callback.apply(this, args);\n" : "ret = callback.apply(receiver, args);\n");
                                    return ret;
                                }

                                var getFunctionCode = typeof callback === "string" ? "this != null ? this['" + callback + "'] : fn" : "fn";
                                var body = "'use strict';                                                \n\
        var ret = function (Parameters) {                                    \n\
            'use strict';                                                    \n\
            var len = arguments.length;                                      \n\
            var promise = new Promise(INTERNAL);                             \n\
            promise._captureStackTrace();                                    \n\
            var nodeback = nodebackForPromise(promise, " + multiArgs + ");   \n\
            var ret;                                                         \n\
            var callback = tryCatch([GetFunctionCode]);                      \n\
            switch(len) {                                                    \n\
                [CodeForSwitchCase]                                          \n\
            }                                                                \n\
            if (ret === errorObj) {                                          \n\
                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);\n\
            }                                                                \n\
            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();     \n\
            return promise;                                                  \n\
        };                                                                   \n\
        notEnumerableProp(ret, '__isPromisified__', true);                   \n\
        return ret;                                                          \n\
    ".replace("[CodeForSwitchCase]", generateArgumentSwitchCase()).replace("[GetFunctionCode]", getFunctionCode);
                                body = body.replace("Parameters", parameterDeclaration(newParameterCount));
                                return new Function("Promise", "fn", "receiver", "withAppended", "maybeWrapAsError", "nodebackForPromise", "tryCatch", "errorObj", "notEnumerableProp", "INTERNAL", body)(Promise, fn, receiver, withAppended, maybeWrapAsError, nodebackForPromise, util.tryCatch, util.errorObj, util.notEnumerableProp, INTERNAL);
                            };
                        }

                        function makeNodePromisifiedClosure(callback, receiver, _, fn, __, multiArgs) {
                            var defaultThis = function () {
                                return this;
                            }();
                            var method = callback;
                            if (typeof method === "string") {
                                callback = fn;
                            }
                            function promisified() {
                                var _receiver = receiver;
                                if (receiver === THIS) _receiver = this;
                                var promise = new Promise(INTERNAL);
                                promise._captureStackTrace();
                                var cb = typeof method === "string" && this !== defaultThis ? this[method] : callback;
                                var fn = nodebackForPromise(promise, multiArgs);
                                try {
                                    cb.apply(_receiver, withAppended(arguments, fn));
                                } catch (e) {
                                    promise._rejectCallback(maybeWrapAsError(e), true, true);
                                }
                                if (!promise._isFateSealed()) promise._setAsyncGuaranteed();
                                return promise;
                            }
                            util.notEnumerableProp(promisified, "__isPromisified__", true);
                            return promisified;
                        }

                        var makeNodePromisified = canEvaluate ? makeNodePromisifiedEval : makeNodePromisifiedClosure;

                        function promisifyAll(obj, suffix, filter, promisifier, multiArgs) {
                            var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + "$");
                            var methods = promisifiableMethods(obj, suffix, suffixRegexp, filter);

                            for (var i = 0, len = methods.length; i < len; i += 2) {
                                var key = methods[i];
                                var fn = methods[i + 1];
                                var promisifiedKey = key + suffix;
                                if (promisifier === makeNodePromisified) {
                                    obj[promisifiedKey] = makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);
                                } else {
                                    var promisified = promisifier(fn, function () {
                                        return makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);
                                    });
                                    util.notEnumerableProp(promisified, "__isPromisified__", true);
                                    obj[promisifiedKey] = promisified;
                                }
                            }
                            util.toFastProperties(obj);
                            return obj;
                        }

                        function promisify(callback, receiver, multiArgs) {
                            return makeNodePromisified(callback, receiver, undefined, callback, null, multiArgs);
                        }

                        Promise.promisify = function (fn, options) {
                            if (typeof fn !== "function") {
                                throw new TypeError("expecting a function but got " + util.classString(fn));
                            }
                            if (isPromisified(fn)) {
                                return fn;
                            }
                            options = Object(options);
                            var receiver = options.context === undefined ? THIS : options.context;
                            var multiArgs = !!options.multiArgs;
                            var ret = promisify(fn, receiver, multiArgs);
                            util.copyDescriptors(fn, ret, propsFilter);
                            return ret;
                        };

                        Promise.promisifyAll = function (target, options) {
                            if (typeof target !== "function" && typeof target !== "object") {
                                throw new TypeError("the target of promisifyAll must be an object or a function\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
                            }
                            options = Object(options);
                            var multiArgs = !!options.multiArgs;
                            var suffix = options.suffix;
                            if (typeof suffix !== "string") suffix = defaultSuffix;
                            var filter = options.filter;
                            if (typeof filter !== "function") filter = defaultFilter;
                            var promisifier = options.promisifier;
                            if (typeof promisifier !== "function") promisifier = makeNodePromisified;

                            if (!util.isIdentifier(suffix)) {
                                throw new RangeError("suffix must be a valid identifier\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
                            }

                            var keys = util.inheritedDataKeys(target);
                            for (var i = 0; i < keys.length; ++i) {
                                var value = target[keys[i]];
                                if (keys[i] !== "constructor" && util.isClass(value)) {
                                    promisifyAll(value.prototype, suffix, filter, promisifier, multiArgs);
                                    promisifyAll(value, suffix, filter, promisifier, multiArgs);
                                }
                            }

                            return promisifyAll(target, suffix, filter, promisifier, multiArgs);
                        };
                    };
                }, { "./errors": 12, "./nodeback": 20, "./util": 36 }], 25: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, PromiseArray, tryConvertToPromise, apiRejection) {
                        var util = _dereq_("./util");
                        var isObject = util.isObject;
                        var es5 = _dereq_("./es5");
                        var Es6Map;
                        if (typeof Map === "function") Es6Map = Map;

                        var mapToEntries = function () {
                            var index = 0;
                            var size = 0;

                            function extractEntry(value, key) {
                                this[index] = value;
                                this[index + size] = key;
                                index++;
                            }

                            return function mapToEntries(map) {
                                size = map.size;
                                index = 0;
                                var ret = new Array(map.size * 2);
                                map.forEach(extractEntry, ret);
                                return ret;
                            };
                        }();

                        var entriesToMap = function (entries) {
                            var ret = new Es6Map();
                            var length = entries.length / 2 | 0;
                            for (var i = 0; i < length; ++i) {
                                var key = entries[length + i];
                                var value = entries[i];
                                ret.set(key, value);
                            }
                            return ret;
                        };

                        function PropertiesPromiseArray(obj) {
                            var isMap = false;
                            var entries;
                            if (Es6Map !== undefined && obj instanceof Es6Map) {
                                entries = mapToEntries(obj);
                                isMap = true;
                            } else {
                                var keys = es5.keys(obj);
                                var len = keys.length;
                                entries = new Array(len * 2);
                                for (var i = 0; i < len; ++i) {
                                    var key = keys[i];
                                    entries[i] = obj[key];
                                    entries[i + len] = key;
                                }
                            }
                            this.constructor$(entries);
                            this._isMap = isMap;
                            this._init$(undefined, -3);
                        }
                        util.inherits(PropertiesPromiseArray, PromiseArray);

                        PropertiesPromiseArray.prototype._init = function () {};

                        PropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) {
                            this._values[index] = value;
                            var totalResolved = ++this._totalResolved;
                            if (totalResolved >= this._length) {
                                var val;
                                if (this._isMap) {
                                    val = entriesToMap(this._values);
                                } else {
                                    val = {};
                                    var keyOffset = this.length();
                                    for (var i = 0, len = this.length(); i < len; ++i) {
                                        val[this._values[i + keyOffset]] = this._values[i];
                                    }
                                }
                                this._resolve(val);
                                return true;
                            }
                            return false;
                        };

                        PropertiesPromiseArray.prototype.shouldCopyValues = function () {
                            return false;
                        };

                        PropertiesPromiseArray.prototype.getActualLength = function (len) {
                            return len >> 1;
                        };

                        function props(promises) {
                            var ret;
                            var castValue = tryConvertToPromise(promises);

                            if (!isObject(castValue)) {
                                return apiRejection("cannot await properties of a non-object\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
                            } else if (castValue instanceof Promise) {
                                ret = castValue._then(Promise.props, undefined, undefined, undefined, undefined);
                            } else {
                                ret = new PropertiesPromiseArray(castValue).promise();
                            }

                            if (castValue instanceof Promise) {
                                ret._propagateFrom(castValue, 2);
                            }
                            return ret;
                        }

                        Promise.prototype.props = function () {
                            return props(this);
                        };

                        Promise.props = function (promises) {
                            return props(promises);
                        };
                    };
                }, { "./es5": 13, "./util": 36 }], 26: [function (_dereq_, module, exports) {
                    "use strict";

                    function arrayMove(src, srcIndex, dst, dstIndex, len) {
                        for (var j = 0; j < len; ++j) {
                            dst[j + dstIndex] = src[j + srcIndex];
                            src[j + srcIndex] = void 0;
                        }
                    }

                    function Queue(capacity) {
                        this._capacity = capacity;
                        this._length = 0;
                        this._front = 0;
                    }

                    Queue.prototype._willBeOverCapacity = function (size) {
                        return this._capacity < size;
                    };

                    Queue.prototype._pushOne = function (arg) {
                        var length = this.length();
                        this._checkCapacity(length + 1);
                        var i = this._front + length & this._capacity - 1;
                        this[i] = arg;
                        this._length = length + 1;
                    };

                    Queue.prototype.push = function (fn, receiver, arg) {
                        var length = this.length() + 3;
                        if (this._willBeOverCapacity(length)) {
                            this._pushOne(fn);
                            this._pushOne(receiver);
                            this._pushOne(arg);
                            return;
                        }
                        var j = this._front + length - 3;
                        this._checkCapacity(length);
                        var wrapMask = this._capacity - 1;
                        this[j + 0 & wrapMask] = fn;
                        this[j + 1 & wrapMask] = receiver;
                        this[j + 2 & wrapMask] = arg;
                        this._length = length;
                    };

                    Queue.prototype.shift = function () {
                        var front = this._front,
                            ret = this[front];

                        this[front] = undefined;
                        this._front = front + 1 & this._capacity - 1;
                        this._length--;
                        return ret;
                    };

                    Queue.prototype.length = function () {
                        return this._length;
                    };

                    Queue.prototype._checkCapacity = function (size) {
                        if (this._capacity < size) {
                            this._resizeTo(this._capacity << 1);
                        }
                    };

                    Queue.prototype._resizeTo = function (capacity) {
                        var oldCapacity = this._capacity;
                        this._capacity = capacity;
                        var front = this._front;
                        var length = this._length;
                        var moveItemsCount = front + length & oldCapacity - 1;
                        arrayMove(this, 0, this, oldCapacity, moveItemsCount);
                    };

                    module.exports = Queue;
                }, {}], 27: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, INTERNAL, tryConvertToPromise, apiRejection) {
                        var util = _dereq_("./util");

                        var raceLater = function (promise) {
                            return promise.then(function (array) {
                                return race(array, promise);
                            });
                        };

                        function race(promises, parent) {
                            var maybePromise = tryConvertToPromise(promises);

                            if (maybePromise instanceof Promise) {
                                return raceLater(maybePromise);
                            } else {
                                promises = util.asArray(promises);
                                if (promises === null) return apiRejection("expecting an array or an iterable object but got " + util.classString(promises));
                            }

                            var ret = new Promise(INTERNAL);
                            if (parent !== undefined) {
                                ret._propagateFrom(parent, 3);
                            }
                            var fulfill = ret._fulfill;
                            var reject = ret._reject;
                            for (var i = 0, len = promises.length; i < len; ++i) {
                                var val = promises[i];

                                if (val === undefined && !(i in promises)) {
                                    continue;
                                }

                                Promise.cast(val)._then(fulfill, reject, undefined, ret, null);
                            }
                            return ret;
                        }

                        Promise.race = function (promises) {
                            return race(promises, undefined);
                        };

                        Promise.prototype.race = function () {
                            return race(this, undefined);
                        };
                    };
                }, { "./util": 36 }], 28: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug) {
                        var getDomain = Promise._getDomain;
                        var util = _dereq_("./util");
                        var tryCatch = util.tryCatch;

                        function ReductionPromiseArray(promises, fn, initialValue, _each) {
                            this.constructor$(promises);
                            var domain = getDomain();
                            this._fn = domain === null ? fn : util.domainBind(domain, fn);
                            if (initialValue !== undefined) {
                                initialValue = Promise.resolve(initialValue);
                                initialValue._attachCancellationCallback(this);
                            }
                            this._initialValue = initialValue;
                            this._currentCancellable = null;
                            if (_each === INTERNAL) {
                                this._eachValues = Array(this._length);
                            } else if (_each === 0) {
                                this._eachValues = null;
                            } else {
                                this._eachValues = undefined;
                            }
                            this._promise._captureStackTrace();
                            this._init$(undefined, -5);
                        }
                        util.inherits(ReductionPromiseArray, PromiseArray);

                        ReductionPromiseArray.prototype._gotAccum = function (accum) {
                            if (this._eachValues !== undefined && this._eachValues !== null && accum !== INTERNAL) {
                                this._eachValues.push(accum);
                            }
                        };

                        ReductionPromiseArray.prototype._eachComplete = function (value) {
                            if (this._eachValues !== null) {
                                this._eachValues.push(value);
                            }
                            return this._eachValues;
                        };

                        ReductionPromiseArray.prototype._init = function () {};

                        ReductionPromiseArray.prototype._resolveEmptyArray = function () {
                            this._resolve(this._eachValues !== undefined ? this._eachValues : this._initialValue);
                        };

                        ReductionPromiseArray.prototype.shouldCopyValues = function () {
                            return false;
                        };

                        ReductionPromiseArray.prototype._resolve = function (value) {
                            this._promise._resolveCallback(value);
                            this._values = null;
                        };

                        ReductionPromiseArray.prototype._resultCancelled = function (sender) {
                            if (sender === this._initialValue) return this._cancel();
                            if (this._isResolved()) return;
                            this._resultCancelled$();
                            if (this._currentCancellable instanceof Promise) {
                                this._currentCancellable.cancel();
                            }
                            if (this._initialValue instanceof Promise) {
                                this._initialValue.cancel();
                            }
                        };

                        ReductionPromiseArray.prototype._iterate = function (values) {
                            this._values = values;
                            var value;
                            var i;
                            var length = values.length;
                            if (this._initialValue !== undefined) {
                                value = this._initialValue;
                                i = 0;
                            } else {
                                value = Promise.resolve(values[0]);
                                i = 1;
                            }

                            this._currentCancellable = value;

                            if (!value.isRejected()) {
                                for (; i < length; ++i) {
                                    var ctx = {
                                        accum: null,
                                        value: values[i],
                                        index: i,
                                        length: length,
                                        array: this
                                    };
                                    value = value._then(gotAccum, undefined, undefined, ctx, undefined);
                                }
                            }

                            if (this._eachValues !== undefined) {
                                value = value._then(this._eachComplete, undefined, undefined, this, undefined);
                            }
                            value._then(completed, completed, undefined, value, this);
                        };

                        Promise.prototype.reduce = function (fn, initialValue) {
                            return reduce(this, fn, initialValue, null);
                        };

                        Promise.reduce = function (promises, fn, initialValue, _each) {
                            return reduce(promises, fn, initialValue, _each);
                        };

                        function completed(valueOrReason, array) {
                            if (this.isFulfilled()) {
                                array._resolve(valueOrReason);
                            } else {
                                array._reject(valueOrReason);
                            }
                        }

                        function reduce(promises, fn, initialValue, _each) {
                            if (typeof fn !== "function") {
                                return apiRejection("expecting a function but got " + util.classString(fn));
                            }
                            var array = new ReductionPromiseArray(promises, fn, initialValue, _each);
                            return array.promise();
                        }

                        function gotAccum(accum) {
                            this.accum = accum;
                            this.array._gotAccum(accum);
                            var value = tryConvertToPromise(this.value, this.array._promise);
                            if (value instanceof Promise) {
                                this.array._currentCancellable = value;
                                return value._then(gotValue, undefined, undefined, this, undefined);
                            } else {
                                return gotValue.call(this, value);
                            }
                        }

                        function gotValue(value) {
                            var array = this.array;
                            var promise = array._promise;
                            var fn = tryCatch(array._fn);
                            promise._pushContext();
                            var ret;
                            if (array._eachValues !== undefined) {
                                ret = fn.call(promise._boundValue(), value, this.index, this.length);
                            } else {
                                ret = fn.call(promise._boundValue(), this.accum, value, this.index, this.length);
                            }
                            if (ret instanceof Promise) {
                                array._currentCancellable = ret;
                            }
                            var promiseCreated = promise._popContext();
                            debug.checkForgottenReturns(ret, promiseCreated, array._eachValues !== undefined ? "Promise.each" : "Promise.reduce", promise);
                            return ret;
                        }
                    };
                }, { "./util": 36 }], 29: [function (_dereq_, module, exports) {
                    "use strict";

                    var util = _dereq_("./util");
                    var schedule;
                    var noAsyncScheduler = function () {
                        throw new Error("No async scheduler available\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
                    };
                    var NativePromise = util.getNativePromise();
                    if (util.isNode && typeof MutationObserver === "undefined") {
                        var GlobalSetImmediate = global.setImmediate;
                        var ProcessNextTick = process.nextTick;
                        schedule = util.isRecentNode ? function (fn) {
                            GlobalSetImmediate.call(global, fn);
                        } : function (fn) {
                            ProcessNextTick.call(process, fn);
                        };
                    } else if (typeof NativePromise === "function" && typeof NativePromise.resolve === "function") {
                        var nativePromise = NativePromise.resolve();
                        schedule = function (fn) {
                            nativePromise.then(fn);
                        };
                    } else if (typeof MutationObserver !== "undefined" && !(typeof window !== "undefined" && window.navigator && (window.navigator.standalone || window.cordova))) {
                        schedule = function () {
                            var div = document.createElement("div");
                            var opts = { attributes: true };
                            var toggleScheduled = false;
                            var div2 = document.createElement("div");
                            var o2 = new MutationObserver(function () {
                                div.classList.toggle("foo");
                                toggleScheduled = false;
                            });
                            o2.observe(div2, opts);

                            var scheduleToggle = function () {
                                if (toggleScheduled) return;
                                toggleScheduled = true;
                                div2.classList.toggle("foo");
                            };

                            return function schedule(fn) {
                                var o = new MutationObserver(function () {
                                    o.disconnect();
                                    fn();
                                });
                                o.observe(div, opts);
                                scheduleToggle();
                            };
                        }();
                    } else if (typeof setImmediate !== "undefined") {
                        schedule = function (fn) {
                            setImmediate(fn);
                        };
                    } else if (typeof setTimeout !== "undefined") {
                        schedule = function (fn) {
                            setTimeout(fn, 0);
                        };
                    } else {
                        schedule = noAsyncScheduler;
                    }
                    module.exports = schedule;
                }, { "./util": 36 }], 30: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, PromiseArray, debug) {
                        var PromiseInspection = Promise.PromiseInspection;
                        var util = _dereq_("./util");

                        function SettledPromiseArray(values) {
                            this.constructor$(values);
                        }
                        util.inherits(SettledPromiseArray, PromiseArray);

                        SettledPromiseArray.prototype._promiseResolved = function (index, inspection) {
                            this._values[index] = inspection;
                            var totalResolved = ++this._totalResolved;
                            if (totalResolved >= this._length) {
                                this._resolve(this._values);
                                return true;
                            }
                            return false;
                        };

                        SettledPromiseArray.prototype._promiseFulfilled = function (value, index) {
                            var ret = new PromiseInspection();
                            ret._bitField = 33554432;
                            ret._settledValueField = value;
                            return this._promiseResolved(index, ret);
                        };
                        SettledPromiseArray.prototype._promiseRejected = function (reason, index) {
                            var ret = new PromiseInspection();
                            ret._bitField = 16777216;
                            ret._settledValueField = reason;
                            return this._promiseResolved(index, ret);
                        };

                        Promise.settle = function (promises) {
                            debug.deprecated(".settle()", ".reflect()");
                            return new SettledPromiseArray(promises).promise();
                        };

                        Promise.prototype.settle = function () {
                            return Promise.settle(this);
                        };
                    };
                }, { "./util": 36 }], 31: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, PromiseArray, apiRejection) {
                        var util = _dereq_("./util");
                        var RangeError = _dereq_("./errors").RangeError;
                        var AggregateError = _dereq_("./errors").AggregateError;
                        var isArray = util.isArray;
                        var CANCELLATION = {};

                        function SomePromiseArray(values) {
                            this.constructor$(values);
                            this._howMany = 0;
                            this._unwrap = false;
                            this._initialized = false;
                        }
                        util.inherits(SomePromiseArray, PromiseArray);

                        SomePromiseArray.prototype._init = function () {
                            if (!this._initialized) {
                                return;
                            }
                            if (this._howMany === 0) {
                                this._resolve([]);
                                return;
                            }
                            this._init$(undefined, -5);
                            var isArrayResolved = isArray(this._values);
                            if (!this._isResolved() && isArrayResolved && this._howMany > this._canPossiblyFulfill()) {
                                this._reject(this._getRangeError(this.length()));
                            }
                        };

                        SomePromiseArray.prototype.init = function () {
                            this._initialized = true;
                            this._init();
                        };

                        SomePromiseArray.prototype.setUnwrap = function () {
                            this._unwrap = true;
                        };

                        SomePromiseArray.prototype.howMany = function () {
                            return this._howMany;
                        };

                        SomePromiseArray.prototype.setHowMany = function (count) {
                            this._howMany = count;
                        };

                        SomePromiseArray.prototype._promiseFulfilled = function (value) {
                            this._addFulfilled(value);
                            if (this._fulfilled() === this.howMany()) {
                                this._values.length = this.howMany();
                                if (this.howMany() === 1 && this._unwrap) {
                                    this._resolve(this._values[0]);
                                } else {
                                    this._resolve(this._values);
                                }
                                return true;
                            }
                            return false;
                        };
                        SomePromiseArray.prototype._promiseRejected = function (reason) {
                            this._addRejected(reason);
                            return this._checkOutcome();
                        };

                        SomePromiseArray.prototype._promiseCancelled = function () {
                            if (this._values instanceof Promise || this._values == null) {
                                return this._cancel();
                            }
                            this._addRejected(CANCELLATION);
                            return this._checkOutcome();
                        };

                        SomePromiseArray.prototype._checkOutcome = function () {
                            if (this.howMany() > this._canPossiblyFulfill()) {
                                var e = new AggregateError();
                                for (var i = this.length(); i < this._values.length; ++i) {
                                    if (this._values[i] !== CANCELLATION) {
                                        e.push(this._values[i]);
                                    }
                                }
                                if (e.length > 0) {
                                    this._reject(e);
                                } else {
                                    this._cancel();
                                }
                                return true;
                            }
                            return false;
                        };

                        SomePromiseArray.prototype._fulfilled = function () {
                            return this._totalResolved;
                        };

                        SomePromiseArray.prototype._rejected = function () {
                            return this._values.length - this.length();
                        };

                        SomePromiseArray.prototype._addRejected = function (reason) {
                            this._values.push(reason);
                        };

                        SomePromiseArray.prototype._addFulfilled = function (value) {
                            this._values[this._totalResolved++] = value;
                        };

                        SomePromiseArray.prototype._canPossiblyFulfill = function () {
                            return this.length() - this._rejected();
                        };

                        SomePromiseArray.prototype._getRangeError = function (count) {
                            var message = "Input array must contain at least " + this._howMany + " items but contains only " + count + " items";
                            return new RangeError(message);
                        };

                        SomePromiseArray.prototype._resolveEmptyArray = function () {
                            this._reject(this._getRangeError(0));
                        };

                        function some(promises, howMany) {
                            if ((howMany | 0) !== howMany || howMany < 0) {
                                return apiRejection("expecting a positive integer\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
                            }
                            var ret = new SomePromiseArray(promises);
                            var promise = ret.promise();
                            ret.setHowMany(howMany);
                            ret.init();
                            return promise;
                        }

                        Promise.some = function (promises, howMany) {
                            return some(promises, howMany);
                        };

                        Promise.prototype.some = function (howMany) {
                            return some(this, howMany);
                        };

                        Promise._SomePromiseArray = SomePromiseArray;
                    };
                }, { "./errors": 12, "./util": 36 }], 32: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise) {
                        function PromiseInspection(promise) {
                            if (promise !== undefined) {
                                promise = promise._target();
                                this._bitField = promise._bitField;
                                this._settledValueField = promise._isFateSealed() ? promise._settledValue() : undefined;
                            } else {
                                this._bitField = 0;
                                this._settledValueField = undefined;
                            }
                        }

                        PromiseInspection.prototype._settledValue = function () {
                            return this._settledValueField;
                        };

                        var value = PromiseInspection.prototype.value = function () {
                            if (!this.isFulfilled()) {
                                throw new TypeError("cannot get fulfillment value of a non-fulfilled promise\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
                            }
                            return this._settledValue();
                        };

                        var reason = PromiseInspection.prototype.error = PromiseInspection.prototype.reason = function () {
                            if (!this.isRejected()) {
                                throw new TypeError("cannot get rejection reason of a non-rejected promise\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
                            }
                            return this._settledValue();
                        };

                        var isFulfilled = PromiseInspection.prototype.isFulfilled = function () {
                            return (this._bitField & 33554432) !== 0;
                        };

                        var isRejected = PromiseInspection.prototype.isRejected = function () {
                            return (this._bitField & 16777216) !== 0;
                        };

                        var isPending = PromiseInspection.prototype.isPending = function () {
                            return (this._bitField & 50397184) === 0;
                        };

                        var isResolved = PromiseInspection.prototype.isResolved = function () {
                            return (this._bitField & 50331648) !== 0;
                        };

                        PromiseInspection.prototype.isCancelled = function () {
                            return (this._bitField & 8454144) !== 0;
                        };

                        Promise.prototype.__isCancelled = function () {
                            return (this._bitField & 65536) === 65536;
                        };

                        Promise.prototype._isCancelled = function () {
                            return this._target().__isCancelled();
                        };

                        Promise.prototype.isCancelled = function () {
                            return (this._target()._bitField & 8454144) !== 0;
                        };

                        Promise.prototype.isPending = function () {
                            return isPending.call(this._target());
                        };

                        Promise.prototype.isRejected = function () {
                            return isRejected.call(this._target());
                        };

                        Promise.prototype.isFulfilled = function () {
                            return isFulfilled.call(this._target());
                        };

                        Promise.prototype.isResolved = function () {
                            return isResolved.call(this._target());
                        };

                        Promise.prototype.value = function () {
                            return value.call(this._target());
                        };

                        Promise.prototype.reason = function () {
                            var target = this._target();
                            target._unsetRejectionIsUnhandled();
                            return reason.call(target);
                        };

                        Promise.prototype._value = function () {
                            return this._settledValue();
                        };

                        Promise.prototype._reason = function () {
                            this._unsetRejectionIsUnhandled();
                            return this._settledValue();
                        };

                        Promise.PromiseInspection = PromiseInspection;
                    };
                }, {}], 33: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, INTERNAL) {
                        var util = _dereq_("./util");
                        var errorObj = util.errorObj;
                        var isObject = util.isObject;

                        function tryConvertToPromise(obj, context) {
                            if (isObject(obj)) {
                                if (obj instanceof Promise) return obj;
                                var then = getThen(obj);
                                if (then === errorObj) {
                                    if (context) context._pushContext();
                                    var ret = Promise.reject(then.e);
                                    if (context) context._popContext();
                                    return ret;
                                } else if (typeof then === "function") {
                                    if (isAnyBluebirdPromise(obj)) {
                                        var ret = new Promise(INTERNAL);
                                        obj._then(ret._fulfill, ret._reject, undefined, ret, null);
                                        return ret;
                                    }
                                    return doThenable(obj, then, context);
                                }
                            }
                            return obj;
                        }

                        function doGetThen(obj) {
                            return obj.then;
                        }

                        function getThen(obj) {
                            try {
                                return doGetThen(obj);
                            } catch (e) {
                                errorObj.e = e;
                                return errorObj;
                            }
                        }

                        var hasProp = {}.hasOwnProperty;
                        function isAnyBluebirdPromise(obj) {
                            try {
                                return hasProp.call(obj, "_promise0");
                            } catch (e) {
                                return false;
                            }
                        }

                        function doThenable(x, then, context) {
                            var promise = new Promise(INTERNAL);
                            var ret = promise;
                            if (context) context._pushContext();
                            promise._captureStackTrace();
                            if (context) context._popContext();
                            var synchronous = true;
                            var result = util.tryCatch(then).call(x, resolve, reject);
                            synchronous = false;

                            if (promise && result === errorObj) {
                                promise._rejectCallback(result.e, true, true);
                                promise = null;
                            }

                            function resolve(value) {
                                if (!promise) return;
                                promise._resolveCallback(value);
                                promise = null;
                            }

                            function reject(reason) {
                                if (!promise) return;
                                promise._rejectCallback(reason, synchronous, true);
                                promise = null;
                            }
                            return ret;
                        }

                        return tryConvertToPromise;
                    };
                }, { "./util": 36 }], 34: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, INTERNAL, debug) {
                        var util = _dereq_("./util");
                        var TimeoutError = Promise.TimeoutError;

                        function HandleWrapper(handle) {
                            this.handle = handle;
                        }

                        HandleWrapper.prototype._resultCancelled = function () {
                            clearTimeout(this.handle);
                        };

                        var afterValue = function (value) {
                            return delay(+this).thenReturn(value);
                        };
                        var delay = Promise.delay = function (ms, value) {
                            var ret;
                            var handle;
                            if (value !== undefined) {
                                ret = Promise.resolve(value)._then(afterValue, null, null, ms, undefined);
                                if (debug.cancellation() && value instanceof Promise) {
                                    ret._setOnCancel(value);
                                }
                            } else {
                                ret = new Promise(INTERNAL);
                                handle = setTimeout(function () {
                                    ret._fulfill();
                                }, +ms);
                                if (debug.cancellation()) {
                                    ret._setOnCancel(new HandleWrapper(handle));
                                }
                                ret._captureStackTrace();
                            }
                            ret._setAsyncGuaranteed();
                            return ret;
                        };

                        Promise.prototype.delay = function (ms) {
                            return delay(ms, this);
                        };

                        var afterTimeout = function (promise, message, parent) {
                            var err;
                            if (typeof message !== "string") {
                                if (message instanceof Error) {
                                    err = message;
                                } else {
                                    err = new TimeoutError("operation timed out");
                                }
                            } else {
                                err = new TimeoutError(message);
                            }
                            util.markAsOriginatingFromRejection(err);
                            promise._attachExtraTrace(err);
                            promise._reject(err);

                            if (parent != null) {
                                parent.cancel();
                            }
                        };

                        function successClear(value) {
                            clearTimeout(this.handle);
                            return value;
                        }

                        function failureClear(reason) {
                            clearTimeout(this.handle);
                            throw reason;
                        }

                        Promise.prototype.timeout = function (ms, message) {
                            ms = +ms;
                            var ret, parent;

                            var handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {
                                if (ret.isPending()) {
                                    afterTimeout(ret, message, parent);
                                }
                            }, ms));

                            if (debug.cancellation()) {
                                parent = this.then();
                                ret = parent._then(successClear, failureClear, undefined, handleWrapper, undefined);
                                ret._setOnCancel(handleWrapper);
                            } else {
                                ret = this._then(successClear, failureClear, undefined, handleWrapper, undefined);
                            }

                            return ret;
                        };
                    };
                }, { "./util": 36 }], 35: [function (_dereq_, module, exports) {
                    "use strict";

                    module.exports = function (Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug) {
                        var util = _dereq_("./util");
                        var TypeError = _dereq_("./errors").TypeError;
                        var inherits = _dereq_("./util").inherits;
                        var errorObj = util.errorObj;
                        var tryCatch = util.tryCatch;
                        var NULL = {};

                        function thrower(e) {
                            setTimeout(function () {
                                throw e;
                            }, 0);
                        }

                        function castPreservingDisposable(thenable) {
                            var maybePromise = tryConvertToPromise(thenable);
                            if (maybePromise !== thenable && typeof thenable._isDisposable === "function" && typeof thenable._getDisposer === "function" && thenable._isDisposable()) {
                                maybePromise._setDisposable(thenable._getDisposer());
                            }
                            return maybePromise;
                        }
                        function dispose(resources, inspection) {
                            var i = 0;
                            var len = resources.length;
                            var ret = new Promise(INTERNAL);
                            function iterator() {
                                if (i >= len) return ret._fulfill();
                                var maybePromise = castPreservingDisposable(resources[i++]);
                                if (maybePromise instanceof Promise && maybePromise._isDisposable()) {
                                    try {
                                        maybePromise = tryConvertToPromise(maybePromise._getDisposer().tryDispose(inspection), resources.promise);
                                    } catch (e) {
                                        return thrower(e);
                                    }
                                    if (maybePromise instanceof Promise) {
                                        return maybePromise._then(iterator, thrower, null, null, null);
                                    }
                                }
                                iterator();
                            }
                            iterator();
                            return ret;
                        }

                        function Disposer(data, promise, context) {
                            this._data = data;
                            this._promise = promise;
                            this._context = context;
                        }

                        Disposer.prototype.data = function () {
                            return this._data;
                        };

                        Disposer.prototype.promise = function () {
                            return this._promise;
                        };

                        Disposer.prototype.resource = function () {
                            if (this.promise().isFulfilled()) {
                                return this.promise().value();
                            }
                            return NULL;
                        };

                        Disposer.prototype.tryDispose = function (inspection) {
                            var resource = this.resource();
                            var context = this._context;
                            if (context !== undefined) context._pushContext();
                            var ret = resource !== NULL ? this.doDispose(resource, inspection) : null;
                            if (context !== undefined) context._popContext();
                            this._promise._unsetDisposable();
                            this._data = null;
                            return ret;
                        };

                        Disposer.isDisposer = function (d) {
                            return d != null && typeof d.resource === "function" && typeof d.tryDispose === "function";
                        };

                        function FunctionDisposer(fn, promise, context) {
                            this.constructor$(fn, promise, context);
                        }
                        inherits(FunctionDisposer, Disposer);

                        FunctionDisposer.prototype.doDispose = function (resource, inspection) {
                            var fn = this.data();
                            return fn.call(resource, resource, inspection);
                        };

                        function maybeUnwrapDisposer(value) {
                            if (Disposer.isDisposer(value)) {
                                this.resources[this.index]._setDisposable(value);
                                return value.promise();
                            }
                            return value;
                        }

                        function ResourceList(length) {
                            this.length = length;
                            this.promise = null;
                            this[length - 1] = null;
                        }

                        ResourceList.prototype._resultCancelled = function () {
                            var len = this.length;
                            for (var i = 0; i < len; ++i) {
                                var item = this[i];
                                if (item instanceof Promise) {
                                    item.cancel();
                                }
                            }
                        };

                        Promise.using = function () {
                            var len = arguments.length;
                            if (len < 2) return apiRejection("you must pass at least 2 arguments to Promise.using");
                            var fn = arguments[len - 1];
                            if (typeof fn !== "function") {
                                return apiRejection("expecting a function but got " + util.classString(fn));
                            }
                            var input;
                            var spreadArgs = true;
                            if (len === 2 && Array.isArray(arguments[0])) {
                                input = arguments[0];
                                len = input.length;
                                spreadArgs = false;
                            } else {
                                input = arguments;
                                len--;
                            }
                            var resources = new ResourceList(len);
                            for (var i = 0; i < len; ++i) {
                                var resource = input[i];
                                if (Disposer.isDisposer(resource)) {
                                    var disposer = resource;
                                    resource = resource.promise();
                                    resource._setDisposable(disposer);
                                } else {
                                    var maybePromise = tryConvertToPromise(resource);
                                    if (maybePromise instanceof Promise) {
                                        resource = maybePromise._then(maybeUnwrapDisposer, null, null, {
                                            resources: resources,
                                            index: i
                                        }, undefined);
                                    }
                                }
                                resources[i] = resource;
                            }

                            var reflectedResources = new Array(resources.length);
                            for (var i = 0; i < reflectedResources.length; ++i) {
                                reflectedResources[i] = Promise.resolve(resources[i]).reflect();
                            }

                            var resultPromise = Promise.all(reflectedResources).then(function (inspections) {
                                for (var i = 0; i < inspections.length; ++i) {
                                    var inspection = inspections[i];
                                    if (inspection.isRejected()) {
                                        errorObj.e = inspection.error();
                                        return errorObj;
                                    } else if (!inspection.isFulfilled()) {
                                        resultPromise.cancel();
                                        return;
                                    }
                                    inspections[i] = inspection.value();
                                }
                                promise._pushContext();

                                fn = tryCatch(fn);
                                var ret = spreadArgs ? fn.apply(undefined, inspections) : fn(inspections);
                                var promiseCreated = promise._popContext();
                                debug.checkForgottenReturns(ret, promiseCreated, "Promise.using", promise);
                                return ret;
                            });

                            var promise = resultPromise.lastly(function () {
                                var inspection = new Promise.PromiseInspection(resultPromise);
                                return dispose(resources, inspection);
                            });
                            resources.promise = promise;
                            promise._setOnCancel(resources);
                            return promise;
                        };

                        Promise.prototype._setDisposable = function (disposer) {
                            this._bitField = this._bitField | 131072;
                            this._disposer = disposer;
                        };

                        Promise.prototype._isDisposable = function () {
                            return (this._bitField & 131072) > 0;
                        };

                        Promise.prototype._getDisposer = function () {
                            return this._disposer;
                        };

                        Promise.prototype._unsetDisposable = function () {
                            this._bitField = this._bitField & ~131072;
                            this._disposer = undefined;
                        };

                        Promise.prototype.disposer = function (fn) {
                            if (typeof fn === "function") {
                                return new FunctionDisposer(fn, this, createContext());
                            }
                            throw new TypeError();
                        };
                    };
                }, { "./errors": 12, "./util": 36 }], 36: [function (_dereq_, module, exports) {
                    "use strict";

                    var es5 = _dereq_("./es5");
                    var canEvaluate = typeof navigator == "undefined";

                    var errorObj = { e: {} };
                    var tryCatchTarget;
                    var globalObject = typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : this !== undefined ? this : null;

                    function tryCatcher() {
                        try {
                            var target = tryCatchTarget;
                            tryCatchTarget = null;
                            return target.apply(this, arguments);
                        } catch (e) {
                            errorObj.e = e;
                            return errorObj;
                        }
                    }
                    function tryCatch(fn) {
                        tryCatchTarget = fn;
                        return tryCatcher;
                    }

                    var inherits = function (Child, Parent) {
                        var hasProp = {}.hasOwnProperty;

                        function T() {
                            this.constructor = Child;
                            this.constructor$ = Parent;
                            for (var propertyName in Parent.prototype) {
                                if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== "$") {
                                    this[propertyName + "$"] = Parent.prototype[propertyName];
                                }
                            }
                        }
                        T.prototype = Parent.prototype;
                        Child.prototype = new T();
                        return Child.prototype;
                    };

                    function isPrimitive(val) {
                        return val == null || val === true || val === false || typeof val === "string" || typeof val === "number";
                    }

                    function isObject(value) {
                        return typeof value === "function" || typeof value === "object" && value !== null;
                    }

                    function maybeWrapAsError(maybeError) {
                        if (!isPrimitive(maybeError)) return maybeError;

                        return new Error(safeToString(maybeError));
                    }

                    function withAppended(target, appendee) {
                        var len = target.length;
                        var ret = new Array(len + 1);
                        var i;
                        for (i = 0; i < len; ++i) {
                            ret[i] = target[i];
                        }
                        ret[i] = appendee;
                        return ret;
                    }

                    function getDataPropertyOrDefault(obj, key, defaultValue) {
                        if (es5.isES5) {
                            var desc = Object.getOwnPropertyDescriptor(obj, key);

                            if (desc != null) {
                                return desc.get == null && desc.set == null ? desc.value : defaultValue;
                            }
                        } else {
                            return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;
                        }
                    }

                    function notEnumerableProp(obj, name, value) {
                        if (isPrimitive(obj)) return obj;
                        var descriptor = {
                            value: value,
                            configurable: true,
                            enumerable: false,
                            writable: true
                        };
                        es5.defineProperty(obj, name, descriptor);
                        return obj;
                    }

                    function thrower(r) {
                        throw r;
                    }

                    var inheritedDataKeys = function () {
                        var excludedPrototypes = [Array.prototype, Object.prototype, Function.prototype];

                        var isExcludedProto = function (val) {
                            for (var i = 0; i < excludedPrototypes.length; ++i) {
                                if (excludedPrototypes[i] === val) {
                                    return true;
                                }
                            }
                            return false;
                        };

                        if (es5.isES5) {
                            var getKeys = Object.getOwnPropertyNames;
                            return function (obj) {
                                var ret = [];
                                var visitedKeys = Object.create(null);
                                while (obj != null && !isExcludedProto(obj)) {
                                    var keys;
                                    try {
                                        keys = getKeys(obj);
                                    } catch (e) {
                                        return ret;
                                    }
                                    for (var i = 0; i < keys.length; ++i) {
                                        var key = keys[i];
                                        if (visitedKeys[key]) continue;
                                        visitedKeys[key] = true;
                                        var desc = Object.getOwnPropertyDescriptor(obj, key);
                                        if (desc != null && desc.get == null && desc.set == null) {
                                            ret.push(key);
                                        }
                                    }
                                    obj = es5.getPrototypeOf(obj);
                                }
                                return ret;
                            };
                        } else {
                            var hasProp = {}.hasOwnProperty;
                            return function (obj) {
                                if (isExcludedProto(obj)) return [];
                                var ret = [];

                                /*jshint forin:false */
                                enumeration: for (var key in obj) {
                                    if (hasProp.call(obj, key)) {
                                        ret.push(key);
                                    } else {
                                        for (var i = 0; i < excludedPrototypes.length; ++i) {
                                            if (hasProp.call(excludedPrototypes[i], key)) {
                                                continue enumeration;
                                            }
                                        }
                                        ret.push(key);
                                    }
                                }
                                return ret;
                            };
                        }
                    }();

                    var thisAssignmentPattern = /this\s*\.\s*\S+\s*=/;
                    function isClass(fn) {
                        try {
                            if (typeof fn === "function") {
                                var keys = es5.names(fn.prototype);

                                var hasMethods = es5.isES5 && keys.length > 1;
                                var hasMethodsOtherThanConstructor = keys.length > 0 && !(keys.length === 1 && keys[0] === "constructor");
                                var hasThisAssignmentAndStaticMethods = thisAssignmentPattern.test(fn + "") && es5.names(fn).length > 0;

                                if (hasMethods || hasMethodsOtherThanConstructor || hasThisAssignmentAndStaticMethods) {
                                    return true;
                                }
                            }
                            return false;
                        } catch (e) {
                            return false;
                        }
                    }

                    function toFastProperties(obj) {
                        /*jshint -W027,-W055,-W031*/
                        function FakeConstructor() {}
                        FakeConstructor.prototype = obj;
                        var l = 8;
                        while (l--) new FakeConstructor();
                        return obj;
                        eval(obj);
                    }

                    var rident = /^[a-z$_][a-z$_0-9]*$/i;
                    function isIdentifier(str) {
                        return rident.test(str);
                    }

                    function filledRange(count, prefix, suffix) {
                        var ret = new Array(count);
                        for (var i = 0; i < count; ++i) {
                            ret[i] = prefix + i + suffix;
                        }
                        return ret;
                    }

                    function safeToString(obj) {
                        try {
                            return obj + "";
                        } catch (e) {
                            return "[no string representation]";
                        }
                    }

                    function isError(obj) {
                        return obj !== null && typeof obj === "object" && typeof obj.message === "string" && typeof obj.name === "string";
                    }

                    function markAsOriginatingFromRejection(e) {
                        try {
                            notEnumerableProp(e, "isOperational", true);
                        } catch (ignore) {}
                    }

                    function originatesFromRejection(e) {
                        if (e == null) return false;
                        return e instanceof Error["__BluebirdErrorTypes__"].OperationalError || e["isOperational"] === true;
                    }

                    function canAttachTrace(obj) {
                        return isError(obj) && es5.propertyIsWritable(obj, "stack");
                    }

                    var ensureErrorObject = function () {
                        if (!("stack" in new Error())) {
                            return function (value) {
                                if (canAttachTrace(value)) return value;
                                try {
                                    throw new Error(safeToString(value));
                                } catch (err) {
                                    return err;
                                }
                            };
                        } else {
                            return function (value) {
                                if (canAttachTrace(value)) return value;
                                return new Error(safeToString(value));
                            };
                        }
                    }();

                    function classString(obj) {
                        return {}.toString.call(obj);
                    }

                    function copyDescriptors(from, to, filter) {
                        var keys = es5.names(from);
                        for (var i = 0; i < keys.length; ++i) {
                            var key = keys[i];
                            if (filter(key)) {
                                try {
                                    es5.defineProperty(to, key, es5.getDescriptor(from, key));
                                } catch (ignore) {}
                            }
                        }
                    }

                    var asArray = function (v) {
                        if (es5.isArray(v)) {
                            return v;
                        }
                        return null;
                    };

                    if (typeof Symbol !== "undefined" && Symbol.iterator) {
                        var ArrayFrom = typeof Array.from === "function" ? function (v) {
                            return Array.from(v);
                        } : function (v) {
                            var ret = [];
                            var it = v[Symbol.iterator]();
                            var itResult;
                            while (!(itResult = it.next()).done) {
                                ret.push(itResult.value);
                            }
                            return ret;
                        };

                        asArray = function (v) {
                            if (es5.isArray(v)) {
                                return v;
                            } else if (v != null && typeof v[Symbol.iterator] === "function") {
                                return ArrayFrom(v);
                            }
                            return null;
                        };
                    }

                    var isNode = typeof process !== "undefined" && classString(process).toLowerCase() === "[object process]";

                    var hasEnvVariables = typeof process !== "undefined" && typeof process.env !== "undefined";

                    function env(key) {
                        return hasEnvVariables ? process.env[key] : undefined;
                    }

                    function getNativePromise() {
                        if (typeof Promise === "function") {
                            try {
                                var promise = new Promise(function () {});
                                if ({}.toString.call(promise) === "[object Promise]") {
                                    return Promise;
                                }
                            } catch (e) {}
                        }
                    }

                    function domainBind(self, cb) {
                        return self.bind(cb);
                    }

                    var ret = {
                        isClass: isClass,
                        isIdentifier: isIdentifier,
                        inheritedDataKeys: inheritedDataKeys,
                        getDataPropertyOrDefault: getDataPropertyOrDefault,
                        thrower: thrower,
                        isArray: es5.isArray,
                        asArray: asArray,
                        notEnumerableProp: notEnumerableProp,
                        isPrimitive: isPrimitive,
                        isObject: isObject,
                        isError: isError,
                        canEvaluate: canEvaluate,
                        errorObj: errorObj,
                        tryCatch: tryCatch,
                        inherits: inherits,
                        withAppended: withAppended,
                        maybeWrapAsError: maybeWrapAsError,
                        toFastProperties: toFastProperties,
                        filledRange: filledRange,
                        toString: safeToString,
                        canAttachTrace: canAttachTrace,
                        ensureErrorObject: ensureErrorObject,
                        originatesFromRejection: originatesFromRejection,
                        markAsOriginatingFromRejection: markAsOriginatingFromRejection,
                        classString: classString,
                        copyDescriptors: copyDescriptors,
                        hasDevTools: typeof chrome !== "undefined" && chrome && typeof chrome.loadTimes === "function",
                        isNode: isNode,
                        hasEnvVariables: hasEnvVariables,
                        env: env,
                        global: globalObject,
                        getNativePromise: getNativePromise,
                        domainBind: domainBind
                    };
                    ret.isRecentNode = ret.isNode && function () {
                        var version = process.versions.node.split(".").map(Number);
                        return version[0] === 0 && version[1] > 10 || version[0] > 0;
                    }();

                    if (ret.isNode) ret.toFastProperties(process);

                    try {
                        throw new Error();
                    } catch (e) {
                        ret.lastLineError = e;
                    }
                    module.exports = ret;
                }, { "./es5": 13 }] }, {}, [4])(4);
        });;if (typeof window !== 'undefined' && window !== null) {
            window.P = window.Promise;
        } else if (typeof self !== 'undefined' && self !== null) {
            self.P = self.Promise;
        }
    })(this);

    return _retrieveGlobal();
});
System.registerDynamic("npm:uuid@3.0.1/lib/rng-browser.js", [], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  // Unique ID creation requires a high quality random # generator.  In the
  // browser this is a little complicated due to unknown quality of Math.random()
  // and inconsistent support for the `crypto` API.  We do the best we can via
  // feature-detection
  var rng;

  var crypto = global.crypto || global.msCrypto; // for IE 11
  if (crypto && crypto.getRandomValues) {
    // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto
    var rnds8 = new Uint8Array(16);
    rng = function whatwgRNG() {
      crypto.getRandomValues(rnds8);
      return rnds8;
    };
  }

  if (!rng) {
    // Math.random()-based (RNG)
    //
    // If all else fails, use Math.random().  It's fast, but is of unspecified
    // quality.
    var rnds = new Array(16);
    rng = function () {
      for (var i = 0, r; i < 16; i++) {
        if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
        rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
      }

      return rnds;
    };
  }

  module.exports = rng;
  return module.exports;
});
System.registerDynamic('npm:uuid@3.0.1/lib/bytesToUuid.js', [], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  /**
   * Convert array of 16 byte values to UUID string format of the form:
   * XXXXXXXX-XXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
   */
  var byteToHex = [];
  for (var i = 0; i < 256; ++i) {
    byteToHex[i] = (i + 0x100).toString(16).substr(1);
  }

  function bytesToUuid(buf, offset) {
    var i = offset || 0;
    var bth = byteToHex;
    return bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]];
  }

  module.exports = bytesToUuid;
  return module.exports;
});
System.registerDynamic("npm:uuid@3.0.1.json", [], false, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./lib/rng.js": {
        "browser": "./lib/rng-browser.js"
      }
    }
  };
});

System.registerDynamic('npm:uuid@3.0.1/v4.js', ['./lib/rng', './lib/bytesToUuid'], true, function ($__require, exports, module) {
  var define,
      global = this || self,
      GLOBAL = global;
  var rng = $__require('./lib/rng');
  var bytesToUuid = $__require('./lib/bytesToUuid');

  function v4(options, buf, offset) {
    var i = buf && offset || 0;

    if (typeof options == 'string') {
      buf = options == 'binary' ? new Array(16) : null;
      options = null;
    }
    options = options || {};

    var rnds = options.random || (options.rng || rng)();

    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
    rnds[6] = rnds[6] & 0x0f | 0x40;
    rnds[8] = rnds[8] & 0x3f | 0x80;

    // Copy bytes to buffer, if provided
    if (buf) {
      for (var ii = 0; ii < 16; ++ii) {
        buf[i + ii] = rnds[ii];
      }
    }

    return buf || bytesToUuid(rnds);
  }

  module.exports = v4;
  return module.exports;
});
System.register('OpenGroup/core/OpenGroup.js', ['npm:systemjs-plugin-babel@0.0.17/babel-helpers/classCallCheck.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/createClass.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/possibleConstructorReturn.js', 'npm:systemjs-plugin-babel@0.0.17/babel-helpers/inherits.js', 'events', 'bluebird', 'uuid/v4'], function (_export, _context) {
    "use strict";

    var _classCallCheck, _createClass, _possibleConstructorReturn, _inherits, EventEmitter, bluebird, uuid, OpenGroup;

    return {
        setters: [function (_npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs) {
            _classCallCheck = _npmSystemjsPluginBabel0017BabelHelpersClassCallCheckJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersCreateClassJs) {
            _createClass = _npmSystemjsPluginBabel0017BabelHelpersCreateClassJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs) {
            _possibleConstructorReturn = _npmSystemjsPluginBabel0017BabelHelpersPossibleConstructorReturnJs.default;
        }, function (_npmSystemjsPluginBabel0017BabelHelpersInheritsJs) {
            _inherits = _npmSystemjsPluginBabel0017BabelHelpersInheritsJs.default;
        }, function (_events) {
            EventEmitter = _events.default;
        }, function (_bluebird) {
            bluebird = _bluebird.default;
        }, function (_uuidV) {
            uuid = _uuidV.default;
        }],
        execute: function () {
            OpenGroup = function (_EventEmitter) {
                _inherits(OpenGroup, _EventEmitter);

                /**
                 * @param wrapper.
                 * @param config.
                 * @constructor
                 */
                function OpenGroup(wrapper) {
                    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

                    _classCallCheck(this, OpenGroup);

                    var _this = _possibleConstructorReturn(this, (OpenGroup.__proto__ || Object.getPrototypeOf(OpenGroup)).call(this));

                    _this.connectionTypes = {};
                    _this.connections = [];
                    _this.plugins = {};
                    _this.pluginsAreLoaded = false;
                    _this.state = 'starting';
                    _this.menuItems = [];

                    _this.wrapper = wrapper;
                    _this.config = {
                        plugins: {}
                    };

                    Object.assign(_this.config, config);

                    if (!_this.config.uuid) {
                        throw new Error('The group has no uuid');
                    }

                    _this.lid = uuid();
                    _this.uuid = _this.config.uuid;
                    _this.slug = _this.config.name ? _this.config.name.toLowerCase().replace(/ /g, '-') : _this.uuid;

                    // TODO move these properties back to the config and make getters.
                    _this.config.uuid = _this.uuid;
                    _this.config.slug = _this.slug;

                    var pluginsToLoad = [];

                    var pluginUris = Object.keys(_this.config.plugins);

                    pluginUris.forEach(function (pluginUri) {
                        pluginsToLoad.push(_this.addPlugin(pluginUri, _this.config.plugins[pluginUri]));
                    });

                    bluebird.all(pluginsToLoad).then(function () {
                        _this.pluginsAreLoaded = true;
                        _this.state = 'ready';
                        _this.emit('ready');
                    });
                    return _this;
                }

                _createClass(OpenGroup, [{
                    key: 'addPeer',
                    value: function addPeer(peerInfo) {
                        var _this2 = this;

                        if (!peerInfo.uuid) {
                            throw 'Undefined uuid';
                        }
                        if (this.pluginsAreLoaded) {
                            (function () {
                                if (!_this2.connectionTypes[peerInfo.connectionType]) {
                                    throw 'Unknown connection type provided to addPeer()';
                                }
                                var connectionType = _this2.connectionTypes[peerInfo.connectionType];
                                var connection = new connectionType(peerInfo);

                                connection.uuid = peerInfo.uuid;
                                _this2.connections.push(connection);

                                connection.once('connected', function () {
                                    _this2.emit('newConnection', connection);
                                });

                                connection.once('closed', function () {
                                    _this2.emit('closedConnection', connection);

                                    var index = _this2.connections.indexOf(connection);
                                    if (index !== -1) {
                                        _this2.connections.splice(index, 1);
                                    }
                                });

                                connection.on('message', function (message) {
                                    if (message.owner) {
                                        _this2.emit(message.owner + '.message', message, connection);
                                    }

                                    _this2.emit('message', message, connection);
                                });
                            })();
                        } else {
                            this.once('ready', function () {
                                _this2.addPeer(peerInfo);
                            });
                        }
                    }
                }, {
                    key: 'addPlugin',
                    value: function addPlugin(pluginUri, config) {
                        var _this3 = this;

                        return new Promise(function (resolve) {
                            if (pluginUri.substr(0, 4) !== 'http') {
                                pluginUri = '/plugins/' + pluginUri;
                            }

                            System.import(pluginUri + '/plugin.js').then(function (plugin) {
                                var newPlugin = new plugin.default(_this3, config);
                                _this3.plugins[newPlugin.getName()] = newPlugin;

                                if (newPlugin.componentNames) {
                                    newPlugin.componentNames.forEach(function (componentName) {
                                        _this3.wrapper.themeManager.registerComponent(componentName, pluginUri);
                                    });
                                }

                                if (newPlugin.getMenuItems) {
                                    newPlugin.getMenuItems().forEach(function (menuItem) {
                                        if (!menuItem.path && menuItem.subPath) {
                                            menuItem.path = '/groups/' + _this3.slug + '/' + menuItem.subPath;
                                        }
                                        _this3.menuItems.push(menuItem);
                                    });
                                }

                                if (typeof newPlugin.settingsForm === 'function') {
                                    _this3.menuItems.push({
                                        title: newPlugin.settingsForm()['title'],
                                        path: '/groups/' + _this3.slug + '/settings/' + newPlugin.name
                                    });
                                }

                                _this3.emit('pluginAdded', newPlugin.getName(), newPlugin);
                                resolve();
                            });
                        });
                    }
                }, {
                    key: 'sendMessage',
                    value: function sendMessage(message) {
                        var _this4 = this;

                        this.connections.forEach(function (connection) {
                            connection.sendMessage(message);
                            _this4.emit('messageSentToConnection', message, connection);
                        });

                        this.emit('messageSent', message);
                    }
                }, {
                    key: 'getMenuItems',
                    value: function getMenuItems() {
                        return this.menuItems;
                    }
                }, {
                    key: 'save',
                    value: function save() {
                        this.emit('save', this.config);
                    }
                }]);

                return OpenGroup;
            }(EventEmitter);

            _export('default', OpenGroup);
        }
    };
});
System.register('OpenGroup/theme/components/add-group.js', ['underscore', 'OpenGroup/plugins/group/plugin', 'OpenGroup/plugins/multichat/plugin', 'OpenGroup/plugins/multiconnect/plugin', 'OpenGroup/plugins/og-signaler/plugin', 'OpenGroup/plugins/webrtc/plugin', 'OpenGroup/core/OpenGroup'], function (_export, _context) {
    "use strict";

    var _, Group, MultiChat, MultiConnect, OgSignaler, WebRTC, OpenGroup;

    _export('default', function (wrapper) {

        var plugins = [{
            className: Group,
            required: true
        }, {
            className: MultiChat,
            required: false
        }, {
            className: MultiConnect,
            required: false
        }, {
            className: OgSignaler,
            required: false
        }, {
            className: WebRTC,
            required: true
        }];

        var schema = {
            fields: [{
                type: 'input',
                inputType: 'text',
                model: 'name',
                label: 'What is the name of the group?',
                required: true
            }, {
                type: "label",
                label: "Plugins"
            }]
        };

        var model = {
            plugins: {}
        };

        var newGroup = new OpenGroup(wrapper, {
            'name': 'Unnamed',
            'uuid': 'unnamed',
            'plugins': {
                'og-signaler': {},
                'webrtc': {},
                'multichat': {},
                'group': {},
                'multiconnect': {}
            }
        });

        _(plugins).each(function (plugin) {
            plugin.instance = new plugin.className(newGroup, {});

            model.plugins[plugin.instance.name] = {
                enabled: plugin.required
            };

            schema.fields.push({
                type: 'checkbox',
                label: plugin.instance.label,
                model: 'plugins.' + plugin.instance.name + '.enabled',
                default: plugin.required,
                disabled: plugin.required,
                name: plugin.instance.name,
                styleClasses: 'inline'
            });

            if (plugin.instance.settingsForm) {
                var pluginSettingsForm = plugin.instance.settingsForm();
                pluginSettingsForm.schema.forEach(function (field) {
                    field.visible = function () {
                        return model.plugins[plugin.instance.name].enabled;
                    };
                    field.styleClasses = 'inside-plugin';
                    field.model = 'plugins.' + plugin.instance.name + '.' + field.model;
                    schema.fields.push(field);
                });
            }
        });

        return {
            methods: {
                submitGroup: function submitGroup() {
                    var groupDefinition = JSON.parse(JSON.stringify(model));
                    _(groupDefinition.plugins).each(function (pluginDefinition, pluginName) {
                        if (!pluginDefinition.enabled) {
                            delete groupDefinition.plugins[pluginName];
                        } else {
                            delete pluginDefinition.enabled;
                        }
                    });

                    if (!groupDefinition.uuid) {
                        groupDefinition.uuid = groupDefinition.name.toLowerCase().replace(/ /g, '-');
                    }

                    if (!groupDefinition.slug) {
                        groupDefinition.slug = groupDefinition.name.toLowerCase().replace(/ /g, '-');
                    }

                    wrapper.groupManager.addGroup(groupDefinition);
                    wrapper.router.push('/groups/' + groupDefinition.slug);
                }
            },
            data: function data() {
                return {
                    model: model,
                    schema: schema,
                    formOptions: {
                        validateAfterLoad: true,
                        validateAfterChanged: true
                    }
                };
            }
        };
    });

    return {
        setters: [function (_underscore) {
            _ = _underscore.default;
        }, function (_OpenGroupPluginsGroupPlugin) {
            Group = _OpenGroupPluginsGroupPlugin.default;
        }, function (_OpenGroupPluginsMultichatPlugin) {
            MultiChat = _OpenGroupPluginsMultichatPlugin.default;
        }, function (_OpenGroupPluginsMulticonnectPlugin) {
            MultiConnect = _OpenGroupPluginsMulticonnectPlugin.default;
        }, function (_OpenGroupPluginsOgSignalerPlugin) {
            OgSignaler = _OpenGroupPluginsOgSignalerPlugin.default;
        }, function (_OpenGroupPluginsWebrtcPlugin) {
            WebRTC = _OpenGroupPluginsWebrtcPlugin.default;
        }, function (_OpenGroupCoreOpenGroup) {
            OpenGroup = _OpenGroupCoreOpenGroup.default;
        }],
        execute: function () {
            ;
        }
    };
});
System.register('OpenGroup/theme/components/group-header.js', [], function (_export, _context) {
    "use strict";

    _export('default', function (wrapper) {
        var dataGetter = function dataGetter() {
            var menuItems = [];
            var menuItem = false;

            var currentGroup = wrapper.groupManager.getCurrentGroup();
            if (currentGroup) {
                menuItem = wrapper.menuManager.getMenuItemByPath('/groups/' + currentGroup.slug);
            }

            if (menuItem && menuItem.children) {
                menuItems = menuItem.children;
            }

            return {
                menu: menuItems,
                group: currentGroup
            };
        };

        return {
            watch: {
                '$route': function $route() {
                    var _this = this;

                    Object.assign(this, dataGetter());
                    setTimeout(function () {
                        _this.showMenu = false;
                    }, 300);
                }
            },
            data: function data() {
                var data = { showMenu: false };
                Object.assign(data, dataGetter());
                return data;
            },
            methods: {
                toggleMenu: function toggleMenu() {
                    this.showMenu = !this.showMenu;
                }
            }
        };
    });

    return {
        setters: [],
        execute: function () {
            ;
        }
    };
});
System.register('OpenGroup/theme/components/group-list-item.js', [], function (_export, _context) {
    "use strict";

    _export('default', function (wrapper) {
        return {
            props: ['group'],
            methods: {
                getFirstMenuItemPath: function getFirstMenuItemPath(path) {
                    return wrapper.menuManager.getFirstMenuItemPath(path);
                },
                getActiveConnectionsCount: function getActiveConnectionsCount() {
                    // TODO get the statuses of the connections.
                    return this.group.connections.length;
                }
            }
        };
    });

    return {
        setters: [],
        execute: function () {
            ;
        }
    };
});
System.register("OpenGroup/theme/components/group-list.js", [], function (_export, _context) {
    "use strict";

    _export("default", function (wrapper) {
        return {
            data: function data() {
                return {
                    groups: wrapper.groupManager.getGroups()
                };
            }
        };
    });

    return {
        setters: [],
        execute: function () {
            ;
        }
    };
});
System.register("OpenGroup/theme/components/group-settings.js", [], function (_export, _context) {
    "use strict";

    _export("default", function (wrapper) {
        return {};
    });

    return {
        setters: [],
        execute: function () {
            ;
        }
    };
});
System.register("OpenGroup/theme/components/group.js", [], function (_export, _context) {
    "use strict";

    _export("default", function (wrapper) {
        var currentGroup = wrapper.groupManager.getCurrentGroup();

        return {
            data: function data() {
                return {
                    currentGroup: currentGroup
                };
            }
        };
    });

    return {
        setters: [],
        execute: function () {
            ;
        }
    };
});
System.register("OpenGroup/theme/components/groups.js", [], function (_export, _context) {
    "use strict";

    _export("default", function (wrapper) {
        return {};
    });

    return {
        setters: [],
        execute: function () {
            ;
        }
    };
});
System.register('OpenGroup/theme/components/nested-menu.js', [], function (_export, _context) {
    "use strict";

    _export('default', function (wrapper) {
        return {
            mounted: function mounted() {
                var _this = this;

                window.addEventListener('resize', function () {
                    _this.mobile = window.innerWidth < 961;
                });
            },
            props: ['items'],
            data: function data() {
                return {
                    mobile: window.innerWidth < 961,
                    submenu: wrapper.menuManager.getSubMenu(this)
                };
            },
            watch: {
                '$route': function $route() {
                    this.submenu = wrapper.menuManager.getSubMenu(this);
                }
            }
        };
    });

    return {
        setters: [],
        execute: function () {
            ;
        }
    };
});
System.register('OpenGroup/theme/components/profile-teaser.js', [], function (_export, _context) {
    "use strict";

    _export('default', function (wrapper) {
        return {
            props: ['profile']
        };
    });

    return {
        setters: [],
        execute: function () {
            ;
        }
    };
});
System.registerDynamic("github:jhuckaby/webcamjs@1.0.22.json", [], false, function() {
  return {
    "main": "webcam.js"
  };
});

(function() {
var define = System.amdDefine;
(function(window) {
  var _userMedia;
  function FlashError() {
    var temp = Error.apply(this, arguments);
    temp.name = this.name = "FlashError";
    this.stack = temp.stack;
    this.message = temp.message;
  }
  function WebcamError() {
    var temp = Error.apply(this, arguments);
    temp.name = this.name = "WebcamError";
    this.stack = temp.stack;
    this.message = temp.message;
  }
  IntermediateInheritor = function() {};
  IntermediateInheritor.prototype = Error.prototype;
  FlashError.prototype = new IntermediateInheritor();
  WebcamError.prototype = new IntermediateInheritor();
  var Webcam = {
    version: '1.0.22',
    protocol: location.protocol.match(/https/i) ? 'https' : 'http',
    loaded: false,
    live: false,
    userMedia: true,
    iOS: /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream,
    params: {
      width: 0,
      height: 0,
      dest_width: 0,
      dest_height: 0,
      image_format: 'jpeg',
      jpeg_quality: 90,
      enable_flash: true,
      force_flash: false,
      flip_horiz: false,
      fps: 30,
      upload_name: 'webcam',
      constraints: null,
      swfURL: '',
      flashNotDetectedText: 'ERROR: No Adobe Flash Player detected.  Webcam.js relies on Flash for browsers that do not support getUserMedia (like yours).',
      noInterfaceFoundText: 'No supported webcam interface found.',
      unfreeze_snap: true,
      iosPlaceholderText: 'Click here to open camera.',
      user_callback: null,
      user_canvas: null
    },
    errors: {
      FlashError: FlashError,
      WebcamError: WebcamError
    },
    hooks: {},
    init: function() {
      var self = this;
      this.mediaDevices = (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) ? navigator.mediaDevices : ((navigator.mozGetUserMedia || navigator.webkitGetUserMedia) ? {getUserMedia: function(c) {
          return new Promise(function(y, n) {
            (navigator.mozGetUserMedia || navigator.webkitGetUserMedia).call(navigator, c, y, n);
          });
        }} : null);
      window.URL = window.URL || window.webkitURL || window.mozURL || window.msURL;
      this.userMedia = this.userMedia && !!this.mediaDevices && !!window.URL;
      if (navigator.userAgent.match(/Firefox\D+(\d+)/)) {
        if (parseInt(RegExp.$1, 10) < 21)
          this.userMedia = null;
      }
      if (this.userMedia) {
        window.addEventListener('beforeunload', function(event) {
          self.reset();
        });
      }
    },
    exifOrientation: function(binFile) {
      var dataView = new DataView(binFile);
      if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {
        console.log('Not a valid JPEG file');
        return 0;
      }
      var offset = 2;
      var marker = null;
      while (offset < binFile.byteLength) {
        if (dataView.getUint8(offset) != 0xFF) {
          console.log('Not a valid marker at offset ' + offset + ', found: ' + dataView.getUint8(offset));
          return 0;
        }
        marker = dataView.getUint8(offset + 1);
        if (marker == 225) {
          offset += 4;
          var str = "";
          for (n = 0; n < 4; n++) {
            str += String.fromCharCode(dataView.getUint8(offset + n));
          }
          if (str != 'Exif') {
            console.log('Not valid EXIF data found');
            return 0;
          }
          offset += 6;
          var bigEnd = null;
          if (dataView.getUint16(offset) == 0x4949) {
            bigEnd = false;
          } else if (dataView.getUint16(offset) == 0x4D4D) {
            bigEnd = true;
          } else {
            console.log("Not valid TIFF data! (no 0x4949 or 0x4D4D)");
            return 0;
          }
          if (dataView.getUint16(offset + 2, !bigEnd) != 0x002A) {
            console.log("Not valid TIFF data! (no 0x002A)");
            return 0;
          }
          var firstIFDOffset = dataView.getUint32(offset + 4, !bigEnd);
          if (firstIFDOffset < 0x00000008) {
            console.log("Not valid TIFF data! (First offset less than 8)", dataView.getUint32(offset + 4, !bigEnd));
            return 0;
          }
          var dataStart = offset + firstIFDOffset;
          var entries = dataView.getUint16(dataStart, !bigEnd);
          for (var i = 0; i < entries; i++) {
            var entryOffset = dataStart + i * 12 + 2;
            if (dataView.getUint16(entryOffset, !bigEnd) == 0x0112) {
              var valueType = dataView.getUint16(entryOffset + 2, !bigEnd);
              var numValues = dataView.getUint32(entryOffset + 4, !bigEnd);
              if (valueType != 3 && numValues != 1) {
                console.log('Invalid EXIF orientation value type (' + valueType + ') or count (' + numValues + ')');
                return 0;
              }
              var value = dataView.getUint16(entryOffset + 8, !bigEnd);
              if (value < 1 || value > 8) {
                console.log('Invalid EXIF orientation value (' + value + ')');
                return 0;
              }
              return value;
            }
          }
        } else {
          offset += 2 + dataView.getUint16(offset + 2);
        }
      }
      return 0;
    },
    fixOrientation: function(origObjURL, orientation, targetImg) {
      var img = new Image();
      img.addEventListener('load', function(event) {
        var canvas = document.createElement('canvas');
        var ctx = canvas.getContext('2d');
        if (orientation < 5) {
          canvas.width = img.width;
          canvas.height = img.height;
        } else {
          canvas.width = img.height;
          canvas.height = img.width;
        }
        switch (orientation) {
          case 2:
            ctx.transform(-1, 0, 0, 1, img.width, 0);
            break;
          case 3:
            ctx.transform(-1, 0, 0, -1, img.width, img.height);
            break;
          case 4:
            ctx.transform(1, 0, 0, -1, 0, img.height);
            break;
          case 5:
            ctx.transform(0, 1, 1, 0, 0, 0);
            break;
          case 6:
            ctx.transform(0, 1, -1, 0, img.height, 0);
            break;
          case 7:
            ctx.transform(0, -1, -1, 0, img.height, img.width);
            break;
          case 8:
            ctx.transform(0, -1, 1, 0, 0, img.width);
            break;
        }
        ctx.drawImage(img, 0, 0);
        targetImg.src = canvas.toDataURL();
      }, false);
      img.src = origObjURL;
    },
    attach: function(elem) {
      if (typeof(elem) == 'string') {
        elem = document.getElementById(elem) || document.querySelector(elem);
      }
      if (!elem) {
        return this.dispatch('error', new WebcamError("Could not locate DOM element to attach to."));
      }
      this.container = elem;
      elem.innerHTML = '';
      var peg = document.createElement('div');
      elem.appendChild(peg);
      this.peg = peg;
      if (!this.params.width)
        this.params.width = elem.offsetWidth;
      if (!this.params.height)
        this.params.height = elem.offsetHeight;
      if (!this.params.width || !this.params.height) {
        return this.dispatch('error', new WebcamError("No width and/or height for webcam.  Please call set() first, or attach to a visible element."));
      }
      if (!this.params.dest_width)
        this.params.dest_width = this.params.width;
      if (!this.params.dest_height)
        this.params.dest_height = this.params.height;
      this.userMedia = _userMedia === undefined ? this.userMedia : _userMedia;
      if (this.params.force_flash) {
        _userMedia = this.userMedia;
        this.userMedia = null;
      }
      if (typeof this.params.fps !== "number")
        this.params.fps = 30;
      var scaleX = this.params.width / this.params.dest_width;
      var scaleY = this.params.height / this.params.dest_height;
      if (this.userMedia) {
        var video = document.createElement('video');
        video.setAttribute('autoplay', 'autoplay');
        video.style.width = '' + this.params.dest_width + 'px';
        video.style.height = '' + this.params.dest_height + 'px';
        if ((scaleX != 1.0) || (scaleY != 1.0)) {
          elem.style.overflow = 'hidden';
          video.style.webkitTransformOrigin = '0px 0px';
          video.style.mozTransformOrigin = '0px 0px';
          video.style.msTransformOrigin = '0px 0px';
          video.style.oTransformOrigin = '0px 0px';
          video.style.transformOrigin = '0px 0px';
          video.style.webkitTransform = 'scaleX(' + scaleX + ') scaleY(' + scaleY + ')';
          video.style.mozTransform = 'scaleX(' + scaleX + ') scaleY(' + scaleY + ')';
          video.style.msTransform = 'scaleX(' + scaleX + ') scaleY(' + scaleY + ')';
          video.style.oTransform = 'scaleX(' + scaleX + ') scaleY(' + scaleY + ')';
          video.style.transform = 'scaleX(' + scaleX + ') scaleY(' + scaleY + ')';
        }
        elem.appendChild(video);
        this.video = video;
        var self = this;
        this.mediaDevices.getUserMedia({
          "audio": false,
          "video": this.params.constraints || {mandatory: {
              minWidth: this.params.dest_width,
              minHeight: this.params.dest_height
            }}
        }).then(function(stream) {
          video.onloadedmetadata = function(e) {
            self.stream = stream;
            self.loaded = true;
            self.live = true;
            self.dispatch('load');
            self.dispatch('live');
            self.flip();
          };
          video.src = window.URL.createObjectURL(stream) || stream;
        }).catch(function(err) {
          if (self.params.enable_flash && self.detectFlash()) {
            setTimeout(function() {
              self.params.force_flash = 1;
              self.attach(elem);
            }, 1);
          } else {
            self.dispatch('error', err);
          }
        });
      } else if (this.iOS) {
        var div = document.createElement('div');
        div.id = this.container.id + '-ios_div';
        div.className = 'webcamjs-ios-placeholder';
        div.style.width = '' + this.params.width + 'px';
        div.style.height = '' + this.params.height + 'px';
        div.style.textAlign = 'center';
        div.style.display = 'table-cell';
        div.style.verticalAlign = 'middle';
        div.style.backgroundRepeat = 'no-repeat';
        div.style.backgroundSize = 'contain';
        div.style.backgroundPosition = 'center';
        var span = document.createElement('span');
        span.className = 'webcamjs-ios-text';
        span.innerHTML = this.params.iosPlaceholderText;
        div.appendChild(span);
        var img = document.createElement('img');
        img.id = this.container.id + '-ios_img';
        img.style.width = '' + this.params.dest_width + 'px';
        img.style.height = '' + this.params.dest_height + 'px';
        img.style.display = 'none';
        div.appendChild(img);
        var input = document.createElement('input');
        input.id = this.container.id + '-ios_input';
        input.setAttribute('type', 'file');
        input.setAttribute('accept', 'image/*');
        input.setAttribute('capture', 'camera');
        var self = this;
        var params = this.params;
        input.addEventListener('change', function(event) {
          if (event.target.files.length > 0 && event.target.files[0].type.indexOf('image/') == 0) {
            var objURL = URL.createObjectURL(event.target.files[0]);
            var image = new Image();
            image.addEventListener('load', function(event) {
              var canvas = document.createElement('canvas');
              canvas.width = params.dest_width;
              canvas.height = params.dest_height;
              var ctx = canvas.getContext('2d');
              ratio = Math.min(image.width / params.dest_width, image.height / params.dest_height);
              var sw = params.dest_width * ratio;
              var sh = params.dest_height * ratio;
              var sx = (image.width - sw) / 2;
              var sy = (image.height - sh) / 2;
              ctx.drawImage(image, sx, sy, sw, sh, 0, 0, params.dest_width, params.dest_height);
              var dataURL = canvas.toDataURL();
              img.src = dataURL;
              div.style.backgroundImage = "url('" + dataURL + "')";
            }, false);
            var fileReader = new FileReader();
            fileReader.addEventListener('load', function(e) {
              var orientation = self.exifOrientation(e.target.result);
              if (orientation > 1) {
                self.fixOrientation(objURL, orientation, image);
              } else {
                image.src = objURL;
              }
            }, false);
            var http = new XMLHttpRequest();
            http.open("GET", objURL, true);
            http.responseType = "blob";
            http.onload = function(e) {
              if (this.status == 200 || this.status === 0) {
                fileReader.readAsArrayBuffer(this.response);
              }
            };
            http.send();
          }
        }, false);
        input.style.display = 'none';
        elem.appendChild(input);
        div.addEventListener('click', function(event) {
          if (params.user_callback) {
            self.snap(params.user_callback, params.user_canvas);
          } else {
            input.style.display = 'block';
            input.focus();
            input.click();
            input.style.display = 'none';
          }
        }, false);
        elem.appendChild(div);
        this.loaded = true;
        this.live = true;
      } else if (this.params.enable_flash && this.detectFlash()) {
        window.Webcam = Webcam;
        var div = document.createElement('div');
        div.innerHTML = this.getSWFHTML();
        elem.appendChild(div);
      } else {
        this.dispatch('error', new WebcamError(this.params.noInterfaceFoundText));
      }
      if (this.params.crop_width && this.params.crop_height) {
        var scaled_crop_width = Math.floor(this.params.crop_width * scaleX);
        var scaled_crop_height = Math.floor(this.params.crop_height * scaleY);
        elem.style.width = '' + scaled_crop_width + 'px';
        elem.style.height = '' + scaled_crop_height + 'px';
        elem.style.overflow = 'hidden';
        elem.scrollLeft = Math.floor((this.params.width / 2) - (scaled_crop_width / 2));
        elem.scrollTop = Math.floor((this.params.height / 2) - (scaled_crop_height / 2));
      } else {
        elem.style.width = '' + this.params.width + 'px';
        elem.style.height = '' + this.params.height + 'px';
      }
    },
    reset: function() {
      if (this.preview_active)
        this.unfreeze();
      this.unflip();
      if (this.userMedia) {
        if (this.stream) {
          if (this.stream.getVideoTracks) {
            var tracks = this.stream.getVideoTracks();
            if (tracks && tracks[0] && tracks[0].stop)
              tracks[0].stop();
          } else if (this.stream.stop) {
            this.stream.stop();
          }
        }
        delete this.stream;
        delete this.video;
      }
      if ((this.userMedia !== true) && this.loaded && !this.iOS) {
        var movie = this.getMovie();
        if (movie && movie._releaseCamera)
          movie._releaseCamera();
      }
      if (this.container) {
        this.container.innerHTML = '';
        delete this.container;
      }
      this.loaded = false;
      this.live = false;
    },
    set: function() {
      if (arguments.length == 1) {
        for (var key in arguments[0]) {
          this.params[key] = arguments[0][key];
        }
      } else {
        this.params[arguments[0]] = arguments[1];
      }
    },
    on: function(name, callback) {
      name = name.replace(/^on/i, '').toLowerCase();
      if (!this.hooks[name])
        this.hooks[name] = [];
      this.hooks[name].push(callback);
    },
    off: function(name, callback) {
      name = name.replace(/^on/i, '').toLowerCase();
      if (this.hooks[name]) {
        if (callback) {
          var idx = this.hooks[name].indexOf(callback);
          if (idx > -1)
            this.hooks[name].splice(idx, 1);
        } else {
          this.hooks[name] = [];
        }
      }
    },
    dispatch: function() {
      var name = arguments[0].replace(/^on/i, '').toLowerCase();
      var args = Array.prototype.slice.call(arguments, 1);
      if (this.hooks[name] && this.hooks[name].length) {
        for (var idx = 0,
            len = this.hooks[name].length; idx < len; idx++) {
          var hook = this.hooks[name][idx];
          if (typeof(hook) == 'function') {
            hook.apply(this, args);
          } else if ((typeof(hook) == 'object') && (hook.length == 2)) {
            hook[0][hook[1]].apply(hook[0], args);
          } else if (window[hook]) {
            window[hook].apply(window, args);
          }
        }
        return true;
      } else if (name == 'error') {
        if ((args[0] instanceof FlashError) || (args[0] instanceof WebcamError)) {
          message = args[0].message;
        } else {
          message = "Could not access webcam: " + args[0].name + ": " + args[0].message + " " + args[0].toString();
        }
        alert("Webcam.js Error: " + message);
      }
      return false;
    },
    setSWFLocation: function(value) {
      this.set('swfURL', value);
    },
    detectFlash: function() {
      var SHOCKWAVE_FLASH = "Shockwave Flash",
          SHOCKWAVE_FLASH_AX = "ShockwaveFlash.ShockwaveFlash",
          FLASH_MIME_TYPE = "application/x-shockwave-flash",
          win = window,
          nav = navigator,
          hasFlash = false;
      if (typeof nav.plugins !== "undefined" && typeof nav.plugins[SHOCKWAVE_FLASH] === "object") {
        var desc = nav.plugins[SHOCKWAVE_FLASH].description;
        if (desc && (typeof nav.mimeTypes !== "undefined" && nav.mimeTypes[FLASH_MIME_TYPE] && nav.mimeTypes[FLASH_MIME_TYPE].enabledPlugin)) {
          hasFlash = true;
        }
      } else if (typeof win.ActiveXObject !== "undefined") {
        try {
          var ax = new ActiveXObject(SHOCKWAVE_FLASH_AX);
          if (ax) {
            var ver = ax.GetVariable("$version");
            if (ver)
              hasFlash = true;
          }
        } catch (e) {
          ;
        }
      }
      return hasFlash;
    },
    getSWFHTML: function() {
      var html = '',
          swfURL = this.params.swfURL;
      if (location.protocol.match(/file/)) {
        this.dispatch('error', new FlashError("Flash does not work from local disk.  Please run from a web server."));
        return '<h3 style="color:red">ERROR: the Webcam.js Flash fallback does not work from local disk.  Please run it from a web server.</h3>';
      }
      if (!this.detectFlash()) {
        this.dispatch('error', new FlashError("Adobe Flash Player not found.  Please install from get.adobe.com/flashplayer and try again."));
        return '<h3 style="color:red">' + this.params.flashNotDetectedText + '</h3>';
      }
      if (!swfURL) {
        var base_url = '';
        var scpts = document.getElementsByTagName('script');
        for (var idx = 0,
            len = scpts.length; idx < len; idx++) {
          var src = scpts[idx].getAttribute('src');
          if (src && src.match(/\/webcam(\.min)?\.js/)) {
            base_url = src.replace(/\/webcam(\.min)?\.js.*$/, '');
            idx = len;
          }
        }
        if (base_url)
          swfURL = base_url + '/webcam.swf';
        else
          swfURL = 'webcam.swf';
      }
      if (window.localStorage && !localStorage.getItem('visited')) {
        this.params.new_user = 1;
        localStorage.setItem('visited', 1);
      }
      var flashvars = '';
      for (var key in this.params) {
        if (flashvars)
          flashvars += '&';
        flashvars += key + '=' + escape(this.params[key]);
      }
      html += '<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" type="application/x-shockwave-flash" codebase="' + this.protocol + '://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,0,0" width="' + this.params.width + '" height="' + this.params.height + '" id="webcam_movie_obj" align="middle"><param name="wmode" value="opaque" /><param name="allowScriptAccess" value="always" /><param name="allowFullScreen" value="false" /><param name="movie" value="' + swfURL + '" /><param name="loop" value="false" /><param name="menu" value="false" /><param name="quality" value="best" /><param name="bgcolor" value="#ffffff" /><param name="flashvars" value="' + flashvars + '"/><embed id="webcam_movie_embed" src="' + swfURL + '" wmode="opaque" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="' + this.params.width + '" height="' + this.params.height + '" name="webcam_movie_embed" align="middle" allowScriptAccess="always" allowFullScreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="' + flashvars + '"></embed></object>';
      return html;
    },
    getMovie: function() {
      if (!this.loaded)
        return this.dispatch('error', new FlashError("Flash Movie is not loaded yet"));
      var movie = document.getElementById('webcam_movie_obj');
      if (!movie || !movie._snap)
        movie = document.getElementById('webcam_movie_embed');
      if (!movie)
        this.dispatch('error', new FlashError("Cannot locate Flash movie in DOM"));
      return movie;
    },
    freeze: function() {
      var self = this;
      var params = this.params;
      if (this.preview_active)
        this.unfreeze();
      var scaleX = this.params.width / this.params.dest_width;
      var scaleY = this.params.height / this.params.dest_height;
      this.unflip();
      var final_width = params.crop_width || params.dest_width;
      var final_height = params.crop_height || params.dest_height;
      var preview_canvas = document.createElement('canvas');
      preview_canvas.width = final_width;
      preview_canvas.height = final_height;
      var preview_context = preview_canvas.getContext('2d');
      this.preview_canvas = preview_canvas;
      this.preview_context = preview_context;
      if ((scaleX != 1.0) || (scaleY != 1.0)) {
        preview_canvas.style.webkitTransformOrigin = '0px 0px';
        preview_canvas.style.mozTransformOrigin = '0px 0px';
        preview_canvas.style.msTransformOrigin = '0px 0px';
        preview_canvas.style.oTransformOrigin = '0px 0px';
        preview_canvas.style.transformOrigin = '0px 0px';
        preview_canvas.style.webkitTransform = 'scaleX(' + scaleX + ') scaleY(' + scaleY + ')';
        preview_canvas.style.mozTransform = 'scaleX(' + scaleX + ') scaleY(' + scaleY + ')';
        preview_canvas.style.msTransform = 'scaleX(' + scaleX + ') scaleY(' + scaleY + ')';
        preview_canvas.style.oTransform = 'scaleX(' + scaleX + ') scaleY(' + scaleY + ')';
        preview_canvas.style.transform = 'scaleX(' + scaleX + ') scaleY(' + scaleY + ')';
      }
      this.snap(function() {
        preview_canvas.style.position = 'relative';
        preview_canvas.style.left = '' + self.container.scrollLeft + 'px';
        preview_canvas.style.top = '' + self.container.scrollTop + 'px';
        self.container.insertBefore(preview_canvas, self.peg);
        self.container.style.overflow = 'hidden';
        self.preview_active = true;
      }, preview_canvas);
    },
    unfreeze: function() {
      if (this.preview_active) {
        this.container.removeChild(this.preview_canvas);
        delete this.preview_context;
        delete this.preview_canvas;
        this.preview_active = false;
        this.flip();
      }
    },
    flip: function() {
      if (this.params.flip_horiz) {
        var sty = this.container.style;
        sty.webkitTransform = 'scaleX(-1)';
        sty.mozTransform = 'scaleX(-1)';
        sty.msTransform = 'scaleX(-1)';
        sty.oTransform = 'scaleX(-1)';
        sty.transform = 'scaleX(-1)';
        sty.filter = 'FlipH';
        sty.msFilter = 'FlipH';
      }
    },
    unflip: function() {
      if (this.params.flip_horiz) {
        var sty = this.container.style;
        sty.webkitTransform = 'scaleX(1)';
        sty.mozTransform = 'scaleX(1)';
        sty.msTransform = 'scaleX(1)';
        sty.oTransform = 'scaleX(1)';
        sty.transform = 'scaleX(1)';
        sty.filter = '';
        sty.msFilter = '';
      }
    },
    savePreview: function(user_callback, user_canvas) {
      var params = this.params;
      var canvas = this.preview_canvas;
      var context = this.preview_context;
      if (user_canvas) {
        var user_context = user_canvas.getContext('2d');
        user_context.drawImage(canvas, 0, 0);
      }
      user_callback(user_canvas ? null : canvas.toDataURL('image/' + params.image_format, params.jpeg_quality / 100), canvas, context);
      if (this.params.unfreeze_snap)
        this.unfreeze();
    },
    snap: function(user_callback, user_canvas) {
      if (!user_callback)
        user_callback = this.params.user_callback;
      if (!user_canvas)
        user_canvas = this.params.user_canvas;
      var self = this;
      var params = this.params;
      if (!this.loaded)
        return this.dispatch('error', new WebcamError("Webcam is not loaded yet"));
      if (!user_callback)
        return this.dispatch('error', new WebcamError("Please provide a callback function or canvas to snap()"));
      if (this.preview_active) {
        this.savePreview(user_callback, user_canvas);
        return null;
      }
      var canvas = document.createElement('canvas');
      canvas.width = this.params.dest_width;
      canvas.height = this.params.dest_height;
      var context = canvas.getContext('2d');
      if (this.params.flip_horiz) {
        context.translate(params.dest_width, 0);
        context.scale(-1, 1);
      }
      var func = function() {
        if (this.src && this.width && this.height) {
          context.drawImage(this, 0, 0, params.dest_width, params.dest_height);
        }
        if (params.crop_width && params.crop_height) {
          var crop_canvas = document.createElement('canvas');
          crop_canvas.width = params.crop_width;
          crop_canvas.height = params.crop_height;
          var crop_context = crop_canvas.getContext('2d');
          crop_context.drawImage(canvas, Math.floor((params.dest_width / 2) - (params.crop_width / 2)), Math.floor((params.dest_height / 2) - (params.crop_height / 2)), params.crop_width, params.crop_height, 0, 0, params.crop_width, params.crop_height);
          context = crop_context;
          canvas = crop_canvas;
        }
        if (user_canvas) {
          var user_context = user_canvas.getContext('2d');
          user_context.drawImage(canvas, 0, 0);
        }
        user_callback(user_canvas ? null : canvas.toDataURL('image/' + params.image_format, params.jpeg_quality / 100), canvas, context);
      };
      if (this.userMedia) {
        context.drawImage(this.video, 0, 0, this.params.dest_width, this.params.dest_height);
        func();
      } else if (this.iOS) {
        var div = document.getElementById(this.container.id + '-ios_div');
        var img = document.getElementById(this.container.id + '-ios_img');
        var input = document.getElementById(this.container.id + '-ios_input');
        iFunc = function(event) {
          func.call(img);
          img.removeEventListener('load', iFunc);
          div.style.backgroundImage = 'none';
          img.removeAttribute('src');
          input.value = null;
        };
        if (!input.value) {
          img.addEventListener('load', iFunc);
          input.style.display = 'block';
          input.focus();
          input.click();
          input.style.display = 'none';
        } else {
          iFunc(null);
        }
      } else {
        var raw_data = this.getMovie()._snap();
        var img = new Image();
        img.onload = func;
        img.src = 'data:image/' + this.params.image_format + ';base64,' + raw_data;
      }
      return null;
    },
    configure: function(panel) {
      if (!panel)
        panel = "camera";
      this.getMovie()._configure(panel);
    },
    flashNotify: function(type, msg) {
      switch (type) {
        case 'flashLoadComplete':
          this.loaded = true;
          this.dispatch('load');
          break;
        case 'cameraLive':
          this.live = true;
          this.dispatch('live');
          break;
        case 'error':
          this.dispatch('error', new FlashError(msg));
          break;
        default:
          break;
      }
    },
    b64ToUint6: function(nChr) {
      return nChr > 64 && nChr < 91 ? nChr - 65 : nChr > 96 && nChr < 123 ? nChr - 71 : nChr > 47 && nChr < 58 ? nChr + 4 : nChr === 43 ? 62 : nChr === 47 ? 63 : 0;
    },
    base64DecToArr: function(sBase64, nBlocksSize) {
      var sB64Enc = sBase64.replace(/[^A-Za-z0-9\+\/]/g, ""),
          nInLen = sB64Enc.length,
          nOutLen = nBlocksSize ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize : nInLen * 3 + 1 >> 2,
          taBytes = new Uint8Array(nOutLen);
      for (var nMod3,
          nMod4,
          nUint24 = 0,
          nOutIdx = 0,
          nInIdx = 0; nInIdx < nInLen; nInIdx++) {
        nMod4 = nInIdx & 3;
        nUint24 |= this.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;
        if (nMod4 === 3 || nInLen - nInIdx === 1) {
          for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {
            taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;
          }
          nUint24 = 0;
        }
      }
      return taBytes;
    },
    upload: function(image_data_uri, target_url, callback) {
      var form_elem_name = this.params.upload_name || 'webcam';
      var image_fmt = '';
      if (image_data_uri.match(/^data\:image\/(\w+)/))
        image_fmt = RegExp.$1;
      else
        throw "Cannot locate image format in Data URI";
      var raw_image_data = image_data_uri.replace(/^data\:image\/\w+\;base64\,/, '');
      var http = new XMLHttpRequest();
      http.open("POST", target_url, true);
      if (http.upload && http.upload.addEventListener) {
        http.upload.addEventListener('progress', function(e) {
          if (e.lengthComputable) {
            var progress = e.loaded / e.total;
            Webcam.dispatch('uploadProgress', progress, e);
          }
        }, false);
      }
      var self = this;
      http.onload = function() {
        if (callback)
          callback.apply(self, [http.status, http.responseText, http.statusText]);
        Webcam.dispatch('uploadComplete', http.status, http.responseText, http.statusText);
      };
      var blob = new Blob([this.base64DecToArr(raw_image_data)], {type: 'image/' + image_fmt});
      var form = new FormData();
      form.append(form_elem_name, blob, form_elem_name + "." + image_fmt.replace(/e/, ''));
      http.send(form);
    }
  };
  Webcam.init();
  if (typeof define === 'function' && define.amd) {
    define("github:jhuckaby/webcamjs@1.0.22/webcam.js", [], function() {
      return Webcam;
    });
  } else if (typeof module === 'object' && module.exports) {
    module.exports = Webcam;
  } else {
    window.Webcam = Webcam;
  }
}(window));

})();
System.register('OpenGroup/theme/components/profile.js', ['jhuckaby/webcamjs'], function (_export, _context) {
    "use strict";

    var Webcam;

    _export('default', function (wrapper) {
        var hasChecked = false;

        var profile = wrapper.profileManager.getProfile();

        var _data = {
            mode: 'landscape',
            model: profile,
            schema: {
                fields: [{
                    type: "input",
                    inputType: "text",
                    model: "nickname",
                    id: "nick_name",
                    label: "What is your name?",
                    required: true
                }]
            },

            formOptions: {
                validateAfterLoad: true,
                validateAfterChanged: true
            }
        };

        var startWebcam = function startWebcam() {
            Webcam.attach('#camera');
            Webcam.on('live', function () {
                if (!hasChecked) {
                    var video = document.querySelector('video');
                    if (video.videoHeight > video.videoWidth) {
                        _data.mode = 'portrait';

                        Webcam.set({
                            width: 240,
                            height: 320,
                            dest_width: 240,
                            dest_height: 320,
                            crop_width: 240,
                            crop_height: 240,
                            image_format: 'jpeg',
                            jpeg_quality: 90
                        });
                    }
                }

                profile.snapshot = false;
                Webcam.off('live');
                hasChecked = true;
            });
        };

        return {
            mounted: function mounted() {
                Webcam.set({
                    width: 320,
                    height: 240,
                    dest_width: 320,
                    dest_height: 240,
                    crop_width: 240,
                    crop_height: 240,
                    image_format: 'jpeg',
                    jpeg_quality: 90
                });

                if (!this.model.snapshot) {
                    startWebcam();
                }
            },

            data: function data() {
                return _data;
            },
            methods: {
                saveProfile: function saveProfile() {
                    if (profile.nickname && profile.snapshot) {
                        wrapper.profileManager.saveProfile(profile);
                        wrapper.router.push('/groups');
                    }
                },
                snap: function snap() {
                    var _this = this;

                    if (!this.model.snapshot) {
                        Webcam.snap(function (newSnapshot) {
                            _this.model.snapshot = newSnapshot;
                            Webcam.reset();
                        });
                    } else {
                        startWebcam();
                    }
                }
            }
        };
    });

    return {
        setters: [function (_jhuckabyWebcamjs) {
            Webcam = _jhuckabyWebcamjs.default;
        }],
        execute: function () {
            ;
        }
    };
});
System.registerDynamic("npm:systemjs-plugin-babel@0.0.17.json", [], false, function() {
  return {
    "main": "plugin-babel.js",
    "map": {
      "systemjs-babel-build": {
        "browser": "./systemjs-babel-browser.js",
        "default": "./systemjs-babel-browser.js"
      }
    },
    "meta": {
      "./plugin-babel.js": {
        "format": "cjs"
      }
    }
  };
});

System.register("OpenGroup/theme/components/sidebar.js", [], function (_export, _context) {
    "use strict";

    _export("default", function (wrapper) {
        return {
            data: function data() {
                return {
                    profile: wrapper.profileManager.getProfile()
                };
            }
        };
    });

    return {
        setters: [],
        execute: function () {
            ;
        }
    };
});
System.register("OpenGroup/theme/templates/about.html!npm:systemjs-plugin-text@0.0.9/text.js", [], function (_export, _context) {
  "use strict";

  var __useDefault;

  return {
    setters: [],
    execute: function () {
      _export("__useDefault", __useDefault = true);

      _export("__useDefault", __useDefault);

      _export("default", "<div class=\"about\">\n    <h1>About</h1>\n</div>");
    }
  };
});
System.register("OpenGroup/theme/templates/add-group.html!npm:systemjs-plugin-text@0.0.9/text.js", [], function (_export, _context) {
  "use strict";

  var __useDefault;

  return {
    setters: [],
    execute: function () {
      _export("__useDefault", __useDefault = true);

      _export("__useDefault", __useDefault);

      _export("default", "<div class=\"flex-wrapper\">\n    <div class=\"page add-group\">\n        <h1 class=\"page-title\">Add a group</h1>\n\n        <vue-form-generator tag=\"div\" :schema=\"schema\" :model=\"model\" :options=\"formOptions\">\n        </vue-form-generator>\n\n        <div class=\"form-actions\">\n            <router-link class=\"button secondary\" :to=\"{ path: '/groups' }\"><span>Cancel</span><i class=\"fa fa-times\" aria-hidden=\"true\"></i></router-link>\n            <div class=\"button primary\" @click=\"submitGroup\"><span>Add group</span><i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i></div>\n        </div>\n    </div>\n</div>");
    }
  };
});
System.register("OpenGroup/theme/templates/group-header.html!npm:systemjs-plugin-text@0.0.9/text.js", [], function (_export, _context) {
  "use strict";

  var __useDefault;

  return {
    setters: [],
    execute: function () {
      _export("__useDefault", __useDefault = true);

      _export("__useDefault", __useDefault);

      _export("default", "<div class=\"group-header\" :class=\"{'show-menu': showMenu }\" v-if=\"group\">\n    <h1 class=\"group-title\"><router-link class=\"mobile-back-link\" :to=\"{ path: '/groups' }\"><i class=\"fa fa-chevron-left\" aria-hidden=\"true\"></i></router-link> {{ group.config.name }}</h1>\n\n    <div class=\"mobile-menu-toggle\" @click=\"toggleMenu\">\n        <div class=\"bar\"></div>\n        <div class=\"bar\"></div>\n        <div class=\"bar\"></div>\n        <div class=\"bar\"></div>\n        <div class=\"bar\"></div>\n    </div>\n\n    <nested-menu v-bind:items=\"menu\" class=\"group-menu\"><h1 class=\"menu-title\">Group menu</h1></nested-menu>\n</div>");
    }
  };
});
System.register("OpenGroup/theme/templates/group-list-item.html!npm:systemjs-plugin-text@0.0.9/text.js", [], function (_export, _context) {
  "use strict";

  var __useDefault;

  return {
    setters: [],
    execute: function () {
      _export("__useDefault", __useDefault = true);

      _export("__useDefault", __useDefault);

      _export("default", "<router-link class=\"group-list-item\" :to=\"{ path: '/groups/' + group.slug }\">\n\n    <h3 class=\"group-title\">{{ group.config.name }}</h3>\n    <span class=\"group-member-count\">{{ getActiveConnectionsCount() }}</span>\n\n</router-link>\n");
    }
  };
});
System.register("OpenGroup/theme/templates/group-list.html!npm:systemjs-plugin-text@0.0.9/text.js", [], function (_export, _context) {
  "use strict";

  var __useDefault;

  return {
    setters: [],
    execute: function () {
      _export("__useDefault", __useDefault = true);

      _export("__useDefault", __useDefault);

      _export("default", "<div class=\"group-list\">\n    <group-list-item v-for=\"group in groups\" key=\"group.uuid\" :group=\"group\"></group-list-item>\n</div>\n");
    }
  };
});
System.register("OpenGroup/theme/templates/group-settings.html!npm:systemjs-plugin-text@0.0.9/text.js", [], function (_export, _context) {
  "use strict";

  var __useDefault;

  return {
    setters: [],
    execute: function () {
      _export("__useDefault", __useDefault = true);

      _export("__useDefault", __useDefault);

      _export("default", "<div class=\"group-settings\">\n    <h1 class=\"plugin-title\">Group settings</h1>\n</div>");
    }
  };
});
System.register("OpenGroup/theme/templates/group.html!npm:systemjs-plugin-text@0.0.9/text.js", [], function (_export, _context) {
  "use strict";

  var __useDefault;

  return {
    setters: [],
    execute: function () {
      _export("__useDefault", __useDefault = true);

      _export("__useDefault", __useDefault);

      _export("default", "<transition name=\"slide\">\n    <div class=\"region-main\">\n        <group-header class=\"region-main-header\"></group-header>\n        <router-view class=\"region-main-content\"></router-view>\n    </div>\n</transition>");
    }
  };
});
System.register("OpenGroup/theme/templates/groups.html!npm:systemjs-plugin-text@0.0.9/text.js", [], function (_export, _context) {
  "use strict";

  var __useDefault;

  return {
    setters: [],
    execute: function () {
      _export("__useDefault", __useDefault = true);

      _export("__useDefault", __useDefault);

      _export("default", "<transition name=\"fade\">\n<div>\n    <sidebar class=\"region-sidebar\"></sidebar>\n    <router-view class=\"region-main\"></router-view>\n</div>\n</transition>");
    }
  };
});
System.register("OpenGroup/theme/templates/nested-menu.html!npm:systemjs-plugin-text@0.0.9/text.js", [], function (_export, _context) {
  "use strict";

  var __useDefault;

  return {
    setters: [],
    execute: function () {
      _export("__useDefault", __useDefault = true);

      _export("__useDefault", __useDefault);

      _export("default", "<div class=\"nested-menu\">\n    <slot></slot>\n\n    <ul class=\"menu-list\">\n        <li v-for=\"item in items\" class=\"menu-item\">\n            <router-link\n                    class=\"menu-link\"\n                    :to=\"{ path: item.path }\">{{ item.title }}</router-link>\n\n            <nested-menu v-if=\"item.children && mobile\" v-bind:items=\"item.children\" class=\"sub-menu\"></nested-menu>\n\n        </li>\n    </ul>\n\n    <nested-menu v-if=\"submenu.length && !mobile\" v-bind:items=\"submenu\" class=\"sub-menu\"></nested-menu>\n</div>");
    }
  };
});
System.register("OpenGroup/theme/templates/profile-teaser.html!npm:systemjs-plugin-text@0.0.9/text.js", [], function (_export, _context) {
  "use strict";

  var __useDefault;

  return {
    setters: [],
    execute: function () {
      _export("__useDefault", __useDefault = true);

      _export("__useDefault", __useDefault);

      _export("default", "<div class=\"profile teaser\">\n    <div class=\"snapshot-wrapper\">\n        <img class=\"snapshot\" :src=\"profile.snapshot\"/>\n    </div>\n    <h3 class=\"nickname\">{{ profile.nickname }}</h3>\n</div>");
    }
  };
});
System.register("OpenGroup/theme/templates/profile.html!npm:systemjs-plugin-text@0.0.9/text.js", [], function (_export, _context) {
  "use strict";

  var __useDefault;

  return {
    setters: [],
    execute: function () {
      _export("__useDefault", __useDefault = true);

      _export("__useDefault", __useDefault);

      _export("default", "<transition name=\"fade\">\n    <div class=\"flex-wrapper\">\n        <div class=\"page profile\" :class=\"[{'has-snapshot': model.snapshot}, mode]\">\n            <div class=\"camera-wrapper\">\n                <div class=\"camera-inner\">\n                    <img class=\"snapshot\" v-if=\"model.snapshot\" :src=\"model.snapshot\"/>\n                    <div id=\"camera\" class=\"camera\"></div>\n                </div>\n                <div class=\"snap\" @click=\"snap()\"></div>\n            </div>\n\n            <vue-form-generator tag=\"div\" :schema=\"schema\" :model=\"model\" :options=\"formOptions\">\n            </vue-form-generator>\n\n            <div class=\"form-actions\">\n                <div class=\"button primary\" :class=\"{'disabled': !model.snapshot || !model.nickname }\" @click=\"saveProfile\"><span>Continue</span><i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i></div>\n            </div>\n        </div>\n    </div>\n</transition>");
    }
  };
});
System.registerDynamic("npm:systemjs-plugin-text@0.0.9.json", [], false, function() {
  return {
    "main": "text.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.register("OpenGroup/theme/templates/sidebar.html!npm:systemjs-plugin-text@0.0.9/text.js", [], function (_export, _context) {
  "use strict";

  var __useDefault;

  return {
    setters: [],
    execute: function () {
      _export("__useDefault", __useDefault = true);

      _export("__useDefault", __useDefault);

      _export("default", "<div class=\"sidebar\">\n    <div class=\"sidebar-inner\">\n        <router-link class=\"logo-link\" :to=\"{ path: '/groups' }\">\n            <img class=\"logo\" src=\"/theme/images/logo.svg\">\n        </router-link>\n\n        <div class=\"edit-profile-link\">\n            <div class=\"snapshot-wrapper\">\n                <img class=\"snapshot\" :src=\"profile.snapshot\"/>\n            </div>\n            <div class=\"texts\">\n                <h3 class=\"nickname\">{{ profile.nickname }}</h3>\n                <router-link :to=\"{ path: '/profile' }\" class=\"button secondary small\">Edit profile&nbsp;&nbsp;<i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></router-link>\n            </div>\n        </div>\n\n        <router-link class=\"button primary add-group\" :to=\"{ path: '/add-group' }\"><span>Add group</span><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></router-link>\n    </div>\n\n    <group-list></group-list>\n</div>\n");
    }
  };
});
System.register('OpenGroup/load.js', ['css', 'text', 'plugin-babel', 'OpenGroup/plugins/group/plugin.js', 'OpenGroup/plugins/multichat/components/multichat.js', 'OpenGroup/plugins/multichat/plugin.js', 'OpenGroup/plugins/multichat/templates/multichat.html!text', 'OpenGroup/plugins/multiconnect/plugin.js', 'OpenGroup/plugins/og-signaler/plugin.js', 'OpenGroup/plugins/webrtc/components/manual-signaling.js', 'OpenGroup/plugins/webrtc/EasyWebRtc.js', 'OpenGroup/plugins/webrtc/EasyWebRtc.test.js', 'OpenGroup/plugins/webrtc/EasyWebRtcManualSignaler.js', 'OpenGroup/plugins/webrtc/OgWebRtc.js', 'OpenGroup/plugins/webrtc/plugin.js', 'OpenGroup/plugins/webrtc/templates/manual-signaling.html!text', 'OpenGroup/plugins/webrtc/webrtc.polyfill.js', 'OpenGroup/theme/components/about.js', 'OpenGroup/theme/components/add-group.js', 'OpenGroup/theme/components/group-header.js', 'OpenGroup/theme/components/group-list-item.js', 'OpenGroup/theme/components/group-list.js', 'OpenGroup/theme/components/group-settings.js', 'OpenGroup/theme/components/group.js', 'OpenGroup/theme/components/groups.js', 'OpenGroup/theme/components/nested-menu.js', 'OpenGroup/theme/components/profile-teaser.js', 'OpenGroup/theme/components/profile.js', 'OpenGroup/theme/components/sidebar.js', 'OpenGroup/theme/templates/about.html!text', 'OpenGroup/theme/templates/add-group.html!text', 'OpenGroup/theme/templates/group-header.html!text', 'OpenGroup/theme/templates/group-list-item.html!text', 'OpenGroup/theme/templates/group-list.html!text', 'OpenGroup/theme/templates/group-settings.html!text', 'OpenGroup/theme/templates/group.html!text', 'OpenGroup/theme/templates/groups.html!text', 'OpenGroup/theme/templates/nested-menu.html!text', 'OpenGroup/theme/templates/profile-teaser.html!text', 'OpenGroup/theme/templates/profile.html!text', 'OpenGroup/theme/templates/sidebar.html!text'], function (_export, _context) {
  "use strict";

  return {
    setters: [function (_css) {}, function (_text) {}, function (_pluginBabel) {}, function (_OpenGroupPluginsGroupPluginJs) {}, function (_OpenGroupPluginsMultichatComponentsMultichatJs) {}, function (_OpenGroupPluginsMultichatPluginJs) {}, function (_OpenGroupPluginsMultichatTemplatesMultichatHtmlText) {}, function (_OpenGroupPluginsMulticonnectPluginJs) {}, function (_OpenGroupPluginsOgSignalerPluginJs) {}, function (_OpenGroupPluginsWebrtcComponentsManualSignalingJs) {}, function (_OpenGroupPluginsWebrtcEasyWebRtcJs) {}, function (_OpenGroupPluginsWebrtcEasyWebRtcTestJs) {}, function (_OpenGroupPluginsWebrtcEasyWebRtcManualSignalerJs) {}, function (_OpenGroupPluginsWebrtcOgWebRtcJs) {}, function (_OpenGroupPluginsWebrtcPluginJs) {}, function (_OpenGroupPluginsWebrtcTemplatesManualSignalingHtmlText) {}, function (_OpenGroupPluginsWebrtcWebrtcPolyfillJs) {}, function (_OpenGroupThemeComponentsAboutJs) {}, function (_OpenGroupThemeComponentsAddGroupJs) {}, function (_OpenGroupThemeComponentsGroupHeaderJs) {}, function (_OpenGroupThemeComponentsGroupListItemJs) {}, function (_OpenGroupThemeComponentsGroupListJs) {}, function (_OpenGroupThemeComponentsGroupSettingsJs) {}, function (_OpenGroupThemeComponentsGroupJs) {}, function (_OpenGroupThemeComponentsGroupsJs) {}, function (_OpenGroupThemeComponentsNestedMenuJs) {}, function (_OpenGroupThemeComponentsProfileTeaserJs) {}, function (_OpenGroupThemeComponentsProfileJs) {}, function (_OpenGroupThemeComponentsSidebarJs) {}, function (_OpenGroupThemeTemplatesAboutHtmlText) {}, function (_OpenGroupThemeTemplatesAddGroupHtmlText) {}, function (_OpenGroupThemeTemplatesGroupHeaderHtmlText) {}, function (_OpenGroupThemeTemplatesGroupListItemHtmlText) {}, function (_OpenGroupThemeTemplatesGroupListHtmlText) {}, function (_OpenGroupThemeTemplatesGroupSettingsHtmlText) {}, function (_OpenGroupThemeTemplatesGroupHtmlText) {}, function (_OpenGroupThemeTemplatesGroupsHtmlText) {}, function (_OpenGroupThemeTemplatesNestedMenuHtmlText) {}, function (_OpenGroupThemeTemplatesProfileTeaserHtmlText) {}, function (_OpenGroupThemeTemplatesProfileHtmlText) {}, function (_OpenGroupThemeTemplatesSidebarHtmlText) {}],
    execute: function () {}
  };
});
//# sourceMappingURL=build.js.map